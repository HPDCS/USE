
phold:     formato del file elf64-x86-64


Disassemblamento della sezione .init:

0000000000001630 <_init>:
    1630:	48 83 ec 08          	sub    $0x8,%rsp
    1634:	48 8b 05 7d b9 21 00 	mov    0x21b97d(%rip),%rax        # 21cfb8 <__gmon_start__>
    163b:	48 85 c0             	test   %rax,%rax
    163e:	74 02                	je     1642 <_init+0x12>
    1640:	ff d0                	callq  *%rax
    1642:	48 83 c4 08          	add    $0x8,%rsp
    1646:	c3                   	retq   

Disassemblamento della sezione .plt:

0000000000001650 <.plt>:
    1650:	ff 35 12 b7 21 00    	pushq  0x21b712(%rip)        # 21cd68 <_GLOBAL_OFFSET_TABLE_+0x8>
    1656:	ff 25 14 b7 21 00    	jmpq   *0x21b714(%rip)        # 21cd70 <_GLOBAL_OFFSET_TABLE_+0x10>
    165c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001660 <munlock@plt>:
    1660:	ff 25 12 b7 21 00    	jmpq   *0x21b712(%rip)        # 21cd78 <munlock@GLIBC_2.2.5>
    1666:	68 00 00 00 00       	pushq  $0x0
    166b:	e9 e0 ff ff ff       	jmpq   1650 <.plt>

0000000000001670 <getenv@plt>:
    1670:	ff 25 0a b7 21 00    	jmpq   *0x21b70a(%rip)        # 21cd80 <getenv@GLIBC_2.2.5>
    1676:	68 01 00 00 00       	pushq  $0x1
    167b:	e9 d0 ff ff ff       	jmpq   1650 <.plt>

0000000000001680 <free@plt>:
    1680:	ff 25 02 b7 21 00    	jmpq   *0x21b702(%rip)        # 21cd88 <free@GLIBC_2.2.5>
    1686:	68 02 00 00 00       	pushq  $0x2
    168b:	e9 c0 ff ff ff       	jmpq   1650 <.plt>

0000000000001690 <putchar@plt>:
    1690:	ff 25 fa b6 21 00    	jmpq   *0x21b6fa(%rip)        # 21cd90 <putchar@GLIBC_2.2.5>
    1696:	68 03 00 00 00       	pushq  $0x3
    169b:	e9 b0 ff ff ff       	jmpq   1650 <.plt>

00000000000016a0 <pthread_create@plt>:
    16a0:	ff 25 f2 b6 21 00    	jmpq   *0x21b6f2(%rip)        # 21cd98 <pthread_create@GLIBC_2.2.5>
    16a6:	68 04 00 00 00       	pushq  $0x4
    16ab:	e9 a0 ff ff ff       	jmpq   1650 <.plt>

00000000000016b0 <abort@plt>:
    16b0:	ff 25 ea b6 21 00    	jmpq   *0x21b6ea(%rip)        # 21cda0 <abort@GLIBC_2.2.5>
    16b6:	68 05 00 00 00       	pushq  $0x5
    16bb:	e9 90 ff ff ff       	jmpq   1650 <.plt>

00000000000016c0 <__errno_location@plt>:
    16c0:	ff 25 e2 b6 21 00    	jmpq   *0x21b6e2(%rip)        # 21cda8 <__errno_location@GLIBC_2.2.5>
    16c6:	68 06 00 00 00       	pushq  $0x6
    16cb:	e9 80 ff ff ff       	jmpq   1650 <.plt>

00000000000016d0 <srandom@plt>:
    16d0:	ff 25 da b6 21 00    	jmpq   *0x21b6da(%rip)        # 21cdb0 <srandom@GLIBC_2.2.5>
    16d6:	68 07 00 00 00       	pushq  $0x7
    16db:	e9 70 ff ff ff       	jmpq   1650 <.plt>

00000000000016e0 <mlock@plt>:
    16e0:	ff 25 d2 b6 21 00    	jmpq   *0x21b6d2(%rip)        # 21cdb8 <mlock@GLIBC_2.2.5>
    16e6:	68 08 00 00 00       	pushq  $0x8
    16eb:	e9 60 ff ff ff       	jmpq   1650 <.plt>

00000000000016f0 <round@plt>:
    16f0:	ff 25 ca b6 21 00    	jmpq   *0x21b6ca(%rip)        # 21cdc0 <round@GLIBC_2.2.5>
    16f6:	68 09 00 00 00       	pushq  $0x9
    16fb:	e9 50 ff ff ff       	jmpq   1650 <.plt>

0000000000001700 <strncpy@plt>:
    1700:	ff 25 c2 b6 21 00    	jmpq   *0x21b6c2(%rip)        # 21cdc8 <strncpy@GLIBC_2.2.5>
    1706:	68 0a 00 00 00       	pushq  $0xa
    170b:	e9 40 ff ff ff       	jmpq   1650 <.plt>

0000000000001710 <strncmp@plt>:
    1710:	ff 25 ba b6 21 00    	jmpq   *0x21b6ba(%rip)        # 21cdd0 <strncmp@GLIBC_2.2.5>
    1716:	68 0b 00 00 00       	pushq  $0xb
    171b:	e9 30 ff ff ff       	jmpq   1650 <.plt>

0000000000001720 <__isoc99_fscanf@plt>:
    1720:	ff 25 b2 b6 21 00    	jmpq   *0x21b6b2(%rip)        # 21cdd8 <__isoc99_fscanf@GLIBC_2.7>
    1726:	68 0c 00 00 00       	pushq  $0xc
    172b:	e9 20 ff ff ff       	jmpq   1650 <.plt>

0000000000001730 <mkdir@plt>:
    1730:	ff 25 aa b6 21 00    	jmpq   *0x21b6aa(%rip)        # 21cde0 <mkdir@GLIBC_2.2.5>
    1736:	68 0d 00 00 00       	pushq  $0xd
    173b:	e9 10 ff ff ff       	jmpq   1650 <.plt>

0000000000001740 <puts@plt>:
    1740:	ff 25 a2 b6 21 00    	jmpq   *0x21b6a2(%rip)        # 21cde8 <puts@GLIBC_2.2.5>
    1746:	68 0e 00 00 00       	pushq  $0xe
    174b:	e9 00 ff ff ff       	jmpq   1650 <.plt>

0000000000001750 <fread@plt>:
    1750:	ff 25 9a b6 21 00    	jmpq   *0x21b69a(%rip)        # 21cdf0 <fread@GLIBC_2.2.5>
    1756:	68 0f 00 00 00       	pushq  $0xf
    175b:	e9 f0 fe ff ff       	jmpq   1650 <.plt>

0000000000001760 <strtod@plt>:
    1760:	ff 25 92 b6 21 00    	jmpq   *0x21b692(%rip)        # 21cdf8 <strtod@GLIBC_2.2.5>
    1766:	68 10 00 00 00       	pushq  $0x10
    176b:	e9 e0 fe ff ff       	jmpq   1650 <.plt>

0000000000001770 <exp@plt>:
    1770:	ff 25 8a b6 21 00    	jmpq   *0x21b68a(%rip)        # 21ce00 <exp@GLIBC_2.2.5>
    1776:	68 11 00 00 00       	pushq  $0x11
    177b:	e9 d0 fe ff ff       	jmpq   1650 <.plt>

0000000000001780 <fclose@plt>:
    1780:	ff 25 82 b6 21 00    	jmpq   *0x21b682(%rip)        # 21ce08 <fclose@GLIBC_2.2.5>
    1786:	68 12 00 00 00       	pushq  $0x12
    178b:	e9 c0 fe ff ff       	jmpq   1650 <.plt>

0000000000001790 <strlen@plt>:
    1790:	ff 25 7a b6 21 00    	jmpq   *0x21b67a(%rip)        # 21ce10 <strlen@GLIBC_2.2.5>
    1796:	68 13 00 00 00       	pushq  $0x13
    179b:	e9 b0 fe ff ff       	jmpq   1650 <.plt>

00000000000017a0 <__stack_chk_fail@plt>:
    17a0:	ff 25 72 b6 21 00    	jmpq   *0x21b672(%rip)        # 21ce18 <__stack_chk_fail@GLIBC_2.4>
    17a6:	68 14 00 00 00       	pushq  $0x14
    17ab:	e9 a0 fe ff ff       	jmpq   1650 <.plt>

00000000000017b0 <mmap@plt>:
    17b0:	ff 25 6a b6 21 00    	jmpq   *0x21b66a(%rip)        # 21ce20 <mmap@GLIBC_2.2.5>
    17b6:	68 15 00 00 00       	pushq  $0x15
    17bb:	e9 90 fe ff ff       	jmpq   1650 <.plt>

00000000000017c0 <system@plt>:
    17c0:	ff 25 62 b6 21 00    	jmpq   *0x21b662(%rip)        # 21ce28 <system@GLIBC_2.2.5>
    17c6:	68 16 00 00 00       	pushq  $0x16
    17cb:	e9 80 fe ff ff       	jmpq   1650 <.plt>

00000000000017d0 <pthread_setaffinity_np@plt>:
    17d0:	ff 25 5a b6 21 00    	jmpq   *0x21b65a(%rip)        # 21ce30 <pthread_setaffinity_np@GLIBC_2.3.4>
    17d6:	68 17 00 00 00       	pushq  $0x17
    17db:	e9 70 fe ff ff       	jmpq   1650 <.plt>

00000000000017e0 <rewind@plt>:
    17e0:	ff 25 52 b6 21 00    	jmpq   *0x21b652(%rip)        # 21ce38 <rewind@GLIBC_2.2.5>
    17e6:	68 18 00 00 00       	pushq  $0x18
    17eb:	e9 60 fe ff ff       	jmpq   1650 <.plt>

00000000000017f0 <pclose@plt>:
    17f0:	ff 25 4a b6 21 00    	jmpq   *0x21b64a(%rip)        # 21ce40 <pclose@GLIBC_2.2.5>
    17f6:	68 19 00 00 00       	pushq  $0x19
    17fb:	e9 50 fe ff ff       	jmpq   1650 <.plt>

0000000000001800 <gettimeofday@plt>:
    1800:	ff 25 42 b6 21 00    	jmpq   *0x21b642(%rip)        # 21ce48 <gettimeofday@GLIBC_2.2.5>
    1806:	68 1a 00 00 00       	pushq  $0x1a
    180b:	e9 40 fe ff ff       	jmpq   1650 <.plt>

0000000000001810 <log2@plt>:
    1810:	ff 25 3a b6 21 00    	jmpq   *0x21b63a(%rip)        # 21ce50 <log2@GLIBC_2.2.5>
    1816:	68 1b 00 00 00       	pushq  $0x1b
    181b:	e9 30 fe ff ff       	jmpq   1650 <.plt>

0000000000001820 <__assert_fail@plt>:
    1820:	ff 25 32 b6 21 00    	jmpq   *0x21b632(%rip)        # 21ce58 <__assert_fail@GLIBC_2.2.5>
    1826:	68 1c 00 00 00       	pushq  $0x1c
    182b:	e9 20 fe ff ff       	jmpq   1650 <.plt>

0000000000001830 <fputs@plt>:
    1830:	ff 25 2a b6 21 00    	jmpq   *0x21b62a(%rip)        # 21ce60 <fputs@GLIBC_2.2.5>
    1836:	68 1d 00 00 00       	pushq  $0x1d
    183b:	e9 10 fe ff ff       	jmpq   1650 <.plt>

0000000000001840 <strtof@plt>:
    1840:	ff 25 22 b6 21 00    	jmpq   *0x21b622(%rip)        # 21ce68 <strtof@GLIBC_2.2.5>
    1846:	68 1e 00 00 00       	pushq  $0x1e
    184b:	e9 00 fe ff ff       	jmpq   1650 <.plt>

0000000000001850 <memset@plt>:
    1850:	ff 25 1a b6 21 00    	jmpq   *0x21b61a(%rip)        # 21ce70 <memset@GLIBC_2.2.5>
    1856:	68 1f 00 00 00       	pushq  $0x1f
    185b:	e9 f0 fd ff ff       	jmpq   1650 <.plt>

0000000000001860 <pow@plt>:
    1860:	ff 25 12 b6 21 00    	jmpq   *0x21b612(%rip)        # 21ce78 <pow@GLIBC_2.2.5>
    1866:	68 20 00 00 00       	pushq  $0x20
    186b:	e9 e0 fd ff ff       	jmpq   1650 <.plt>

0000000000001870 <ioctl@plt>:
    1870:	ff 25 0a b6 21 00    	jmpq   *0x21b60a(%rip)        # 21ce80 <ioctl@GLIBC_2.2.5>
    1876:	68 21 00 00 00       	pushq  $0x21
    187b:	e9 d0 fd ff ff       	jmpq   1650 <.plt>

0000000000001880 <log@plt>:
    1880:	ff 25 02 b6 21 00    	jmpq   *0x21b602(%rip)        # 21ce88 <log@GLIBC_2.2.5>
    1886:	68 22 00 00 00       	pushq  $0x22
    188b:	e9 c0 fd ff ff       	jmpq   1650 <.plt>

0000000000001890 <close@plt>:
    1890:	ff 25 fa b5 21 00    	jmpq   *0x21b5fa(%rip)        # 21ce90 <close@GLIBC_2.2.5>
    1896:	68 23 00 00 00       	pushq  $0x23
    189b:	e9 b0 fd ff ff       	jmpq   1650 <.plt>

00000000000018a0 <read@plt>:
    18a0:	ff 25 f2 b5 21 00    	jmpq   *0x21b5f2(%rip)        # 21ce98 <read@GLIBC_2.2.5>
    18a6:	68 24 00 00 00       	pushq  $0x24
    18ab:	e9 a0 fd ff ff       	jmpq   1650 <.plt>

00000000000018b0 <calloc@plt>:
    18b0:	ff 25 ea b5 21 00    	jmpq   *0x21b5ea(%rip)        # 21cea0 <calloc@GLIBC_2.2.5>
    18b6:	68 25 00 00 00       	pushq  $0x25
    18bb:	e9 90 fd ff ff       	jmpq   1650 <.plt>

00000000000018c0 <strcmp@plt>:
    18c0:	ff 25 e2 b5 21 00    	jmpq   *0x21b5e2(%rip)        # 21cea8 <strcmp@GLIBC_2.2.5>
    18c6:	68 26 00 00 00       	pushq  $0x26
    18cb:	e9 80 fd ff ff       	jmpq   1650 <.plt>

00000000000018d0 <__memcpy_chk@plt>:
    18d0:	ff 25 da b5 21 00    	jmpq   *0x21b5da(%rip)        # 21ceb0 <__memcpy_chk@GLIBC_2.3.4>
    18d6:	68 27 00 00 00       	pushq  $0x27
    18db:	e9 70 fd ff ff       	jmpq   1650 <.plt>

00000000000018e0 <strtol@plt>:
    18e0:	ff 25 d2 b5 21 00    	jmpq   *0x21b5d2(%rip)        # 21ceb8 <strtol@GLIBC_2.2.5>
    18e6:	68 28 00 00 00       	pushq  $0x28
    18eb:	e9 60 fd ff ff       	jmpq   1650 <.plt>

00000000000018f0 <memcpy@plt>:
    18f0:	ff 25 ca b5 21 00    	jmpq   *0x21b5ca(%rip)        # 21cec0 <memcpy@GLIBC_2.14>
    18f6:	68 29 00 00 00       	pushq  $0x29
    18fb:	e9 50 fd ff ff       	jmpq   1650 <.plt>

0000000000001900 <pthread_exit@plt>:
    1900:	ff 25 c2 b5 21 00    	jmpq   *0x21b5c2(%rip)        # 21cec8 <pthread_exit@GLIBC_2.2.5>
    1906:	68 2a 00 00 00       	pushq  $0x2a
    190b:	e9 40 fd ff ff       	jmpq   1650 <.plt>

0000000000001910 <malloc@plt>:
    1910:	ff 25 ba b5 21 00    	jmpq   *0x21b5ba(%rip)        # 21ced0 <malloc@GLIBC_2.2.5>
    1916:	68 2b 00 00 00       	pushq  $0x2b
    191b:	e9 30 fd ff ff       	jmpq   1650 <.plt>

0000000000001920 <fflush@plt>:
    1920:	ff 25 b2 b5 21 00    	jmpq   *0x21b5b2(%rip)        # 21ced8 <fflush@GLIBC_2.2.5>
    1926:	68 2c 00 00 00       	pushq  $0x2c
    192b:	e9 20 fd ff ff       	jmpq   1650 <.plt>

0000000000001930 <__vsnprintf_chk@plt>:
    1930:	ff 25 aa b5 21 00    	jmpq   *0x21b5aa(%rip)        # 21cee0 <__vsnprintf_chk@GLIBC_2.3.4>
    1936:	68 2d 00 00 00       	pushq  $0x2d
    193b:	e9 10 fd ff ff       	jmpq   1650 <.plt>

0000000000001940 <setrlimit@plt>:
    1940:	ff 25 a2 b5 21 00    	jmpq   *0x21b5a2(%rip)        # 21cee8 <setrlimit@GLIBC_2.2.5>
    1946:	68 2e 00 00 00       	pushq  $0x2e
    194b:	e9 00 fd ff ff       	jmpq   1650 <.plt>

0000000000001950 <realloc@plt>:
    1950:	ff 25 9a b5 21 00    	jmpq   *0x21b59a(%rip)        # 21cef0 <realloc@GLIBC_2.2.5>
    1956:	68 2f 00 00 00       	pushq  $0x2f
    195b:	e9 f0 fc ff ff       	jmpq   1650 <.plt>

0000000000001960 <munmap@plt>:
    1960:	ff 25 92 b5 21 00    	jmpq   *0x21b592(%rip)        # 21cef8 <munmap@GLIBC_2.2.5>
    1966:	68 30 00 00 00       	pushq  $0x30
    196b:	e9 e0 fc ff ff       	jmpq   1650 <.plt>

0000000000001970 <__printf_chk@plt>:
    1970:	ff 25 8a b5 21 00    	jmpq   *0x21b58a(%rip)        # 21cf00 <__printf_chk@GLIBC_2.3.4>
    1976:	68 31 00 00 00       	pushq  $0x31
    197b:	e9 d0 fc ff ff       	jmpq   1650 <.plt>

0000000000001980 <srand48_r@plt>:
    1980:	ff 25 82 b5 21 00    	jmpq   *0x21b582(%rip)        # 21cf08 <srand48_r@GLIBC_2.2.5>
    1986:	68 32 00 00 00       	pushq  $0x32
    198b:	e9 c0 fc ff ff       	jmpq   1650 <.plt>

0000000000001990 <pthread_self@plt>:
    1990:	ff 25 7a b5 21 00    	jmpq   *0x21b57a(%rip)        # 21cf10 <pthread_self@GLIBC_2.2.5>
    1996:	68 33 00 00 00       	pushq  $0x33
    199b:	e9 b0 fc ff ff       	jmpq   1650 <.plt>

00000000000019a0 <mprotect@plt>:
    19a0:	ff 25 72 b5 21 00    	jmpq   *0x21b572(%rip)        # 21cf18 <mprotect@GLIBC_2.2.5>
    19a6:	68 34 00 00 00       	pushq  $0x34
    19ab:	e9 a0 fc ff ff       	jmpq   1650 <.plt>

00000000000019b0 <open@plt>:
    19b0:	ff 25 6a b5 21 00    	jmpq   *0x21b56a(%rip)        # 21cf20 <open@GLIBC_2.2.5>
    19b6:	68 35 00 00 00       	pushq  $0x35
    19bb:	e9 90 fc ff ff       	jmpq   1650 <.plt>

00000000000019c0 <access@plt>:
    19c0:	ff 25 62 b5 21 00    	jmpq   *0x21b562(%rip)        # 21cf28 <access@GLIBC_2.2.5>
    19c6:	68 36 00 00 00       	pushq  $0x36
    19cb:	e9 80 fc ff ff       	jmpq   1650 <.plt>

00000000000019d0 <popen@plt>:
    19d0:	ff 25 5a b5 21 00    	jmpq   *0x21b55a(%rip)        # 21cf30 <popen@GLIBC_2.2.5>
    19d6:	68 37 00 00 00       	pushq  $0x37
    19db:	e9 70 fc ff ff       	jmpq   1650 <.plt>

00000000000019e0 <fopen@plt>:
    19e0:	ff 25 52 b5 21 00    	jmpq   *0x21b552(%rip)        # 21cf38 <fopen@GLIBC_2.2.5>
    19e6:	68 38 00 00 00       	pushq  $0x38
    19eb:	e9 60 fc ff ff       	jmpq   1650 <.plt>

00000000000019f0 <perror@plt>:
    19f0:	ff 25 4a b5 21 00    	jmpq   *0x21b54a(%rip)        # 21cf40 <perror@GLIBC_2.2.5>
    19f6:	68 39 00 00 00       	pushq  $0x39
    19fb:	e9 50 fc ff ff       	jmpq   1650 <.plt>

0000000000001a00 <sysconf@plt>:
    1a00:	ff 25 42 b5 21 00    	jmpq   *0x21b542(%rip)        # 21cf48 <sysconf@GLIBC_2.2.5>
    1a06:	68 3a 00 00 00       	pushq  $0x3a
    1a0b:	e9 40 fc ff ff       	jmpq   1650 <.plt>

0000000000001a10 <pthread_join@plt>:
    1a10:	ff 25 3a b5 21 00    	jmpq   *0x21b53a(%rip)        # 21cf50 <pthread_join@GLIBC_2.2.5>
    1a16:	68 3b 00 00 00       	pushq  $0x3b
    1a1b:	e9 30 fc ff ff       	jmpq   1650 <.plt>

0000000000001a20 <drand48_r@plt>:
    1a20:	ff 25 32 b5 21 00    	jmpq   *0x21b532(%rip)        # 21cf58 <drand48_r@GLIBC_2.2.5>
    1a26:	68 3c 00 00 00       	pushq  $0x3c
    1a2b:	e9 20 fc ff ff       	jmpq   1650 <.plt>

0000000000001a30 <__memset_chk@plt>:
    1a30:	ff 25 2a b5 21 00    	jmpq   *0x21b52a(%rip)        # 21cf60 <__memset_chk@GLIBC_2.3.4>
    1a36:	68 3d 00 00 00       	pushq  $0x3d
    1a3b:	e9 10 fc ff ff       	jmpq   1650 <.plt>

0000000000001a40 <exit@plt>:
    1a40:	ff 25 22 b5 21 00    	jmpq   *0x21b522(%rip)        # 21cf68 <exit@GLIBC_2.2.5>
    1a46:	68 3e 00 00 00       	pushq  $0x3e
    1a4b:	e9 00 fc ff ff       	jmpq   1650 <.plt>

0000000000001a50 <fwrite@plt>:
    1a50:	ff 25 1a b5 21 00    	jmpq   *0x21b51a(%rip)        # 21cf70 <fwrite@GLIBC_2.2.5>
    1a56:	68 3f 00 00 00       	pushq  $0x3f
    1a5b:	e9 f0 fb ff ff       	jmpq   1650 <.plt>

0000000000001a60 <__fprintf_chk@plt>:
    1a60:	ff 25 12 b5 21 00    	jmpq   *0x21b512(%rip)        # 21cf78 <__fprintf_chk@GLIBC_2.3.4>
    1a66:	68 40 00 00 00       	pushq  $0x40
    1a6b:	e9 e0 fb ff ff       	jmpq   1650 <.plt>

0000000000001a70 <posix_memalign@plt>:
    1a70:	ff 25 0a b5 21 00    	jmpq   *0x21b50a(%rip)        # 21cf80 <posix_memalign@GLIBC_2.2.5>
    1a76:	68 41 00 00 00       	pushq  $0x41
    1a7b:	e9 d0 fb ff ff       	jmpq   1650 <.plt>

0000000000001a80 <sqrt@plt>:
    1a80:	ff 25 02 b5 21 00    	jmpq   *0x21b502(%rip)        # 21cf88 <sqrt@GLIBC_2.2.5>
    1a86:	68 42 00 00 00       	pushq  $0x42
    1a8b:	e9 c0 fb ff ff       	jmpq   1650 <.plt>

0000000000001a90 <strerror@plt>:
    1a90:	ff 25 fa b4 21 00    	jmpq   *0x21b4fa(%rip)        # 21cf90 <strerror@GLIBC_2.2.5>
    1a96:	68 43 00 00 00       	pushq  $0x43
    1a9b:	e9 b0 fb ff ff       	jmpq   1650 <.plt>

0000000000001aa0 <sleep@plt>:
    1aa0:	ff 25 f2 b4 21 00    	jmpq   *0x21b4f2(%rip)        # 21cf98 <sleep@GLIBC_2.2.5>
    1aa6:	68 44 00 00 00       	pushq  $0x44
    1aab:	e9 a0 fb ff ff       	jmpq   1650 <.plt>

0000000000001ab0 <__sprintf_chk@plt>:
    1ab0:	ff 25 ea b4 21 00    	jmpq   *0x21b4ea(%rip)        # 21cfa0 <__sprintf_chk@GLIBC_2.3.4>
    1ab6:	68 45 00 00 00       	pushq  $0x45
    1abb:	e9 90 fb ff ff       	jmpq   1650 <.plt>

Disassemblamento della sezione .plt.got:

0000000000001ac0 <__cxa_finalize@plt>:
    1ac0:	ff 25 02 b5 21 00    	jmpq   *0x21b502(%rip)        # 21cfc8 <__cxa_finalize@GLIBC_2.2.5>
    1ac6:	66 90                	xchg   %ax,%ax

Disassemblamento della sezione .text:

0000000000001ad0 <main>:
    1ad0:	41 54                	push   %r12
    1ad2:	89 fa                	mov    %edi,%edx
    1ad4:	55                   	push   %rbp
    1ad5:	48 89 f5             	mov    %rsi,%rbp
    1ad8:	48 8d 35 33 72 01 00 	lea    0x17233(%rip),%rsi        # 18d12 <__PRETTY_FUNCTION__.6556+0x2f52>
    1adf:	53                   	push   %rbx
    1ae0:	89 fb                	mov    %edi,%ebx
    1ae2:	bf 01 00 00 00       	mov    $0x1,%edi
    1ae7:	48 83 ec 30          	sub    $0x30,%rsp
    1aeb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1af2:	00 00 
    1af4:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    1af9:	31 c0                	xor    %eax,%eax
    1afb:	e8 70 fe ff ff       	callq  1970 <__printf_chk@plt>
    1b00:	48 8d 3d fe 71 01 00 	lea    0x171fe(%rip),%rdi        # 18d05 <__PRETTY_FUNCTION__.6556+0x2f45>
    1b07:	e8 34 fc ff ff       	callq  1740 <puts@plt>
    1b0c:	48 8d 3d 6d 54 01 00 	lea    0x1546d(%rip),%rdi        # 16f80 <__PRETTY_FUNCTION__.6556+0x11c0>
    1b13:	e8 a8 fc ff ff       	callq  17c0 <system@plt>
    1b18:	83 fb 02             	cmp    $0x2,%ebx
    1b1b:	0f 8e c6 02 00 00    	jle    1de7 <main+0x317>
    1b21:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    1b25:	ba 0a 00 00 00       	mov    $0xa,%edx
    1b2a:	31 f6                	xor    %esi,%esi
    1b2c:	e8 af fd ff ff       	callq  18e0 <strtol@plt>
    1b31:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    1b35:	ba 0a 00 00 00       	mov    $0xa,%edx
    1b3a:	31 f6                	xor    %esi,%esi
    1b3c:	89 05 46 76 34 00    	mov    %eax,0x347646(%rip)        # 349188 <n_cores>
    1b42:	e8 99 fd ff ff       	callq  18e0 <strtol@plt>
    1b47:	89 05 63 76 34 00    	mov    %eax,0x347663(%rip)        # 3491b0 <n_prc_tot>
    1b4d:	83 fb 03             	cmp    $0x3,%ebx
    1b50:	0f 85 01 02 00 00    	jne    1d57 <main+0x287>
    1b56:	48 bf 00 00 00 00 0e 	movabs $0xe00000000,%rdi
    1b5d:	00 00 00 
    1b60:	e8 4b 26 01 00       	callq  141b0 <set_max_memory_allocable>
    1b65:	31 c0                	xor    %eax,%eax
    1b67:	e8 44 27 01 00       	callq  142b0 <test_memory_limit>
    1b6c:	48 8d 3d eb 71 01 00 	lea    0x171eb(%rip),%rdi        # 18d5e <__PRETTY_FUNCTION__.6556+0x2f9e>
    1b73:	e8 c8 fb ff ff       	callq  1740 <puts@plt>
    1b78:	48 89 e7             	mov    %rsp,%rdi
    1b7b:	31 f6                	xor    %esi,%esi
    1b7d:	e8 7e fc ff ff       	callq  1800 <gettimeofday@plt>
    1b82:	0f 31                	rdtsc  
    1b84:	48 c1 e2 20          	shl    $0x20,%rdx
    1b88:	89 c0                	mov    %eax,%eax
    1b8a:	48 09 c2             	or     %rax,%rdx
    1b8d:	31 c0                	xor    %eax,%eax
    1b8f:	48 89 d5             	mov    %rdx,%rbp
    1b92:	e8 29 c8 00 00       	callq  e3c0 <start_simulation>
    1b97:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    1b9c:	31 f6                	xor    %esi,%esi
    1b9e:	e8 5d fc ff ff       	callq  1800 <gettimeofday@plt>
    1ba3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    1ba8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1bac:	48 bf cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdi
    1bb3:	9b c4 20 
    1bb6:	69 74 24 10 e8 03 00 	imul   $0x3e8,0x10(%rsp),%esi
    1bbd:	00 
    1bbe:	48 89 c8             	mov    %rcx,%rax
    1bc1:	48 c1 f9 3f          	sar    $0x3f,%rcx
    1bc5:	48 f7 ef             	imul   %rdi
    1bc8:	69 04 24 e8 03 00 00 	imul   $0x3e8,(%rsp),%eax
    1bcf:	48 c1 fa 07          	sar    $0x7,%rdx
    1bd3:	48 29 ca             	sub    %rcx,%rdx
    1bd6:	8d 0c 16             	lea    (%rsi,%rdx,1),%ecx
    1bd9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    1bde:	29 c1                	sub    %eax,%ecx
    1be0:	48 89 f0             	mov    %rsi,%rax
    1be3:	48 c1 fe 3f          	sar    $0x3f,%rsi
    1be7:	48 f7 ef             	imul   %rdi
    1bea:	31 c0                	xor    %eax,%eax
    1bec:	48 89 d7             	mov    %rdx,%rdi
    1bef:	48 c1 ff 07          	sar    $0x7,%rdi
    1bf3:	48 29 f7             	sub    %rsi,%rdi
    1bf6:	29 f9                	sub    %edi,%ecx
    1bf8:	f2 0f 2a c1          	cvtsi2sd %ecx,%xmm0
    1bfc:	f2 0f 5e 05 6c 74 01 	divsd  0x1746c(%rip),%xmm0        # 19070 <__PRETTY_FUNCTION__.6556+0x32b0>
    1c03:	00 
    1c04:	f2 0f 11 05 9c 75 34 	movsd  %xmm0,0x34759c(%rip)        # 3491a8 <simduration>
    1c0b:	00 
    1c0c:	e8 ff fa 00 00       	callq  11710 <print_statistics>
    1c11:	bf 01 00 00 00       	mov    $0x1,%edi
    1c16:	b8 01 00 00 00       	mov    $0x1,%eax
    1c1b:	f2 0f 10 05 85 75 34 	movsd  0x347585(%rip),%xmm0        # 3491a8 <simduration>
    1c22:	00 
    1c23:	48 8d 35 be 53 01 00 	lea    0x153be(%rip),%rsi        # 16fe8 <__PRETTY_FUNCTION__.6556+0x1228>
    1c2a:	e8 41 fd ff ff       	callq  1970 <__printf_chk@plt>
    1c2f:	0f 31                	rdtsc  
    1c31:	48 c1 e2 20          	shl    $0x20,%rdx
    1c35:	89 c3                	mov    %eax,%ebx
    1c37:	48 09 d3             	or     %rdx,%rbx
    1c3a:	48 39 dd             	cmp    %rbx,%rbp
    1c3d:	0f 87 80 01 00 00    	ja     1dc3 <main+0x2f3>
    1c43:	48 29 eb             	sub    %rbp,%rbx
    1c46:	48 8d 35 c3 53 01 00 	lea    0x153c3(%rip),%rsi        # 17010 <__PRETTY_FUNCTION__.6556+0x1250>
    1c4d:	bf 01 00 00 00       	mov    $0x1,%edi
    1c52:	31 c0                	xor    %eax,%eax
    1c54:	48 89 da             	mov    %rbx,%rdx
    1c57:	e8 14 fd ff ff       	callq  1970 <__printf_chk@plt>
    1c5c:	48 c7 c0 88 5e ff ff 	mov    $0xffffffffffff5e88,%rax
    1c63:	bf 01 00 00 00       	mov    $0x1,%edi
    1c68:	48 8d 35 07 71 01 00 	lea    0x17107(%rip),%rsi        # 18d76 <__PRETTY_FUNCTION__.6556+0x2fb6>
    1c6f:	64 f2 0f 10 00       	movsd  %fs:(%rax),%xmm0
    1c74:	b8 01 00 00 00       	mov    $0x1,%eax
    1c79:	e8 f2 fc ff ff       	callq  1970 <__printf_chk@plt>
    1c7e:	48 8b 05 93 75 34 00 	mov    0x347593(%rip),%rax        # 349218 <system_stats>
    1c85:	bf 01 00 00 00       	mov    $0x1,%edi
    1c8a:	f2 0f 10 0d 16 75 34 	movsd  0x347516(%rip),%xmm1        # 3491a8 <simduration>
    1c91:	00 
    1c92:	48 8d 35 eb 70 01 00 	lea    0x170eb(%rip),%rsi        # 18d84 <__PRETTY_FUNCTION__.6556+0x2fc4>
    1c99:	f2 0f 10 40 10       	movsd  0x10(%rax),%xmm0
    1c9e:	b8 01 00 00 00       	mov    $0x1,%eax
    1ca3:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1ca7:	e8 c4 fc ff ff       	callq  1970 <__printf_chk@plt>
    1cac:	48 8b 05 65 75 34 00 	mov    0x347565(%rip),%rax        # 349218 <system_stats>
    1cb3:	bf 01 00 00 00       	mov    $0x1,%edi
    1cb8:	f2 0f 10 0d e8 74 34 	movsd  0x3474e8(%rip),%xmm1        # 3491a8 <simduration>
    1cbf:	00 
    1cc0:	48 8d 35 71 53 01 00 	lea    0x15371(%rip),%rsi        # 17038 <__PRETTY_FUNCTION__.6556+0x1278>
    1cc7:	f2 0f 10 40 10       	movsd  0x10(%rax),%xmm0
    1ccc:	8b 05 b6 74 34 00    	mov    0x3474b6(%rip),%eax        # 349188 <n_cores>
    1cd2:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1cd6:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1cda:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    1cdf:	b8 01 00 00 00       	mov    $0x1,%eax
    1ce4:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1ce8:	e8 83 fc ff ff       	callq  1970 <__printf_chk@plt>
    1ced:	48 8d 3d a6 70 01 00 	lea    0x170a6(%rip),%rdi        # 18d9a <__PRETTY_FUNCTION__.6556+0x2fda>
    1cf4:	e8 a7 08 01 00       	callq  125a0 <write_results_on_csv>
    1cf9:	31 c0                	xor    %eax,%eax
    1cfb:	e8 90 e5 00 00       	callq  10290 <statistics_fini>
    1d00:	0f b6 05 89 b3 21 00 	movzbl 0x21b389(%rip),%eax        # 21d090 <sim_error>
    1d07:	84 c0                	test   %al,%al
    1d09:	0f 85 9c 00 00 00    	jne    1dab <main+0x2db>
    1d0f:	0f b6 05 6f b3 21 00 	movzbl 0x21b36f(%rip),%eax        # 21d085 <stop>
    1d16:	84 c0                	test   %al,%al
    1d18:	75 0b                	jne    1d25 <main+0x255>
    1d1a:	0f b6 05 63 b3 21 00 	movzbl 0x21b363(%rip),%eax        # 21d084 <stop_timer>
    1d21:	84 c0                	test   %al,%al
    1d23:	74 13                	je     1d38 <main+0x268>
    1d25:	48 8d 35 54 53 01 00 	lea    0x15354(%rip),%rsi        # 17080 <__PRETTY_FUNCTION__.6556+0x12c0>
    1d2c:	bf 01 00 00 00       	mov    $0x1,%edi
    1d31:	31 c0                	xor    %eax,%eax
    1d33:	e8 38 fc ff ff       	callq  1970 <__printf_chk@plt>
    1d38:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1d3d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1d44:	00 00 
    1d46:	0f 85 96 00 00 00    	jne    1de2 <main+0x312>
    1d4c:	48 83 c4 30          	add    $0x30,%rsp
    1d50:	31 c0                	xor    %eax,%eax
    1d52:	5b                   	pop    %rbx
    1d53:	5d                   	pop    %rbp
    1d54:	41 5c                	pop    %r12
    1d56:	c3                   	retq   
    1d57:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
    1d5b:	ba 0a 00 00 00       	mov    $0xa,%edx
    1d60:	31 f6                	xor    %esi,%esi
    1d62:	e8 79 fb ff ff       	callq  18e0 <strtol@plt>
    1d67:	89 05 13 b3 21 00    	mov    %eax,0x21b313(%rip)        # 21d080 <sec_stop>
    1d6d:	83 fb 05             	cmp    $0x5,%ebx
    1d70:	0f 85 e0 fd ff ff    	jne    1b56 <main+0x86>
    1d76:	4c 8b 65 20          	mov    0x20(%rbp),%r12
    1d7a:	ba 04 00 00 00       	mov    $0x4,%edx
    1d7f:	48 8d 35 bd 6f 01 00 	lea    0x16fbd(%rip),%rsi        # 18d43 <__PRETTY_FUNCTION__.6556+0x2f83>
    1d86:	4c 89 e7             	mov    %r12,%rdi
    1d89:	e8 82 f9 ff ff       	callq  1710 <strncmp@plt>
    1d8e:	85 c0                	test   %eax,%eax
    1d90:	75 7d                	jne    1e0f <main+0x33f>
    1d92:	4c 89 e2             	mov    %r12,%rdx
    1d95:	48 8d 35 ac 6f 01 00 	lea    0x16fac(%rip),%rsi        # 18d48 <__PRETTY_FUNCTION__.6556+0x2f88>
    1d9c:	bf 01 00 00 00       	mov    $0x1,%edi
    1da1:	e8 ca fb ff ff       	callq  1970 <__printf_chk@plt>
    1da6:	e9 ab fd ff ff       	jmpq   1b56 <main+0x86>
    1dab:	48 8d 35 a6 52 01 00 	lea    0x152a6(%rip),%rsi        # 17058 <__PRETTY_FUNCTION__.6556+0x1298>
    1db2:	bf 01 00 00 00       	mov    $0x1,%edi
    1db7:	31 c0                	xor    %eax,%eax
    1db9:	e8 b2 fb ff ff       	callq  1970 <__printf_chk@plt>
    1dbe:	e9 75 ff ff ff       	jmpq   1d38 <main+0x268>
    1dc3:	48 89 d9             	mov    %rbx,%rcx
    1dc6:	48 89 ea             	mov    %rbp,%rdx
    1dc9:	48 8d 35 f0 2f 01 00 	lea    0x12ff0(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
    1dd0:	31 c0                	xor    %eax,%eax
    1dd2:	bf 01 00 00 00       	mov    $0x1,%edi
    1dd7:	e8 94 fb ff ff       	callq  1970 <__printf_chk@plt>
    1ddc:	cc                   	int3   
    1ddd:	e9 61 fe ff ff       	jmpq   1c43 <main+0x173>
    1de2:	e8 b9 f9 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    1de7:	48 8b 3d 72 b2 21 00 	mov    0x21b272(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    1dee:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
    1df2:	be 01 00 00 00       	mov    $0x1,%esi
    1df7:	31 c0                	xor    %eax,%eax
    1df9:	48 8d 15 27 6f 01 00 	lea    0x16f27(%rip),%rdx        # 18d27 <__PRETTY_FUNCTION__.6556+0x2f67>
    1e00:	e8 5b fc ff ff       	callq  1a60 <__fprintf_chk@plt>
    1e05:	bf 01 00 00 00       	mov    $0x1,%edi
    1e0a:	e8 31 fc ff ff       	callq  1a40 <exit@plt>
    1e0f:	bf 01 00 00 00       	mov    $0x1,%edi
    1e14:	48 8d 15 28 6f 01 00 	lea    0x16f28(%rip),%rdx        # 18d43 <__PRETTY_FUNCTION__.6556+0x2f83>
    1e1b:	48 8d 35 86 51 01 00 	lea    0x15186(%rip),%rsi        # 16fa8 <__PRETTY_FUNCTION__.6556+0x11e8>
    1e22:	31 c0                	xor    %eax,%eax
    1e24:	e8 47 fb ff ff       	callq  1970 <__printf_chk@plt>
    1e29:	bf 01 00 00 00       	mov    $0x1,%edi
    1e2e:	e8 0d fc ff ff       	callq  1a40 <exit@plt>
    1e33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1e3a:	00 00 00 
    1e3d:	0f 1f 00             	nopl   (%rax)

0000000000001e40 <_start>:
    1e40:	31 ed                	xor    %ebp,%ebp
    1e42:	49 89 d1             	mov    %rdx,%r9
    1e45:	5e                   	pop    %rsi
    1e46:	48 89 e2             	mov    %rsp,%rdx
    1e49:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1e4d:	50                   	push   %rax
    1e4e:	54                   	push   %rsp
    1e4f:	4c 8d 05 1a 28 01 00 	lea    0x1281a(%rip),%r8        # 14670 <__libc_csu_fini>
    1e56:	48 8d 0d a3 27 01 00 	lea    0x127a3(%rip),%rcx        # 14600 <__libc_csu_init>
    1e5d:	48 8d 3d 6c fc ff ff 	lea    -0x394(%rip),%rdi        # 1ad0 <main>
    1e64:	ff 15 46 b1 21 00    	callq  *0x21b146(%rip)        # 21cfb0 <__libc_start_main@GLIBC_2.2.5>
    1e6a:	f4                   	hlt    
    1e6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001e70 <deregister_tm_clones>:
    1e70:	48 8d 3d b1 b1 21 00 	lea    0x21b1b1(%rip),%rdi        # 21d028 <__TMC_END__>
    1e77:	48 8d 05 aa b1 21 00 	lea    0x21b1aa(%rip),%rax        # 21d028 <__TMC_END__>
    1e7e:	48 39 f8             	cmp    %rdi,%rax
    1e81:	74 15                	je     1e98 <deregister_tm_clones+0x28>
    1e83:	48 8b 05 1e b1 21 00 	mov    0x21b11e(%rip),%rax        # 21cfa8 <_ITM_deregisterTMCloneTable>
    1e8a:	48 85 c0             	test   %rax,%rax
    1e8d:	74 09                	je     1e98 <deregister_tm_clones+0x28>
    1e8f:	ff e0                	jmpq   *%rax
    1e91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1e98:	c3                   	retq   
    1e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001ea0 <register_tm_clones>:
    1ea0:	48 8d 3d 81 b1 21 00 	lea    0x21b181(%rip),%rdi        # 21d028 <__TMC_END__>
    1ea7:	48 8d 35 7a b1 21 00 	lea    0x21b17a(%rip),%rsi        # 21d028 <__TMC_END__>
    1eae:	48 29 fe             	sub    %rdi,%rsi
    1eb1:	48 89 f0             	mov    %rsi,%rax
    1eb4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1eb8:	48 c1 f8 03          	sar    $0x3,%rax
    1ebc:	48 01 c6             	add    %rax,%rsi
    1ebf:	48 d1 fe             	sar    %rsi
    1ec2:	74 14                	je     1ed8 <register_tm_clones+0x38>
    1ec4:	48 8b 05 f5 b0 21 00 	mov    0x21b0f5(%rip),%rax        # 21cfc0 <_ITM_registerTMCloneTable>
    1ecb:	48 85 c0             	test   %rax,%rax
    1ece:	74 08                	je     1ed8 <register_tm_clones+0x38>
    1ed0:	ff e0                	jmpq   *%rax
    1ed2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1ed8:	c3                   	retq   
    1ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001ee0 <__do_global_dtors_aux>:
    1ee0:	80 3d 81 b1 21 00 00 	cmpb   $0x0,0x21b181(%rip)        # 21d068 <completed.8086>
    1ee7:	75 2f                	jne    1f18 <__do_global_dtors_aux+0x38>
    1ee9:	55                   	push   %rbp
    1eea:	48 83 3d d6 b0 21 00 	cmpq   $0x0,0x21b0d6(%rip)        # 21cfc8 <__cxa_finalize@GLIBC_2.2.5>
    1ef1:	00 
    1ef2:	48 89 e5             	mov    %rsp,%rbp
    1ef5:	74 0c                	je     1f03 <__do_global_dtors_aux+0x23>
    1ef7:	48 8b 3d 0a b1 21 00 	mov    0x21b10a(%rip),%rdi        # 21d008 <__dso_handle>
    1efe:	e8 bd fb ff ff       	callq  1ac0 <__cxa_finalize@plt>
    1f03:	e8 68 ff ff ff       	callq  1e70 <deregister_tm_clones>
    1f08:	c6 05 59 b1 21 00 01 	movb   $0x1,0x21b159(%rip)        # 21d068 <completed.8086>
    1f0f:	5d                   	pop    %rbp
    1f10:	c3                   	retq   
    1f11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1f18:	c3                   	retq   
    1f19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001f20 <frame_dummy>:
    1f20:	e9 7b ff ff ff       	jmpq   1ea0 <register_tm_clones>
    1f25:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1f2c:	00 00 00 
    1f2f:	90                   	nop

0000000000001f30 <ProcessEvent>:
    1f30:	41 54                	push   %r12
    1f32:	66 0f 28 c8          	movapd %xmm0,%xmm1
    1f36:	4d 89 c4             	mov    %r8,%r12
    1f39:	55                   	push   %rbp
    1f3a:	89 fd                	mov    %edi,%ebp
    1f3c:	53                   	push   %rbx
    1f3d:	89 f3                	mov    %esi,%ebx
    1f3f:	48 83 ec 20          	sub    $0x20,%rsp
    1f43:	4d 85 c0             	test   %r8,%r8
    1f46:	74 06                	je     1f4e <ProcessEvent+0x1e>
    1f48:	f2 41 0f 11 04 24    	movsd  %xmm0,(%r12)
    1f4e:	83 fb 08             	cmp    $0x8,%ebx
    1f51:	7f 1d                	jg     1f70 <ProcessEvent+0x40>
    1f53:	83 fb 06             	cmp    $0x6,%ebx
    1f56:	0f 8f 84 00 00 00    	jg     1fe0 <ProcessEvent+0xb0>
    1f5c:	48 8d 3d d5 2a 01 00 	lea    0x12ad5(%rip),%rdi        # 14a38 <__PRETTY_FUNCTION__.5886+0x258>
    1f63:	e8 d8 f7 ff ff       	callq  1740 <puts@plt>
    1f68:	e8 43 f7 ff ff       	callq  16b0 <abort@plt>
    1f6d:	0f 1f 00             	nopl   (%rax)
    1f70:	83 fb 09             	cmp    $0x9,%ebx
    1f73:	75 e7                	jne    1f5c <ProcessEvent+0x2c>
    1f75:	bf 10 00 00 00       	mov    $0x10,%edi
    1f7a:	e8 71 14 00 00       	callq  33f0 <__wrap_malloc>
    1f7f:	48 89 c3             	mov    %rax,%rbx
    1f82:	48 85 c0             	test   %rax,%rax
    1f85:	0f 84 d0 01 00 00    	je     215b <ProcessEvent+0x22b>
    1f8b:	48 89 c7             	mov    %rax,%rdi
    1f8e:	e8 6d 57 00 00       	callq  7700 <SetState>
    1f93:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
    1f9a:	85 ed                	test   %ebp,%ebp
    1f9c:	0f 84 66 01 00 00    	je     2108 <ProcessEvent+0x1d8>
    1fa2:	66 0f ef e4          	pxor   %xmm4,%xmm4
    1fa6:	bb 05 00 00 00       	mov    $0x5,%ebx
    1fab:	f2 0f 11 64 24 08    	movsd  %xmm4,0x8(%rsp)
    1fb1:	e8 7a c8 00 00       	callq  e830 <Random>
    1fb6:	f2 0f 58 44 24 08    	addsd  0x8(%rsp),%xmm0
    1fbc:	31 c9                	xor    %ecx,%ecx
    1fbe:	31 d2                	xor    %edx,%edx
    1fc0:	be 08 00 00 00       	mov    $0x8,%esi
    1fc5:	89 ef                	mov    %ebp,%edi
    1fc7:	e8 d4 5f 00 00       	callq  7fa0 <ScheduleNewEvent>
    1fcc:	83 eb 01             	sub    $0x1,%ebx
    1fcf:	75 e0                	jne    1fb1 <ProcessEvent+0x81>
    1fd1:	48 83 c4 20          	add    $0x20,%rsp
    1fd5:	5b                   	pop    %rbx
    1fd6:	5d                   	pop    %rbp
    1fd7:	41 5c                	pop    %r12
    1fd9:	c3                   	retq   
    1fda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1fe0:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
    1fe6:	e8 45 c8 00 00       	callq  e830 <Random>
    1feb:	41 83 44 24 08 01    	addl   $0x1,0x8(%r12)
    1ff1:	48 8b 05 c8 2f 01 00 	mov    0x12fc8(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    1ff8:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1ffd:	e8 ae cc 00 00       	callq  ecb0 <Expent>
    2002:	66 0f ef db          	pxor   %xmm3,%xmm3
    2006:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
    200c:	f2 0f 58 c3          	addsd  %xmm3,%xmm0
    2010:	f2 0f 11 5c 24 08    	movsd  %xmm3,0x8(%rsp)
    2016:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    201a:	66 0f 2f c8          	comisd %xmm0,%xmm1
    201e:	0f 87 ac 00 00 00    	ja     20d0 <ProcessEvent+0x1a0>
    2024:	83 fb 08             	cmp    $0x8,%ebx
    2027:	75 a8                	jne    1fd1 <ProcessEvent+0xa1>
    2029:	31 c9                	xor    %ecx,%ecx
    202b:	31 d2                	xor    %edx,%edx
    202d:	be 08 00 00 00       	mov    $0x8,%esi
    2032:	89 ef                	mov    %ebp,%edi
    2034:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
    203a:	e8 61 5f 00 00       	callq  7fa0 <ScheduleNewEvent>
    203f:	48 8b 05 7a 2f 01 00 	mov    0x12f7a(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    2046:	66 48 0f 6e c0       	movq   %rax,%xmm0
    204b:	e8 60 cc 00 00       	callq  ecb0 <Expent>
    2050:	f2 0f 58 44 24 08    	addsd  0x8(%rsp),%xmm0
    2056:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
    205c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    2060:	66 0f 2f c8          	comisd %xmm0,%xmm1
    2064:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    206a:	0f 87 d0 00 00 00    	ja     2140 <ProcessEvent+0x210>
    2070:	bf ea 03 00 00       	mov    $0x3ea,%edi
    2075:	e8 a6 a0 00 00       	callq  c120 <FindReceiver>
    207a:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    2080:	31 c9                	xor    %ecx,%ecx
    2082:	31 d2                	xor    %edx,%edx
    2084:	89 c7                	mov    %eax,%edi
    2086:	be 07 00 00 00       	mov    $0x7,%esi
    208b:	e8 10 5f 00 00       	callq  7fa0 <ScheduleNewEvent>
    2090:	e8 9b c7 00 00       	callq  e830 <Random>
    2095:	f2 0f 10 0d 2b 2f 01 	movsd  0x12f2b(%rip),%xmm1        # 14fc8 <__PRETTY_FUNCTION__.5886+0x7e8>
    209c:	00 
    209d:	66 0f 2f c8          	comisd %xmm0,%xmm1
    20a1:	0f 86 2a ff ff ff    	jbe    1fd1 <ProcessEvent+0xa1>
    20a7:	bf ea 03 00 00       	mov    $0x3ea,%edi
    20ac:	e8 6f a0 00 00       	callq  c120 <FindReceiver>
    20b1:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    20b7:	31 c9                	xor    %ecx,%ecx
    20b9:	31 d2                	xor    %edx,%edx
    20bb:	48 83 c4 20          	add    $0x20,%rsp
    20bf:	89 c7                	mov    %eax,%edi
    20c1:	be 07 00 00 00       	mov    $0x7,%esi
    20c6:	5b                   	pop    %rbx
    20c7:	5d                   	pop    %rbp
    20c8:	41 5c                	pop    %r12
    20ca:	e9 d1 5e 00 00       	jmpq   7fa0 <ScheduleNewEvent>
    20cf:	90                   	nop
    20d0:	bf 01 00 00 00       	mov    $0x1,%edi
    20d5:	48 8d 35 2c 29 01 00 	lea    0x1292c(%rip),%rsi        # 14a08 <__PRETTY_FUNCTION__.5886+0x228>
    20dc:	b8 02 00 00 00       	mov    $0x2,%eax
    20e1:	f2 0f 11 4c 24 18    	movsd  %xmm1,0x18(%rsp)
    20e7:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    20ed:	e8 7e f8 ff ff       	callq  1970 <__printf_chk@plt>
    20f2:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
    20f8:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    20fe:	e9 21 ff ff ff       	jmpq   2024 <ProcessEvent+0xf4>
    2103:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2108:	66 0f ef c0          	pxor   %xmm0,%xmm0
    210c:	41 b8 88 13 00 00    	mov    $0x1388,%r8d
    2112:	b9 01 00 00 00       	mov    $0x1,%ecx
    2117:	ba 64 00 00 00       	mov    $0x64,%edx
    211c:	48 8d 35 65 28 01 00 	lea    0x12865(%rip),%rsi        # 14988 <__PRETTY_FUNCTION__.5886+0x1a8>
    2123:	bf 01 00 00 00       	mov    $0x1,%edi
    2128:	b8 01 00 00 00       	mov    $0x1,%eax
    212d:	e8 3e f8 ff ff       	callq  1970 <__printf_chk@plt>
    2132:	e9 6b fe ff ff       	jmpq   1fa2 <ProcessEvent+0x72>
    2137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    213e:	00 00 
    2140:	48 8d 35 c1 28 01 00 	lea    0x128c1(%rip),%rsi        # 14a08 <__PRETTY_FUNCTION__.5886+0x228>
    2147:	bf 01 00 00 00       	mov    $0x1,%edi
    214c:	b8 02 00 00 00       	mov    $0x2,%eax
    2151:	e8 1a f8 ff ff       	callq  1970 <__printf_chk@plt>
    2156:	e9 15 ff ff ff       	jmpq   2070 <ProcessEvent+0x140>
    215b:	48 8d 3d 91 26 01 00 	lea    0x12691(%rip),%rdi        # 147f3 <__PRETTY_FUNCTION__.5886+0x13>
    2162:	e8 d9 f5 ff ff       	callq  1740 <puts@plt>
    2167:	83 cf ff             	or     $0xffffffff,%edi
    216a:	e8 d1 f8 ff ff       	callq  1a40 <exit@plt>
    216f:	90                   	nop

0000000000002170 <OnGVT>:
    2170:	81 7e 08 87 13 00 00 	cmpl   $0x1387,0x8(%rsi)
    2177:	0f 97 c0             	seta   %al
    217a:	c3                   	retq   
    217b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002180 <write_model_parameters_and_separator>:
    2180:	48 83 ec 10          	sub    $0x10,%rsp
    2184:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    218a:	31 c0                	xor    %eax,%eax
    218c:	41 b8 64 00 00 00    	mov    $0x64,%r8d
    2192:	56                   	push   %rsi
    2193:	48 8d 0d 67 26 01 00 	lea    0x12667(%rip),%rcx        # 14801 <__PRETTY_FUNCTION__.5886+0x21>
    219a:	48 8d 15 e7 28 01 00 	lea    0x128e7(%rip),%rdx        # 14a88 <__PRETTY_FUNCTION__.5886+0x2a8>
    21a1:	be 01 00 00 00       	mov    $0x1,%esi
    21a6:	e8 b5 f8 ff ff       	callq  1a60 <__fprintf_chk@plt>
    21ab:	48 83 c4 18          	add    $0x18,%rsp
    21af:	c3                   	retq   

00000000000021b0 <allocate_pages>:
    21b0:	c1 e7 0c             	shl    $0xc,%edi
    21b3:	48 83 ec 08          	sub    $0x8,%rsp
    21b7:	45 31 c9             	xor    %r9d,%r9d
    21ba:	45 31 c0             	xor    %r8d,%r8d
    21bd:	48 63 f7             	movslq %edi,%rsi
    21c0:	ba 03 00 00 00       	mov    $0x3,%edx
    21c5:	31 ff                	xor    %edi,%edi
    21c7:	b9 22 00 00 00       	mov    $0x22,%ecx
    21cc:	e8 df f5 ff ff       	callq  17b0 <mmap@plt>
    21d1:	ba 00 00 00 00       	mov    $0x0,%edx
    21d6:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    21da:	48 0f 44 c2          	cmove  %rdx,%rax
    21de:	48 83 c4 08          	add    $0x8,%rsp
    21e2:	c3                   	retq   
    21e3:	0f 1f 00             	nopl   (%rax)
    21e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    21ed:	00 00 00 

00000000000021f0 <audit>:
    21f0:	48 83 ec 08          	sub    $0x8,%rsp
    21f4:	48 8d 15 85 2f 32 00 	lea    0x322f85(%rip),%rdx        # 325180 <maps>
    21fb:	48 8d 35 05 26 01 00 	lea    0x12605(%rip),%rsi        # 14807 <__PRETTY_FUNCTION__.5886+0x27>
    2202:	31 c0                	xor    %eax,%eax
    2204:	bf 01 00 00 00       	mov    $0x1,%edi
    2209:	e8 62 f7 ff ff       	callq  1970 <__printf_chk@plt>
    220e:	b9 00 10 00 00       	mov    $0x1000,%ecx
    2213:	31 c0                	xor    %eax,%eax
    2215:	48 83 c4 08          	add    $0x8,%rsp
    2219:	41 b8 10 00 00 00    	mov    $0x10,%r8d
    221f:	ba 00 50 00 00       	mov    $0x5000,%edx
    2224:	bf 01 00 00 00       	mov    $0x1,%edi
    2229:	48 8d 35 80 28 01 00 	lea    0x12880(%rip),%rsi        # 14ab0 <__PRETTY_FUNCTION__.5886+0x2d0>
    2230:	e9 3b f7 ff ff       	jmpq   1970 <__printf_chk@plt>
    2235:	90                   	nop
    2236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    223d:	00 00 00 

0000000000002240 <audit_map>:
    2240:	3b 3d ca ad 21 00    	cmp    0x21adca(%rip),%edi        # 21d010 <handled_sobjs>
    2246:	7d 78                	jge    22c0 <audit_map+0x80>
    2248:	41 55                	push   %r13
    224a:	89 ff                	mov    %edi,%edi
    224c:	4c 8d 2d 2d 2f 32 00 	lea    0x322f2d(%rip),%r13        # 325180 <maps>
    2253:	41 54                	push   %r12
    2255:	48 8d 04 ff          	lea    (%rdi,%rdi,8),%rax
    2259:	55                   	push   %rbp
    225a:	4c 8d 24 c5 00 00 00 	lea    0x0(,%rax,8),%r12
    2261:	00 
    2262:	53                   	push   %rbx
    2263:	31 db                	xor    %ebx,%ebx
    2265:	48 83 ec 08          	sub    $0x8,%rsp
    2269:	41 8b 44 c5 0c       	mov    0xc(%r13,%rax,8),%eax
    226e:	85 c0                	test   %eax,%eax
    2270:	7e 3b                	jle    22ad <audit_map+0x6d>
    2272:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2278:	48 89 d9             	mov    %rbx,%rcx
    227b:	4b 8d 6c 25 00       	lea    0x0(%r13,%r12,1),%rbp
    2280:	89 da                	mov    %ebx,%edx
    2282:	bf 01 00 00 00       	mov    $0x1,%edi
    2287:	48 c1 e1 04          	shl    $0x4,%rcx
    228b:	48 03 4d 00          	add    0x0(%rbp),%rcx
    228f:	31 c0                	xor    %eax,%eax
    2291:	48 83 c3 01          	add    $0x1,%rbx
    2295:	44 8b 49 08          	mov    0x8(%rcx),%r9d
    2299:	4c 8b 01             	mov    (%rcx),%r8
    229c:	48 8d 35 55 28 01 00 	lea    0x12855(%rip),%rsi        # 14af8 <__PRETTY_FUNCTION__.5886+0x318>
    22a3:	e8 c8 f6 ff ff       	callq  1970 <__printf_chk@plt>
    22a8:	39 5d 0c             	cmp    %ebx,0xc(%rbp)
    22ab:	7f cb                	jg     2278 <audit_map+0x38>
    22ad:	48 83 c4 08          	add    $0x8,%rsp
    22b1:	5b                   	pop    %rbx
    22b2:	5d                   	pop    %rbp
    22b3:	41 5c                	pop    %r12
    22b5:	41 5d                	pop    %r13
    22b7:	c3                   	retq   
    22b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    22bf:	00 
    22c0:	48 8d 3d 5d 25 01 00 	lea    0x1255d(%rip),%rdi        # 14824 <__PRETTY_FUNCTION__.5886+0x44>
    22c7:	e9 74 f4 ff ff       	jmpq   1740 <puts@plt>
    22cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000022d0 <allocate_segment>:
    22d0:	3b 3d 3a ad 21 00    	cmp    0x21ad3a(%rip),%edi        # 21d010 <handled_sobjs>
    22d6:	0f 8d e4 00 00 00    	jge    23c0 <allocate_segment+0xf0>
    22dc:	48 85 f6             	test   %rsi,%rsi
    22df:	0f 84 db 00 00 00    	je     23c0 <allocate_segment+0xf0>
    22e5:	41 55                	push   %r13
    22e7:	41 54                	push   %r12
    22e9:	55                   	push   %rbp
    22ea:	48 89 f5             	mov    %rsi,%rbp
    22ed:	81 e6 ff 0f 00 00    	and    $0xfff,%esi
    22f3:	53                   	push   %rbx
    22f4:	48 c1 ed 0c          	shr    $0xc,%rbp
    22f8:	89 fb                	mov    %edi,%ebx
    22fa:	48 83 ec 08          	sub    $0x8,%rsp
    22fe:	48 83 fe 01          	cmp    $0x1,%rsi
    2302:	83 dd ff             	sbb    $0xffffffff,%ebp
    2305:	85 ff                	test   %edi,%edi
    2307:	0f 88 9c 00 00 00    	js     23a9 <allocate_segment+0xd9>
    230d:	81 fd 00 40 00 00    	cmp    $0x4000,%ebp
    2313:	0f 8f 90 00 00 00    	jg     23a9 <allocate_segment+0xd9>
    2319:	48 63 c7             	movslq %edi,%rax
    231c:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    2320:	48 8d 05 59 2e 32 00 	lea    0x322e59(%rip),%rax        # 325180 <maps>
    2327:	4c 8d 24 d0          	lea    (%rax,%rdx,8),%r12
    232b:	41 8b 44 24 0c       	mov    0xc(%r12),%eax
    2330:	41 3b 44 24 08       	cmp    0x8(%r12),%eax
    2335:	7d 72                	jge    23a9 <allocate_segment+0xd9>
    2337:	83 c0 01             	add    $0x1,%eax
    233a:	49 8b 14 24          	mov    (%r12),%rdx
    233e:	41 89 44 24 0c       	mov    %eax,0xc(%r12)
    2343:	48 98                	cltq   
    2345:	48 c1 e0 04          	shl    $0x4,%rax
    2349:	4c 8d 6c 02 f0       	lea    -0x10(%rdx,%rax,1),%r13
    234e:	4d 85 ed             	test   %r13,%r13
    2351:	74 56                	je     23a9 <allocate_segment+0xd9>
    2353:	89 ee                	mov    %ebp,%esi
    2355:	45 31 c9             	xor    %r9d,%r9d
    2358:	45 31 c0             	xor    %r8d,%r8d
    235b:	31 ff                	xor    %edi,%edi
    235d:	c1 e6 0c             	shl    $0xc,%esi
    2360:	b9 22 00 00 00       	mov    $0x22,%ecx
    2365:	ba 03 00 00 00       	mov    $0x3,%edx
    236a:	48 63 f6             	movslq %esi,%rsi
    236d:	e8 3e f4 ff ff       	callq  17b0 <mmap@plt>
    2372:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    2376:	74 18                	je     2390 <allocate_segment+0xc0>
    2378:	49 89 45 00          	mov    %rax,0x0(%r13)
    237c:	41 89 6d 08          	mov    %ebp,0x8(%r13)
    2380:	48 83 c4 08          	add    $0x8,%rsp
    2384:	5b                   	pop    %rbx
    2385:	5d                   	pop    %rbp
    2386:	41 5c                	pop    %r12
    2388:	41 5d                	pop    %r13
    238a:	c3                   	retq   
    238b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2390:	3b 1d 7a ac 21 00    	cmp    0x21ac7a(%rip),%ebx        # 21d010 <handled_sobjs>
    2396:	7d 11                	jge    23a9 <allocate_segment+0xd9>
    2398:	41 8b 44 24 0c       	mov    0xc(%r12),%eax
    239d:	85 c0                	test   %eax,%eax
    239f:	7e 08                	jle    23a9 <allocate_segment+0xd9>
    23a1:	83 e8 01             	sub    $0x1,%eax
    23a4:	41 89 44 24 0c       	mov    %eax,0xc(%r12)
    23a9:	48 83 c4 08          	add    $0x8,%rsp
    23ad:	31 c0                	xor    %eax,%eax
    23af:	5b                   	pop    %rbx
    23b0:	5d                   	pop    %rbp
    23b1:	41 5c                	pop    %r12
    23b3:	41 5d                	pop    %r13
    23b5:	c3                   	retq   
    23b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    23bd:	00 00 00 
    23c0:	31 c0                	xor    %eax,%eax
    23c2:	c3                   	retq   
    23c3:	0f 1f 00             	nopl   (%rax)
    23c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    23cd:	00 00 00 

00000000000023d0 <allocate_page>:
    23d0:	48 83 ec 08          	sub    $0x8,%rsp
    23d4:	45 31 c9             	xor    %r9d,%r9d
    23d7:	45 31 c0             	xor    %r8d,%r8d
    23da:	ba 03 00 00 00       	mov    $0x3,%edx
    23df:	31 ff                	xor    %edi,%edi
    23e1:	b9 22 00 00 00       	mov    $0x22,%ecx
    23e6:	be 00 10 00 00       	mov    $0x1000,%esi
    23eb:	e8 c0 f3 ff ff       	callq  17b0 <mmap@plt>
    23f0:	ba 00 00 00 00       	mov    $0x0,%edx
    23f5:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    23f9:	48 0f 44 c2          	cmove  %rdx,%rax
    23fd:	48 83 c4 08          	add    $0x8,%rsp
    2401:	c3                   	retq   
    2402:	0f 1f 40 00          	nopl   0x0(%rax)
    2406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    240d:	00 00 00 

0000000000002410 <allocate_mdt>:
    2410:	48 83 ec 08          	sub    $0x8,%rsp
    2414:	45 31 c9             	xor    %r9d,%r9d
    2417:	45 31 c0             	xor    %r8d,%r8d
    241a:	ba 03 00 00 00       	mov    $0x3,%edx
    241f:	31 ff                	xor    %edi,%edi
    2421:	b9 22 00 00 00       	mov    $0x22,%ecx
    2426:	be 00 00 05 00       	mov    $0x50000,%esi
    242b:	e8 80 f3 ff ff       	callq  17b0 <mmap@plt>
    2430:	ba 00 00 00 00       	mov    $0x0,%edx
    2435:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    2439:	48 0f 44 c2          	cmove  %rdx,%rax
    243d:	48 83 c4 08          	add    $0x8,%rsp
    2441:	c3                   	retq   
    2442:	0f 1f 40 00          	nopl   0x0(%rax)
    2446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    244d:	00 00 00 

0000000000002450 <get_new_mdt_entry>:
    2450:	85 ff                	test   %edi,%edi
    2452:	78 3c                	js     2490 <get_new_mdt_entry+0x40>
    2454:	39 3d b6 ab 21 00    	cmp    %edi,0x21abb6(%rip)        # 21d010 <handled_sobjs>
    245a:	7e 34                	jle    2490 <get_new_mdt_entry+0x40>
    245c:	48 63 ff             	movslq %edi,%rdi
    245f:	48 8d 05 1a 2d 32 00 	lea    0x322d1a(%rip),%rax        # 325180 <maps>
    2466:	48 8d 14 ff          	lea    (%rdi,%rdi,8),%rdx
    246a:	48 8d 14 d0          	lea    (%rax,%rdx,8),%rdx
    246e:	8b 42 0c             	mov    0xc(%rdx),%eax
    2471:	3b 42 08             	cmp    0x8(%rdx),%eax
    2474:	7d 1a                	jge    2490 <get_new_mdt_entry+0x40>
    2476:	83 c0 01             	add    $0x1,%eax
    2479:	89 42 0c             	mov    %eax,0xc(%rdx)
    247c:	48 8b 12             	mov    (%rdx),%rdx
    247f:	48 98                	cltq   
    2481:	48 c1 e0 04          	shl    $0x4,%rax
    2485:	48 8d 44 02 f0       	lea    -0x10(%rdx,%rax,1),%rax
    248a:	c3                   	retq   
    248b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2490:	31 c0                	xor    %eax,%eax
    2492:	c3                   	retq   
    2493:	0f 1f 00             	nopl   (%rax)
    2496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    249d:	00 00 00 

00000000000024a0 <release_mdt_entry>:
    24a0:	85 ff                	test   %edi,%edi
    24a2:	78 2c                	js     24d0 <release_mdt_entry+0x30>
    24a4:	39 3d 66 ab 21 00    	cmp    %edi,0x21ab66(%rip)        # 21d010 <handled_sobjs>
    24aa:	7e 24                	jle    24d0 <release_mdt_entry+0x30>
    24ac:	48 63 ff             	movslq %edi,%rdi
    24af:	48 8d 05 ca 2c 32 00 	lea    0x322cca(%rip),%rax        # 325180 <maps>
    24b6:	48 8d 14 ff          	lea    (%rdi,%rdi,8),%rdx
    24ba:	48 8d 14 d0          	lea    (%rax,%rdx,8),%rdx
    24be:	8b 42 0c             	mov    0xc(%rdx),%eax
    24c1:	85 c0                	test   %eax,%eax
    24c3:	7e 0b                	jle    24d0 <release_mdt_entry+0x30>
    24c5:	83 e8 01             	sub    $0x1,%eax
    24c8:	89 42 0c             	mov    %eax,0xc(%rdx)
    24cb:	31 c0                	xor    %eax,%eax
    24cd:	c3                   	retq   
    24ce:	66 90                	xchg   %ax,%ax
    24d0:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    24d5:	c3                   	retq   
    24d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    24dd:	00 00 00 

00000000000024e0 <pool_get_memory>:
    24e0:	3b 3d 2a ab 21 00    	cmp    0x21ab2a(%rip),%edi        # 21d010 <handled_sobjs>
    24e6:	0f 8d e4 00 00 00    	jge    25d0 <pool_get_memory+0xf0>
    24ec:	48 85 f6             	test   %rsi,%rsi
    24ef:	0f 84 db 00 00 00    	je     25d0 <pool_get_memory+0xf0>
    24f5:	41 55                	push   %r13
    24f7:	41 54                	push   %r12
    24f9:	55                   	push   %rbp
    24fa:	48 89 f5             	mov    %rsi,%rbp
    24fd:	81 e6 ff 0f 00 00    	and    $0xfff,%esi
    2503:	53                   	push   %rbx
    2504:	48 c1 ed 0c          	shr    $0xc,%rbp
    2508:	48 83 ec 08          	sub    $0x8,%rsp
    250c:	48 83 fe 01          	cmp    $0x1,%rsi
    2510:	83 dd ff             	sbb    $0xffffffff,%ebp
    2513:	81 fd 00 40 00 00    	cmp    $0x4000,%ebp
    2519:	0f 8f 9a 00 00 00    	jg     25b9 <pool_get_memory+0xd9>
    251f:	89 fb                	mov    %edi,%ebx
    2521:	85 ff                	test   %edi,%edi
    2523:	0f 88 90 00 00 00    	js     25b9 <pool_get_memory+0xd9>
    2529:	48 63 c7             	movslq %edi,%rax
    252c:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    2530:	48 8d 05 49 2c 32 00 	lea    0x322c49(%rip),%rax        # 325180 <maps>
    2537:	4c 8d 24 d0          	lea    (%rax,%rdx,8),%r12
    253b:	41 8b 44 24 0c       	mov    0xc(%r12),%eax
    2540:	41 3b 44 24 08       	cmp    0x8(%r12),%eax
    2545:	7d 72                	jge    25b9 <pool_get_memory+0xd9>
    2547:	83 c0 01             	add    $0x1,%eax
    254a:	49 8b 14 24          	mov    (%r12),%rdx
    254e:	41 89 44 24 0c       	mov    %eax,0xc(%r12)
    2553:	48 98                	cltq   
    2555:	48 c1 e0 04          	shl    $0x4,%rax
    2559:	4c 8d 6c 02 f0       	lea    -0x10(%rdx,%rax,1),%r13
    255e:	4d 85 ed             	test   %r13,%r13
    2561:	74 56                	je     25b9 <pool_get_memory+0xd9>
    2563:	89 ee                	mov    %ebp,%esi
    2565:	45 31 c9             	xor    %r9d,%r9d
    2568:	45 31 c0             	xor    %r8d,%r8d
    256b:	31 ff                	xor    %edi,%edi
    256d:	c1 e6 0c             	shl    $0xc,%esi
    2570:	b9 22 00 00 00       	mov    $0x22,%ecx
    2575:	ba 03 00 00 00       	mov    $0x3,%edx
    257a:	48 63 f6             	movslq %esi,%rsi
    257d:	e8 2e f2 ff ff       	callq  17b0 <mmap@plt>
    2582:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    2586:	74 18                	je     25a0 <pool_get_memory+0xc0>
    2588:	49 89 45 00          	mov    %rax,0x0(%r13)
    258c:	41 89 6d 08          	mov    %ebp,0x8(%r13)
    2590:	48 83 c4 08          	add    $0x8,%rsp
    2594:	5b                   	pop    %rbx
    2595:	5d                   	pop    %rbp
    2596:	41 5c                	pop    %r12
    2598:	41 5d                	pop    %r13
    259a:	c3                   	retq   
    259b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    25a0:	3b 1d 6a aa 21 00    	cmp    0x21aa6a(%rip),%ebx        # 21d010 <handled_sobjs>
    25a6:	7d 11                	jge    25b9 <pool_get_memory+0xd9>
    25a8:	41 8b 44 24 0c       	mov    0xc(%r12),%eax
    25ad:	85 c0                	test   %eax,%eax
    25af:	7e 08                	jle    25b9 <pool_get_memory+0xd9>
    25b1:	83 e8 01             	sub    $0x1,%eax
    25b4:	41 89 44 24 0c       	mov    %eax,0xc(%r12)
    25b9:	48 83 c4 08          	add    $0x8,%rsp
    25bd:	31 c0                	xor    %eax,%eax
    25bf:	5b                   	pop    %rbx
    25c0:	5d                   	pop    %rbp
    25c1:	41 5c                	pop    %r12
    25c3:	41 5d                	pop    %r13
    25c5:	c3                   	retq   
    25c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    25cd:	00 00 00 
    25d0:	31 c0                	xor    %eax,%eax
    25d2:	c3                   	retq   
    25d3:	0f 1f 00             	nopl   (%rax)
    25d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    25dd:	00 00 00 

00000000000025e0 <allocator_init>:
    25e0:	81 ff 00 08 00 00    	cmp    $0x800,%edi
    25e6:	0f 87 88 00 00 00    	ja     2674 <allocator_init+0x94>
    25ec:	89 3d 1e aa 21 00    	mov    %edi,0x21aa1e(%rip)        # 21d010 <handled_sobjs>
    25f2:	85 ff                	test   %edi,%edi
    25f4:	74 7b                	je     2671 <allocator_init+0x91>
    25f6:	55                   	push   %rbp
    25f7:	8d 47 ff             	lea    -0x1(%rdi),%eax
    25fa:	53                   	push   %rbx
    25fb:	48 8d 1d 7e 2b 32 00 	lea    0x322b7e(%rip),%rbx        # 325180 <maps>
    2602:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    2606:	48 8d 43 48          	lea    0x48(%rbx),%rax
    260a:	48 8d 2c d0          	lea    (%rax,%rdx,8),%rbp
    260e:	48 83 ec 08          	sub    $0x8,%rsp
    2612:	eb 1e                	jmp    2632 <allocator_init+0x52>
    2614:	0f 1f 40 00          	nopl   0x0(%rax)
    2618:	48 89 03             	mov    %rax,(%rbx)
    261b:	48 83 c3 48          	add    $0x48,%rbx
    261f:	c7 43 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbx)
    2626:	c7 43 c0 00 50 00 00 	movl   $0x5000,-0x40(%rbx)
    262d:	48 39 eb             	cmp    %rbp,%rbx
    2630:	74 36                	je     2668 <allocator_init+0x88>
    2632:	ba 03 00 00 00       	mov    $0x3,%edx
    2637:	45 31 c9             	xor    %r9d,%r9d
    263a:	45 31 c0             	xor    %r8d,%r8d
    263d:	b9 22 00 00 00       	mov    $0x22,%ecx
    2642:	be 00 00 05 00       	mov    $0x50000,%esi
    2647:	31 ff                	xor    %edi,%edi
    2649:	e8 62 f1 ff ff       	callq  17b0 <mmap@plt>
    264e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2652:	48 83 fa fd          	cmp    $0xfffffffffffffffd,%rdx
    2656:	76 c0                	jbe    2618 <allocator_init+0x38>
    2658:	48 83 c4 08          	add    $0x8,%rsp
    265c:	b8 9e ff ff ff       	mov    $0xffffff9e,%eax
    2661:	5b                   	pop    %rbx
    2662:	5d                   	pop    %rbp
    2663:	c3                   	retq   
    2664:	0f 1f 40 00          	nopl   0x0(%rax)
    2668:	48 83 c4 08          	add    $0x8,%rsp
    266c:	31 c0                	xor    %eax,%eax
    266e:	5b                   	pop    %rbx
    266f:	5d                   	pop    %rbp
    2670:	c3                   	retq   
    2671:	31 c0                	xor    %eax,%eax
    2673:	c3                   	retq   
    2674:	b8 9d ff ff ff       	mov    $0xffffff9d,%eax
    2679:	c3                   	retq   
    267a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002680 <dymelor_init>:
    2680:	48 83 ec 08          	sub    $0x8,%rsp
    2684:	e8 57 ff ff ff       	callq  25e0 <allocator_init>
    2689:	48 83 c4 08          	add    $0x8,%rsp
    268d:	e9 9e 0b 00 00       	jmpq   3230 <recoverable_init>
    2692:	0f 1f 40 00          	nopl   0x0(%rax)
    2696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    269d:	00 00 00 

00000000000026a0 <dymelor_fini>:
    26a0:	e9 3b 0c 00 00       	jmpq   32e0 <recoverable_fini>
    26a5:	90                   	nop
    26a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    26ad:	00 00 00 

00000000000026b0 <malloc_state_init>:
    26b0:	55                   	push   %rbp
    26b1:	48 89 f5             	mov    %rsi,%rbp
    26b4:	53                   	push   %rbx
    26b5:	89 fb                	mov    %edi,%ebx
    26b7:	bf 00 b0 00 00       	mov    $0xb000,%edi
    26bc:	48 83 ec 08          	sub    $0x8,%rsp
    26c0:	66 0f 6f 05 28 29 01 	movdqa 0x12928(%rip),%xmm0        # 14ff0 <__PRETTY_FUNCTION__.5886+0x810>
    26c7:	00 
    26c8:	c6 06 00             	movb   $0x0,(%rsi)
    26cb:	f2 0f 10 0d fd 28 01 	movsd  0x128fd(%rip),%xmm1        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    26d2:	00 
    26d3:	0f 11 46 28          	movups %xmm0,0x28(%rsi)
    26d7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    26db:	0f 11 46 08          	movups %xmm0,0x8(%rsi)
    26df:	0f 11 46 18          	movups %xmm0,0x18(%rsi)
    26e3:	f2 0f 11 4e 38       	movsd  %xmm1,0x38(%rsi)
    26e8:	e8 63 35 00 00       	callq  5c50 <rsalloc>
    26ed:	48 8b 15 dc 28 01 00 	mov    0x128dc(%rip),%rdx        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    26f4:	48 85 c0             	test   %rax,%rax
    26f7:	48 89 45 40          	mov    %rax,0x40(%rbp)
    26fb:	0f 84 3f 04 00 00    	je     2b40 <malloc_state_init+0x490>
    2701:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    2706:	66 0f 6f 15 f2 28 01 	movdqa 0x128f2(%rip),%xmm2        # 15000 <__PRETTY_FUNCTION__.5886+0x820>
    270d:	00 
    270e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2712:	88 18                	mov    %bl,(%rax)
    2714:	88 58 58             	mov    %bl,0x58(%rax)
    2717:	88 98 b0 00 00 00    	mov    %bl,0xb0(%rax)
    271d:	88 98 08 01 00 00    	mov    %bl,0x108(%rax)
    2723:	48 c7 40 08 82 00 00 	movq   $0x82,0x8(%rax)
    272a:	00 
    272b:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    2732:	00 
    2733:	48 c7 40 50 ff ff ff 	movq   $0xffffffffffffffff,0x50(%rax)
    273a:	ff 
    273b:	48 c7 40 60 02 01 00 	movq   $0x102,0x60(%rax)
    2742:	00 
    2743:	48 c7 40 78 01 00 00 	movq   $0x1,0x78(%rax)
    274a:	00 
    274b:	48 c7 80 a8 00 00 00 	movq   $0xffffffffffffffff,0xa8(%rax)
    2752:	ff ff ff ff 
    2756:	48 c7 80 b8 00 00 00 	movq   $0x202,0xb8(%rax)
    275d:	02 02 00 00 
    2761:	48 c7 80 d0 00 00 00 	movq   $0x2,0xd0(%rax)
    2768:	02 00 00 00 
    276c:	48 c7 80 00 01 00 00 	movq   $0xffffffffffffffff,0x100(%rax)
    2773:	ff ff ff ff 
    2777:	48 c7 80 10 01 00 00 	movq   $0x402,0x110(%rax)
    277e:	02 04 00 00 
    2782:	48 c7 80 28 01 00 00 	movq   $0x3,0x128(%rax)
    2789:	03 00 00 00 
    278d:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    2791:	f2 0f 11 48 28       	movsd  %xmm1,0x28(%rax)
    2796:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    279a:	0f 11 40 40          	movups %xmm0,0x40(%rax)
    279e:	0f 11 50 68          	movups %xmm2,0x68(%rax)
    27a2:	f2 0f 11 88 80 00 00 	movsd  %xmm1,0x80(%rax)
    27a9:	00 
    27aa:	0f 11 80 88 00 00 00 	movups %xmm0,0x88(%rax)
    27b1:	0f 11 80 98 00 00 00 	movups %xmm0,0x98(%rax)
    27b8:	0f 11 90 c0 00 00 00 	movups %xmm2,0xc0(%rax)
    27bf:	f2 0f 11 88 d8 00 00 	movsd  %xmm1,0xd8(%rax)
    27c6:	00 
    27c7:	0f 11 80 e0 00 00 00 	movups %xmm0,0xe0(%rax)
    27ce:	0f 11 80 f0 00 00 00 	movups %xmm0,0xf0(%rax)
    27d5:	0f 11 90 18 01 00 00 	movups %xmm2,0x118(%rax)
    27dc:	f2 0f 11 88 30 01 00 	movsd  %xmm1,0x130(%rax)
    27e3:	00 
    27e4:	0f 11 80 38 01 00 00 	movups %xmm0,0x138(%rax)
    27eb:	0f 11 80 48 01 00 00 	movups %xmm0,0x148(%rax)
    27f2:	48 c7 80 58 01 00 00 	movq   $0xffffffffffffffff,0x158(%rax)
    27f9:	ff ff ff ff 
    27fd:	88 98 60 01 00 00    	mov    %bl,0x160(%rax)
    2803:	88 98 b8 01 00 00    	mov    %bl,0x1b8(%rax)
    2809:	88 98 10 02 00 00    	mov    %bl,0x210(%rax)
    280f:	88 98 68 02 00 00    	mov    %bl,0x268(%rax)
    2815:	48 c7 80 68 01 00 00 	movq   $0x802,0x168(%rax)
    281c:	02 08 00 00 
    2820:	48 c7 80 80 01 00 00 	movq   $0x4,0x180(%rax)
    2827:	04 00 00 00 
    282b:	48 c7 80 b0 01 00 00 	movq   $0xffffffffffffffff,0x1b0(%rax)
    2832:	ff ff ff ff 
    2836:	48 c7 80 c0 01 00 00 	movq   $0x1002,0x1c0(%rax)
    283d:	02 10 00 00 
    2841:	48 c7 80 d8 01 00 00 	movq   $0x5,0x1d8(%rax)
    2848:	05 00 00 00 
    284c:	48 c7 80 08 02 00 00 	movq   $0xffffffffffffffff,0x208(%rax)
    2853:	ff ff ff ff 
    2857:	48 c7 80 18 02 00 00 	movq   $0x2002,0x218(%rax)
    285e:	02 20 00 00 
    2862:	48 c7 80 30 02 00 00 	movq   $0x6,0x230(%rax)
    2869:	06 00 00 00 
    286d:	48 c7 80 60 02 00 00 	movq   $0xffffffffffffffff,0x260(%rax)
    2874:	ff ff ff ff 
    2878:	48 c7 80 70 02 00 00 	movq   $0x4002,0x270(%rax)
    287f:	02 40 00 00 
    2883:	48 c7 80 88 02 00 00 	movq   $0x7,0x288(%rax)
    288a:	07 00 00 00 
    288e:	48 c7 80 b8 02 00 00 	movq   $0xffffffffffffffff,0x2b8(%rax)
    2895:	ff ff ff ff 
    2899:	0f 11 90 70 01 00 00 	movups %xmm2,0x170(%rax)
    28a0:	f2 0f 11 88 88 01 00 	movsd  %xmm1,0x188(%rax)
    28a7:	00 
    28a8:	0f 11 80 90 01 00 00 	movups %xmm0,0x190(%rax)
    28af:	0f 11 80 a0 01 00 00 	movups %xmm0,0x1a0(%rax)
    28b6:	0f 11 90 c8 01 00 00 	movups %xmm2,0x1c8(%rax)
    28bd:	f2 0f 11 88 e0 01 00 	movsd  %xmm1,0x1e0(%rax)
    28c4:	00 
    28c5:	0f 11 80 e8 01 00 00 	movups %xmm0,0x1e8(%rax)
    28cc:	0f 11 80 f8 01 00 00 	movups %xmm0,0x1f8(%rax)
    28d3:	0f 11 90 20 02 00 00 	movups %xmm2,0x220(%rax)
    28da:	f2 0f 11 88 38 02 00 	movsd  %xmm1,0x238(%rax)
    28e1:	00 
    28e2:	0f 11 80 40 02 00 00 	movups %xmm0,0x240(%rax)
    28e9:	0f 11 80 50 02 00 00 	movups %xmm0,0x250(%rax)
    28f0:	0f 11 90 78 02 00 00 	movups %xmm2,0x278(%rax)
    28f7:	f2 0f 11 88 90 02 00 	movsd  %xmm1,0x290(%rax)
    28fe:	00 
    28ff:	0f 11 80 98 02 00 00 	movups %xmm0,0x298(%rax)
    2906:	0f 11 80 a8 02 00 00 	movups %xmm0,0x2a8(%rax)
    290d:	88 98 c0 02 00 00    	mov    %bl,0x2c0(%rax)
    2913:	88 98 18 03 00 00    	mov    %bl,0x318(%rax)
    2919:	88 98 70 03 00 00    	mov    %bl,0x370(%rax)
    291f:	88 98 c8 03 00 00    	mov    %bl,0x3c8(%rax)
    2925:	88 98 20 04 00 00    	mov    %bl,0x420(%rax)
    292b:	48 c7 80 c8 02 00 00 	movq   $0x8002,0x2c8(%rax)
    2932:	02 80 00 00 
    2936:	48 c7 80 e0 02 00 00 	movq   $0x8,0x2e0(%rax)
    293d:	08 00 00 00 
    2941:	48 c7 80 10 03 00 00 	movq   $0xffffffffffffffff,0x310(%rax)
    2948:	ff ff ff ff 
    294c:	48 c7 80 20 03 00 00 	movq   $0x10002,0x320(%rax)
    2953:	02 00 01 00 
    2957:	48 c7 80 38 03 00 00 	movq   $0x9,0x338(%rax)
    295e:	09 00 00 00 
    2962:	48 c7 80 68 03 00 00 	movq   $0xffffffffffffffff,0x368(%rax)
    2969:	ff ff ff ff 
    296d:	48 c7 80 78 03 00 00 	movq   $0x20002,0x378(%rax)
    2974:	02 00 02 00 
    2978:	48 c7 80 90 03 00 00 	movq   $0xa,0x390(%rax)
    297f:	0a 00 00 00 
    2983:	48 c7 80 c0 03 00 00 	movq   $0xffffffffffffffff,0x3c0(%rax)
    298a:	ff ff ff ff 
    298e:	48 c7 80 d0 03 00 00 	movq   $0x40002,0x3d0(%rax)
    2995:	02 00 04 00 
    2999:	48 c7 80 e8 03 00 00 	movq   $0xb,0x3e8(%rax)
    29a0:	0b 00 00 00 
    29a4:	48 c7 80 18 04 00 00 	movq   $0xffffffffffffffff,0x418(%rax)
    29ab:	ff ff ff ff 
    29af:	0f 11 90 d0 02 00 00 	movups %xmm2,0x2d0(%rax)
    29b6:	f2 0f 11 88 e8 02 00 	movsd  %xmm1,0x2e8(%rax)
    29bd:	00 
    29be:	0f 11 80 f0 02 00 00 	movups %xmm0,0x2f0(%rax)
    29c5:	0f 11 80 00 03 00 00 	movups %xmm0,0x300(%rax)
    29cc:	0f 11 90 28 03 00 00 	movups %xmm2,0x328(%rax)
    29d3:	f2 0f 11 88 40 03 00 	movsd  %xmm1,0x340(%rax)
    29da:	00 
    29db:	0f 11 80 48 03 00 00 	movups %xmm0,0x348(%rax)
    29e2:	0f 11 80 58 03 00 00 	movups %xmm0,0x358(%rax)
    29e9:	0f 11 90 80 03 00 00 	movups %xmm2,0x380(%rax)
    29f0:	f2 0f 11 88 98 03 00 	movsd  %xmm1,0x398(%rax)
    29f7:	00 
    29f8:	0f 11 80 a0 03 00 00 	movups %xmm0,0x3a0(%rax)
    29ff:	0f 11 80 b0 03 00 00 	movups %xmm0,0x3b0(%rax)
    2a06:	0f 11 90 d8 03 00 00 	movups %xmm2,0x3d8(%rax)
    2a0d:	f2 0f 11 88 f0 03 00 	movsd  %xmm1,0x3f0(%rax)
    2a14:	00 
    2a15:	0f 11 80 f8 03 00 00 	movups %xmm0,0x3f8(%rax)
    2a1c:	0f 11 80 08 04 00 00 	movups %xmm0,0x408(%rax)
    2a23:	48 c7 80 28 04 00 00 	movq   $0x80002,0x428(%rax)
    2a2a:	02 00 08 00 
    2a2e:	48 c7 80 40 04 00 00 	movq   $0xc,0x440(%rax)
    2a35:	0c 00 00 00 
    2a39:	48 c7 80 70 04 00 00 	movq   $0xffffffffffffffff,0x470(%rax)
    2a40:	ff ff ff ff 
    2a44:	88 98 78 04 00 00    	mov    %bl,0x478(%rax)
    2a4a:	48 c7 80 80 04 00 00 	movq   $0x100002,0x480(%rax)
    2a51:	02 00 10 00 
    2a55:	48 c7 80 98 04 00 00 	movq   $0xd,0x498(%rax)
    2a5c:	0d 00 00 00 
    2a60:	48 c7 80 c8 04 00 00 	movq   $0xffffffffffffffff,0x4c8(%rax)
    2a67:	ff ff ff ff 
    2a6b:	88 98 d0 04 00 00    	mov    %bl,0x4d0(%rax)
    2a71:	c7 80 f4 04 00 00 00 	movl   $0x0,0x4f4(%rax)
    2a78:	00 00 00 
    2a7b:	48 c7 80 20 05 00 00 	movq   $0xffffffffffffffff,0x520(%rax)
    2a82:	ff ff ff ff 
    2a86:	48 c7 80 d8 04 00 00 	movq   $0x200002,0x4d8(%rax)
    2a8d:	02 00 20 00 
    2a91:	c7 80 f0 04 00 00 0e 	movl   $0xe,0x4f0(%rax)
    2a98:	00 00 00 
    2a9b:	88 98 28 05 00 00    	mov    %bl,0x528(%rax)
    2aa1:	48 c7 80 30 05 00 00 	movq   $0x400002,0x530(%rax)
    2aa8:	02 00 40 00 
    2aac:	48 c7 80 48 05 00 00 	movq   $0xf,0x548(%rax)
    2ab3:	0f 00 00 00 
    2ab7:	48 c7 80 78 05 00 00 	movq   $0xffffffffffffffff,0x578(%rax)
    2abe:	ff ff ff ff 
    2ac2:	0f 11 90 30 04 00 00 	movups %xmm2,0x430(%rax)
    2ac9:	f2 0f 11 88 48 04 00 	movsd  %xmm1,0x448(%rax)
    2ad0:	00 
    2ad1:	0f 11 80 50 04 00 00 	movups %xmm0,0x450(%rax)
    2ad8:	0f 11 80 60 04 00 00 	movups %xmm0,0x460(%rax)
    2adf:	0f 11 90 88 04 00 00 	movups %xmm2,0x488(%rax)
    2ae6:	f2 0f 11 88 a0 04 00 	movsd  %xmm1,0x4a0(%rax)
    2aed:	00 
    2aee:	0f 11 80 a8 04 00 00 	movups %xmm0,0x4a8(%rax)
    2af5:	0f 11 80 b8 04 00 00 	movups %xmm0,0x4b8(%rax)
    2afc:	0f 11 90 e0 04 00 00 	movups %xmm2,0x4e0(%rax)
    2b03:	f2 0f 11 88 f8 04 00 	movsd  %xmm1,0x4f8(%rax)
    2b0a:	00 
    2b0b:	0f 11 80 00 05 00 00 	movups %xmm0,0x500(%rax)
    2b12:	0f 11 80 10 05 00 00 	movups %xmm0,0x510(%rax)
    2b19:	0f 11 90 38 05 00 00 	movups %xmm2,0x538(%rax)
    2b20:	f2 0f 11 88 50 05 00 	movsd  %xmm1,0x550(%rax)
    2b27:	00 
    2b28:	0f 11 80 58 05 00 00 	movups %xmm0,0x558(%rax)
    2b2f:	0f 11 80 68 05 00 00 	movups %xmm0,0x568(%rax)
    2b36:	48 83 c4 08          	add    $0x8,%rsp
    2b3a:	5b                   	pop    %rbx
    2b3b:	5d                   	pop    %rbp
    2b3c:	c3                   	retq   
    2b3d:	0f 1f 00             	nopl   (%rax)
    2b40:	b9 84 00 00 00       	mov    $0x84,%ecx
    2b45:	48 8d 15 f6 1c 01 00 	lea    0x11cf6(%rip),%rdx        # 14842 <__PRETTY_FUNCTION__.5886+0x62>
    2b4c:	bf 01 00 00 00       	mov    $0x1,%edi
    2b51:	48 8d 35 e8 1f 01 00 	lea    0x11fe8(%rip),%rsi        # 14b40 <__PRETTY_FUNCTION__.5886+0x360>
    2b58:	e8 b3 47 00 00       	callq  7310 <rootsim_error>
    2b5d:	48 8b 0d 6c 24 01 00 	mov    0x1246c(%rip),%rcx        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    2b64:	48 8b 45 40          	mov    0x40(%rbp),%rax
    2b68:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    2b6d:	e9 94 fb ff ff       	jmpq   2706 <malloc_state_init+0x56>
    2b72:	0f 1f 40 00          	nopl   0x0(%rax)
    2b76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2b7d:	00 00 00 

0000000000002b80 <do_malloc>:
    2b80:	48 83 c2 07          	add    $0x7,%rdx
    2b84:	41 57                	push   %r15
    2b86:	b9 40 00 00 00       	mov    $0x40,%ecx
    2b8b:	b8 01 00 00 00       	mov    $0x1,%eax
    2b90:	48 0f bd d2          	bsr    %rdx,%rdx
    2b94:	41 56                	push   %r14
    2b96:	48 83 f2 3f          	xor    $0x3f,%rdx
    2b9a:	41 55                	push   %r13
    2b9c:	41 54                	push   %r12
    2b9e:	29 d1                	sub    %edx,%ecx
    2ba0:	41 bc 80 00 00 00    	mov    $0x80,%r12d
    2ba6:	55                   	push   %rbp
    2ba7:	48 d3 e0             	shl    %cl,%rax
    2baa:	53                   	push   %rbx
    2bab:	48 83 ec 18          	sub    $0x18,%rsp
    2baf:	48 3d 80 00 00 00    	cmp    $0x80,%rax
    2bb5:	4c 0f 43 e0          	cmovae %rax,%r12
    2bb9:	48 3d 00 00 40 00    	cmp    $0x400000,%rax
    2bbf:	0f 87 8b 03 00 00    	ja     2f50 <do_malloc+0x3d0>
    2bc5:	48 89 f5             	mov    %rsi,%rbp
    2bc8:	4d 85 e4             	test   %r12,%r12
    2bcb:	0f 88 57 01 00 00    	js     2d28 <do_malloc+0x1a8>
    2bd1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2bd5:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
    2bda:	e8 31 ec ff ff       	callq  1810 <log2@plt>
    2bdf:	48 8b 75 40          	mov    0x40(%rbp),%rsi
    2be3:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
    2be7:	83 e8 07             	sub    $0x7,%eax
    2bea:	48 98                	cltq   
    2bec:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
    2bf0:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    2bf4:	48 8d 1c c6          	lea    (%rsi,%rax,8),%rbx
    2bf8:	44 0f b6 3b          	movzbl (%rbx),%r15d
    2bfc:	eb 05                	jmp    2c03 <do_malloc+0x83>
    2bfe:	66 90                	xchg   %ax,%ax
    2c00:	48 89 c3             	mov    %rax,%rbx
    2c03:	8b 53 1c             	mov    0x1c(%rbx),%edx
    2c06:	39 53 10             	cmp    %edx,0x10(%rbx)
    2c09:	0f 85 41 01 00 00    	jne    2d50 <do_malloc+0x1d0>
    2c0f:	48 63 43 54          	movslq 0x54(%rbx),%rax
    2c13:	83 f8 ff             	cmp    $0xffffffff,%eax
    2c16:	74 11                	je     2c29 <do_malloc+0xa9>
    2c18:	48 8d 0c 80          	lea    (%rax,%rax,4),%rcx
    2c1c:	48 8d 04 48          	lea    (%rax,%rcx,2),%rax
    2c20:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    2c24:	48 85 c0             	test   %rax,%rax
    2c27:	75 d7                	jne    2c00 <do_malloc+0x80>
    2c29:	8b 4d 28             	mov    0x28(%rbp),%ecx
    2c2c:	3b 4d 2c             	cmp    0x2c(%rbp),%ecx
    2c2f:	0f 84 db 02 00 00    	je     2f10 <do_malloc+0x390>
    2c35:	48 63 c1             	movslq %ecx,%rax
    2c38:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2c3c:	01 d2                	add    %edx,%edx
    2c3e:	48 8d 3c 80          	lea    (%rax,%rax,4),%rdi
    2c42:	48 8d 04 78          	lea    (%rax,%rdi,2),%rax
    2c46:	48 8b 3d 83 23 01 00 	mov    0x12383(%rip),%rdi        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    2c4d:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    2c51:	4c 89 e6             	mov    %r12,%rsi
    2c54:	48 83 ce 02          	or     $0x2,%rsi
    2c58:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    2c5f:	00 
    2c60:	48 89 70 08          	mov    %rsi,0x8(%rax)
    2c64:	8d 71 01             	lea    0x1(%rcx),%esi
    2c67:	89 48 20             	mov    %ecx,0x20(%rax)
    2c6a:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    2c6e:	0f 11 40 40          	movups %xmm0,0x40(%rax)
    2c72:	44 88 38             	mov    %r15b,(%rax)
    2c75:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
    2c7c:	89 50 1c             	mov    %edx,0x1c(%rax)
    2c7f:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    2c86:	48 89 78 28          	mov    %rdi,0x28(%rax)
    2c8a:	c7 40 54 ff ff ff ff 	movl   $0xffffffff,0x54(%rax)
    2c91:	89 75 28             	mov    %esi,0x28(%rbp)
    2c94:	89 4b 54             	mov    %ecx,0x54(%rbx)
    2c97:	8b 4b 20             	mov    0x20(%rbx),%ecx
    2c9a:	48 89 c3             	mov    %rax,%rbx
    2c9d:	89 48 50             	mov    %ecx,0x50(%rax)
    2ca0:	83 fa 1f             	cmp    $0x1f,%edx
    2ca3:	0f 8e 47 02 00 00    	jle    2ef0 <do_malloc+0x370>
    2ca9:	41 89 d5             	mov    %edx,%r13d
    2cac:	41 c1 fd 05          	sar    $0x5,%r13d
    2cb0:	4d 63 ed             	movslq %r13d,%r13
    2cb3:	4a 8d 04 ed 08 00 00 	lea    0x8(,%r13,8),%rax
    2cba:	00 
    2cbb:	4e 8d 34 ad 00 00 00 	lea    0x0(,%r13,4),%r14
    2cc2:	00 
    2cc3:	49 c1 e5 03          	shl    $0x3,%r13
    2cc7:	48 63 d2             	movslq %edx,%rdx
    2cca:	49 0f af d4          	imul   %r12,%rdx
    2cce:	48 01 c2             	add    %rax,%rdx
    2cd1:	48 89 d7             	mov    %rdx,%rdi
    2cd4:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    2cd9:	e8 72 2f 00 00       	callq  5c50 <rsalloc>
    2cde:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    2ce3:	31 f6                	xor    %esi,%esi
    2ce5:	48 89 43 30          	mov    %rax,0x30(%rbx)
    2ce9:	48 89 c7             	mov    %rax,%rdi
    2cec:	e8 5f eb ff ff       	callq  1850 <memset@plt>
    2cf1:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    2cf5:	48 85 f6             	test   %rsi,%rsi
    2cf8:	0f 84 7f 02 00 00    	je     2f7d <do_malloc+0x3fd>
    2cfe:	48 83 c6 08          	add    $0x8,%rsi
    2d02:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%rbx)
    2d09:	48 89 5e f8          	mov    %rbx,-0x8(%rsi)
    2d0d:	49 01 f6             	add    %rsi,%r14
    2d10:	49 01 f5             	add    %rsi,%r13
    2d13:	48 89 73 38          	mov    %rsi,0x38(%rbx)
    2d17:	4c 89 73 40          	mov    %r14,0x40(%rbx)
    2d1b:	4c 89 6b 48          	mov    %r13,0x48(%rbx)
    2d1f:	eb 40                	jmp    2d61 <do_malloc+0x1e1>
    2d21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2d28:	4c 89 e0             	mov    %r12,%rax
    2d2b:	4c 89 e2             	mov    %r12,%rdx
    2d2e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2d32:	48 d1 e8             	shr    %rax
    2d35:	83 e2 01             	and    $0x1,%edx
    2d38:	48 09 d0             	or     %rdx,%rax
    2d3b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    2d40:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    2d44:	e9 91 fe ff ff       	jmpq   2bda <do_malloc+0x5a>
    2d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2d50:	4c 8b 6b 48          	mov    0x48(%rbx),%r13
    2d54:	4d 85 ed             	test   %r13,%r13
    2d57:	0f 84 43 ff ff ff    	je     2ca0 <do_malloc+0x120>
    2d5d:	48 8b 73 38          	mov    0x38(%rbx),%rsi
    2d61:	48 63 7b 18          	movslq 0x18(%rbx),%rdi
    2d65:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    2d6b:	48 89 f8             	mov    %rdi,%rax
    2d6e:	49 0f af fc          	imul   %r12,%rdi
    2d72:	8d 50 1f             	lea    0x1f(%rax),%edx
    2d75:	41 89 c0             	mov    %eax,%r8d
    2d78:	4c 01 ef             	add    %r13,%rdi
    2d7b:	85 c0                	test   %eax,%eax
    2d7d:	0f 49 d0             	cmovns %eax,%edx
    2d80:	41 c1 f8 1f          	sar    $0x1f,%r8d
    2d84:	41 c1 e8 1b          	shr    $0x1b,%r8d
    2d88:	42 8d 0c 00          	lea    (%rax,%r8,1),%ecx
    2d8c:	c1 fa 05             	sar    $0x5,%edx
    2d8f:	44 89 c8             	mov    %r9d,%eax
    2d92:	83 e1 1f             	and    $0x1f,%ecx
    2d95:	48 63 d2             	movslq %edx,%rdx
    2d98:	44 29 c1             	sub    %r8d,%ecx
    2d9b:	d3 e0                	shl    %cl,%eax
    2d9d:	09 04 96             	or     %eax,(%rsi,%rdx,4)
    2da0:	44 8b 43 1c          	mov    0x1c(%rbx),%r8d
    2da4:	44 89 ca             	mov    %r9d,%edx
    2da7:	44 89 c0             	mov    %r8d,%eax
    2daa:	c1 f8 05             	sar    $0x5,%eax
    2dad:	41 83 f8 1f          	cmp    $0x1f,%r8d
    2db1:	0f 4f d0             	cmovg  %eax,%edx
    2db4:	80 3b 00             	cmpb   $0x0,(%rbx)
    2db7:	8b 43 10             	mov    0x10(%rbx),%eax
    2dba:	74 4e                	je     2e0a <do_malloc+0x28a>
    2dbc:	85 c0                	test   %eax,%eax
    2dbe:	75 0f                	jne    2dcf <do_malloc+0x24f>
    2dc0:	48 63 ca             	movslq %edx,%rcx
    2dc3:	83 45 30 01          	addl   $0x1,0x30(%rbp)
    2dc7:	48 c1 e1 02          	shl    $0x2,%rcx
    2dcb:	48 01 4d 18          	add    %rcx,0x18(%rbp)
    2dcf:	8b 4b 24             	mov    0x24(%rbx),%ecx
    2dd2:	85 c9                	test   %ecx,%ecx
    2dd4:	75 0f                	jne    2de5 <do_malloc+0x265>
    2dd6:	48 63 d2             	movslq %edx,%rdx
    2dd9:	83 45 34 01          	addl   $0x1,0x34(%rbp)
    2ddd:	48 c1 e2 02          	shl    $0x2,%rdx
    2de1:	48 01 55 20          	add    %rdx,0x20(%rbp)
    2de5:	48 c7 c2 88 5e ff ff 	mov    $0xffffffffffff5e88,%rdx
    2dec:	c7 43 24 01 00 00 00 	movl   $0x1,0x24(%rbx)
    2df3:	64 f2 0f 10 02       	movsd  %fs:(%rdx),%xmm0
    2df8:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    2dfc:	f2 0f 11 43 28       	movsd  %xmm0,0x28(%rbx)
    2e01:	f6 c2 01             	test   $0x1,%dl
    2e04:	0f 84 96 00 00 00    	je     2ea0 <do_malloc+0x320>
    2e0a:	83 c0 01             	add    $0x1,%eax
    2e0d:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    2e13:	89 43 10             	mov    %eax,0x10(%rbx)
    2e16:	8b 43 18             	mov    0x18(%rbx),%eax
    2e19:	83 c0 01             	add    $0x1,%eax
    2e1c:	89 43 18             	mov    %eax,0x18(%rbx)
    2e1f:	41 39 c0             	cmp    %eax,%r8d
    2e22:	7f 17                	jg     2e3b <do_malloc+0x2bb>
    2e24:	eb 44                	jmp    2e6a <do_malloc+0x2ea>
    2e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2e2d:	00 00 00 
    2e30:	83 c0 01             	add    $0x1,%eax
    2e33:	89 43 18             	mov    %eax,0x18(%rbx)
    2e36:	41 39 c0             	cmp    %eax,%r8d
    2e39:	74 2f                	je     2e6a <do_malloc+0x2ea>
    2e3b:	85 c0                	test   %eax,%eax
    2e3d:	8d 50 1f             	lea    0x1f(%rax),%edx
    2e40:	41 89 c2             	mov    %eax,%r10d
    2e43:	45 89 cb             	mov    %r9d,%r11d
    2e46:	0f 49 d0             	cmovns %eax,%edx
    2e49:	41 c1 fa 1f          	sar    $0x1f,%r10d
    2e4d:	41 c1 ea 1b          	shr    $0x1b,%r10d
    2e51:	42 8d 0c 10          	lea    (%rax,%r10,1),%ecx
    2e55:	c1 fa 05             	sar    $0x5,%edx
    2e58:	83 e1 1f             	and    $0x1f,%ecx
    2e5b:	48 63 d2             	movslq %edx,%rdx
    2e5e:	44 29 d1             	sub    %r10d,%ecx
    2e61:	41 d3 e3             	shl    %cl,%r11d
    2e64:	44 85 1c 96          	test   %r11d,(%rsi,%rdx,4)
    2e68:	75 c6                	jne    2e30 <do_malloc+0x2b0>
    2e6a:	4c 89 e2             	mov    %r12,%rdx
    2e6d:	be e8 00 00 00       	mov    $0xe8,%esi
    2e72:	e8 d9 e9 ff ff       	callq  1850 <memset@plt>
    2e77:	48 89 c7             	mov    %rax,%rdi
    2e7a:	48 8b 43 30          	mov    0x30(%rbx),%rax
    2e7e:	4c 8d 67 08          	lea    0x8(%rdi),%r12
    2e82:	48 89 07             	mov    %rax,(%rdi)
    2e85:	48 83 c4 18          	add    $0x18,%rsp
    2e89:	4c 89 e0             	mov    %r12,%rax
    2e8c:	5b                   	pop    %rbx
    2e8d:	5d                   	pop    %rbp
    2e8e:	41 5c                	pop    %r12
    2e90:	41 5d                	pop    %r13
    2e92:	41 5e                	pop    %r14
    2e94:	41 5f                	pop    %r15
    2e96:	c3                   	retq   
    2e97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2e9e:	00 00 
    2ea0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2ea4:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2ea8:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
    2eac:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    2eb0:	f2 41 0f 2a c8       	cvtsi2sd %r8d,%xmm1
    2eb5:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    2eb9:	66 0f 2f 05 17 21 01 	comisd 0x12117(%rip),%xmm0        # 14fd8 <__PRETTY_FUNCTION__.5886+0x7f8>
    2ec0:	00 
    2ec1:	0f 86 a9 00 00 00    	jbe    2f70 <do_malloc+0x3f0>
    2ec7:	48 83 ca 01          	or     $0x1,%rdx
    2ecb:	45 89 c6             	mov    %r8d,%r14d
    2ece:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    2ed2:	8d 50 ff             	lea    -0x1(%rax),%edx
    2ed5:	41 29 d6             	sub    %edx,%r14d
    2ed8:	49 63 d6             	movslq %r14d,%rdx
    2edb:	49 0f af d4          	imul   %r12,%rdx
    2edf:	48 01 ca             	add    %rcx,%rdx
    2ee2:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2ee6:	e9 1f ff ff ff       	jmpq   2e0a <do_malloc+0x28a>
    2eeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2ef0:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    2ef6:	41 be 04 00 00 00    	mov    $0x4,%r14d
    2efc:	b8 10 00 00 00       	mov    $0x10,%eax
    2f01:	e9 c1 fd ff ff       	jmpq   2cc7 <do_malloc+0x147>
    2f06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2f0d:	00 00 00 
    2f10:	01 c9                	add    %ecx,%ecx
    2f12:	45 31 e4             	xor    %r12d,%r12d
    2f15:	81 f9 00 02 00 00    	cmp    $0x200,%ecx
    2f1b:	0f 8f 64 ff ff ff    	jg     2e85 <do_malloc+0x305>
    2f21:	89 4d 2c             	mov    %ecx,0x2c(%rbp)
    2f24:	48 8d 35 31 19 01 00 	lea    0x11931(%rip),%rsi        # 1485c <__PRETTY_FUNCTION__.5886+0x7c>
    2f2b:	bf 01 00 00 00       	mov    $0x1,%edi
    2f30:	31 c0                	xor    %eax,%eax
    2f32:	e8 d9 43 00 00       	callq  7310 <rootsim_error>
    2f37:	48 8d 35 92 1c 01 00 	lea    0x11c92(%rip),%rsi        # 14bd0 <__PRETTY_FUNCTION__.5886+0x3f0>
    2f3e:	31 ff                	xor    %edi,%edi
    2f40:	31 c0                	xor    %eax,%eax
    2f42:	e8 c9 43 00 00       	callq  7310 <rootsim_error>
    2f47:	d1 7d 2c             	sarl   0x2c(%rbp)
    2f4a:	e9 36 ff ff ff       	jmpq   2e85 <do_malloc+0x305>
    2f4f:	90                   	nop
    2f50:	4c 89 e2             	mov    %r12,%rdx
    2f53:	b9 00 00 40 00       	mov    $0x400000,%ecx
    2f58:	31 ff                	xor    %edi,%edi
    2f5a:	31 c0                	xor    %eax,%eax
    2f5c:	48 8d 35 05 1c 01 00 	lea    0x11c05(%rip),%rsi        # 14b68 <__PRETTY_FUNCTION__.5886+0x388>
    2f63:	45 31 e4             	xor    %r12d,%r12d
    2f66:	e8 a5 43 00 00       	callq  7310 <rootsim_error>
    2f6b:	e9 15 ff ff ff       	jmpq   2e85 <do_malloc+0x305>
    2f70:	49 8d 14 0c          	lea    (%r12,%rcx,1),%rdx
    2f74:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2f78:	e9 8d fe ff ff       	jmpq   2e0a <do_malloc+0x28a>
    2f7d:	48 8d 35 e8 18 01 00 	lea    0x118e8(%rip),%rsi        # 1486c <__PRETTY_FUNCTION__.5886+0x8c>
    2f84:	bf 01 00 00 00       	mov    $0x1,%edi
    2f89:	31 c0                	xor    %eax,%eax
    2f8b:	e8 e0 e9 ff ff       	callq  1970 <__printf_chk@plt>
    2f90:	45 84 ff             	test   %r15b,%r15b
    2f93:	bf 01 00 00 00       	mov    $0x1,%edi
    2f98:	48 8d 05 b6 18 01 00 	lea    0x118b6(%rip),%rax        # 14855 <__PRETTY_FUNCTION__.5886+0x75>
    2f9f:	48 8d 35 a9 18 01 00 	lea    0x118a9(%rip),%rsi        # 1484f <__PRETTY_FUNCTION__.5886+0x6f>
    2fa6:	48 0f 44 f0          	cmove  %rax,%rsi
    2faa:	31 c0                	xor    %eax,%eax
    2fac:	e8 bf e9 ff ff       	callq  1970 <__printf_chk@plt>
    2fb1:	48 8d 35 50 1c 01 00 	lea    0x11c50(%rip),%rsi        # 14c08 <__PRETTY_FUNCTION__.5886+0x428>
    2fb8:	bf 01 00 00 00       	mov    $0x1,%edi
    2fbd:	31 c0                	xor    %eax,%eax
    2fbf:	e8 4c 43 00 00       	callq  7310 <rootsim_error>
    2fc4:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    2fc8:	e9 31 fd ff ff       	jmpq   2cfe <do_malloc+0x17e>
    2fcd:	0f 1f 00             	nopl   (%rax)

0000000000002fd0 <do_free>:
    2fd0:	80 3d 29 62 34 00 00 	cmpb   $0x0,0x346229(%rip)        # 349200 <rootsim_config+0x40>
    2fd7:	48 89 d7             	mov    %rdx,%rdi
    2fda:	0f 85 90 01 00 00    	jne    3170 <do_free+0x1a0>
    2fe0:	48 85 d2             	test   %rdx,%rdx
    2fe3:	0f 84 9f 01 00 00    	je     3188 <do_free+0x1b8>
    2fe9:	41 56                	push   %r14
    2feb:	41 55                	push   %r13
    2fed:	41 54                	push   %r12
    2fef:	55                   	push   %rbp
    2ff0:	53                   	push   %rbx
    2ff1:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
    2ff5:	48 8b 18             	mov    (%rax),%rbx
    2ff8:	48 85 db             	test   %rbx,%rbx
    2ffb:	0f 84 9f 01 00 00    	je     31a0 <do_free+0x1d0>
    3001:	4c 8b 63 08          	mov    0x8(%rbx),%r12
    3005:	48 2b 7b 48          	sub    0x48(%rbx),%rdi
    3009:	31 d2                	xor    %edx,%edx
    300b:	48 89 f5             	mov    %rsi,%rbp
    300e:	48 63 c7             	movslq %edi,%rax
    3011:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    3015:	49 83 e4 fc          	and    $0xfffffffffffffffc,%r12
    3019:	49 f7 f4             	div    %r12
    301c:	49 89 c5             	mov    %rax,%r13
    301f:	8d 40 1f             	lea    0x1f(%rax),%eax
    3022:	45 85 ed             	test   %r13d,%r13d
    3025:	44 89 ee             	mov    %r13d,%esi
    3028:	41 0f 49 c5          	cmovns %r13d,%eax
    302c:	c1 fe 1f             	sar    $0x1f,%esi
    302f:	c1 ee 1b             	shr    $0x1b,%esi
    3032:	c1 f8 05             	sar    $0x5,%eax
    3035:	42 8d 0c 2e          	lea    (%rsi,%r13,1),%ecx
    3039:	48 98                	cltq   
    303b:	83 e1 1f             	and    $0x1f,%ecx
    303e:	48 c1 e0 02          	shl    $0x2,%rax
    3042:	29 f1                	sub    %esi,%ecx
    3044:	be 01 00 00 00       	mov    $0x1,%esi
    3049:	48 01 c7             	add    %rax,%rdi
    304c:	41 89 f1             	mov    %esi,%r9d
    304f:	8b 17                	mov    (%rdi),%edx
    3051:	41 d3 e1             	shl    %cl,%r9d
    3054:	44 89 c9             	mov    %r9d,%ecx
    3057:	44 85 ca             	test   %r9d,%edx
    305a:	0f 84 a6 01 00 00    	je     3206 <do_free+0x236>
    3060:	45 89 c8             	mov    %r9d,%r8d
    3063:	41 f7 d0             	not    %r8d
    3066:	44 21 c2             	and    %r8d,%edx
    3069:	89 17                	mov    %edx,(%rdi)
    306b:	8b 53 1c             	mov    0x1c(%rbx),%edx
    306e:	41 89 d6             	mov    %edx,%r14d
    3071:	41 c1 fe 05          	sar    $0x5,%r14d
    3075:	83 fa 1f             	cmp    $0x1f,%edx
    3078:	0f b6 13             	movzbl (%rbx),%edx
    307b:	44 0f 4e f6          	cmovle %esi,%r14d
    307f:	84 d2                	test   %dl,%dl
    3081:	74 70                	je     30f3 <do_free+0x123>
    3083:	8b 73 24             	mov    0x24(%rbx),%esi
    3086:	85 f6                	test   %esi,%esi
    3088:	75 0f                	jne    3099 <do_free+0xc9>
    308a:	49 63 f6             	movslq %r14d,%rsi
    308d:	83 45 34 01          	addl   $0x1,0x34(%rbp)
    3091:	48 c1 e6 02          	shl    $0x2,%rsi
    3095:	48 01 75 20          	add    %rsi,0x20(%rbp)
    3099:	48 03 43 40          	add    0x40(%rbx),%rax
    309d:	8b 30                	mov    (%rax),%esi
    309f:	85 f1                	test   %esi,%ecx
    30a1:	74 38                	je     30db <do_free+0x10b>
    30a3:	41 21 f0             	and    %esi,%r8d
    30a6:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    30aa:	44 89 00             	mov    %r8d,(%rax)
    30ad:	8b 43 14             	mov    0x14(%rbx),%eax
    30b0:	83 e8 01             	sub    $0x1,%eax
    30b3:	83 7b 24 01          	cmpl   $0x1,0x24(%rbx)
    30b7:	0f 94 c1             	sete   %cl
    30ba:	85 c0                	test   %eax,%eax
    30bc:	89 43 14             	mov    %eax,0x14(%rbx)
    30bf:	40 0f 94 c7          	sete   %dil
    30c3:	4c 29 e6             	sub    %r12,%rsi
    30c6:	40 20 f9             	and    %dil,%cl
    30c9:	0f 85 21 01 00 00    	jne    31f0 <do_free+0x220>
    30cf:	48 89 75 10          	mov    %rsi,0x10(%rbp)
    30d3:	85 c0                	test   %eax,%eax
    30d5:	0f 88 e5 00 00 00    	js     31c0 <do_free+0x1f0>
    30db:	48 c7 c0 88 5e ff ff 	mov    $0xffffffffffff5e88,%rax
    30e2:	c7 43 24 01 00 00 00 	movl   $0x1,0x24(%rbx)
    30e9:	64 f2 0f 10 00       	movsd  %fs:(%rax),%xmm0
    30ee:	f2 0f 11 43 28       	movsd  %xmm0,0x28(%rbx)
    30f3:	44 39 6b 18          	cmp    %r13d,0x18(%rbx)
    30f7:	7e 04                	jle    30fd <do_free+0x12d>
    30f9:	44 89 6b 18          	mov    %r13d,0x18(%rbx)
    30fd:	8b 43 10             	mov    0x10(%rbx),%eax
    3100:	83 e8 01             	sub    $0x1,%eax
    3103:	89 43 10             	mov    %eax,0x10(%rbx)
    3106:	75 0f                	jne    3117 <do_free+0x147>
    3108:	4d 63 f6             	movslq %r14d,%r14
    310b:	83 6d 30 01          	subl   $0x1,0x30(%rbp)
    310f:	49 c1 e6 02          	shl    $0x2,%r14
    3113:	4c 29 75 18          	sub    %r14,0x18(%rbp)
    3117:	84 d2                	test   %dl,%dl
    3119:	74 43                	je     315e <do_free+0x18e>
    311b:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    311f:	f6 c1 01             	test   $0x1,%cl
    3122:	74 54                	je     3178 <do_free+0x1a8>
    3124:	8b 53 1c             	mov    0x1c(%rbx),%edx
    3127:	66 0f ef c0          	pxor   %xmm0,%xmm0
    312b:	66 0f ef c9          	pxor   %xmm1,%xmm1
    312f:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    3133:	f2 0f 2a ca          	cvtsi2sd %edx,%xmm1
    3137:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    313b:	f2 0f 10 0d 95 1e 01 	movsd  0x11e95(%rip),%xmm1        # 14fd8 <__PRETTY_FUNCTION__.5886+0x7f8>
    3142:	00 
    3143:	66 0f 2f c8          	comisd %xmm0,%xmm1
    3147:	76 15                	jbe    315e <do_free+0x18e>
    3149:	29 c2                	sub    %eax,%edx
    314b:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    314f:	48 63 d2             	movslq %edx,%rdx
    3152:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    3156:	4c 0f af e2          	imul   %rdx,%r12
    315a:	4c 29 65 08          	sub    %r12,0x8(%rbp)
    315e:	5b                   	pop    %rbx
    315f:	5d                   	pop    %rbp
    3160:	41 5c                	pop    %r12
    3162:	41 5d                	pop    %r13
    3164:	41 5e                	pop    %r14
    3166:	c3                   	retq   
    3167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    316e:	00 00 
    3170:	e9 1b 2b 00 00       	jmpq   5c90 <rsfree>
    3175:	0f 1f 00             	nopl   (%rax)
    3178:	4c 29 65 08          	sub    %r12,0x8(%rbp)
    317c:	5b                   	pop    %rbx
    317d:	5d                   	pop    %rbp
    317e:	41 5c                	pop    %r12
    3180:	41 5d                	pop    %r13
    3182:	41 5e                	pop    %r14
    3184:	c3                   	retq   
    3185:	0f 1f 00             	nopl   (%rax)
    3188:	48 8d 35 ee 16 01 00 	lea    0x116ee(%rip),%rsi        # 1487d <__PRETTY_FUNCTION__.5886+0x9d>
    318f:	31 c0                	xor    %eax,%eax
    3191:	e9 7a 41 00 00       	jmpq   7310 <rootsim_error>
    3196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    319d:	00 00 00 
    31a0:	5b                   	pop    %rbx
    31a1:	48 8d 35 88 1a 01 00 	lea    0x11a88(%rip),%rsi        # 14c30 <__PRETTY_FUNCTION__.5886+0x450>
    31a8:	5d                   	pop    %rbp
    31a9:	31 ff                	xor    %edi,%edi
    31ab:	41 5c                	pop    %r12
    31ad:	31 c0                	xor    %eax,%eax
    31af:	41 5d                	pop    %r13
    31b1:	41 5e                	pop    %r14
    31b3:	e9 58 41 00 00       	jmpq   7310 <rootsim_error>
    31b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    31bf:	00 
    31c0:	48 8d 15 7b 16 01 00 	lea    0x1167b(%rip),%rdx        # 14842 <__PRETTY_FUNCTION__.5886+0x62>
    31c7:	b9 ab 01 00 00       	mov    $0x1ab,%ecx
    31cc:	48 8d 35 cd 1a 01 00 	lea    0x11acd(%rip),%rsi        # 14ca0 <__PRETTY_FUNCTION__.5886+0x4c0>
    31d3:	31 c0                	xor    %eax,%eax
    31d5:	bf 01 00 00 00       	mov    $0x1,%edi
    31da:	e8 31 41 00 00       	callq  7310 <rootsim_error>
    31df:	0f b6 13             	movzbl (%rbx),%edx
    31e2:	e9 f4 fe ff ff       	jmpq   30db <do_free+0x10b>
    31e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    31ee:	00 00 
    31f0:	49 63 c6             	movslq %r14d,%rax
    31f3:	48 89 75 10          	mov    %rsi,0x10(%rbp)
    31f7:	89 ca                	mov    %ecx,%edx
    31f9:	48 c1 e0 02          	shl    $0x2,%rax
    31fd:	48 29 45 20          	sub    %rax,0x20(%rbp)
    3201:	e9 d5 fe ff ff       	jmpq   30db <do_free+0x10b>
    3206:	48 8b 3d 53 9e 21 00 	mov    0x219e53(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    320d:	41 b8 90 01 00 00    	mov    $0x190,%r8d
    3213:	48 8d 0d 28 16 01 00 	lea    0x11628(%rip),%rcx        # 14842 <__PRETTY_FUNCTION__.5886+0x62>
    321a:	31 c0                	xor    %eax,%eax
    321c:	48 8d 15 3d 1a 01 00 	lea    0x11a3d(%rip),%rdx        # 14c60 <__PRETTY_FUNCTION__.5886+0x480>
    3223:	e8 38 e8 ff ff       	callq  1a60 <__fprintf_chk@plt>
    3228:	e8 83 e4 ff ff       	callq  16b0 <abort@plt>
    322d:	0f 1f 00             	nopl   (%rax)

0000000000003230 <recoverable_init>:
    3230:	41 55                	push   %r13
    3232:	41 54                	push   %r12
    3234:	55                   	push   %rbp
    3235:	53                   	push   %rbx
    3236:	48 83 ec 08          	sub    $0x8,%rsp
    323a:	8b 3d 70 5f 34 00    	mov    0x345f70(%rip),%edi        # 3491b0 <n_prc_tot>
    3240:	48 c1 e7 03          	shl    $0x3,%rdi
    3244:	e8 07 2a 00 00       	callq  5c50 <rsalloc>
    3249:	8b 15 61 5f 34 00    	mov    0x345f61(%rip),%edx        # 3491b0 <n_prc_tot>
    324f:	48 89 05 0a 1f 32 00 	mov    %rax,0x321f0a(%rip)        # 325160 <recoverable_state>
    3256:	85 d2                	test   %edx,%edx
    3258:	74 6e                	je     32c8 <recoverable_init+0x98>
    325a:	31 db                	xor    %ebx,%ebx
    325c:	4c 8d 25 65 1a 01 00 	lea    0x11a65(%rip),%r12        # 14cc8 <__PRETTY_FUNCTION__.5886+0x4e8>
    3263:	eb 1f                	jmp    3284 <recoverable_init+0x54>
    3265:	0f 1f 00             	nopl   (%rax)
    3268:	bf 01 00 00 00       	mov    $0x1,%edi
    326d:	83 c3 01             	add    $0x1,%ebx
    3270:	e8 3b f4 ff ff       	callq  26b0 <malloc_state_init>
    3275:	39 1d 35 5f 34 00    	cmp    %ebx,0x345f35(%rip)        # 3491b0 <n_prc_tot>
    327b:	76 4b                	jbe    32c8 <recoverable_init+0x98>
    327d:	48 8b 05 dc 1e 32 00 	mov    0x321edc(%rip),%rax        # 325160 <recoverable_state>
    3284:	89 dd                	mov    %ebx,%ebp
    3286:	bf 48 00 00 00       	mov    $0x48,%edi
    328b:	4c 8d 2c e8          	lea    (%rax,%rbp,8),%r13
    328f:	e8 bc 29 00 00       	callq  5c50 <rsalloc>
    3294:	49 89 45 00          	mov    %rax,0x0(%r13)
    3298:	48 8b 05 c1 1e 32 00 	mov    0x321ec1(%rip),%rax        # 325160 <recoverable_state>
    329f:	48 8b 34 e8          	mov    (%rax,%rbp,8),%rsi
    32a3:	48 85 f6             	test   %rsi,%rsi
    32a6:	75 c0                	jne    3268 <recoverable_init+0x38>
    32a8:	4c 89 e6             	mov    %r12,%rsi
    32ab:	31 c0                	xor    %eax,%eax
    32ad:	bf 01 00 00 00       	mov    $0x1,%edi
    32b2:	e8 59 40 00 00       	callq  7310 <rootsim_error>
    32b7:	48 8b 05 a2 1e 32 00 	mov    0x321ea2(%rip),%rax        # 325160 <recoverable_state>
    32be:	48 8b 34 e8          	mov    (%rax,%rbp,8),%rsi
    32c2:	eb a4                	jmp    3268 <recoverable_init+0x38>
    32c4:	0f 1f 40 00          	nopl   0x0(%rax)
    32c8:	48 83 c4 08          	add    $0x8,%rsp
    32cc:	5b                   	pop    %rbx
    32cd:	5d                   	pop    %rbp
    32ce:	41 5c                	pop    %r12
    32d0:	41 5d                	pop    %r13
    32d2:	c3                   	retq   
    32d3:	0f 1f 00             	nopl   (%rax)
    32d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    32dd:	00 00 00 

00000000000032e0 <recoverable_fini>:
    32e0:	8b 05 ca 5e 34 00    	mov    0x345eca(%rip),%eax        # 3491b0 <n_prc_tot>
    32e6:	85 c0                	test   %eax,%eax
    32e8:	0f 84 a6 00 00 00    	je     3394 <recoverable_fini+0xb4>
    32ee:	41 55                	push   %r13
    32f0:	41 54                	push   %r12
    32f2:	55                   	push   %rbp
    32f3:	31 ed                	xor    %ebp,%ebp
    32f5:	53                   	push   %rbx
    32f6:	48 83 ec 08          	sub    $0x8,%rsp
    32fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3300:	48 8b 05 59 1e 32 00 	mov    0x321e59(%rip),%rax        # 325160 <recoverable_state>
    3307:	41 89 ed             	mov    %ebp,%r13d
    330a:	31 db                	xor    %ebx,%ebx
    330c:	4e 8d 24 ed 00 00 00 	lea    0x0(,%r13,8),%r12
    3313:	00 
    3314:	4a 8b 14 e8          	mov    (%rax,%r13,8),%rdx
    3318:	8b 72 28             	mov    0x28(%rdx),%esi
    331b:	85 f6                	test   %esi,%esi
    331d:	74 3b                	je     335a <recoverable_fini+0x7a>
    331f:	90                   	nop
    3320:	89 d8                	mov    %ebx,%eax
    3322:	48 8d 0c 80          	lea    (%rax,%rax,4),%rcx
    3326:	48 8d 0c 48          	lea    (%rax,%rcx,2),%rcx
    332a:	48 8b 42 40          	mov    0x40(%rdx),%rax
    332e:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
    3332:	48 85 c0             	test   %rax,%rax
    3335:	74 1c                	je     3353 <recoverable_fini+0x73>
    3337:	48 8b 78 30          	mov    0x30(%rax),%rdi
    333b:	48 85 ff             	test   %rdi,%rdi
    333e:	74 13                	je     3353 <recoverable_fini+0x73>
    3340:	e8 4b 29 00 00       	callq  5c90 <rsfree>
    3345:	48 8b 05 14 1e 32 00 	mov    0x321e14(%rip),%rax        # 325160 <recoverable_state>
    334c:	4a 8b 14 20          	mov    (%rax,%r12,1),%rdx
    3350:	8b 72 28             	mov    0x28(%rdx),%esi
    3353:	83 c3 01             	add    $0x1,%ebx
    3356:	39 de                	cmp    %ebx,%esi
    3358:	77 c6                	ja     3320 <recoverable_fini+0x40>
    335a:	48 8b 7a 40          	mov    0x40(%rdx),%rdi
    335e:	83 c5 01             	add    $0x1,%ebp
    3361:	e8 2a 29 00 00       	callq  5c90 <rsfree>
    3366:	48 8b 05 f3 1d 32 00 	mov    0x321df3(%rip),%rax        # 325160 <recoverable_state>
    336d:	4a 8b 3c e8          	mov    (%rax,%r13,8),%rdi
    3371:	e8 1a 29 00 00       	callq  5c90 <rsfree>
    3376:	39 2d 34 5e 34 00    	cmp    %ebp,0x345e34(%rip)        # 3491b0 <n_prc_tot>
    337c:	77 82                	ja     3300 <recoverable_fini+0x20>
    337e:	48 8b 3d db 1d 32 00 	mov    0x321ddb(%rip),%rdi        # 325160 <recoverable_state>
    3385:	48 83 c4 08          	add    $0x8,%rsp
    3389:	5b                   	pop    %rbx
    338a:	5d                   	pop    %rbp
    338b:	41 5c                	pop    %r12
    338d:	41 5d                	pop    %r13
    338f:	e9 fc 28 00 00       	jmpq   5c90 <rsfree>
    3394:	48 8b 3d c5 1d 32 00 	mov    0x321dc5(%rip),%rdi        # 325160 <recoverable_state>
    339b:	e9 f0 28 00 00       	jmpq   5c90 <rsfree>

00000000000033a0 <get_log_size>:
    33a0:	48 85 ff             	test   %rdi,%rdi
    33a3:	74 43                	je     33e8 <get_log_size+0x48>
    33a5:	80 3f 00             	cmpb   $0x0,(%rdi)
    33a8:	74 1e                	je     33c8 <get_log_size+0x28>
    33aa:	48 63 57 34          	movslq 0x34(%rdi),%rdx
    33ae:	48 8b 47 10          	mov    0x10(%rdi),%rax
    33b2:	48 03 47 20          	add    0x20(%rdi),%rax
    33b6:	48 8d 0c 92          	lea    (%rdx,%rdx,4),%rcx
    33ba:	48 8d 14 4a          	lea    (%rdx,%rcx,2),%rdx
    33be:	48 8d 44 d0 50       	lea    0x50(%rax,%rdx,8),%rax
    33c3:	c3                   	retq   
    33c4:	0f 1f 40 00          	nopl   0x0(%rax)
    33c8:	48 63 57 30          	movslq 0x30(%rdi),%rdx
    33cc:	48 8b 47 08          	mov    0x8(%rdi),%rax
    33d0:	48 03 47 18          	add    0x18(%rdi),%rax
    33d4:	48 8d 0c 92          	lea    (%rdx,%rdx,4),%rcx
    33d8:	48 8d 14 4a          	lea    (%rdx,%rcx,2),%rdx
    33dc:	48 8d 44 d0 50       	lea    0x50(%rax,%rdx,8),%rax
    33e1:	c3                   	retq   
    33e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    33e8:	31 c0                	xor    %eax,%eax
    33ea:	c3                   	retq   
    33eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000033f0 <__wrap_malloc>:
    33f0:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    33f7:	48 89 fa             	mov    %rdi,%rdx
    33fa:	64 8b 08             	mov    %fs:(%rax),%ecx
    33fd:	48 8b 05 5c 1d 32 00 	mov    0x321d5c(%rip),%rax        # 325160 <recoverable_state>
    3404:	48 8b 34 c8          	mov    (%rax,%rcx,8),%rsi
    3408:	48 89 cf             	mov    %rcx,%rdi
    340b:	e9 70 f7 ff ff       	jmpq   2b80 <do_malloc>

0000000000003410 <__wrap_free>:
    3410:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    3417:	48 89 fa             	mov    %rdi,%rdx
    341a:	64 8b 08             	mov    %fs:(%rax),%ecx
    341d:	48 8b 05 3c 1d 32 00 	mov    0x321d3c(%rip),%rax        # 325160 <recoverable_state>
    3424:	48 8b 34 c8          	mov    (%rax,%rcx,8),%rsi
    3428:	48 89 cf             	mov    %rcx,%rdi
    342b:	e9 a0 fb ff ff       	jmpq   2fd0 <do_free>

0000000000003430 <__wrap_realloc>:
    3430:	41 56                	push   %r14
    3432:	48 8b 05 27 1d 32 00 	mov    0x321d27(%rip),%rax        # 325160 <recoverable_state>
    3439:	41 55                	push   %r13
    343b:	49 89 fd             	mov    %rdi,%r13
    343e:	41 54                	push   %r12
    3440:	49 89 f4             	mov    %rsi,%r12
    3443:	55                   	push   %rbp
    3444:	53                   	push   %rbx
    3445:	48 c7 c3 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbx
    344c:	64 8b 13             	mov    %fs:(%rbx),%edx
    344f:	48 8b 34 d0          	mov    (%rax,%rdx,8),%rsi
    3453:	48 89 d7             	mov    %rdx,%rdi
    3456:	4d 85 ed             	test   %r13,%r13
    3459:	74 75                	je     34d0 <__wrap_realloc+0xa0>
    345b:	4d 85 e4             	test   %r12,%r12
    345e:	74 58                	je     34b8 <__wrap_realloc+0x88>
    3460:	49 8b 45 f8          	mov    -0x8(%r13),%rax
    3464:	4c 89 e2             	mov    %r12,%rdx
    3467:	48 8b 00             	mov    (%rax),%rax
    346a:	48 8b 68 08          	mov    0x8(%rax),%rbp
    346e:	e8 0d f7 ff ff       	callq  2b80 <do_malloc>
    3473:	49 89 c6             	mov    %rax,%r14
    3476:	48 85 c0             	test   %rax,%rax
    3479:	74 2e                	je     34a9 <__wrap_realloc+0x79>
    347b:	49 39 ec             	cmp    %rbp,%r12
    347e:	48 89 ea             	mov    %rbp,%rdx
    3481:	4c 89 ee             	mov    %r13,%rsi
    3484:	48 89 c7             	mov    %rax,%rdi
    3487:	49 0f 43 d4          	cmovae %r12,%rdx
    348b:	e8 60 e4 ff ff       	callq  18f0 <memcpy@plt>
    3490:	64 8b 13             	mov    %fs:(%rbx),%edx
    3493:	48 8b 05 c6 1c 32 00 	mov    0x321cc6(%rip),%rax        # 325160 <recoverable_state>
    349a:	48 8b 34 d0          	mov    (%rax,%rdx,8),%rsi
    349e:	48 89 d7             	mov    %rdx,%rdi
    34a1:	4c 89 ea             	mov    %r13,%rdx
    34a4:	e8 27 fb ff ff       	callq  2fd0 <do_free>
    34a9:	5b                   	pop    %rbx
    34aa:	4c 89 f0             	mov    %r14,%rax
    34ad:	5d                   	pop    %rbp
    34ae:	41 5c                	pop    %r12
    34b0:	41 5d                	pop    %r13
    34b2:	41 5e                	pop    %r14
    34b4:	c3                   	retq   
    34b5:	0f 1f 00             	nopl   (%rax)
    34b8:	4c 89 ea             	mov    %r13,%rdx
    34bb:	45 31 f6             	xor    %r14d,%r14d
    34be:	e8 0d fb ff ff       	callq  2fd0 <do_free>
    34c3:	5b                   	pop    %rbx
    34c4:	4c 89 f0             	mov    %r14,%rax
    34c7:	5d                   	pop    %rbp
    34c8:	41 5c                	pop    %r12
    34ca:	41 5d                	pop    %r13
    34cc:	41 5e                	pop    %r14
    34ce:	c3                   	retq   
    34cf:	90                   	nop
    34d0:	5b                   	pop    %rbx
    34d1:	4c 89 e2             	mov    %r12,%rdx
    34d4:	5d                   	pop    %rbp
    34d5:	41 5c                	pop    %r12
    34d7:	41 5d                	pop    %r13
    34d9:	41 5e                	pop    %r14
    34db:	e9 a0 f6 ff ff       	jmpq   2b80 <do_malloc>

00000000000034e0 <__wrap_calloc>:
    34e0:	48 85 ff             	test   %rdi,%rdi
    34e3:	74 63                	je     3548 <__wrap_calloc+0x68>
    34e5:	41 54                	push   %r12
    34e7:	49 89 f4             	mov    %rsi,%r12
    34ea:	48 85 f6             	test   %rsi,%rsi
    34ed:	74 49                	je     3538 <__wrap_calloc+0x58>
    34ef:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    34f6:	4c 0f af e7          	imul   %rdi,%r12
    34fa:	64 8b 10             	mov    %fs:(%rax),%edx
    34fd:	48 8b 05 5c 1c 32 00 	mov    0x321c5c(%rip),%rax        # 325160 <recoverable_state>
    3504:	48 8b 34 d0          	mov    (%rax,%rdx,8),%rsi
    3508:	48 89 d7             	mov    %rdx,%rdi
    350b:	4c 89 e2             	mov    %r12,%rdx
    350e:	e8 6d f6 ff ff       	callq  2b80 <do_malloc>
    3513:	49 89 c0             	mov    %rax,%r8
    3516:	48 85 c0             	test   %rax,%rax
    3519:	74 10                	je     352b <__wrap_calloc+0x4b>
    351b:	4c 89 e2             	mov    %r12,%rdx
    351e:	31 f6                	xor    %esi,%esi
    3520:	48 89 c7             	mov    %rax,%rdi
    3523:	e8 28 e3 ff ff       	callq  1850 <memset@plt>
    3528:	49 89 c0             	mov    %rax,%r8
    352b:	4c 89 c0             	mov    %r8,%rax
    352e:	41 5c                	pop    %r12
    3530:	c3                   	retq   
    3531:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3538:	45 31 c0             	xor    %r8d,%r8d
    353b:	41 5c                	pop    %r12
    353d:	4c 89 c0             	mov    %r8,%rax
    3540:	c3                   	retq   
    3541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3548:	45 31 c0             	xor    %r8d,%r8d
    354b:	4c 89 c0             	mov    %r8,%rax
    354e:	c3                   	retq   
    354f:	90                   	nop

0000000000003550 <clean_buffers_on_gvt>:
    3550:	41 54                	push   %r12
    3552:	89 ff                	mov    %edi,%edi
    3554:	55                   	push   %rbp
    3555:	53                   	push   %rbx
    3556:	48 83 ec 10          	sub    $0x10,%rsp
    355a:	48 8b 05 ff 1b 32 00 	mov    0x321bff(%rip),%rax        # 325160 <recoverable_state>
    3561:	4c 8b 24 f8          	mov    (%rax,%rdi,8),%r12
    3565:	41 8b 4c 24 28       	mov    0x28(%r12),%ecx
    356a:	83 f9 10             	cmp    $0x10,%ecx
    356d:	0f 8e cf 00 00 00    	jle    3642 <clean_buffers_on_gvt+0xf2>
    3573:	bb 10 00 00 00       	mov    $0x10,%ebx
    3578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    357f:	00 
    3580:	48 63 c3             	movslq %ebx,%rax
    3583:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
    3587:	48 8d 14 50          	lea    (%rax,%rdx,2),%rdx
    358b:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    3590:	48 8d 2c d0          	lea    (%rax,%rdx,8),%rbp
    3594:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    3598:	45 85 c0             	test   %r8d,%r8d
    359b:	0f 85 af 00 00 00    	jne    3650 <clean_buffers_on_gvt+0x100>
    35a1:	66 0f 2f 45 28       	comisd 0x28(%rbp),%xmm0
    35a6:	0f 86 a4 00 00 00    	jbe    3650 <clean_buffers_on_gvt+0x100>
    35ac:	f6 45 08 02          	testb  $0x2,0x8(%rbp)
    35b0:	0f 85 9a 00 00 00    	jne    3650 <clean_buffers_on_gvt+0x100>
    35b6:	48 8b 7d 30          	mov    0x30(%rbp),%rdi
    35ba:	48 85 ff             	test   %rdi,%rdi
    35bd:	0f 84 8d 00 00 00    	je     3650 <clean_buffers_on_gvt+0x100>
    35c3:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    35c9:	e8 c2 26 00 00       	callq  5c90 <rsfree>
    35ce:	8b 55 50             	mov    0x50(%rbp),%edx
    35d1:	66 0f ef c9          	pxor   %xmm1,%xmm1
    35d5:	c7 45 24 00 00 00 00 	movl   $0x0,0x24(%rbp)
    35dc:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    35e2:	0f 11 4d 30          	movups %xmm1,0x30(%rbp)
    35e6:	83 fa ff             	cmp    $0xffffffff,%edx
    35e9:	0f 11 4d 40          	movups %xmm1,0x40(%rbp)
    35ed:	74 1a                	je     3609 <clean_buffers_on_gvt+0xb9>
    35ef:	48 63 c2             	movslq %edx,%rax
    35f2:	49 8b 7c 24 40       	mov    0x40(%r12),%rdi
    35f7:	8b 4d 54             	mov    0x54(%rbp),%ecx
    35fa:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    35fe:	48 8d 04 70          	lea    (%rax,%rsi,2),%rax
    3602:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    3606:	89 48 54             	mov    %ecx,0x54(%rax)
    3609:	48 63 45 54          	movslq 0x54(%rbp),%rax
    360d:	83 f8 ff             	cmp    $0xffffffff,%eax
    3610:	74 14                	je     3626 <clean_buffers_on_gvt+0xd6>
    3612:	49 8b 74 24 40       	mov    0x40(%r12),%rsi
    3617:	48 8d 0c 80          	lea    (%rax,%rax,4),%rcx
    361b:	48 8d 04 48          	lea    (%rax,%rcx,2),%rax
    361f:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    3623:	89 50 50             	mov    %edx,0x50(%rax)
    3626:	49 63 44 24 28       	movslq 0x28(%r12),%rax
    362b:	8d 48 ff             	lea    -0x1(%rax),%ecx
    362e:	39 d9                	cmp    %ebx,%ecx
    3630:	7f 36                	jg     3668 <clean_buffers_on_gvt+0x118>
    3632:	83 c3 01             	add    $0x1,%ebx
    3635:	41 89 4c 24 28       	mov    %ecx,0x28(%r12)
    363a:	39 d9                	cmp    %ebx,%ecx
    363c:	0f 8f 3e ff ff ff    	jg     3580 <clean_buffers_on_gvt+0x30>
    3642:	48 83 c4 10          	add    $0x10,%rsp
    3646:	5b                   	pop    %rbx
    3647:	5d                   	pop    %rbp
    3648:	41 5c                	pop    %r12
    364a:	c3                   	retq   
    364b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3650:	83 c3 01             	add    $0x1,%ebx
    3653:	39 d9                	cmp    %ebx,%ecx
    3655:	0f 8f 25 ff ff ff    	jg     3580 <clean_buffers_on_gvt+0x30>
    365b:	48 83 c4 10          	add    $0x10,%rsp
    365f:	5b                   	pop    %rbx
    3660:	5d                   	pop    %rbp
    3661:	41 5c                	pop    %r12
    3663:	c3                   	retq   
    3664:	0f 1f 40 00          	nopl   0x0(%rax)
    3668:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
    366c:	48 8d 14 50          	lea    (%rax,%rdx,2),%rdx
    3670:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    3675:	48 8d 44 d0 a8       	lea    -0x58(%rax,%rdx,8),%rax
    367a:	f3 0f 6f 10          	movdqu (%rax),%xmm2
    367e:	0f 11 55 00          	movups %xmm2,0x0(%rbp)
    3682:	f3 0f 6f 58 10       	movdqu 0x10(%rax),%xmm3
    3687:	0f 11 5d 10          	movups %xmm3,0x10(%rbp)
    368b:	f3 0f 6f 60 20       	movdqu 0x20(%rax),%xmm4
    3690:	0f 11 65 20          	movups %xmm4,0x20(%rbp)
    3694:	f3 0f 6f 68 30       	movdqu 0x30(%rax),%xmm5
    3699:	0f 11 6d 30          	movups %xmm5,0x30(%rbp)
    369d:	f3 0f 6f 70 40       	movdqu 0x40(%rax),%xmm6
    36a2:	0f 11 75 40          	movups %xmm6,0x40(%rbp)
    36a6:	48 8b 40 50          	mov    0x50(%rax),%rax
    36aa:	89 5d 20             	mov    %ebx,0x20(%rbp)
    36ad:	48 89 45 50          	mov    %rax,0x50(%rbp)
    36b1:	83 f8 ff             	cmp    $0xffffffff,%eax
    36b4:	74 16                	je     36cc <clean_buffers_on_gvt+0x17c>
    36b6:	48 98                	cltq   
    36b8:	49 8b 4c 24 40       	mov    0x40(%r12),%rcx
    36bd:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
    36c1:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    36c5:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
    36c9:	89 58 54             	mov    %ebx,0x54(%rax)
    36cc:	48 63 45 54          	movslq 0x54(%rbp),%rax
    36d0:	83 f8 ff             	cmp    $0xffffffff,%eax
    36d3:	74 14                	je     36e9 <clean_buffers_on_gvt+0x199>
    36d5:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
    36d9:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    36dd:	49 8b 54 24 40       	mov    0x40(%r12),%rdx
    36e2:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
    36e6:	89 58 50             	mov    %ebx,0x50(%rax)
    36e9:	48 8b 45 30          	mov    0x30(%rbp),%rax
    36ed:	48 89 28             	mov    %rbp,(%rax)
    36f0:	41 8b 44 24 28       	mov    0x28(%r12),%eax
    36f5:	8d 48 ff             	lea    -0x1(%rax),%ecx
    36f8:	e9 38 ff ff ff       	jmpq   3635 <clean_buffers_on_gvt+0xe5>
    36fd:	0f 1f 00             	nopl   (%rax)

0000000000003700 <log_full>:
    3700:	41 57                	push   %r15
    3702:	41 56                	push   %r14
    3704:	41 55                	push   %r13
    3706:	41 54                	push   %r12
    3708:	55                   	push   %rbp
    3709:	53                   	push   %rbx
    370a:	48 83 ec 58          	sub    $0x58,%rsp
    370e:	89 7c 24 3c          	mov    %edi,0x3c(%rsp)
    3712:	0f 31                	rdtsc  
    3714:	48 63 ff             	movslq %edi,%rdi
    3717:	89 c0                	mov    %eax,%eax
    3719:	48 c1 e2 20          	shl    $0x20,%rdx
    371d:	48 09 c2             	or     %rax,%rdx
    3720:	48 8d 04 fd 00 00 00 	lea    0x0(,%rdi,8),%rax
    3727:	00 
    3728:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    372d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3732:	48 8b 05 27 1a 32 00 	mov    0x321a27(%rip),%rax        # 325160 <recoverable_state>
    3739:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    373e:	48 8b 3c f8          	mov    (%rax,%rdi,8),%rdi
    3742:	c6 07 00             	movb   $0x0,(%rdi)
    3745:	e8 56 fc ff ff       	callq  33a0 <get_log_size>
    374a:	48 89 c7             	mov    %rax,%rdi
    374d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    3752:	e8 f9 24 00 00       	callq  5c50 <rsalloc>
    3757:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    375c:	48 85 c0             	test   %rax,%rax
    375f:	0f 84 7d 03 00 00    	je     3ae2 <log_full+0x3e2>
    3765:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    376a:	48 8b 05 ef 19 32 00 	mov    0x3219ef(%rip),%rax        # 325160 <recoverable_state>
    3771:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    3776:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
    377a:	4c 8d 7f 50          	lea    0x50(%rdi),%r15
    377e:	f3 0f 6f 30          	movdqu (%rax),%xmm6
    3782:	0f 11 37             	movups %xmm6,(%rdi)
    3785:	f3 0f 6f 78 10       	movdqu 0x10(%rax),%xmm7
    378a:	48 8b 15 cf 19 32 00 	mov    0x3219cf(%rip),%rdx        # 325160 <recoverable_state>
    3791:	0f 11 7f 10          	movups %xmm7,0x10(%rdi)
    3795:	f3 0f 6f 70 20       	movdqu 0x20(%rax),%xmm6
    379a:	0f 11 77 20          	movups %xmm6,0x20(%rdi)
    379e:	f3 0f 6f 78 30       	movdqu 0x30(%rax),%xmm7
    37a3:	0f 11 7f 30          	movups %xmm7,0x30(%rdi)
    37a7:	48 8b 40 40          	mov    0x40(%rax),%rax
    37ab:	48 89 47 40          	mov    %rax,0x40(%rdi)
    37af:	48 c7 c0 88 5e ff ff 	mov    $0xffffffffffff5e88,%rax
    37b6:	64 f2 0f 10 00       	movsd  %fs:(%rax),%xmm0
    37bb:	48 8b 05 c6 98 21 00 	mov    0x2198c6(%rip),%rax        # 21d088 <LPS>
    37c2:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
    37c6:	f2 0f 11 47 38       	movsd  %xmm0,0x38(%rdi)
    37cb:	48 8b 40 08          	mov    0x8(%rax),%rax
    37cf:	48 89 47 48          	mov    %rax,0x48(%rdi)
    37d3:	48 8b 04 f2          	mov    (%rdx,%rsi,8),%rax
    37d7:	8b 48 28             	mov    0x28(%rax),%ecx
    37da:	85 c9                	test   %ecx,%ecx
    37dc:	0f 8e d5 01 00 00    	jle    39b7 <log_full+0x2b7>
    37e2:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    37e9:	00 00 
    37eb:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    37f1:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%rsp)
    37f8:	00 
    37f9:	eb 58                	jmp    3853 <log_full+0x153>
    37fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3800:	48 83 7d 38 00       	cmpq   $0x0,0x38(%rbp)
    3805:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%rbp)
    380c:	c7 45 24 00 00 00 00 	movl   $0x0,0x24(%rbp)
    3813:	74 1d                	je     3832 <log_full+0x132>
    3815:	8d 41 ff             	lea    -0x1(%rcx),%eax
    3818:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
    381c:	31 f6                	xor    %esi,%esi
    381e:	48 8d 14 85 04 00 00 	lea    0x4(,%rax,4),%rdx
    3825:	00 
    3826:	e8 25 e0 ff ff       	callq  1850 <memset@plt>
    382b:	48 8b 15 2e 19 32 00 	mov    0x32192e(%rip),%rdx        # 325160 <recoverable_state>
    3832:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3837:	83 44 24 38 01       	addl   $0x1,0x38(%rsp)
    383c:	48 83 44 24 08 58    	addq   $0x58,0x8(%rsp)
    3842:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    3846:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    384a:	39 78 28             	cmp    %edi,0x28(%rax)
    384d:	0f 8e 64 01 00 00    	jle    39b7 <log_full+0x2b7>
    3853:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    3858:	48 03 68 40          	add    0x40(%rax),%rbp
    385c:	8b 45 1c             	mov    0x1c(%rbp),%eax
    385f:	89 c1                	mov    %eax,%ecx
    3861:	c1 f9 05             	sar    $0x5,%ecx
    3864:	83 f8 1f             	cmp    $0x1f,%eax
    3867:	8b 45 10             	mov    0x10(%rbp),%eax
    386a:	41 0f 4e cc          	cmovle %r12d,%ecx
    386e:	89 cb                	mov    %ecx,%ebx
    3870:	85 c0                	test   %eax,%eax
    3872:	74 8c                	je     3800 <log_full+0x100>
    3874:	f3 0f 6f 4d 00       	movdqu 0x0(%rbp),%xmm1
    3879:	4c 63 f1             	movslq %ecx,%r14
    387c:	4d 8d 57 58          	lea    0x58(%r15),%r10
    3880:	4c 89 d7             	mov    %r10,%rdi
    3883:	41 0f 11 0f          	movups %xmm1,(%r15)
    3887:	f3 0f 6f 55 10       	movdqu 0x10(%rbp),%xmm2
    388c:	41 0f 11 57 10       	movups %xmm2,0x10(%r15)
    3891:	f3 0f 6f 5d 20       	movdqu 0x20(%rbp),%xmm3
    3896:	41 0f 11 5f 20       	movups %xmm3,0x20(%r15)
    389b:	f3 0f 6f 65 30       	movdqu 0x30(%rbp),%xmm4
    38a0:	41 0f 11 67 30       	movups %xmm4,0x30(%r15)
    38a5:	f3 0f 6f 6d 40       	movdqu 0x40(%rbp),%xmm5
    38aa:	41 0f 11 6f 40       	movups %xmm5,0x40(%r15)
    38af:	48 8b 45 50          	mov    0x50(%rbp),%rax
    38b3:	49 89 47 50          	mov    %rax,0x50(%r15)
    38b7:	4a 8d 04 b5 00 00 00 	lea    0x0(,%r14,4),%rax
    38be:	00 
    38bf:	48 8b 75 38          	mov    0x38(%rbp),%rsi
    38c3:	48 89 c2             	mov    %rax,%rdx
    38c6:	49 89 c6             	mov    %rax,%r14
    38c9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    38ce:	e8 1d e0 ff ff       	callq  18f0 <memcpy@plt>
    38d3:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    38d7:	4e 8d 3c 30          	lea    (%rax,%r14,1),%r15
    38db:	4d 89 cd             	mov    %r9,%r13
    38de:	49 83 e5 fc          	and    $0xfffffffffffffffc,%r13
    38e2:	41 83 e1 01          	and    $0x1,%r9d
    38e6:	74 49                	je     3931 <log_full+0x231>
    38e8:	48 63 55 1c          	movslq 0x1c(%rbp),%rdx
    38ec:	48 8b 75 48          	mov    0x48(%rbp),%rsi
    38f0:	4c 89 ff             	mov    %r15,%rdi
    38f3:	49 0f af d5          	imul   %r13,%rdx
    38f7:	e8 f4 df ff ff       	callq  18f0 <memcpy@plt>
    38fc:	48 63 45 1c          	movslq 0x1c(%rbp),%rax
    3900:	49 0f af c5          	imul   %r13,%rax
    3904:	49 01 c7             	add    %rax,%r15
    3907:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%rbp)
    390e:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    3913:	31 f6                	xor    %esi,%esi
    3915:	c7 45 24 00 00 00 00 	movl   $0x0,0x24(%rbp)
    391c:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
    3920:	e8 2b df ff ff       	callq  1850 <memset@plt>
    3925:	48 8b 15 34 18 32 00 	mov    0x321834(%rip),%rdx        # 325160 <recoverable_state>
    392c:	e9 01 ff ff ff       	jmpq   3832 <log_full+0x132>
    3931:	8d 43 ff             	lea    -0x1(%rbx),%eax
    3934:	4c 89 ff             	mov    %r15,%rdi
    3937:	4d 89 ee             	mov    %r13,%r14
    393a:	4d 89 cf             	mov    %r9,%r15
    393d:	48 8d 04 85 04 00 00 	lea    0x4(,%rax,4),%rax
    3944:	00 
    3945:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    394a:	eb 0f                	jmp    395b <log_full+0x25b>
    394c:	0f 1f 40 00          	nopl   0x0(%rax)
    3950:	49 83 c7 04          	add    $0x4,%r15
    3954:	4c 3b 7c 24 10       	cmp    0x10(%rsp),%r15
    3959:	74 54                	je     39af <log_full+0x2af>
    395b:	48 8b 45 38          	mov    0x38(%rbp),%rax
    395f:	42 8b 04 38          	mov    (%rax,%r15,1),%eax
    3963:	85 c0                	test   %eax,%eax
    3965:	74 e9                	je     3950 <log_full+0x250>
    3967:	46 8d 2c fd 00 00 00 	lea    0x0(,%r15,8),%r13d
    396e:	00 
    396f:	31 db                	xor    %ebx,%ebx
    3971:	eb 15                	jmp    3988 <log_full+0x288>
    3973:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3978:	83 c3 01             	add    $0x1,%ebx
    397b:	83 fb 20             	cmp    $0x20,%ebx
    397e:	74 d0                	je     3950 <log_full+0x250>
    3980:	48 8b 45 38          	mov    0x38(%rbp),%rax
    3984:	42 8b 04 38          	mov    (%rax,%r15,1),%eax
    3988:	44 89 e2             	mov    %r12d,%edx
    398b:	89 d9                	mov    %ebx,%ecx
    398d:	d3 e2                	shl    %cl,%edx
    398f:	85 c2                	test   %eax,%edx
    3991:	74 e5                	je     3978 <log_full+0x278>
    3993:	42 8d 34 2b          	lea    (%rbx,%r13,1),%esi
    3997:	4c 89 f2             	mov    %r14,%rdx
    399a:	49 0f af f6          	imul   %r14,%rsi
    399e:	48 03 75 48          	add    0x48(%rbp),%rsi
    39a2:	e8 49 df ff ff       	callq  18f0 <memcpy@plt>
    39a7:	48 89 c7             	mov    %rax,%rdi
    39aa:	4c 01 f7             	add    %r14,%rdi
    39ad:	eb c9                	jmp    3978 <log_full+0x278>
    39af:	49 89 ff             	mov    %rdi,%r15
    39b2:	e9 50 ff ff ff       	jmpq   3907 <log_full+0x207>
    39b7:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    39bc:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    39c1:	4c 89 c2             	mov    %r8,%rdx
    39c4:	48 01 fa             	add    %rdi,%rdx
    39c7:	4c 39 fa             	cmp    %r15,%rdx
    39ca:	74 3f                	je     3a0b <log_full+0x30b>
    39cc:	48 83 ec 08          	sub    $0x8,%rsp
    39d0:	49 89 d2             	mov    %rdx,%r10
    39d3:	49 89 f9             	mov    %rdi,%r9
    39d6:	31 c0                	xor    %eax,%eax
    39d8:	52                   	push   %rdx
    39d9:	4d 29 fa             	sub    %r15,%r10
    39dc:	48 8d 35 6d 13 01 00 	lea    0x1136d(%rip),%rsi        # 14d50 <__PRETTY_FUNCTION__.5886+0x570>
    39e3:	41 57                	push   %r15
    39e5:	4c 89 d2             	mov    %r10,%rdx
    39e8:	57                   	push   %rdi
    39e9:	8b 4c 24 5c          	mov    0x5c(%rsp),%ecx
    39ed:	bf 01 00 00 00       	mov    $0x1,%edi
    39f2:	e8 19 39 00 00       	callq  7310 <rootsim_error>
    39f7:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    39fc:	48 83 c4 20          	add    $0x20,%rsp
    3a00:	48 8b 05 59 17 32 00 	mov    0x321759(%rip),%rax        # 325160 <recoverable_state>
    3a07:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
    3a0b:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
    3a12:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    3a19:	00 
    3a1a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3a21:	00 
    3a22:	0f 31                	rdtsc  
    3a24:	48 c1 e2 20          	shl    $0x20,%rdx
    3a28:	89 c3                	mov    %eax,%ebx
    3a2a:	48 09 d3             	or     %rdx,%rbx
    3a2d:	48 39 5c 24 40       	cmp    %rbx,0x40(%rsp)
    3a32:	0f 87 89 00 00 00    	ja     3ac1 <log_full+0x3c1>
    3a38:	48 2b 5c 24 40       	sub    0x40(%rsp),%rbx
    3a3d:	78 4c                	js     3a8b <log_full+0x38b>
    3a3f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3a43:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    3a48:	8b 7c 24 3c          	mov    0x3c(%rsp),%edi
    3a4c:	be 2d 01 00 00       	mov    $0x12d,%esi
    3a51:	e8 6a c8 00 00       	callq  102c0 <statistics_post_lp_data>
    3a56:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    3a5b:	48 85 c0             	test   %rax,%rax
    3a5e:	78 46                	js     3aa6 <log_full+0x3a6>
    3a60:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3a64:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    3a69:	8b 7c 24 3c          	mov    0x3c(%rsp),%edi
    3a6d:	be 2e 01 00 00       	mov    $0x12e,%esi
    3a72:	e8 49 c8 00 00       	callq  102c0 <statistics_post_lp_data>
    3a77:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3a7c:	48 83 c4 58          	add    $0x58,%rsp
    3a80:	5b                   	pop    %rbx
    3a81:	5d                   	pop    %rbp
    3a82:	41 5c                	pop    %r12
    3a84:	41 5d                	pop    %r13
    3a86:	41 5e                	pop    %r14
    3a88:	41 5f                	pop    %r15
    3a8a:	c3                   	retq   
    3a8b:	48 89 d8             	mov    %rbx,%rax
    3a8e:	83 e3 01             	and    $0x1,%ebx
    3a91:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3a95:	48 d1 e8             	shr    %rax
    3a98:	48 09 d8             	or     %rbx,%rax
    3a9b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    3aa0:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    3aa4:	eb a2                	jmp    3a48 <log_full+0x348>
    3aa6:	48 89 c2             	mov    %rax,%rdx
    3aa9:	83 e0 01             	and    $0x1,%eax
    3aac:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3ab0:	48 d1 ea             	shr    %rdx
    3ab3:	48 09 c2             	or     %rax,%rdx
    3ab6:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    3abb:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    3abf:	eb a8                	jmp    3a69 <log_full+0x369>
    3ac1:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    3ac6:	48 89 d9             	mov    %rbx,%rcx
    3ac9:	bf 01 00 00 00       	mov    $0x1,%edi
    3ace:	31 c0                	xor    %eax,%eax
    3ad0:	48 8d 35 e9 12 01 00 	lea    0x112e9(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
    3ad7:	e8 94 de ff ff       	callq  1970 <__printf_chk@plt>
    3adc:	cc                   	int3   
    3add:	e9 56 ff ff ff       	jmpq   3a38 <log_full+0x338>
    3ae2:	48 8d 35 0f 12 01 00 	lea    0x1120f(%rip),%rsi        # 14cf8 <__PRETTY_FUNCTION__.5886+0x518>
    3ae9:	bf 01 00 00 00       	mov    $0x1,%edi
    3aee:	e8 1d 38 00 00       	callq  7310 <rootsim_error>
    3af3:	e9 6d fc ff ff       	jmpq   3765 <log_full+0x65>
    3af8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3aff:	00 

0000000000003b00 <log_state>:
    3b00:	55                   	push   %rbp
    3b01:	f2 0f 10 05 b7 14 01 	movsd  0x114b7(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    3b08:	00 
    3b09:	89 fd                	mov    %edi,%ebp
    3b0b:	be 2c 01 00 00       	mov    $0x12c,%esi
    3b10:	e8 ab c7 00 00       	callq  102c0 <statistics_post_lp_data>
    3b15:	89 ef                	mov    %ebp,%edi
    3b17:	5d                   	pop    %rbp
    3b18:	e9 e3 fb ff ff       	jmpq   3700 <log_full>
    3b1d:	0f 1f 00             	nopl   (%rax)

0000000000003b20 <restore_full>:
    3b20:	41 57                	push   %r15
    3b22:	41 56                	push   %r14
    3b24:	41 55                	push   %r13
    3b26:	41 54                	push   %r12
    3b28:	55                   	push   %rbp
    3b29:	53                   	push   %rbx
    3b2a:	48 83 ec 48          	sub    $0x48,%rsp
    3b2e:	89 7c 24 3c          	mov    %edi,0x3c(%rsp)
    3b32:	0f 31                	rdtsc  
    3b34:	48 63 cf             	movslq %edi,%rcx
    3b37:	89 c0                	mov    %eax,%eax
    3b39:	48 c1 e2 20          	shl    $0x20,%rdx
    3b3d:	f3 0f 6f 3e          	movdqu (%rsi),%xmm7
    3b41:	48 09 c2             	or     %rax,%rdx
    3b44:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    3b4b:	00 
    3b4c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    3b51:	48 8b 05 08 16 32 00 	mov    0x321608(%rip),%rax        # 325160 <recoverable_state>
    3b58:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    3b5d:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
    3b61:	0f 11 38             	movups %xmm7,(%rax)
    3b64:	f3 0f 6f 7e 10       	movdqu 0x10(%rsi),%xmm7
    3b69:	8b 50 28             	mov    0x28(%rax),%edx
    3b6c:	48 8b 58 40          	mov    0x40(%rax),%rbx
    3b70:	0f 11 78 10          	movups %xmm7,0x10(%rax)
    3b74:	f3 0f 6f 7e 20       	movdqu 0x20(%rsi),%xmm7
    3b79:	89 54 24 38          	mov    %edx,0x38(%rsp)
    3b7d:	0f 11 78 20          	movups %xmm7,0x20(%rax)
    3b81:	f3 0f 6f 56 30       	movdqu 0x30(%rsi),%xmm2
    3b86:	0f 11 50 30          	movups %xmm2,0x30(%rax)
    3b8a:	48 8b 56 40          	mov    0x40(%rsi),%rdx
    3b8e:	48 89 50 40          	mov    %rdx,0x40(%rax)
    3b92:	48 8b 05 ef 94 21 00 	mov    0x2194ef(%rip),%rax        # 21d088 <LPS>
    3b99:	48 8b 56 48          	mov    0x48(%rsi),%rdx
    3b9d:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
    3ba1:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3ba5:	48 8b 15 b4 15 32 00 	mov    0x3215b4(%rip),%rdx        # 325160 <recoverable_state>
    3bac:	48 8b 2c ca          	mov    (%rdx,%rcx,8),%rbp
    3bb0:	8b 45 28             	mov    0x28(%rbp),%eax
    3bb3:	48 89 5d 40          	mov    %rbx,0x40(%rbp)
    3bb7:	85 c0                	test   %eax,%eax
    3bb9:	0f 8e 1a 02 00 00    	jle    3dd9 <restore_full+0x2b9>
    3bbf:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    3bc6:	00 00 
    3bc8:	4c 8d 76 50          	lea    0x50(%rsi),%r14
    3bcc:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    3bd2:	49 89 d8             	mov    %rbx,%r8
    3bd5:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    3bdc:	00 
    3bdd:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
    3be4:	00 
    3be5:	eb 53                	jmp    3c3a <restore_full+0x11a>
    3be7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3bee:	00 00 
    3bf0:	41 c7 44 24 10 00 00 	movl   $0x0,0x10(%r12)
    3bf7:	00 00 
    3bf9:	41 c7 44 24 18 00 00 	movl   $0x0,0x18(%r12)
    3c00:	00 00 
    3c02:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    3c07:	f2 0f 10 45 38       	movsd  0x38(%rbp),%xmm0
    3c0c:	f2 41 0f 11 44 24 28 	movsd  %xmm0,0x28(%r12)
    3c13:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    3c18:	83 44 24 18 01       	addl   $0x1,0x18(%rsp)
    3c1d:	8b 74 24 18          	mov    0x18(%rsp),%esi
    3c21:	48 83 44 24 10 58    	addq   $0x58,0x10(%rsp)
    3c27:	48 8b 2c 02          	mov    (%rdx,%rax,1),%rbp
    3c2b:	8b 45 28             	mov    0x28(%rbp),%eax
    3c2e:	39 f0                	cmp    %esi,%eax
    3c30:	0f 8e a3 01 00 00    	jle    3dd9 <restore_full+0x2b9>
    3c36:	4c 8b 45 40          	mov    0x40(%rbp),%r8
    3c3a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3c3f:	4d 8d 24 00          	lea    (%r8,%rax,1),%r12
    3c43:	41 8b 44 24 1c       	mov    0x1c(%r12),%eax
    3c48:	89 c1                	mov    %eax,%ecx
    3c4a:	c1 f9 05             	sar    $0x5,%ecx
    3c4d:	83 f8 1f             	cmp    $0x1f,%eax
    3c50:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3c54:	41 0f 4e cd          	cmovle %r13d,%ecx
    3c58:	39 45 30             	cmp    %eax,0x30(%rbp)
    3c5b:	74 0f                	je     3c6c <restore_full+0x14c>
    3c5d:	41 8b 46 20          	mov    0x20(%r14),%eax
    3c61:	41 39 44 24 20       	cmp    %eax,0x20(%r12)
    3c66:	0f 84 94 00 00 00    	je     3d00 <restore_full+0x1e0>
    3c6c:	4d 8b 54 24 38       	mov    0x38(%r12),%r10
    3c71:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
    3c76:	41 c7 44 24 14 00 00 	movl   $0x0,0x14(%r12)
    3c7d:	00 00 
    3c7f:	41 c7 44 24 24 00 00 	movl   $0x0,0x24(%r12)
    3c86:	00 00 
    3c88:	48 83 e3 fc          	and    $0xfffffffffffffffc,%rbx
    3c8c:	4d 85 d2             	test   %r10,%r10
    3c8f:	4c 89 14 24          	mov    %r10,(%rsp)
    3c93:	0f 84 57 ff ff ff    	je     3bf0 <restore_full+0xd0>
    3c99:	4d 8b 7c 24 40       	mov    0x40(%r12),%r15
    3c9e:	8d 41 ff             	lea    -0x1(%rcx),%eax
    3ca1:	31 f6                	xor    %esi,%esi
    3ca3:	48 8d 14 85 04 00 00 	lea    0x4(,%rax,4),%rdx
    3caa:	00 
    3cab:	4c 89 ff             	mov    %r15,%rdi
    3cae:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3cb3:	e8 98 db ff ff       	callq  1850 <memset@plt>
    3cb8:	4c 8b 14 24          	mov    (%rsp),%r10
    3cbc:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    3cc1:	31 f6                	xor    %esi,%esi
    3cc3:	41 c7 44 24 10 00 00 	movl   $0x0,0x10(%r12)
    3cca:	00 00 
    3ccc:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3cd1:	41 c7 44 24 18 00 00 	movl   $0x0,0x18(%r12)
    3cd8:	00 00 
    3cda:	4c 89 d7             	mov    %r10,%rdi
    3cdd:	e8 6e db ff ff       	callq  1850 <memset@plt>
    3ce2:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3ce7:	31 f6                	xor    %esi,%esi
    3ce9:	4c 89 ff             	mov    %r15,%rdi
    3cec:	e8 5f db ff ff       	callq  1850 <memset@plt>
    3cf1:	48 8b 15 68 14 32 00 	mov    0x321468(%rip),%rdx        # 325160 <recoverable_state>
    3cf8:	e9 0a ff ff ff       	jmpq   3c07 <restore_full+0xe7>
    3cfd:	0f 1f 00             	nopl   (%rax)
    3d00:	f3 41 0f 6f 16       	movdqu (%r14),%xmm2
    3d05:	48 63 d9             	movslq %ecx,%rbx
    3d08:	49 83 c6 58          	add    $0x58,%r14
    3d0c:	89 0c 24             	mov    %ecx,(%rsp)
    3d0f:	4c 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%r15
    3d16:	00 
    3d17:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    3d1c:	41 0f 11 14 24       	movups %xmm2,(%r12)
    3d21:	f3 41 0f 6f 5e b8    	movdqu -0x48(%r14),%xmm3
    3d27:	4c 89 fa             	mov    %r15,%rdx
    3d2a:	41 0f 11 5c 24 10    	movups %xmm3,0x10(%r12)
    3d30:	f3 41 0f 6f 66 c8    	movdqu -0x38(%r14),%xmm4
    3d36:	41 0f 11 64 24 20    	movups %xmm4,0x20(%r12)
    3d3c:	f3 41 0f 6f 6e d8    	movdqu -0x28(%r14),%xmm5
    3d42:	41 0f 11 6c 24 30    	movups %xmm5,0x30(%r12)
    3d48:	f3 41 0f 6f 76 e8    	movdqu -0x18(%r14),%xmm6
    3d4e:	49 8b 7c 24 38       	mov    0x38(%r12),%rdi
    3d53:	41 0f 11 74 24 40    	movups %xmm6,0x40(%r12)
    3d59:	49 8b 46 f8          	mov    -0x8(%r14),%rax
    3d5d:	4c 89 f6             	mov    %r14,%rsi
    3d60:	4d 01 fe             	add    %r15,%r14
    3d63:	49 89 44 24 50       	mov    %rax,0x50(%r12)
    3d68:	e8 83 db ff ff       	callq  18f0 <memcpy@plt>
    3d6d:	49 8b 7c 24 40       	mov    0x40(%r12),%rdi
    3d72:	4c 89 fa             	mov    %r15,%rdx
    3d75:	31 f6                	xor    %esi,%esi
    3d77:	e8 d4 da ff ff       	callq  1850 <memset@plt>
    3d7c:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
    3d81:	8b 0c 24             	mov    (%rsp),%ecx
    3d84:	41 c7 44 24 14 00 00 	movl   $0x0,0x14(%r12)
    3d8b:	00 00 
    3d8d:	41 c7 44 24 24 00 00 	movl   $0x0,0x24(%r12)
    3d94:	00 00 
    3d96:	49 89 df             	mov    %rbx,%r15
    3d99:	49 83 e7 fc          	and    $0xfffffffffffffffc,%r15
    3d9d:	83 e3 01             	and    $0x1,%ebx
    3da0:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    3da5:	0f 84 a6 00 00 00    	je     3e51 <restore_full+0x331>
    3dab:	49 63 54 24 1c       	movslq 0x1c(%r12),%rdx
    3db0:	49 8b 7c 24 48       	mov    0x48(%r12),%rdi
    3db5:	4c 89 f6             	mov    %r14,%rsi
    3db8:	49 0f af d7          	imul   %r15,%rdx
    3dbc:	e8 2f db ff ff       	callq  18f0 <memcpy@plt>
    3dc1:	49 63 44 24 1c       	movslq 0x1c(%r12),%rax
    3dc6:	48 8b 15 93 13 32 00 	mov    0x321393(%rip),%rdx        # 325160 <recoverable_state>
    3dcd:	49 0f af c7          	imul   %r15,%rax
    3dd1:	49 01 c6             	add    %rax,%r14
    3dd4:	e9 3a fe ff ff       	jmpq   3c13 <restore_full+0xf3>
    3dd9:	8b 74 24 38          	mov    0x38(%rsp),%esi
    3ddd:	39 f0                	cmp    %esi,%eax
    3ddf:	0f 8c 13 01 00 00    	jl     3ef8 <restore_full+0x3d8>
    3de5:	48 8b 05 e4 11 01 00 	mov    0x111e4(%rip),%rax        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    3dec:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
    3df0:	c7 45 34 00 00 00 00 	movl   $0x0,0x34(%rbp)
    3df7:	48 89 45 38          	mov    %rax,0x38(%rbp)
    3dfb:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
    3e02:	00 
    3e03:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
    3e0a:	00 
    3e0b:	0f 31                	rdtsc  
    3e0d:	48 c1 e2 20          	shl    $0x20,%rdx
    3e11:	89 c3                	mov    %eax,%ebx
    3e13:	48 09 d3             	or     %rdx,%rbx
    3e16:	48 39 5c 24 30       	cmp    %rbx,0x30(%rsp)
    3e1b:	0f 87 ee 01 00 00    	ja     400f <restore_full+0x4ef>
    3e21:	48 2b 5c 24 30       	sub    0x30(%rsp),%rbx
    3e26:	0f 88 c5 01 00 00    	js     3ff1 <restore_full+0x4d1>
    3e2c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3e30:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    3e35:	8b 7c 24 3c          	mov    0x3c(%rsp),%edi
    3e39:	48 83 c4 48          	add    $0x48,%rsp
    3e3d:	be 30 01 00 00       	mov    $0x130,%esi
    3e42:	5b                   	pop    %rbx
    3e43:	5d                   	pop    %rbp
    3e44:	41 5c                	pop    %r12
    3e46:	41 5d                	pop    %r13
    3e48:	41 5e                	pop    %r14
    3e4a:	41 5f                	pop    %r15
    3e4c:	e9 6f c4 00 00       	jmpq   102c0 <statistics_post_lp_data>
    3e51:	8d 41 ff             	lea    -0x1(%rcx),%eax
    3e54:	48 8d 04 85 04 00 00 	lea    0x4(,%rax,4),%rax
    3e5b:	00 
    3e5c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3e61:	eb 17                	jmp    3e7a <restore_full+0x35a>
    3e63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3e68:	48 83 44 24 08 04    	addq   $0x4,0x8(%rsp)
    3e6e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3e73:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
    3e78:	74 72                	je     3eec <restore_full+0x3cc>
    3e7a:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    3e7f:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3e84:	8b 2c 10             	mov    (%rax,%rdx,1),%ebp
    3e87:	85 ed                	test   %ebp,%ebp
    3e89:	74 dd                	je     3e68 <restore_full+0x348>
    3e8b:	89 d0                	mov    %edx,%eax
    3e8d:	31 db                	xor    %ebx,%ebx
    3e8f:	c1 e0 03             	shl    $0x3,%eax
    3e92:	89 04 24             	mov    %eax,(%rsp)
    3e95:	89 e8                	mov    %ebp,%eax
    3e97:	4c 89 fd             	mov    %r15,%rbp
    3e9a:	4d 89 f7             	mov    %r14,%r15
    3e9d:	41 89 c6             	mov    %eax,%r14d
    3ea0:	eb 0e                	jmp    3eb0 <restore_full+0x390>
    3ea2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3ea8:	83 c3 01             	add    $0x1,%ebx
    3eab:	83 fb 20             	cmp    $0x20,%ebx
    3eae:	74 31                	je     3ee1 <restore_full+0x3c1>
    3eb0:	44 89 e8             	mov    %r13d,%eax
    3eb3:	89 d9                	mov    %ebx,%ecx
    3eb5:	d3 e0                	shl    %cl,%eax
    3eb7:	44 85 f0             	test   %r14d,%eax
    3eba:	74 ec                	je     3ea8 <restore_full+0x388>
    3ebc:	8b 04 24             	mov    (%rsp),%eax
    3ebf:	4c 89 fe             	mov    %r15,%rsi
    3ec2:	48 89 ea             	mov    %rbp,%rdx
    3ec5:	49 01 ef             	add    %rbp,%r15
    3ec8:	8d 3c 03             	lea    (%rbx,%rax,1),%edi
    3ecb:	83 c3 01             	add    $0x1,%ebx
    3ece:	48 0f af fd          	imul   %rbp,%rdi
    3ed2:	49 03 7c 24 48       	add    0x48(%r12),%rdi
    3ed7:	e8 14 da ff ff       	callq  18f0 <memcpy@plt>
    3edc:	83 fb 20             	cmp    $0x20,%ebx
    3edf:	75 cf                	jne    3eb0 <restore_full+0x390>
    3ee1:	4d 89 fe             	mov    %r15,%r14
    3ee4:	49 89 ef             	mov    %rbp,%r15
    3ee7:	e9 7c ff ff ff       	jmpq   3e68 <restore_full+0x348>
    3eec:	48 8b 15 6d 12 32 00 	mov    0x32126d(%rip),%rdx        # 325160 <recoverable_state>
    3ef3:	e9 1b fd ff ff       	jmpq   3c13 <restore_full+0xf3>
    3ef8:	48 63 c8             	movslq %eax,%rcx
    3efb:	4c 8b 75 40          	mov    0x40(%rbp),%r14
    3eff:	f2 0f 10 5d 38       	movsd  0x38(%rbp),%xmm3
    3f04:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    3f0a:	48 8d 14 89          	lea    (%rcx,%rcx,4),%rdx
    3f0e:	48 8d 14 51          	lea    (%rcx,%rdx,2),%rdx
    3f12:	f2 0f 11 1c 24       	movsd  %xmm3,(%rsp)
    3f17:	4d 8d 2c d6          	lea    (%r14,%rdx,8),%r13
    3f1b:	8d 56 ff             	lea    -0x1(%rsi),%edx
    3f1e:	89 d6                	mov    %edx,%esi
    3f20:	29 c6                	sub    %eax,%esi
    3f22:	48 89 f0             	mov    %rsi,%rax
    3f25:	48 01 c8             	add    %rcx,%rax
    3f28:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
    3f2c:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    3f30:	49 8d 5c c6 58       	lea    0x58(%r14,%rax,8),%rbx
    3f35:	eb 12                	jmp    3f49 <restore_full+0x429>
    3f37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3f3e:	00 00 
    3f40:	49 83 c5 58          	add    $0x58,%r13
    3f44:	49 39 dd             	cmp    %rbx,%r13
    3f47:	74 7c                	je     3fc5 <restore_full+0x4a5>
    3f49:	49 63 45 50          	movslq 0x50(%r13),%rax
    3f4d:	41 8b 55 20          	mov    0x20(%r13),%edx
    3f51:	41 c7 45 10 00 00 00 	movl   $0x0,0x10(%r13)
    3f58:	00 
    3f59:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    3f5e:	49 8b 7d 38          	mov    0x38(%r13),%rdi
    3f62:	41 c7 45 14 00 00 00 	movl   $0x0,0x14(%r13)
    3f69:	00 
    3f6a:	48 8d 0c 80          	lea    (%rax,%rax,4),%rcx
    3f6e:	41 c7 45 24 00 00 00 	movl   $0x0,0x24(%r13)
    3f75:	00 
    3f76:	48 8d 04 48          	lea    (%rax,%rcx,2),%rax
    3f7a:	41 c7 45 18 00 00 00 	movl   $0x0,0x18(%r13)
    3f81:	00 
    3f82:	f2 41 0f 11 4d 28    	movsd  %xmm1,0x28(%r13)
    3f88:	41 89 54 c6 54       	mov    %edx,0x54(%r14,%rax,8)
    3f8d:	49 83 65 08 fc       	andq   $0xfffffffffffffffc,0x8(%r13)
    3f92:	48 85 ff             	test   %rdi,%rdi
    3f95:	74 a9                	je     3f40 <restore_full+0x420>
    3f97:	41 8b 45 1c          	mov    0x1c(%r13),%eax
    3f9b:	83 f8 1f             	cmp    $0x1f,%eax
    3f9e:	7f 31                	jg     3fd1 <restore_full+0x4b1>
    3fa0:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    3fa6:	45 31 ff             	xor    %r15d,%r15d
    3fa9:	49 8b 7d 40          	mov    0x40(%r13),%rdi
    3fad:	4a 8d 14 bd 04 00 00 	lea    0x4(,%r15,4),%rdx
    3fb4:	00 
    3fb5:	31 f6                	xor    %esi,%esi
    3fb7:	49 83 c5 58          	add    $0x58,%r13
    3fbb:	e8 90 d8 ff ff       	callq  1850 <memset@plt>
    3fc0:	49 39 dd             	cmp    %rbx,%r13
    3fc3:	75 84                	jne    3f49 <restore_full+0x429>
    3fc5:	8b 44 24 38          	mov    0x38(%rsp),%eax
    3fc9:	89 45 28             	mov    %eax,0x28(%rbp)
    3fcc:	e9 14 fe ff ff       	jmpq   3de5 <restore_full+0x2c5>
    3fd1:	c1 f8 05             	sar    $0x5,%eax
    3fd4:	8d 50 ff             	lea    -0x1(%rax),%edx
    3fd7:	85 c0                	test   %eax,%eax
    3fd9:	49 89 d7             	mov    %rdx,%r15
    3fdc:	48 8d 14 95 04 00 00 	lea    0x4(,%rdx,4),%rdx
    3fe3:	00 
    3fe4:	49 0f 4e d4          	cmovle %r12,%rdx
    3fe8:	31 f6                	xor    %esi,%esi
    3fea:	e8 61 d8 ff ff       	callq  1850 <memset@plt>
    3fef:	eb b8                	jmp    3fa9 <restore_full+0x489>
    3ff1:	48 89 d8             	mov    %rbx,%rax
    3ff4:	83 e3 01             	and    $0x1,%ebx
    3ff7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3ffb:	48 d1 e8             	shr    %rax
    3ffe:	48 09 d8             	or     %rbx,%rax
    4001:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    4006:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    400a:	e9 26 fe ff ff       	jmpq   3e35 <restore_full+0x315>
    400f:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    4014:	48 89 d9             	mov    %rbx,%rcx
    4017:	bf 01 00 00 00       	mov    $0x1,%edi
    401c:	31 c0                	xor    %eax,%eax
    401e:	48 8d 35 9b 0d 01 00 	lea    0x10d9b(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
    4025:	e8 46 d9 ff ff       	callq  1970 <__printf_chk@plt>
    402a:	cc                   	int3   
    402b:	e9 f1 fd ff ff       	jmpq   3e21 <restore_full+0x301>

0000000000004030 <log_restore>:
    4030:	55                   	push   %rbp
    4031:	89 fd                	mov    %edi,%ebp
    4033:	53                   	push   %rbx
    4034:	48 89 f3             	mov    %rsi,%rbx
    4037:	be 2f 01 00 00       	mov    $0x12f,%esi
    403c:	48 83 ec 08          	sub    $0x8,%rsp
    4040:	f2 0f 10 05 78 0f 01 	movsd  0x10f78(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    4047:	00 
    4048:	e8 73 c2 00 00       	callq  102c0 <statistics_post_lp_data>
    404d:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    4051:	48 83 c4 08          	add    $0x8,%rsp
    4055:	89 ef                	mov    %ebp,%edi
    4057:	5b                   	pop    %rbx
    4058:	5d                   	pop    %rbp
    4059:	e9 c2 fa ff ff       	jmpq   3b20 <restore_full>
    405e:	66 90                	xchg   %ax,%ax

0000000000004060 <log_delete>:
    4060:	48 85 ff             	test   %rdi,%rdi
    4063:	74 0b                	je     4070 <log_delete+0x10>
    4065:	e9 26 1c 00 00       	jmpq   5c90 <rsfree>
    406a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4070:	c3                   	retq   
    4071:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4078:	00 00 00 
    407b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004080 <checkpoint_interval_recalculate>:
    4080:	55                   	push   %rbp
    4081:	53                   	push   %rbx
    4082:	89 fb                	mov    %edi,%ebx
    4084:	48 89 d8             	mov    %rbx,%rax
    4087:	48 89 dd             	mov    %rbx,%rbp
    408a:	48 c1 e0 09          	shl    $0x9,%rax
    408e:	48 83 ec 18          	sub    $0x18,%rsp
    4092:	48 03 05 d7 51 34 00 	add    0x3451d7(%rip),%rax        # 349270 <lp_stats>
    4099:	f2 0f 10 98 88 00 00 	movsd  0x88(%rax),%xmm3
    40a0:	00 
    40a1:	f2 0f 10 08          	movsd  (%rax),%xmm1
    40a5:	f2 0f 10 80 30 01 00 	movsd  0x130(%rax),%xmm0
    40ac:	00 
    40ad:	f2 0f 10 90 b0 00 00 	movsd  0xb0(%rax),%xmm2
    40b4:	00 
    40b5:	f2 0f 5e c3          	divsd  %xmm3,%xmm0
    40b9:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
    40bd:	f2 0f 5e cb          	divsd  %xmm3,%xmm1
    40c1:	66 0f ef db          	pxor   %xmm3,%xmm3
    40c5:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    40c9:	f2 0f 10 15 ef 0e 01 	movsd  0x10eef(%rip),%xmm2        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    40d0:	00 
    40d1:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    40d5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    40d9:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    40dd:	66 0f 2e d8          	ucomisd %xmm0,%xmm3
    40e1:	66 0f 28 c8          	movapd %xmm0,%xmm1
    40e5:	f2 0f 51 c9          	sqrtsd %xmm1,%xmm1
    40e9:	77 4c                	ja     4137 <checkpoint_interval_recalculate+0xb7>
    40eb:	48 8b 05 96 8f 21 00 	mov    0x218f96(%rip),%rax        # 21d088 <LPS>
    40f2:	89 ef                	mov    %ebp,%edi
    40f4:	66 0f 28 c2          	movapd %xmm2,%xmm0
    40f8:	be 33 01 00 00       	mov    $0x133,%esi
    40fd:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
    4101:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
    4106:	89 42 14             	mov    %eax,0x14(%rdx)
    4109:	e8 b2 c1 00 00       	callq  102c0 <statistics_post_lp_data>
    410e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4112:	89 ef                	mov    %ebp,%edi
    4114:	be 34 01 00 00       	mov    $0x134,%esi
    4119:	48 8b 05 68 8f 21 00 	mov    0x218f68(%rip),%rax        # 21d088 <LPS>
    4120:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
    4124:	8b 40 14             	mov    0x14(%rax),%eax
    4127:	48 83 c4 18          	add    $0x18,%rsp
    412b:	5b                   	pop    %rbx
    412c:	5d                   	pop    %rbp
    412d:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    4132:	e9 89 c1 00 00       	jmpq   102c0 <statistics_post_lp_data>
    4137:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    413d:	e8 3e d9 ff ff       	callq  1a80 <sqrt@plt>
    4142:	48 8b 05 77 0e 01 00 	mov    0x10e77(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    4149:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    414f:	66 48 0f 6e d0       	movq   %rax,%xmm2
    4154:	eb 95                	jmp    40eb <checkpoint_interval_recalculate+0x6b>
    4156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    415d:	00 00 00 

0000000000004160 <LogState>:
    4160:	41 54                	push   %r12
    4162:	55                   	push   %rbp
    4163:	53                   	push   %rbx
    4164:	48 83 ec 40          	sub    $0x40,%rsp
    4168:	48 8b 15 19 8f 21 00 	mov    0x218f19(%rip),%rdx        # 21d088 <LPS>
    416f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4176:	00 00 
    4178:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    417d:	31 c0                	xor    %eax,%eax
    417f:	89 f8                	mov    %edi,%eax
    4181:	48 8d 1c c5 00 00 00 	lea    0x0(,%rax,8),%rbx
    4188:	00 
    4189:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    418d:	f6 40 11 10          	testb  $0x10,0x11(%rax)
    4191:	0f 85 e1 00 00 00    	jne    4278 <LogState+0x118>
    4197:	8b 70 18             	mov    0x18(%rax),%esi
    419a:	44 0f b6 60 1c       	movzbl 0x1c(%rax),%r12d
    419f:	89 fd                	mov    %edi,%ebp
    41a1:	8d 56 01             	lea    0x1(%rsi),%edx
    41a4:	89 50 18             	mov    %edx,0x18(%rax)
    41a7:	45 84 e4             	test   %r12b,%r12b
    41aa:	75 2c                	jne    41d8 <LogState+0x78>
    41ac:	8b 0d 32 50 34 00    	mov    0x345032(%rip),%ecx        # 3491e4 <rootsim_config+0x24>
    41b2:	83 f9 01             	cmp    $0x1,%ecx
    41b5:	74 2c                	je     41e3 <LogState+0x83>
    41b7:	83 f9 02             	cmp    $0x2,%ecx
    41ba:	0f 85 c0 00 00 00    	jne    4280 <LogState+0x120>
    41c0:	3b 50 14             	cmp    0x14(%rax),%edx
    41c3:	0f 82 af 00 00 00    	jb     4278 <LogState+0x118>
    41c9:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
    41d0:	eb 11                	jmp    41e3 <LogState+0x83>
    41d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    41d8:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    41dc:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
    41e3:	89 ef                	mov    %ebp,%edi
    41e5:	e8 16 f9 ff ff       	callq  3b00 <log_state>
    41ea:	48 03 1d 97 8e 21 00 	add    0x218e97(%rip),%rbx        # 21d088 <LPS>
    41f1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    41f5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    41fa:	48 8b 03             	mov    (%rbx),%rax
    41fd:	48 8b 50 30          	mov    0x30(%rax),%rdx
    4201:	48 85 d2             	test   %rdx,%rdx
    4204:	74 05                	je     420b <LogState+0xab>
    4206:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
    420b:	f3 0f 7e 48 08       	movq   0x8(%rax),%xmm1
    4210:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    4215:	48 89 e1             	mov    %rsp,%rcx
    4218:	89 ef                	mov    %ebp,%edi
    421a:	66 0f 6e 40 48       	movd   0x48(%rax),%xmm0
    421f:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4224:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    422a:	0f b7 50 10          	movzwl 0x10(%rax),%edx
    422e:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    4232:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    4237:	48 8b 40 20          	mov    0x20(%rax),%rax
    423b:	66 89 54 24 30       	mov    %dx,0x30(%rsp)
    4240:	ba 38 00 00 00       	mov    $0x38,%edx
    4245:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    424a:	48 8b 03             	mov    (%rbx),%rax
    424d:	48 8b 70 38          	mov    0x38(%rax),%rsi
    4251:	e8 3a 0b 00 00       	callq  4d90 <__list_insert_tail>
    4256:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    425b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4262:	00 00 
    4264:	75 2f                	jne    4295 <LogState+0x135>
    4266:	48 83 c4 40          	add    $0x40,%rsp
    426a:	44 89 e0             	mov    %r12d,%eax
    426d:	5b                   	pop    %rbx
    426e:	5d                   	pop    %rbp
    426f:	41 5c                	pop    %r12
    4271:	c3                   	retq   
    4272:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4278:	45 31 e4             	xor    %r12d,%r12d
    427b:	eb d9                	jmp    4256 <LogState+0xf6>
    427d:	0f 1f 00             	nopl   (%rax)
    4280:	48 8d 35 61 0b 01 00 	lea    0x10b61(%rip),%rsi        # 14de8 <__PRETTY_FUNCTION__.5886+0x608>
    4287:	bf 01 00 00 00       	mov    $0x1,%edi
    428c:	31 c0                	xor    %eax,%eax
    428e:	e8 7d 30 00 00       	callq  7310 <rootsim_error>
    4293:	eb c1                	jmp    4256 <LogState+0xf6>
    4295:	e8 06 d5 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    429a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000042a0 <RestoreState>:
    42a0:	55                   	push   %rbp
    42a1:	89 fd                	mov    %edi,%ebp
    42a3:	53                   	push   %rbx
    42a4:	89 ef                	mov    %ebp,%edi
    42a6:	48 89 f3             	mov    %rsi,%rbx
    42a9:	48 83 ec 08          	sub    $0x8,%rsp
    42ad:	e8 7e fd ff ff       	callq  4030 <log_restore>
    42b2:	48 8b 05 cf 8d 21 00 	mov    0x218dcf(%rip),%rax        # 21d088 <LPS>
    42b9:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    42bd:	48 8d 04 e8          	lea    (%rax,%rbp,8),%rax
    42c1:	48 8b 10             	mov    (%rax),%rdx
    42c4:	48 89 4a 20          	mov    %rcx,0x20(%rdx)
    42c8:	0f b7 53 30          	movzwl 0x30(%rbx),%edx
    42cc:	48 8b 00             	mov    (%rax),%rax
    42cf:	66 89 50 10          	mov    %dx,0x10(%rax)
    42d3:	48 8b 43 28          	mov    0x28(%rbx),%rax
    42d7:	48 83 c4 08          	add    $0x8,%rsp
    42db:	5b                   	pop    %rbx
    42dc:	5d                   	pop    %rbp
    42dd:	c3                   	retq   
    42de:	66 90                	xchg   %ax,%ax

00000000000042e0 <silent_execution>:
    42e0:	41 57                	push   %r15
    42e2:	49 89 d7             	mov    %rdx,%r15
    42e5:	41 56                	push   %r14
    42e7:	41 55                	push   %r13
    42e9:	41 54                	push   %r12
    42eb:	55                   	push   %rbp
    42ec:	53                   	push   %rbx
    42ed:	89 fb                	mov    %edi,%ebx
    42ef:	bf 10 00 00 00       	mov    $0x10,%edi
    42f4:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    42fb:	00 
    42fc:	48 89 dd             	mov    %rbx,%rbp
    42ff:	48 83 ec 48          	sub    $0x48,%rsp
    4303:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4308:	48 8b 05 79 8d 21 00 	mov    0x218d79(%rip),%rax        # 21d088 <LPS>
    430f:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    4314:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
    4318:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    431d:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    4321:	44 0f b7 70 10       	movzwl 0x10(%rax),%r14d
    4326:	66 89 78 10          	mov    %di,0x10(%rax)
    432a:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    4330:	44 89 f7             	mov    %r14d,%edi
    4333:	66 44 89 74 24 36    	mov    %r14w,0x36(%rsp)
    4339:	e8 e2 ec 00 00       	callq  13020 <check_silent_execution>
    433e:	48 8b 05 43 8d 21 00 	mov    0x218d43(%rip),%rax        # 21d088 <LPS>
    4345:	45 8b 6f 18          	mov    0x18(%r15),%r13d
    4349:	41 8b 57 14          	mov    0x14(%r15),%edx
    434d:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
    4351:	49 8b 5f f0          	mov    -0x10(%r15),%rbx
    4355:	4c 89 78 78          	mov    %r15,0x78(%rax)
    4359:	48 85 db             	test   %rbx,%rbx
    435c:	0f 84 98 01 00 00    	je     44fa <silent_execution+0x21a>
    4362:	44 89 ef             	mov    %r13d,%edi
    4365:	45 31 e4             	xor    %r12d,%r12d
    4368:	49 89 dd             	mov    %rbx,%r13
    436b:	89 fb                	mov    %edi,%ebx
    436d:	e9 bd 00 00 00       	jmpq   442f <silent_execution+0x14f>
    4372:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4378:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    437c:	7a 11                	jp     438f <silent_execution+0xaf>
    437e:	75 0f                	jne    438f <silent_execution+0xaf>
    4380:	41 0f b7 4d 20       	movzwl 0x20(%r13),%ecx
    4385:	3b 4c 24 30          	cmp    0x30(%rsp),%ecx
    4389:	0f 83 bf 00 00 00    	jae    444e <silent_execution+0x16e>
    438f:	4c 89 ff             	mov    %r15,%rdi
    4392:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    4396:	e8 c5 89 00 00       	callq  cd60 <is_valid>
    439b:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    439f:	84 c0                	test   %al,%al
    43a1:	0f 84 11 01 00 00    	je     44b8 <silent_execution+0x1d8>
    43a7:	41 8b 4d 24          	mov    0x24(%r13),%ecx
    43ab:	41 8b 75 28          	mov    0x28(%r13),%esi
    43af:	89 df                	mov    %ebx,%edi
    43b1:	41 83 c4 01          	add    $0x1,%r12d
    43b5:	e8 f6 ec 00 00       	callq  130b0 <check_epoch_and_frame>
    43ba:	4c 89 fa             	mov    %r15,%rdx
    43bd:	4c 89 fe             	mov    %r15,%rsi
    43c0:	44 89 f7             	mov    %r14d,%edi
    43c3:	e8 58 ed 00 00       	callq  13120 <check_events_state>
    43c8:	4c 89 ff             	mov    %r15,%rdi
    43cb:	e8 50 f7 00 00       	callq  13b20 <start_exposition_of_current_event>
    43d0:	48 83 ec 08          	sub    $0x8,%rsp
    43d4:	41 0f be 4d 23       	movsbl 0x23(%r13),%ecx
    43d9:	89 ef                	mov    %ebp,%edi
    43db:	41 0f be 75 22       	movsbl 0x22(%r13),%esi
    43e0:	f2 41 0f 10 45 18    	movsd  0x18(%r13),%xmm0
    43e6:	41 57                	push   %r15
    43e8:	49 8d 55 54          	lea    0x54(%r13),%rdx
    43ec:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
    43f1:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    43f7:	e8 d4 42 00 00       	callq  86d0 <executeEvent>
    43fc:	4c 89 ff             	mov    %r15,%rdi
    43ff:	e8 bc f5 00 00       	callq  139c0 <end_exposition_of_current_event>
    4404:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    4409:	48 8b 05 78 8c 21 00 	mov    0x218c78(%rip),%rax        # 21d088 <LPS>
    4410:	41 8b 5d 28          	mov    0x28(%r13),%ebx
    4414:	41 8b 55 24          	mov    0x24(%r13),%edx
    4418:	48 8b 04 38          	mov    (%rax,%rdi,1),%rax
    441c:	4d 8b 6d 00          	mov    0x0(%r13),%r13
    4420:	4c 89 78 78          	mov    %r15,0x78(%rax)
    4424:	59                   	pop    %rcx
    4425:	5e                   	pop    %rsi
    4426:	4d 85 ed             	test   %r13,%r13
    4429:	0f 84 c1 00 00 00    	je     44f0 <silent_execution+0x210>
    442f:	f2 41 0f 10 45 18    	movsd  0x18(%r13),%xmm0
    4435:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
    443b:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    4440:	4d 8d 7d 10          	lea    0x10(%r13),%r15
    4444:	66 0f 2f c1          	comisd %xmm1,%xmm0
    4448:	0f 86 2a ff ff ff    	jbe    4378 <silent_execution+0x98>
    444e:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    4453:	48 c7 c2 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rdx
    445a:	48 8b 70 28          	mov    0x28(%rax),%rsi
    445e:	89 ef                	mov    %ebp,%edi
    4460:	64 48 8b 0a          	mov    %fs:(%rdx),%rcx
    4464:	4c 89 fa             	mov    %r15,%rdx
    4467:	e8 e4 35 00 00       	callq  7a50 <insert_ordered_in_list>
    446c:	48 8b 05 15 8c 21 00 	mov    0x218c15(%rip),%rax        # 21d088 <LPS>
    4473:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    4478:	66 81 7c 24 36 00 01 	cmpw   $0x100,0x36(%rsp)
    447f:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
    4483:	74 0c                	je     4491 <silent_execution+0x1b1>
    4485:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    448a:	48 89 98 80 00 00 00 	mov    %rbx,0x80(%rax)
    4491:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    4496:	48 89 58 78          	mov    %rbx,0x78(%rax)
    449a:	0f b7 5c 24 36       	movzwl 0x36(%rsp),%ebx
    449f:	66 89 58 10          	mov    %bx,0x10(%rax)
    44a3:	48 83 c4 48          	add    $0x48,%rsp
    44a7:	44 89 e0             	mov    %r12d,%eax
    44aa:	5b                   	pop    %rbx
    44ab:	5d                   	pop    %rbp
    44ac:	41 5c                	pop    %r12
    44ae:	41 5d                	pop    %r13
    44b0:	41 5e                	pop    %r14
    44b2:	41 5f                	pop    %r15
    44b4:	c3                   	retq   
    44b5:	0f 1f 00             	nopl   (%rax)
    44b8:	89 ee                	mov    %ebp,%esi
    44ba:	44 89 f7             	mov    %r14d,%edi
    44bd:	e8 9e eb 00 00       	callq  13060 <check_stop_rollback>
    44c2:	48 8b 05 bf 8b 21 00 	mov    0x218bbf(%rip),%rax        # 21d088 <LPS>
    44c9:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    44ce:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
    44d2:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
    44d9:	4c 8b 78 78          	mov    0x78(%rax),%r15
    44dd:	c7 42 40 04 00 00 00 	movl   $0x4,0x40(%rdx)
    44e4:	e9 6a ff ff ff       	jmpq   4453 <silent_execution+0x173>
    44e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    44f0:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    44f5:	e9 59 ff ff ff       	jmpq   4453 <silent_execution+0x173>
    44fa:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    44ff:	45 31 e4             	xor    %r12d,%r12d
    4502:	e9 4c ff ff ff       	jmpq   4453 <silent_execution+0x173>
    4507:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    450e:	00 00 

0000000000004510 <rollback>:
    4510:	41 57                	push   %r15
    4512:	66 0f 28 c8          	movapd %xmm0,%xmm1
    4516:	41 56                	push   %r14
    4518:	41 55                	push   %r13
    451a:	41 54                	push   %r12
    451c:	41 89 f4             	mov    %esi,%r12d
    451f:	55                   	push   %rbp
    4520:	53                   	push   %rbx
    4521:	89 fb                	mov    %edi,%ebx
    4523:	48 89 dd             	mov    %rbx,%rbp
    4526:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
    452d:	00 
    452e:	48 83 ec 28          	sub    $0x28,%rsp
    4532:	48 8b 05 4f 8b 21 00 	mov    0x218b4f(%rip),%rax        # 21d088 <LPS>
    4539:	48 8b 0c d8          	mov    (%rax,%rbx,8),%rcx
    453d:	0f b7 41 10          	movzwl 0x10(%rcx),%eax
    4541:	66 83 f8 08          	cmp    $0x8,%ax
    4545:	74 0a                	je     4551 <rollback+0x41>
    4547:	66 3d 00 01          	cmp    $0x100,%ax
    454b:	0f 85 17 03 00 00    	jne    4868 <rollback+0x358>
    4551:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    4558:	64 39 28             	cmp    %ebp,%fs:(%rax)
    455b:	0f 85 df 01 00 00    	jne    4740 <rollback+0x230>
    4561:	66 0f 2e 0d 7f 0a 01 	ucomisd 0x10a7f(%rip),%xmm1        # 14fe8 <__PRETTY_FUNCTION__.5886+0x808>
    4568:	00 
    4569:	7a 19                	jp     4584 <rollback+0x74>
    456b:	75 17                	jne    4584 <rollback+0x74>
    456d:	48 8b 41 30          	mov    0x30(%rcx),%rax
    4571:	48 8b 40 f0          	mov    -0x10(%rax),%rax
    4575:	48 85 c0             	test   %rax,%rax
    4578:	74 0a                	je     4584 <rollback+0x74>
    457a:	f2 0f 10 48 18       	movsd  0x18(%rax),%xmm1
    457f:	44 0f b7 60 20       	movzwl 0x20(%rax),%r12d
    4584:	0f 31                	rdtsc  
    4586:	89 44 24 14          	mov    %eax,0x14(%rsp)
    458a:	48 8b 41 38          	mov    0x38(%rcx),%rax
    458e:	89 54 24 18          	mov    %edx,0x18(%rsp)
    4592:	4c 8b 48 10          	mov    0x10(%rax),%r9
    4596:	4d 85 c9             	test   %r9,%r9
    4599:	0f 84 48 03 00 00    	je     48e7 <rollback+0x3d7>
    459f:	4d 8d 71 10          	lea    0x10(%r9),%r14
    45a3:	eb 30                	jmp    45d5 <rollback+0xc5>
    45a5:	0f 1f 00             	nopl   (%rax)
    45a8:	48 8b 15 d9 8a 21 00 	mov    0x218ad9(%rip),%rdx        # 21d088 <LPS>
    45af:	49 8b 46 f8          	mov    -0x8(%r14),%rax
    45b3:	4a 8b 14 2a          	mov    (%rdx,%r13,1),%rdx
    45b7:	0f b7 52 10          	movzwl 0x10(%rdx),%edx
    45bb:	48 85 c0             	test   %rax,%rax
    45be:	0f 84 1c 01 00 00    	je     46e0 <rollback+0x1d0>
    45c4:	4c 8d 78 10          	lea    0x10(%rax),%r15
    45c8:	66 83 fa 08          	cmp    $0x8,%dx
    45cc:	0f 84 34 03 00 00    	je     4906 <rollback+0x3f6>
    45d2:	4d 89 fe             	mov    %r15,%r14
    45d5:	f2 41 0f 10 06       	movsd  (%r14),%xmm0
    45da:	66 0f 2f c1          	comisd %xmm1,%xmm0
    45de:	73 c8                	jae    45a8 <rollback+0x98>
    45e0:	49 8b 7e 18          	mov    0x18(%r14),%rdi
    45e4:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    45e9:	e8 72 87 00 00       	callq  cd60 <is_valid>
    45ee:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    45f3:	84 c0                	test   %al,%al
    45f5:	74 b1                	je     45a8 <rollback+0x98>
    45f7:	4c 89 f6             	mov    %r14,%rsi
    45fa:	89 ef                	mov    %ebp,%edi
    45fc:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    4601:	e8 2a fa ff ff       	callq  4030 <log_restore>
    4606:	48 8b 15 7b 8a 21 00 	mov    0x218a7b(%rip),%rdx        # 21d088 <LPS>
    460d:	49 8b 4e 08          	mov    0x8(%r14),%rcx
    4611:	4d 8b 7e 18          	mov    0x18(%r14),%r15
    4615:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    461a:	4c 01 ea             	add    %r13,%rdx
    461d:	48 8b 02             	mov    (%rdx),%rax
    4620:	48 89 48 20          	mov    %rcx,0x20(%rax)
    4624:	49 8b 46 28          	mov    0x28(%r14),%rax
    4628:	41 8b 4f 18          	mov    0x18(%r15),%ecx
    462c:	48 83 e8 01          	sub    $0x1,%rax
    4630:	48 39 c1             	cmp    %rax,%rcx
    4633:	49 89 c8             	mov    %rcx,%r8
    4636:	0f 85 3c 01 00 00    	jne    4778 <rollback+0x268>
    463c:	48 8b 02             	mov    (%rdx),%rax
    463f:	66 0f 28 c1          	movapd %xmm1,%xmm0
    4643:	4c 89 fa             	mov    %r15,%rdx
    4646:	44 89 e1             	mov    %r12d,%ecx
    4649:	89 ef                	mov    %ebp,%edi
    464b:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    4651:	48 8b 70 20          	mov    0x20(%rax),%rsi
    4655:	e8 86 fc ff ff       	callq  42e0 <silent_execution>
    465a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    465e:	be 68 00 00 00       	mov    $0x68,%esi
    4663:	89 ef                	mov    %ebp,%edi
    4665:	41 89 c7             	mov    %eax,%r15d
    4668:	f2 49 0f 2a c7       	cvtsi2sd %r15,%xmm0
    466d:	4d 89 fc             	mov    %r15,%r12
    4670:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    4675:	e8 46 bc 00 00       	callq  102c0 <statistics_post_lp_data>
    467a:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    467f:	48 8b 05 02 8a 21 00 	mov    0x218a02(%rip),%rax        # 21d088 <LPS>
    4686:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    468c:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
    4690:	0f b7 42 10          	movzwl 0x10(%rdx),%eax
    4694:	66 3d 00 01          	cmp    $0x100,%ax
    4698:	40 0f 94 c6          	sete   %sil
    469c:	0f 84 0e 01 00 00    	je     47b0 <rollback+0x2a0>
    46a2:	66 0f 2e 0d 3e 09 01 	ucomisd 0x1093e(%rip),%xmm1        # 14fe8 <__PRETTY_FUNCTION__.5886+0x808>
    46a9:	00 
    46aa:	0f 9b c1             	setnp  %cl
    46ad:	0f 45 ce             	cmovne %esi,%ecx
    46b0:	84 c9                	test   %cl,%cl
    46b2:	0f 85 f8 00 00 00    	jne    47b0 <rollback+0x2a0>
    46b8:	66 83 f8 08          	cmp    $0x8,%ax
    46bc:	0f 84 1d 01 00 00    	je     47df <rollback+0x2cf>
    46c2:	41 0f b7 46 30       	movzwl 0x30(%r14),%eax
    46c7:	66 89 42 10          	mov    %ax,0x10(%rdx)
    46cb:	48 83 c4 28          	add    $0x28,%rsp
    46cf:	5b                   	pop    %rbx
    46d0:	5d                   	pop    %rbp
    46d1:	41 5c                	pop    %r12
    46d3:	41 5d                	pop    %r13
    46d5:	41 5e                	pop    %r14
    46d7:	41 5f                	pop    %r15
    46d9:	c3                   	retq   
    46da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    46e0:	66 83 fa 08          	cmp    $0x8,%dx
    46e4:	75 3a                	jne    4720 <rollback+0x210>
    46e6:	49 8b 7e 10          	mov    0x10(%r14),%rdi
    46ea:	e8 71 f9 ff ff       	callq  4060 <log_delete>
    46ef:	b8 ef be be ba       	mov    $0xbabebeef,%eax
    46f4:	45 31 c0             	xor    %r8d,%r8d
    46f7:	4c 89 f1             	mov    %r14,%rcx
    46fa:	49 89 46 18          	mov    %rax,0x18(%r14)
    46fe:	48 8b 05 83 89 21 00 	mov    0x218983(%rip),%rax        # 21d088 <LPS>
    4705:	ba 38 00 00 00       	mov    $0x38,%edx
    470a:	89 ef                	mov    %ebp,%edi
    470c:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
    4710:	48 8b 70 38          	mov    0x38(%rax),%rsi
    4714:	e8 37 0b 00 00       	callq  5250 <__list_extract_by_content>
    4719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4720:	48 8d 0d 91 ff 00 00 	lea    0xff91(%rip),%rcx        # 146b8 <__PRETTY_FUNCTION__.6038>
    4727:	ba 4e 02 00 00       	mov    $0x24e,%edx
    472c:	48 8d 35 67 01 01 00 	lea    0x10167(%rip),%rsi        # 1489a <__PRETTY_FUNCTION__.5886+0xba>
    4733:	48 8d 3d 6b 01 01 00 	lea    0x1016b(%rip),%rdi        # 148a5 <__PRETTY_FUNCTION__.5886+0xc5>
    473a:	e8 e1 d0 ff ff       	callq  1820 <__assert_fail@plt>
    473f:	90                   	nop
    4740:	48 8d 3d 21 07 01 00 	lea    0x10721(%rip),%rdi        # 14e68 <__PRETTY_FUNCTION__.5886+0x688>
    4747:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    474c:	e8 ef cf ff ff       	callq  1740 <puts@plt>
    4751:	cc                   	int3   
    4752:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    4757:	66 0f 2e 0d 89 08 01 	ucomisd 0x10889(%rip),%xmm1        # 14fe8 <__PRETTY_FUNCTION__.5886+0x808>
    475e:	00 
    475f:	48 8b 05 22 89 21 00 	mov    0x218922(%rip),%rax        # 21d088 <LPS>
    4766:	48 8b 0c d8          	mov    (%rax,%rbx,8),%rcx
    476a:	0f 8b fb fd ff ff    	jnp    456b <rollback+0x5b>
    4770:	e9 0f fe ff ff       	jmpq   4584 <rollback+0x74>
    4775:	0f 1f 00             	nopl   (%rax)
    4778:	48 8b 02             	mov    (%rdx),%rax
    477b:	48 8d 35 1e 07 01 00 	lea    0x1071e(%rip),%rsi        # 14ea0 <__PRETTY_FUNCTION__.5886+0x6c0>
    4782:	44 89 c2             	mov    %r8d,%edx
    4785:	bf 01 00 00 00       	mov    $0x1,%edi
    478a:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    478f:	8b 48 48             	mov    0x48(%rax),%ecx
    4792:	31 c0                	xor    %eax,%eax
    4794:	e8 d7 d1 ff ff       	callq  1970 <__printf_chk@plt>
    4799:	cc                   	int3   
    479a:	48 8b 15 e7 88 21 00 	mov    0x2188e7(%rip),%rdx        # 21d088 <LPS>
    47a1:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    47a6:	4c 01 ea             	add    %r13,%rdx
    47a9:	e9 8e fe ff ff       	jmpq   463c <rollback+0x12c>
    47ae:	66 90                	xchg   %ax,%ax
    47b0:	be 71 00 00 00       	mov    $0x71,%esi
    47b5:	89 ef                	mov    %ebp,%edi
    47b7:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    47bc:	e8 ff ba 00 00       	callq  102c0 <statistics_post_lp_data>
    47c1:	48 8b 05 c0 88 21 00 	mov    0x2188c0(%rip),%rax        # 21d088 <LPS>
    47c8:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    47cd:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
    47d1:	0f b7 42 10          	movzwl 0x10(%rdx),%eax
    47d5:	66 83 f8 08          	cmp    $0x8,%ax
    47d9:	0f 85 e3 fe ff ff    	jne    46c2 <rollback+0x1b2>
    47df:	4d 69 ff 1f 85 eb 51 	imul   $0x51eb851f,%r15,%r15
    47e6:	41 8b 76 28          	mov    0x28(%r14),%esi
    47ea:	f2 0f 10 15 f6 07 01 	movsd  0x107f6(%rip),%xmm2        # 14fe8 <__PRETTY_FUNCTION__.5886+0x808>
    47f1:	00 
    47f2:	83 42 4c 01          	addl   $0x1,0x4c(%rdx)
    47f6:	8b 4a 48             	mov    0x48(%rdx),%ecx
    47f9:	44 01 e6             	add    %r12d,%esi
    47fc:	49 c1 ef 24          	shr    $0x24,%r15
    4800:	89 72 48             	mov    %esi,0x48(%rdx)
    4803:	41 6b c7 32          	imul   $0x32,%r15d,%eax
    4807:	41 29 c4             	sub    %eax,%r12d
    480a:	66 0f 2f d1          	comisd %xmm1,%xmm2
    480e:	44 89 62 18          	mov    %r12d,0x18(%rdx)
    4812:	0f 87 b3 00 00 00    	ja     48cb <rollback+0x3bb>
    4818:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
    481d:	8b 44 24 14          	mov    0x14(%rsp),%eax
    4821:	49 c1 e5 20          	shl    $0x20,%r13
    4825:	49 09 c5             	or     %rax,%r13
    4828:	0f 31                	rdtsc  
    482a:	48 c1 e2 20          	shl    $0x20,%rdx
    482e:	41 89 c4             	mov    %eax,%r12d
    4831:	49 09 d4             	or     %rdx,%r12
    4834:	4d 39 e5             	cmp    %r12,%r13
    4837:	77 73                	ja     48ac <rollback+0x39c>
    4839:	4d 29 ec             	sub    %r13,%r12
    483c:	78 52                	js     4890 <rollback+0x380>
    483e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4842:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
    4847:	be c9 00 00 00       	mov    $0xc9,%esi
    484c:	89 ef                	mov    %ebp,%edi
    484e:	e8 6d ba 00 00       	callq  102c0 <statistics_post_lp_data>
    4853:	48 8b 05 2e 88 21 00 	mov    0x21882e(%rip),%rax        # 21d088 <LPS>
    485a:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
    485e:	e9 5f fe ff ff       	jmpq   46c2 <rollback+0x1b2>
    4863:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4868:	48 83 c4 28          	add    $0x28,%rsp
    486c:	89 da                	mov    %ebx,%edx
    486e:	48 8d 35 9b 05 01 00 	lea    0x1059b(%rip),%rsi        # 14e10 <__PRETTY_FUNCTION__.5886+0x630>
    4875:	31 ff                	xor    %edi,%edi
    4877:	5b                   	pop    %rbx
    4878:	31 c0                	xor    %eax,%eax
    487a:	5d                   	pop    %rbp
    487b:	41 5c                	pop    %r12
    487d:	41 5d                	pop    %r13
    487f:	41 5e                	pop    %r14
    4881:	41 5f                	pop    %r15
    4883:	e9 88 2a 00 00       	jmpq   7310 <rootsim_error>
    4888:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    488f:	00 
    4890:	4c 89 e0             	mov    %r12,%rax
    4893:	41 83 e4 01          	and    $0x1,%r12d
    4897:	66 0f ef c0          	pxor   %xmm0,%xmm0
    489b:	48 d1 e8             	shr    %rax
    489e:	4c 09 e0             	or     %r12,%rax
    48a1:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    48a6:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    48aa:	eb 9b                	jmp    4847 <rollback+0x337>
    48ac:	4c 89 e1             	mov    %r12,%rcx
    48af:	4c 89 ea             	mov    %r13,%rdx
    48b2:	48 8d 35 07 05 01 00 	lea    0x10507(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
    48b9:	31 c0                	xor    %eax,%eax
    48bb:	bf 01 00 00 00       	mov    $0x1,%edi
    48c0:	e8 ab d0 ff ff       	callq  1970 <__printf_chk@plt>
    48c5:	cc                   	int3   
    48c6:	e9 6e ff ff ff       	jmpq   4839 <rollback+0x329>
    48cb:	29 f1                	sub    %esi,%ecx
    48cd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    48d1:	be 32 01 00 00       	mov    $0x132,%esi
    48d6:	89 ef                	mov    %ebp,%edi
    48d8:	f2 48 0f 2a c1       	cvtsi2sd %rcx,%xmm0
    48dd:	e8 de b9 00 00       	callq  102c0 <statistics_post_lp_data>
    48e2:	e9 31 ff ff ff       	jmpq   4818 <rollback+0x308>
    48e7:	48 8d 0d ca fd 00 00 	lea    0xfdca(%rip),%rcx        # 146b8 <__PRETTY_FUNCTION__.6038>
    48ee:	ba 42 02 00 00       	mov    $0x242,%edx
    48f3:	48 8d 35 a0 ff 00 00 	lea    0xffa0(%rip),%rsi        # 1489a <__PRETTY_FUNCTION__.5886+0xba>
    48fa:	48 8d 3d a4 ff 00 00 	lea    0xffa4(%rip),%rdi        # 148a5 <__PRETTY_FUNCTION__.5886+0xc5>
    4901:	e8 1a cf ff ff       	callq  1820 <__assert_fail@plt>
    4906:	49 8b 7e 10          	mov    0x10(%r14),%rdi
    490a:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    490f:	e8 4c f7 ff ff       	callq  4060 <log_delete>
    4914:	b8 ef be be ba       	mov    $0xbabebeef,%eax
    4919:	45 31 c0             	xor    %r8d,%r8d
    491c:	4c 89 f1             	mov    %r14,%rcx
    491f:	49 89 46 18          	mov    %rax,0x18(%r14)
    4923:	48 8b 05 5e 87 21 00 	mov    0x21875e(%rip),%rax        # 21d088 <LPS>
    492a:	ba 38 00 00 00       	mov    $0x38,%edx
    492f:	89 ef                	mov    %ebp,%edi
    4931:	4a 8b 04 28          	mov    (%rax,%r13,1),%rax
    4935:	48 8b 70 38          	mov    0x38(%rax),%rsi
    4939:	e8 12 09 00 00       	callq  5250 <__list_extract_by_content>
    493e:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    4943:	e9 8a fc ff ff       	jmpq   45d2 <rollback+0xc2>
    4948:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    494f:	00 

0000000000004950 <find_time_barrier>:
    4950:	48 8b 05 31 87 21 00 	mov    0x218731(%rip),%rax        # 21d088 <LPS>
    4957:	48 63 ff             	movslq %edi,%rdi
    495a:	66 0f 2e 05 7e 06 01 	ucomisd 0x1067e(%rip),%xmm0        # 14fe0 <__PRETTY_FUNCTION__.5886+0x800>
    4961:	00 
    4962:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
    4966:	48 8b 50 38          	mov    0x38(%rax),%rdx
    496a:	7b 3c                	jnp    49a8 <find_time_barrier+0x58>
    496c:	48 8b 42 10          	mov    0x10(%rdx),%rax
    4970:	48 85 c0             	test   %rax,%rax
    4973:	75 1c                	jne    4991 <find_time_barrier+0x41>
    4975:	48 8b 42 08          	mov    0x8(%rdx),%rax
    4979:	48 8d 50 10          	lea    0x10(%rax),%rdx
    497d:	48 85 c0             	test   %rax,%rax
    4980:	48 0f 45 c2          	cmovne %rdx,%rax
    4984:	c3                   	retq   
    4985:	0f 1f 00             	nopl   (%rax)
    4988:	48 8b 40 f8          	mov    -0x8(%rax),%rax
    498c:	48 85 c0             	test   %rax,%rax
    498f:	74 e4                	je     4975 <find_time_barrier+0x25>
    4991:	f2 0f 10 48 10       	movsd  0x10(%rax),%xmm1
    4996:	48 83 c0 10          	add    $0x10,%rax
    499a:	66 0f 2f c8          	comisd %xmm0,%xmm1
    499e:	73 e8                	jae    4988 <find_time_barrier+0x38>
    49a0:	c3                   	retq   
    49a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    49a8:	75 c2                	jne    496c <find_time_barrier+0x1c>
    49aa:	48 8b 42 08          	mov    0x8(%rdx),%rax
    49ae:	48 8d 50 10          	lea    0x10(%rax),%rdx
    49b2:	48 85 c0             	test   %rax,%rax
    49b5:	48 0f 45 c2          	cmovne %rdx,%rax
    49b9:	c3                   	retq   
    49ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000049c0 <ParallelSetState>:
    49c0:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    49c7:	64 8b 10             	mov    %fs:(%rax),%edx
    49ca:	48 8b 05 b7 86 21 00 	mov    0x2186b7(%rip),%rax        # 21d088 <LPS>
    49d1:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    49d5:	48 89 78 20          	mov    %rdi,0x20(%rax)
    49d9:	c3                   	retq   
    49da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000049e0 <set_checkpoint_mode>:
    49e0:	89 3d fe 47 34 00    	mov    %edi,0x3447fe(%rip)        # 3491e4 <rootsim_config+0x24>
    49e6:	c3                   	retq   
    49e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    49ee:	00 00 

00000000000049f0 <set_checkpoint_period>:
    49f0:	48 8b 05 91 86 21 00 	mov    0x218691(%rip),%rax        # 21d088 <LPS>
    49f7:	89 ff                	mov    %edi,%edi
    49f9:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
    49fd:	89 70 14             	mov    %esi,0x14(%rax)
    4a00:	c3                   	retq   
    4a01:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4a06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4a0d:	00 00 00 

0000000000004a10 <force_LP_checkpoint>:
    4a10:	48 8b 05 71 86 21 00 	mov    0x218671(%rip),%rax        # 21d088 <LPS>
    4a17:	89 ff                	mov    %edi,%edi
    4a19:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
    4a1d:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
    4a21:	c3                   	retq   
    4a22:	0f 1f 40 00          	nopl   0x0(%rax)
    4a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4a2d:	00 00 00 

0000000000004a30 <clean_checkpoint>:
    4a30:	41 57                	push   %r15
    4a32:	89 f8                	mov    %edi,%eax
    4a34:	41 56                	push   %r14
    4a36:	41 55                	push   %r13
    4a38:	41 54                	push   %r12
    4a3a:	55                   	push   %rbp
    4a3b:	48 89 c5             	mov    %rax,%rbp
    4a3e:	53                   	push   %rbx
    4a3f:	48 8d 1c c5 00 00 00 	lea    0x0(,%rax,8),%rbx
    4a46:	00 
    4a47:	48 83 ec 18          	sub    $0x18,%rsp
    4a4b:	48 8b 0d 36 86 21 00 	mov    0x218636(%rip),%rcx        # 21d088 <LPS>
    4a52:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4a57:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
    4a5b:	48 8b 70 28          	mov    0x28(%rax),%rsi
    4a5f:	48 8b 40 38          	mov    0x38(%rax),%rax
    4a63:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
    4a67:	48 8b 40 10          	mov    0x10(%rax),%rax
    4a6b:	49 8d 55 10          	lea    0x10(%r13),%rdx
    4a6f:	4d 85 ed             	test   %r13,%r13
    4a72:	4c 0f 45 ea          	cmovne %rdx,%r13
    4a76:	48 85 c0             	test   %rax,%rax
    4a79:	75 12                	jne    4a8d <clean_checkpoint+0x5d>
    4a7b:	e9 ae 01 00 00       	jmpq   4c2e <clean_checkpoint+0x1fe>
    4a80:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
    4a84:	48 85 c0             	test   %rax,%rax
    4a87:	0f 84 3f 01 00 00    	je     4bcc <clean_checkpoint+0x19c>
    4a8d:	48 8d 50 10          	lea    0x10(%rax),%rdx
    4a91:	48 8b 40 28          	mov    0x28(%rax),%rax
    4a95:	f2 0f 10 48 08       	movsd  0x8(%rax),%xmm1
    4a9a:	66 0f 2f c8          	comisd %xmm0,%xmm1
    4a9e:	73 e0                	jae    4a80 <clean_checkpoint+0x50>
    4aa0:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
    4aa4:	48 85 c0             	test   %rax,%rax
    4aa7:	0f 84 1f 01 00 00    	je     4bcc <clean_checkpoint+0x19c>
    4aad:	48 8b 50 28          	mov    0x28(%rax),%rdx
    4ab1:	48 8b 7a f8          	mov    -0x8(%rdx),%rdi
    4ab5:	48 89 3c 24          	mov    %rdi,(%rsp)
    4ab9:	48 85 ff             	test   %rdi,%rdi
    4abc:	0f 84 2e 01 00 00    	je     4bf0 <clean_checkpoint+0x1c0>
    4ac2:	48 8d 7a f0          	lea    -0x10(%rdx),%rdi
    4ac6:	48 83 04 24 10       	addq   $0x10,(%rsp)
    4acb:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
    4acf:	48 c7 42 f8 00 00 00 	movq   $0x0,-0x8(%rdx)
    4ad6:	00 
    4ad7:	48 8b 40 08          	mov    0x8(%rax),%rax
    4adb:	48 85 c0             	test   %rax,%rax
    4ade:	0f 84 9d 00 00 00    	je     4b81 <clean_checkpoint+0x151>
    4ae4:	4c 8b 70 08          	mov    0x8(%rax),%r14
    4ae8:	48 8b 78 20          	mov    0x20(%rax),%rdi
    4aec:	4c 8d 60 10          	lea    0x10(%rax),%r12
    4af0:	4d 85 f6             	test   %r14,%r14
    4af3:	74 49                	je     4b3e <clean_checkpoint+0x10e>
    4af5:	0f 1f 00             	nopl   (%rax)
    4af8:	e8 63 f5 ff ff       	callq  4060 <log_delete>
    4afd:	4d 89 e7             	mov    %r12,%r15
    4b00:	b8 ef be be ba       	mov    $0xbabebeef,%eax
    4b05:	89 ef                	mov    %ebp,%edi
    4b07:	49 89 47 18          	mov    %rax,0x18(%r15)
    4b0b:	45 31 c0             	xor    %r8d,%r8d
    4b0e:	4c 89 f9             	mov    %r15,%rcx
    4b11:	ba 38 00 00 00       	mov    $0x38,%edx
    4b16:	48 8b 05 6b 85 21 00 	mov    0x21856b(%rip),%rax        # 21d088 <LPS>
    4b1d:	4d 8d 66 10          	lea    0x10(%r14),%r12
    4b21:	48 8b 04 18          	mov    (%rax,%rbx,1),%rax
    4b25:	48 8b 70 38          	mov    0x38(%rax),%rsi
    4b29:	e8 22 07 00 00       	callq  5250 <__list_extract_by_content>
    4b2e:	4c 89 f0             	mov    %r14,%rax
    4b31:	4d 8b 76 08          	mov    0x8(%r14),%r14
    4b35:	48 8b 78 20          	mov    0x20(%rax),%rdi
    4b39:	4d 85 f6             	test   %r14,%r14
    4b3c:	75 ba                	jne    4af8 <clean_checkpoint+0xc8>
    4b3e:	e8 1d f5 ff ff       	callq  4060 <log_delete>
    4b43:	b8 ef be be ba       	mov    $0xbabebeef,%eax
    4b48:	45 31 c0             	xor    %r8d,%r8d
    4b4b:	4c 89 e1             	mov    %r12,%rcx
    4b4e:	49 89 44 24 18       	mov    %rax,0x18(%r12)
    4b53:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    4b58:	ba 38 00 00 00       	mov    $0x38,%edx
    4b5d:	89 ef                	mov    %ebp,%edi
    4b5f:	48 8b 05 22 85 21 00 	mov    0x218522(%rip),%rax        # 21d088 <LPS>
    4b66:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
    4b6a:	48 8b 70 38          	mov    0x38(%rax),%rsi
    4b6e:	e8 dd 06 00 00       	callq  5250 <__list_extract_by_content>
    4b73:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    4b78:	48 8b 0d 09 85 21 00 	mov    0x218509(%rip),%rcx        # 21d088 <LPS>
    4b7f:	74 37                	je     4bb8 <clean_checkpoint+0x188>
    4b81:	48 8b 04 24          	mov    (%rsp),%rax
    4b85:	49 8d 75 f0          	lea    -0x10(%r13),%rsi
    4b89:	48 c7 40 f0 00 00 00 	movq   $0x0,-0x10(%rax)
    4b90:	00 
    4b91:	48 c7 c0 d0 5e ff ff 	mov    $0xffffffffffff5ed0,%rax
    4b98:	64 48 8b 10          	mov    %fs:(%rax),%rdx
    4b9c:	48 8b 42 10          	mov    0x10(%rdx),%rax
    4ba0:	48 85 c0             	test   %rax,%rax
    4ba3:	74 3b                	je     4be0 <clean_checkpoint+0x1b0>
    4ba5:	48 89 30             	mov    %rsi,(%rax)
    4ba8:	4c 8b 34 24          	mov    (%rsp),%r14
    4bac:	49 89 45 f8          	mov    %rax,-0x8(%r13)
    4bb0:	49 83 ee 10          	sub    $0x10,%r14
    4bb4:	4c 89 72 10          	mov    %r14,0x10(%rdx)
    4bb8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4bbd:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
    4bc1:	48 8b 40 38          	mov    0x38(%rax),%rax
    4bc5:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    4bca:	74 43                	je     4c0f <clean_checkpoint+0x1df>
    4bcc:	48 83 c4 18          	add    $0x18,%rsp
    4bd0:	5b                   	pop    %rbx
    4bd1:	5d                   	pop    %rbp
    4bd2:	41 5c                	pop    %r12
    4bd4:	41 5d                	pop    %r13
    4bd6:	41 5e                	pop    %r14
    4bd8:	41 5f                	pop    %r15
    4bda:	c3                   	retq   
    4bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4be0:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    4be4:	eb c2                	jmp    4ba8 <clean_checkpoint+0x178>
    4be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4bed:	00 00 00 
    4bf0:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    4bf4:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    4bf8:	48 c7 42 f8 00 00 00 	movq   $0x0,-0x8(%rdx)
    4bff:	00 
    4c00:	48 8b 40 08          	mov    0x8(%rax),%rax
    4c04:	48 85 c0             	test   %rax,%rax
    4c07:	0f 85 d7 fe ff ff    	jne    4ae4 <clean_checkpoint+0xb4>
    4c0d:	eb bd                	jmp    4bcc <clean_checkpoint+0x19c>
    4c0f:	48 8d 0d 8a fa 00 00 	lea    0xfa8a(%rip),%rcx        # 146a0 <__PRETTY_FUNCTION__.6098>
    4c16:	ba 3f 03 00 00       	mov    $0x33f,%edx
    4c1b:	48 8d 35 78 fc 00 00 	lea    0xfc78(%rip),%rsi        # 1489a <__PRETTY_FUNCTION__.5886+0xba>
    4c22:	48 8d 3d bf 02 01 00 	lea    0x102bf(%rip),%rdi        # 14ee8 <__PRETTY_FUNCTION__.5886+0x708>
    4c29:	e8 f2 cb ff ff       	callq  1820 <__assert_fail@plt>
    4c2e:	48 8d 0d 6b fa 00 00 	lea    0xfa6b(%rip),%rcx        # 146a0 <__PRETTY_FUNCTION__.6098>
    4c35:	ba 05 03 00 00       	mov    $0x305,%edx
    4c3a:	48 8d 35 59 fc 00 00 	lea    0xfc59(%rip),%rsi        # 1489a <__PRETTY_FUNCTION__.5886+0xba>
    4c41:	48 8d 3d 71 fc 00 00 	lea    0xfc71(%rip),%rdi        # 148b9 <__PRETTY_FUNCTION__.5886+0xd9>
    4c48:	e8 d3 cb ff ff       	callq  1820 <__assert_fail@plt>
    4c4d:	0f 1f 00             	nopl   (%rax)

0000000000004c50 <__list_insert_tail_by_node.part.0>:
    4c50:	48 83 ec 08          	sub    $0x8,%rsp
    4c54:	48 8d 0d 65 fb 00 00 	lea    0xfb65(%rip),%rcx        # 147c0 <__PRETTY_FUNCTION__.5902>
    4c5b:	ba be 00 00 00       	mov    $0xbe,%edx
    4c60:	48 8d 35 61 fc 00 00 	lea    0xfc61(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    4c67:	48 8d 3d 6b fc 00 00 	lea    0xfc6b(%rip),%rdi        # 148d9 <__PRETTY_FUNCTION__.5886+0xf9>
    4c6e:	e8 ad cb ff ff       	callq  1820 <__assert_fail@plt>
    4c73:	0f 1f 00             	nopl   (%rax)
    4c76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4c7d:	00 00 00 

0000000000004c80 <umalloc>:
    4c80:	48 89 f7             	mov    %rsi,%rdi
    4c83:	e9 c8 0f 00 00       	jmpq   5c50 <rsalloc>
    4c88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4c8f:	00 

0000000000004c90 <ufree>:
    4c90:	48 89 f7             	mov    %rsi,%rdi
    4c93:	e9 f8 0f 00 00       	jmpq   5c90 <rsfree>
    4c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4c9f:	00 

0000000000004ca0 <__list_insert_head>:
    4ca0:	41 57                	push   %r15
    4ca2:	41 56                	push   %r14
    4ca4:	41 55                	push   %r13
    4ca6:	41 54                	push   %r12
    4ca8:	55                   	push   %rbp
    4ca9:	53                   	push   %rbx
    4caa:	48 83 ec 08          	sub    $0x8,%rsp
    4cae:	48 85 f6             	test   %rsi,%rsi
    4cb1:	0f 84 90 00 00 00    	je     4d47 <__list_insert_head+0xa7>
    4cb7:	41 89 d4             	mov    %edx,%r12d
    4cba:	49 89 cd             	mov    %rcx,%r13
    4cbd:	4c 8b 36             	mov    (%rsi),%r14
    4cc0:	48 89 f3             	mov    %rsi,%rbx
    4cc3:	4d 8d 7c 24 10       	lea    0x10(%r12),%r15
    4cc8:	4c 89 ff             	mov    %r15,%rdi
    4ccb:	e8 80 0f 00 00       	callq  5c50 <rsalloc>
    4cd0:	4c 89 fa             	mov    %r15,%rdx
    4cd3:	31 f6                	xor    %esi,%esi
    4cd5:	48 89 c5             	mov    %rax,%rbp
    4cd8:	48 89 c7             	mov    %rax,%rdi
    4cdb:	e8 70 cb ff ff       	callq  1850 <memset@plt>
    4ce0:	4c 8d 45 10          	lea    0x10(%rbp),%r8
    4ce4:	4c 89 e2             	mov    %r12,%rdx
    4ce7:	4c 89 ee             	mov    %r13,%rsi
    4cea:	4c 89 c7             	mov    %r8,%rdi
    4ced:	e8 fe cb ff ff       	callq  18f0 <memcpy@plt>
    4cf2:	49 89 c0             	mov    %rax,%r8
    4cf5:	4d 85 f6             	test   %r14,%r14
    4cf8:	74 3e                	je     4d38 <__list_insert_head+0x98>
    4cfa:	48 8b 43 08          	mov    0x8(%rbx),%rax
    4cfe:	48 c7 45 08 00 00 00 	movq   $0x0,0x8(%rbp)
    4d05:	00 
    4d06:	48 89 45 00          	mov    %rax,0x0(%rbp)
    4d0a:	48 89 68 08          	mov    %rbp,0x8(%rax)
    4d0e:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    4d12:	48 8b 03             	mov    (%rbx),%rax
    4d15:	48 8d 50 01          	lea    0x1(%rax),%rdx
    4d19:	48 89 13             	mov    %rdx,(%rbx)
    4d1c:	4c 39 f0             	cmp    %r14,%rax
    4d1f:	75 45                	jne    4d66 <__list_insert_head+0xc6>
    4d21:	48 83 c4 08          	add    $0x8,%rsp
    4d25:	4c 89 c0             	mov    %r8,%rax
    4d28:	5b                   	pop    %rbx
    4d29:	5d                   	pop    %rbp
    4d2a:	41 5c                	pop    %r12
    4d2c:	41 5d                	pop    %r13
    4d2e:	41 5e                	pop    %r14
    4d30:	41 5f                	pop    %r15
    4d32:	c3                   	retq   
    4d33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4d38:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    4d3d:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    4d41:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    4d45:	eb cb                	jmp    4d12 <__list_insert_head+0x72>
    4d47:	48 8d 0d 92 fa 00 00 	lea    0xfa92(%rip),%rcx        # 147e0 <__PRETTY_FUNCTION__.5886>
    4d4e:	ba 6d 00 00 00       	mov    $0x6d,%edx
    4d53:	48 8d 35 6e fb 00 00 	lea    0xfb6e(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    4d5a:	48 8d 3d 78 fb 00 00 	lea    0xfb78(%rip),%rdi        # 148d9 <__PRETTY_FUNCTION__.5886+0xf9>
    4d61:	e8 ba ca ff ff       	callq  1820 <__assert_fail@plt>
    4d66:	48 8d 0d 73 fa 00 00 	lea    0xfa73(%rip),%rcx        # 147e0 <__PRETTY_FUNCTION__.5886>
    4d6d:	ba 8b 00 00 00       	mov    $0x8b,%edx
    4d72:	48 8d 35 4f fb 00 00 	lea    0xfb4f(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    4d79:	48 8d 3d 5b fb 00 00 	lea    0xfb5b(%rip),%rdi        # 148db <__PRETTY_FUNCTION__.5886+0xfb>
    4d80:	e8 9b ca ff ff       	callq  1820 <__assert_fail@plt>
    4d85:	90                   	nop
    4d86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4d8d:	00 00 00 

0000000000004d90 <__list_insert_tail>:
    4d90:	41 56                	push   %r14
    4d92:	41 55                	push   %r13
    4d94:	49 89 cd             	mov    %rcx,%r13
    4d97:	41 54                	push   %r12
    4d99:	41 89 d4             	mov    %edx,%r12d
    4d9c:	55                   	push   %rbp
    4d9d:	4d 8d 74 24 10       	lea    0x10(%r12),%r14
    4da2:	53                   	push   %rbx
    4da3:	4c 89 f7             	mov    %r14,%rdi
    4da6:	48 89 f3             	mov    %rsi,%rbx
    4da9:	e8 a2 0e 00 00       	callq  5c50 <rsalloc>
    4dae:	4c 89 f2             	mov    %r14,%rdx
    4db1:	31 f6                	xor    %esi,%esi
    4db3:	48 89 c5             	mov    %rax,%rbp
    4db6:	48 89 c7             	mov    %rax,%rdi
    4db9:	e8 92 ca ff ff       	callq  1850 <memset@plt>
    4dbe:	4c 8d 45 10          	lea    0x10(%rbp),%r8
    4dc2:	4c 89 e2             	mov    %r12,%rdx
    4dc5:	4c 89 ee             	mov    %r13,%rsi
    4dc8:	4c 89 c7             	mov    %r8,%rdi
    4dcb:	e8 20 cb ff ff       	callq  18f0 <memcpy@plt>
    4dd0:	49 89 c0             	mov    %rax,%r8
    4dd3:	48 85 db             	test   %rbx,%rbx
    4dd6:	74 47                	je     4e1f <__list_insert_tail+0x8f>
    4dd8:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    4ddd:	48 8b 03             	mov    (%rbx),%rax
    4de0:	74 2e                	je     4e10 <__list_insert_tail+0x80>
    4de2:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    4de6:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    4ded:	00 
    4dee:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    4df2:	48 89 2a             	mov    %rbp,(%rdx)
    4df5:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
    4df9:	48 83 c0 01          	add    $0x1,%rax
    4dfd:	48 89 03             	mov    %rax,(%rbx)
    4e00:	5b                   	pop    %rbx
    4e01:	4c 89 c0             	mov    %r8,%rax
    4e04:	5d                   	pop    %rbp
    4e05:	41 5c                	pop    %r12
    4e07:	41 5d                	pop    %r13
    4e09:	41 5e                	pop    %r14
    4e0b:	c3                   	retq   
    4e0c:	0f 1f 40 00          	nopl   0x0(%rax)
    4e10:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    4e15:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    4e19:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    4e1d:	eb da                	jmp    4df9 <__list_insert_tail+0x69>
    4e1f:	e8 2c fe ff ff       	callq  4c50 <__list_insert_tail_by_node.part.0>
    4e24:	66 90                	xchg   %ax,%ax
    4e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4e2d:	00 00 00 

0000000000004e30 <__list_insert_tail_by_node>:
    4e30:	48 85 ff             	test   %rdi,%rdi
    4e33:	74 4c                	je     4e81 <__list_insert_tail_by_node+0x51>
    4e35:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
    4e3a:	48 8b 07             	mov    (%rdi),%rax
    4e3d:	74 29                	je     4e68 <__list_insert_tail_by_node+0x38>
    4e3f:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    4e43:	48 83 c0 01          	add    $0x1,%rax
    4e47:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    4e4e:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    4e52:	48 89 32             	mov    %rsi,(%rdx)
    4e55:	48 89 07             	mov    %rax,(%rdi)
    4e58:	48 8d 46 10          	lea    0x10(%rsi),%rax
    4e5c:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    4e60:	c3                   	retq   
    4e61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4e68:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    4e6d:	48 83 c0 01          	add    $0x1,%rax
    4e71:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    4e75:	48 89 07             	mov    %rax,(%rdi)
    4e78:	48 8d 46 10          	lea    0x10(%rsi),%rax
    4e7c:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    4e80:	c3                   	retq   
    4e81:	50                   	push   %rax
    4e82:	e8 c9 fd ff ff       	callq  4c50 <__list_insert_tail_by_node.part.0>
    4e87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4e8e:	00 00 

0000000000004e90 <dump_l>:
    4e90:	48 85 ff             	test   %rdi,%rdi
    4e93:	74 4b                	je     4ee0 <dump_l+0x50>
    4e95:	41 54                	push   %r12
    4e97:	4c 8d 25 5a fa 00 00 	lea    0xfa5a(%rip),%r12        # 148f8 <__PRETTY_FUNCTION__.5886+0x118>
    4e9e:	55                   	push   %rbp
    4e9f:	48 89 f5             	mov    %rsi,%rbp
    4ea2:	53                   	push   %rbx
    4ea3:	48 89 fb             	mov    %rdi,%rbx
    4ea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4ead:	00 00 00 
    4eb0:	f2 0f 10 44 2b 10    	movsd  0x10(%rbx,%rbp,1),%xmm0
    4eb6:	4c 89 e6             	mov    %r12,%rsi
    4eb9:	bf 01 00 00 00       	mov    $0x1,%edi
    4ebe:	b8 01 00 00 00       	mov    $0x1,%eax
    4ec3:	e8 a8 ca ff ff       	callq  1970 <__printf_chk@plt>
    4ec8:	48 8b 1b             	mov    (%rbx),%rbx
    4ecb:	48 85 db             	test   %rbx,%rbx
    4ece:	75 e0                	jne    4eb0 <dump_l+0x20>
    4ed0:	5b                   	pop    %rbx
    4ed1:	bf 0a 00 00 00       	mov    $0xa,%edi
    4ed6:	5d                   	pop    %rbp
    4ed7:	41 5c                	pop    %r12
    4ed9:	e9 b2 c7 ff ff       	jmpq   1690 <putchar@plt>
    4ede:	66 90                	xchg   %ax,%ax
    4ee0:	bf 0a 00 00 00       	mov    $0xa,%edi
    4ee5:	e9 a6 c7 ff ff       	jmpq   1690 <putchar@plt>
    4eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004ef0 <__list_place>:
    4ef0:	48 85 f6             	test   %rsi,%rsi
    4ef3:	0f 84 c9 00 00 00    	je     4fc2 <__list_place+0xd2>
    4ef9:	48 8b 3e             	mov    (%rsi),%rdi
    4efc:	4c 8d 49 10          	lea    0x10(%rcx),%r9
    4f00:	48 85 ff             	test   %rdi,%rdi
    4f03:	74 5b                	je     4f60 <__list_place+0x70>
    4f05:	4c 8b 46 10          	mov    0x10(%rsi),%r8
    4f09:	4d 85 c0             	test   %r8,%r8
    4f0c:	74 71                	je     4f7f <__list_place+0x8f>
    4f0e:	f2 0f 10 4c 11 10    	movsd  0x10(%rcx,%rdx,1),%xmm1
    4f14:	4c 89 c0             	mov    %r8,%rax
    4f17:	eb 10                	jmp    4f29 <__list_place+0x39>
    4f19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4f20:	48 8b 40 08          	mov    0x8(%rax),%rax
    4f24:	48 85 c0             	test   %rax,%rax
    4f27:	74 77                	je     4fa0 <__list_place+0xb0>
    4f29:	f2 0f 10 44 10 10    	movsd  0x10(%rax,%rdx,1),%xmm0
    4f2f:	66 0f 2f c1          	comisd %xmm1,%xmm0
    4f33:	77 eb                	ja     4f20 <__list_place+0x30>
    4f35:	49 39 c0             	cmp    %rax,%r8
    4f38:	74 45                	je     4f7f <__list_place+0x8f>
    4f3a:	48 8b 10             	mov    (%rax),%rdx
    4f3d:	48 83 c7 01          	add    $0x1,%rdi
    4f41:	48 89 41 08          	mov    %rax,0x8(%rcx)
    4f45:	48 89 11             	mov    %rdx,(%rcx)
    4f48:	48 8b 10             	mov    (%rax),%rdx
    4f4b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    4f4f:	48 89 08             	mov    %rcx,(%rax)
    4f52:	4c 89 c8             	mov    %r9,%rax
    4f55:	48 89 3e             	mov    %rdi,(%rsi)
    4f58:	c3                   	retq   
    4f59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4f60:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4f64:	48 83 c7 01          	add    $0x1,%rdi
    4f68:	4c 89 c8             	mov    %r9,%rax
    4f6b:	0f 11 01             	movups %xmm0,(%rcx)
    4f6e:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    4f73:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    4f77:	48 89 3e             	mov    %rdi,(%rsi)
    4f7a:	0f 11 46 08          	movups %xmm0,0x8(%rsi)
    4f7e:	c3                   	retq   
    4f7f:	48 83 c7 01          	add    $0x1,%rdi
    4f83:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    4f8a:	4c 89 c8             	mov    %r9,%rax
    4f8d:	49 89 08             	mov    %rcx,(%r8)
    4f90:	4c 89 41 08          	mov    %r8,0x8(%rcx)
    4f94:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    4f98:	48 89 3e             	mov    %rdi,(%rsi)
    4f9b:	c3                   	retq   
    4f9c:	0f 1f 40 00          	nopl   0x0(%rax)
    4fa0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    4fa4:	48 83 c7 01          	add    $0x1,%rdi
    4fa8:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
    4faf:	00 
    4fb0:	48 89 01             	mov    %rax,(%rcx)
    4fb3:	48 89 48 08          	mov    %rcx,0x8(%rax)
    4fb7:	4c 89 c8             	mov    %r9,%rax
    4fba:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    4fbe:	48 89 3e             	mov    %rdi,(%rsi)
    4fc1:	c3                   	retq   
    4fc2:	50                   	push   %rax
    4fc3:	48 8d 0d e6 f7 00 00 	lea    0xf7e6(%rip),%rcx        # 147b0 <__PRETTY_FUNCTION__.5930>
    4fca:	ba 09 01 00 00       	mov    $0x109,%edx
    4fcf:	48 8d 35 f2 f8 00 00 	lea    0xf8f2(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    4fd6:	48 8d 3d fc f8 00 00 	lea    0xf8fc(%rip),%rdi        # 148d9 <__PRETTY_FUNCTION__.5886+0xf9>
    4fdd:	e8 3e c8 ff ff       	callq  1820 <__assert_fail@plt>
    4fe2:	0f 1f 40 00          	nopl   0x0(%rax)
    4fe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4fed:	00 00 00 

0000000000004ff0 <__list_insert>:
    4ff0:	41 57                	push   %r15
    4ff2:	49 89 cf             	mov    %rcx,%r15
    4ff5:	41 56                	push   %r14
    4ff7:	41 55                	push   %r13
    4ff9:	41 89 d5             	mov    %edx,%r13d
    4ffc:	41 54                	push   %r12
    4ffe:	4d 8d 75 10          	lea    0x10(%r13),%r14
    5002:	55                   	push   %rbp
    5003:	89 fd                	mov    %edi,%ebp
    5005:	4c 89 f7             	mov    %r14,%rdi
    5008:	53                   	push   %rbx
    5009:	4c 89 c3             	mov    %r8,%rbx
    500c:	48 83 ec 18          	sub    $0x18,%rsp
    5010:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    5015:	e8 36 0c 00 00       	callq  5c50 <rsalloc>
    501a:	4c 89 f2             	mov    %r14,%rdx
    501d:	31 f6                	xor    %esi,%esi
    501f:	49 89 c4             	mov    %rax,%r12
    5022:	48 89 c7             	mov    %rax,%rdi
    5025:	e8 26 c8 ff ff       	callq  1850 <memset@plt>
    502a:	4c 89 f2             	mov    %r14,%rdx
    502d:	4c 89 e7             	mov    %r12,%rdi
    5030:	31 f6                	xor    %esi,%esi
    5032:	e8 19 c8 ff ff       	callq  1850 <memset@plt>
    5037:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    503c:	4c 89 ea             	mov    %r13,%rdx
    503f:	48 89 de             	mov    %rbx,%rsi
    5042:	e8 a9 c8 ff ff       	callq  18f0 <memcpy@plt>
    5047:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    504c:	48 83 c4 18          	add    $0x18,%rsp
    5050:	89 ef                	mov    %ebp,%edi
    5052:	5b                   	pop    %rbx
    5053:	4c 89 e1             	mov    %r12,%rcx
    5056:	5d                   	pop    %rbp
    5057:	4c 89 fa             	mov    %r15,%rdx
    505a:	41 5c                	pop    %r12
    505c:	41 5d                	pop    %r13
    505e:	41 5e                	pop    %r14
    5060:	41 5f                	pop    %r15
    5062:	e9 89 fe ff ff       	jmpq   4ef0 <__list_place>
    5067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    506e:	00 00 

0000000000005070 <__list_extract>:
    5070:	41 57                	push   %r15
    5072:	41 56                	push   %r14
    5074:	41 55                	push   %r13
    5076:	41 54                	push   %r12
    5078:	55                   	push   %rbp
    5079:	53                   	push   %rbx
    507a:	48 83 ec 08          	sub    $0x8,%rsp
    507e:	48 85 f6             	test   %rsi,%rsi
    5081:	0f 84 38 01 00 00    	je     51bf <__list_extract+0x14f>
    5087:	48 8b 46 08          	mov    0x8(%rsi),%rax
    508b:	48 89 f3             	mov    %rsi,%rbx
    508e:	48 85 c0             	test   %rax,%rax
    5091:	0f 84 04 01 00 00    	je     519b <__list_extract+0x12b>
    5097:	49 89 c4             	mov    %rax,%r12
    509a:	eb 11                	jmp    50ad <__list_extract+0x3d>
    509c:	0f 1f 40 00          	nopl   0x0(%rax)
    50a0:	4d 8b 24 24          	mov    (%r12),%r12
    50a4:	4d 85 e4             	test   %r12,%r12
    50a7:	0f 84 98 00 00 00    	je     5145 <__list_extract+0xd5>
    50ad:	66 41 0f 2e 44 0c 10 	ucomisd 0x10(%r12,%rcx,1),%xmm0
    50b4:	49 8d 6c 24 10       	lea    0x10(%r12),%rbp
    50b9:	7a e5                	jp     50a0 <__list_extract+0x30>
    50bb:	75 e3                	jne    50a0 <__list_extract+0x30>
    50bd:	4c 8b 33             	mov    (%rbx),%r14
    50c0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    50c4:	4c 39 e0             	cmp    %r12,%rax
    50c7:	0f 84 93 00 00 00    	je     5160 <__list_extract+0xf0>
    50cd:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    50d2:	49 39 f4             	cmp    %rsi,%r12
    50d5:	0f 84 a3 00 00 00    	je     517e <__list_extract+0x10e>
    50db:	49 8b 0c 24          	mov    (%r12),%rcx
    50df:	48 85 c9             	test   %rcx,%rcx
    50e2:	74 09                	je     50ed <__list_extract+0x7d>
    50e4:	48 89 41 08          	mov    %rax,0x8(%rcx)
    50e8:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    50ed:	48 85 c0             	test   %rax,%rax
    50f0:	74 03                	je     50f5 <__list_extract+0x85>
    50f2:	48 89 08             	mov    %rcx,(%rax)
    50f5:	41 89 d5             	mov    %edx,%r13d
    50f8:	4c 89 ef             	mov    %r13,%rdi
    50fb:	e8 50 0b 00 00       	callq  5c50 <rsalloc>
    5100:	4c 89 ea             	mov    %r13,%rdx
    5103:	48 89 ee             	mov    %rbp,%rsi
    5106:	48 89 c7             	mov    %rax,%rdi
    5109:	49 89 c7             	mov    %rax,%r15
    510c:	e8 df c7 ff ff       	callq  18f0 <memcpy@plt>
    5111:	4c 89 ea             	mov    %r13,%rdx
    5114:	31 f6                	xor    %esi,%esi
    5116:	48 89 ef             	mov    %rbp,%rdi
    5119:	66 0f 6f 05 ef fe 00 	movdqa 0xfeef(%rip),%xmm0        # 15010 <__PRETTY_FUNCTION__.5886+0x830>
    5120:	00 
    5121:	41 0f 11 04 24       	movups %xmm0,(%r12)
    5126:	e8 25 c7 ff ff       	callq  1850 <memset@plt>
    512b:	4c 89 e7             	mov    %r12,%rdi
    512e:	4d 89 fc             	mov    %r15,%r12
    5131:	e8 5a 0b 00 00       	callq  5c90 <rsfree>
    5136:	48 8b 03             	mov    (%rbx),%rax
    5139:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    513d:	48 89 13             	mov    %rdx,(%rbx)
    5140:	4c 39 f0             	cmp    %r14,%rax
    5143:	75 5b                	jne    51a0 <__list_extract+0x130>
    5145:	48 83 c4 08          	add    $0x8,%rsp
    5149:	4c 89 e0             	mov    %r12,%rax
    514c:	5b                   	pop    %rbx
    514d:	5d                   	pop    %rbp
    514e:	41 5c                	pop    %r12
    5150:	41 5d                	pop    %r13
    5152:	41 5e                	pop    %r14
    5154:	41 5f                	pop    %r15
    5156:	c3                   	retq   
    5157:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    515e:	00 00 
    5160:	49 8b 0c 24          	mov    (%r12),%rcx
    5164:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    5168:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
    516f:	00 
    5170:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    5175:	49 39 f4             	cmp    %rsi,%r12
    5178:	0f 85 66 ff ff ff    	jne    50e4 <__list_extract+0x74>
    517e:	48 89 43 10          	mov    %rax,0x10(%rbx)
    5182:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5189:	49 8b 0c 24          	mov    (%r12),%rcx
    518d:	48 85 c9             	test   %rcx,%rcx
    5190:	0f 85 4e ff ff ff    	jne    50e4 <__list_extract+0x74>
    5196:	e9 57 ff ff ff       	jmpq   50f2 <__list_extract+0x82>
    519b:	45 31 e4             	xor    %r12d,%r12d
    519e:	eb a5                	jmp    5145 <__list_extract+0xd5>
    51a0:	48 8d 0d f9 f5 00 00 	lea    0xf5f9(%rip),%rcx        # 147a0 <__PRETTY_FUNCTION__.5952>
    51a7:	ba 83 01 00 00       	mov    $0x183,%edx
    51ac:	48 8d 35 15 f7 00 00 	lea    0xf715(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    51b3:	48 8d 3d 45 f7 00 00 	lea    0xf745(%rip),%rdi        # 148ff <__PRETTY_FUNCTION__.5886+0x11f>
    51ba:	e8 61 c6 ff ff       	callq  1820 <__assert_fail@plt>
    51bf:	48 8d 0d da f5 00 00 	lea    0xf5da(%rip),%rcx        # 147a0 <__PRETTY_FUNCTION__.5952>
    51c6:	ba 57 01 00 00       	mov    $0x157,%edx
    51cb:	48 8d 35 f6 f6 00 00 	lea    0xf6f6(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    51d2:	48 8d 3d 00 f7 00 00 	lea    0xf700(%rip),%rdi        # 148d9 <__PRETTY_FUNCTION__.5886+0xf9>
    51d9:	e8 42 c6 ff ff       	callq  1820 <__assert_fail@plt>
    51de:	66 90                	xchg   %ax,%ax

00000000000051e0 <__list_delete>:
    51e0:	55                   	push   %rbp
    51e1:	53                   	push   %rbx
    51e2:	89 d3                	mov    %edx,%ebx
    51e4:	48 83 ec 18          	sub    $0x18,%rsp
    51e8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    51ef:	00 00 
    51f1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    51f6:	31 c0                	xor    %eax,%eax
    51f8:	e8 73 fe ff ff       	callq  5070 <__list_extract>
    51fd:	45 31 c0             	xor    %r8d,%r8d
    5200:	48 89 04 24          	mov    %rax,(%rsp)
    5204:	48 85 c0             	test   %rax,%rax
    5207:	74 20                	je     5229 <__list_delete+0x49>
    5209:	89 da                	mov    %ebx,%edx
    520b:	48 89 e7             	mov    %rsp,%rdi
    520e:	b9 08 00 00 00       	mov    $0x8,%ecx
    5213:	31 f6                	xor    %esi,%esi
    5215:	e8 16 c8 ff ff       	callq  1a30 <__memset_chk@plt>
    521a:	48 8b 3c 24          	mov    (%rsp),%rdi
    521e:	e8 6d 0a 00 00       	callq  5c90 <rsfree>
    5223:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    5229:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    522e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5235:	00 00 
    5237:	75 0a                	jne    5243 <__list_delete+0x63>
    5239:	48 83 c4 18          	add    $0x18,%rsp
    523d:	44 89 c0             	mov    %r8d,%eax
    5240:	5b                   	pop    %rbx
    5241:	5d                   	pop    %rbp
    5242:	c3                   	retq   
    5243:	e8 58 c5 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    5248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    524f:	00 

0000000000005250 <__list_extract_by_content>:
    5250:	41 57                	push   %r15
    5252:	41 56                	push   %r14
    5254:	41 55                	push   %r13
    5256:	41 54                	push   %r12
    5258:	55                   	push   %rbp
    5259:	53                   	push   %rbx
    525a:	48 83 ec 18          	sub    $0x18,%rsp
    525e:	48 85 f6             	test   %rsi,%rsi
    5261:	0f 84 50 01 00 00    	je     53b7 <__list_extract_by_content+0x167>
    5267:	48 8b 06             	mov    (%rsi),%rax
    526a:	48 89 f3             	mov    %rsi,%rbx
    526d:	48 89 cd             	mov    %rcx,%rbp
    5270:	48 8b 76 10          	mov    0x10(%rsi),%rsi
    5274:	4c 8d 71 f0          	lea    -0x10(%rcx),%r14
    5278:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    527d:	4c 39 73 08          	cmp    %r14,0x8(%rbx)
    5281:	0f 84 c1 00 00 00    	je     5348 <__list_extract_by_content+0xf8>
    5287:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
    528b:	4c 39 f6             	cmp    %r14,%rsi
    528e:	0f 84 8c 00 00 00    	je     5320 <__list_extract_by_content+0xd0>
    5294:	48 8b 49 f0          	mov    -0x10(%rcx),%rcx
    5298:	48 85 c9             	test   %rcx,%rcx
    529b:	74 08                	je     52a5 <__list_extract_by_content+0x55>
    529d:	48 89 41 08          	mov    %rax,0x8(%rcx)
    52a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52a5:	48 85 c0             	test   %rax,%rax
    52a8:	74 03                	je     52ad <__list_extract_by_content+0x5d>
    52aa:	48 89 08             	mov    %rcx,(%rax)
    52ad:	41 89 d7             	mov    %edx,%r15d
    52b0:	45 31 e4             	xor    %r12d,%r12d
    52b3:	45 84 c0             	test   %r8b,%r8b
    52b6:	74 19                	je     52d1 <__list_extract_by_content+0x81>
    52b8:	4c 89 ff             	mov    %r15,%rdi
    52bb:	e8 90 09 00 00       	callq  5c50 <rsalloc>
    52c0:	4c 89 fa             	mov    %r15,%rdx
    52c3:	48 89 ee             	mov    %rbp,%rsi
    52c6:	48 89 c7             	mov    %rax,%rdi
    52c9:	49 89 c4             	mov    %rax,%r12
    52cc:	e8 1f c6 ff ff       	callq  18f0 <memcpy@plt>
    52d1:	66 0f 6f 05 47 fd 00 	movdqa 0xfd47(%rip),%xmm0        # 15020 <__PRETTY_FUNCTION__.5886+0x840>
    52d8:	00 
    52d9:	4c 89 fa             	mov    %r15,%rdx
    52dc:	be e9 00 00 00       	mov    $0xe9,%esi
    52e1:	48 89 ef             	mov    %rbp,%rdi
    52e4:	0f 11 45 f0          	movups %xmm0,-0x10(%rbp)
    52e8:	e8 63 c5 ff ff       	callq  1850 <memset@plt>
    52ed:	4c 89 f7             	mov    %r14,%rdi
    52f0:	e8 9b 09 00 00       	callq  5c90 <rsfree>
    52f5:	48 8b 03             	mov    (%rbx),%rax
    52f8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    52fc:	48 89 13             	mov    %rdx,(%rbx)
    52ff:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    5304:	0f 85 cc 00 00 00    	jne    53d6 <__list_extract_by_content+0x186>
    530a:	48 83 c4 18          	add    $0x18,%rsp
    530e:	4c 89 e0             	mov    %r12,%rax
    5311:	5b                   	pop    %rbx
    5312:	5d                   	pop    %rbp
    5313:	41 5c                	pop    %r12
    5315:	41 5d                	pop    %r13
    5317:	41 5e                	pop    %r14
    5319:	41 5f                	pop    %r15
    531b:	c3                   	retq   
    531c:	0f 1f 40 00          	nopl   0x0(%rax)
    5320:	48 89 43 10          	mov    %rax,0x10(%rbx)
    5324:	48 85 c0             	test   %rax,%rax
    5327:	74 57                	je     5380 <__list_extract_by_content+0x130>
    5329:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5330:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5334:	48 85 c9             	test   %rcx,%rcx
    5337:	0f 85 60 ff ff ff    	jne    529d <__list_extract_by_content+0x4d>
    533d:	e9 68 ff ff ff       	jmpq   52aa <__list_extract_by_content+0x5a>
    5342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5348:	48 8b 49 f0          	mov    -0x10(%rcx),%rcx
    534c:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    5350:	48 85 c9             	test   %rcx,%rcx
    5353:	74 43                	je     5398 <__list_extract_by_content+0x148>
    5355:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
    535c:	00 
    535d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5361:	4c 39 f6             	cmp    %r14,%rsi
    5364:	0f 85 33 ff ff ff    	jne    529d <__list_extract_by_content+0x4d>
    536a:	48 89 43 10          	mov    %rax,0x10(%rbx)
    536e:	48 85 c0             	test   %rax,%rax
    5371:	75 b6                	jne    5329 <__list_extract_by_content+0xd9>
    5373:	e9 25 ff ff ff       	jmpq   529d <__list_extract_by_content+0x4d>
    5378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    537f:	00 
    5380:	48 8b 49 f0          	mov    -0x10(%rcx),%rcx
    5384:	48 85 c9             	test   %rcx,%rcx
    5387:	0f 85 10 ff ff ff    	jne    529d <__list_extract_by_content+0x4d>
    538d:	e9 1b ff ff ff       	jmpq   52ad <__list_extract_by_content+0x5d>
    5392:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    539c:	4c 39 f6             	cmp    %r14,%rsi
    539f:	0f 85 00 ff ff ff    	jne    52a5 <__list_extract_by_content+0x55>
    53a5:	48 89 43 10          	mov    %rax,0x10(%rbx)
    53a9:	48 85 c0             	test   %rax,%rax
    53ac:	0f 85 77 ff ff ff    	jne    5329 <__list_extract_by_content+0xd9>
    53b2:	e9 f6 fe ff ff       	jmpq   52ad <__list_extract_by_content+0x5d>
    53b7:	48 8d 0d c2 f3 00 00 	lea    0xf3c2(%rip),%rcx        # 14780 <__PRETTY_FUNCTION__.5979>
    53be:	ba cf 01 00 00       	mov    $0x1cf,%edx
    53c3:	48 8d 35 fe f4 00 00 	lea    0xf4fe(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    53ca:	48 8d 3d 08 f5 00 00 	lea    0xf508(%rip),%rdi        # 148d9 <__PRETTY_FUNCTION__.5886+0xf9>
    53d1:	e8 4a c4 ff ff       	callq  1820 <__assert_fail@plt>
    53d6:	48 8d 0d a3 f3 00 00 	lea    0xf3a3(%rip),%rcx        # 14780 <__PRETTY_FUNCTION__.5979>
    53dd:	ba ff 01 00 00       	mov    $0x1ff,%edx
    53e2:	48 8d 35 df f4 00 00 	lea    0xf4df(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    53e9:	48 8d 3d 0f f5 00 00 	lea    0xf50f(%rip),%rdi        # 148ff <__PRETTY_FUNCTION__.5886+0x11f>
    53f0:	e8 2b c4 ff ff       	callq  1820 <__assert_fail@plt>
    53f5:	90                   	nop
    53f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    53fd:	00 00 00 

0000000000005400 <__list_find>:
    5400:	48 85 ff             	test   %rdi,%rdi
    5403:	74 32                	je     5437 <__list_find+0x37>
    5405:	48 8b 47 08          	mov    0x8(%rdi),%rax
    5409:	48 85 c0             	test   %rax,%rax
    540c:	75 0a                	jne    5418 <__list_find+0x18>
    540e:	eb 20                	jmp    5430 <__list_find+0x30>
    5410:	48 8b 00             	mov    (%rax),%rax
    5413:	48 85 c0             	test   %rax,%rax
    5416:	74 18                	je     5430 <__list_find+0x30>
    5418:	66 0f 2e 44 30 10    	ucomisd 0x10(%rax,%rsi,1),%xmm0
    541e:	4c 8d 40 10          	lea    0x10(%rax),%r8
    5422:	7a ec                	jp     5410 <__list_find+0x10>
    5424:	75 ea                	jne    5410 <__list_find+0x10>
    5426:	4c 89 c0             	mov    %r8,%rax
    5429:	c3                   	retq   
    542a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5430:	45 31 c0             	xor    %r8d,%r8d
    5433:	4c 89 c0             	mov    %r8,%rax
    5436:	c3                   	retq   
    5437:	50                   	push   %rax
    5438:	48 8d 0d 31 f3 00 00 	lea    0xf331(%rip),%rcx        # 14770 <__PRETTY_FUNCTION__.5989>
    543f:	ba 23 02 00 00       	mov    $0x223,%edx
    5444:	48 8d 35 7d f4 00 00 	lea    0xf47d(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    544b:	48 8d 3d 87 f4 00 00 	lea    0xf487(%rip),%rdi        # 148d9 <__PRETTY_FUNCTION__.5886+0xf9>
    5452:	e8 c9 c3 ff ff       	callq  1820 <__assert_fail@plt>
    5457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    545e:	00 00 

0000000000005460 <list_pop>:
    5460:	55                   	push   %rbp
    5461:	53                   	push   %rbx
    5462:	48 83 ec 08          	sub    $0x8,%rsp
    5466:	48 85 f6             	test   %rsi,%rsi
    5469:	74 49                	je     54b4 <list_pop+0x54>
    546b:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    546f:	48 89 f3             	mov    %rsi,%rbx
    5472:	48 85 ff             	test   %rdi,%rdi
    5475:	74 36                	je     54ad <list_pop+0x4d>
    5477:	48 8b 17             	mov    (%rdi),%rdx
    547a:	48 8b 2e             	mov    (%rsi),%rbp
    547d:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    5481:	48 85 d2             	test   %rdx,%rdx
    5484:	74 08                	je     548e <list_pop+0x2e>
    5486:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
    548d:	00 
    548e:	66 0f 6f 05 9a fb 00 	movdqa 0xfb9a(%rip),%xmm0        # 15030 <__PRETTY_FUNCTION__.5886+0x850>
    5495:	00 
    5496:	0f 11 07             	movups %xmm0,(%rdi)
    5499:	e8 f2 07 00 00       	callq  5c90 <rsfree>
    549e:	48 8b 03             	mov    (%rbx),%rax
    54a1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    54a5:	48 89 13             	mov    %rdx,(%rbx)
    54a8:	48 39 e8             	cmp    %rbp,%rax
    54ab:	75 26                	jne    54d3 <list_pop+0x73>
    54ad:	48 83 c4 08          	add    $0x8,%rsp
    54b1:	5b                   	pop    %rbx
    54b2:	5d                   	pop    %rbp
    54b3:	c3                   	retq   
    54b4:	48 8d 0d a5 f2 00 00 	lea    0xf2a5(%rip),%rcx        # 14760 <__PRETTY_FUNCTION__.6003>
    54bb:	ba 4b 02 00 00       	mov    $0x24b,%edx
    54c0:	48 8d 35 01 f4 00 00 	lea    0xf401(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    54c7:	48 8d 3d 0b f4 00 00 	lea    0xf40b(%rip),%rdi        # 148d9 <__PRETTY_FUNCTION__.5886+0xf9>
    54ce:	e8 4d c3 ff ff       	callq  1820 <__assert_fail@plt>
    54d3:	48 8d 0d 86 f2 00 00 	lea    0xf286(%rip),%rcx        # 14760 <__PRETTY_FUNCTION__.6003>
    54da:	ba 62 02 00 00       	mov    $0x262,%edx
    54df:	48 8d 35 e2 f3 00 00 	lea    0xf3e2(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    54e6:	48 8d 3d 12 f4 00 00 	lea    0xf412(%rip),%rdi        # 148ff <__PRETTY_FUNCTION__.5886+0x11f>
    54ed:	e8 2e c3 ff ff       	callq  1820 <__assert_fail@plt>
    54f2:	0f 1f 40 00          	nopl   0x0(%rax)
    54f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    54fd:	00 00 00 

0000000000005500 <__list_trunc>:
    5500:	41 56                	push   %r14
    5502:	41 55                	push   %r13
    5504:	41 54                	push   %r12
    5506:	55                   	push   %rbp
    5507:	53                   	push   %rbx
    5508:	48 83 ec 10          	sub    $0x10,%rsp
    550c:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    5512:	48 85 f6             	test   %rsi,%rsi
    5515:	0f 84 25 01 00 00    	je     5640 <__list_trunc+0x140>
    551b:	4c 8b 36             	mov    (%rsi),%r14
    551e:	49 89 f5             	mov    %rsi,%r13
    5521:	4d 85 f6             	test   %r14,%r14
    5524:	0f 84 d6 00 00 00    	je     5600 <__list_trunc+0x100>
    552a:	66 83 f9 0a          	cmp    $0xa,%cx
    552e:	0f 84 2b 01 00 00    	je     565f <__list_trunc+0x15f>
    5534:	89 f8                	mov    %edi,%eax
    5536:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    553a:	48 85 ff             	test   %rdi,%rdi
    553d:	0f 84 f2 00 00 00    	je     5635 <__list_trunc+0x135>
    5543:	48 89 d5             	mov    %rdx,%rbp
    5546:	45 31 e4             	xor    %r12d,%r12d
    5549:	83 f8 ff             	cmp    $0xffffffff,%eax
    554c:	0f 84 9d 00 00 00    	je     55ef <__list_trunc+0xef>
    5552:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    5558:	66 0f 2f 4c 2f 10    	comisd 0x10(%rdi,%rbp,1),%xmm1
    555e:	76 31                	jbe    5591 <__list_trunc+0x91>
    5560:	66 0f 6f 15 d8 fa 00 	movdqa 0xfad8(%rip),%xmm2        # 15040 <__PRETTY_FUNCTION__.5886+0x860>
    5567:	00 
    5568:	48 8b 1f             	mov    (%rdi),%rbx
    556b:	41 83 c4 01          	add    $0x1,%r12d
    556f:	0f 11 17             	movups %xmm2,(%rdi)
    5572:	e8 19 07 00 00       	callq  5c90 <rsfree>
    5577:	48 85 db             	test   %rbx,%rbx
    557a:	0f 84 98 00 00 00    	je     5618 <__list_trunc+0x118>
    5580:	48 89 df             	mov    %rbx,%rdi
    5583:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    5589:	66 0f 2f 4c 2f 10    	comisd 0x10(%rdi,%rbp,1),%xmm1
    558f:	77 cf                	ja     5560 <__list_trunc+0x60>
    5591:	49 8b 45 00          	mov    0x0(%r13),%rax
    5595:	44 89 e2             	mov    %r12d,%edx
    5598:	49 89 7d 08          	mov    %rdi,0x8(%r13)
    559c:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    55a3:	00 
    55a4:	48 89 c6             	mov    %rax,%rsi
    55a7:	48 29 d6             	sub    %rdx,%rsi
    55aa:	48 89 f2             	mov    %rsi,%rdx
    55ad:	49 89 55 00          	mov    %rdx,0x0(%r13)
    55b1:	49 39 c6             	cmp    %rax,%r14
    55b4:	0f 85 b6 00 00 00    	jne    5670 <__list_trunc+0x170>
    55ba:	48 83 c4 10          	add    $0x10,%rsp
    55be:	44 89 e0             	mov    %r12d,%eax
    55c1:	5b                   	pop    %rbx
    55c2:	5d                   	pop    %rbp
    55c3:	41 5c                	pop    %r12
    55c5:	41 5d                	pop    %r13
    55c7:	41 5e                	pop    %r14
    55c9:	c3                   	retq   
    55ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    55d0:	66 0f 6f 25 68 fa 00 	movdqa 0xfa68(%rip),%xmm4        # 15040 <__PRETTY_FUNCTION__.5886+0x860>
    55d7:	00 
    55d8:	48 8b 1f             	mov    (%rdi),%rbx
    55db:	41 83 c4 01          	add    $0x1,%r12d
    55df:	0f 11 27             	movups %xmm4,(%rdi)
    55e2:	e8 a9 06 00 00       	callq  5c90 <rsfree>
    55e7:	48 85 db             	test   %rbx,%rbx
    55ea:	74 2c                	je     5618 <__list_trunc+0x118>
    55ec:	48 89 df             	mov    %rbx,%rdi
    55ef:	f2 0f 10 5c 24 08    	movsd  0x8(%rsp),%xmm3
    55f5:	66 0f 2f 5c 2f 10    	comisd 0x10(%rdi,%rbp,1),%xmm3
    55fb:	77 d3                	ja     55d0 <__list_trunc+0xd0>
    55fd:	eb 92                	jmp    5591 <__list_trunc+0x91>
    55ff:	90                   	nop
    5600:	48 83 c4 10          	add    $0x10,%rsp
    5604:	45 31 e4             	xor    %r12d,%r12d
    5607:	5b                   	pop    %rbx
    5608:	44 89 e0             	mov    %r12d,%eax
    560b:	5d                   	pop    %rbp
    560c:	41 5c                	pop    %r12
    560e:	41 5d                	pop    %r13
    5610:	41 5e                	pop    %r14
    5612:	c3                   	retq   
    5613:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5618:	49 8b 45 00          	mov    0x0(%r13),%rax
    561c:	44 89 e2             	mov    %r12d,%edx
    561f:	48 89 c6             	mov    %rax,%rsi
    5622:	48 29 d6             	sub    %rdx,%rsi
    5625:	48 89 f2             	mov    %rsi,%rdx
    5628:	49 c7 45 08 00 00 00 	movq   $0x0,0x8(%r13)
    562f:	00 
    5630:	e9 78 ff ff ff       	jmpq   55ad <__list_trunc+0xad>
    5635:	4c 89 f2             	mov    %r14,%rdx
    5638:	4c 89 f0             	mov    %r14,%rax
    563b:	45 31 e4             	xor    %r12d,%r12d
    563e:	eb e8                	jmp    5628 <__list_trunc+0x128>
    5640:	48 8d 0d 09 f1 00 00 	lea    0xf109(%rip),%rcx        # 14750 <__PRETTY_FUNCTION__.6018>
    5647:	ba 6f 02 00 00       	mov    $0x26f,%edx
    564c:	48 8d 35 75 f2 00 00 	lea    0xf275(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    5653:	48 8d 3d 7f f2 00 00 	lea    0xf27f(%rip),%rdi        # 148d9 <__PRETTY_FUNCTION__.5886+0xf9>
    565a:	e8 c1 c1 ff ff       	callq  1820 <__assert_fail@plt>
    565f:	48 8d 3d b6 f2 00 00 	lea    0xf2b6(%rip),%rdi        # 1491c <__PRETTY_FUNCTION__.5886+0x13c>
    5666:	e8 d5 c0 ff ff       	callq  1740 <puts@plt>
    566b:	e8 40 c0 ff ff       	callq  16b0 <abort@plt>
    5670:	48 8d 0d d9 f0 00 00 	lea    0xf0d9(%rip),%rcx        # 14750 <__PRETTY_FUNCTION__.6018>
    5677:	ba 91 02 00 00       	mov    $0x291,%edx
    567c:	48 8d 35 45 f2 00 00 	lea    0xf245(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    5683:	48 8d 3d 86 f8 00 00 	lea    0xf886(%rip),%rdi        # 14f10 <__PRETTY_FUNCTION__.5886+0x730>
    568a:	e8 91 c1 ff ff       	callq  1820 <__assert_fail@plt>
    568f:	90                   	nop

0000000000005690 <list_allocate_node>:
    5690:	41 54                	push   %r12
    5692:	4c 8d 66 10          	lea    0x10(%rsi),%r12
    5696:	4c 89 e7             	mov    %r12,%rdi
    5699:	e8 b2 05 00 00       	callq  5c50 <rsalloc>
    569e:	4c 89 e2             	mov    %r12,%rdx
    56a1:	31 f6                	xor    %esi,%esi
    56a3:	48 89 c7             	mov    %rax,%rdi
    56a6:	e8 a5 c1 ff ff       	callq  1850 <memset@plt>
    56ab:	41 5c                	pop    %r12
    56ad:	c3                   	retq   
    56ae:	66 90                	xchg   %ax,%ax

00000000000056b0 <list_allocate_node_buffer>:
    56b0:	41 54                	push   %r12
    56b2:	4c 8d 66 10          	lea    0x10(%rsi),%r12
    56b6:	4c 89 e7             	mov    %r12,%rdi
    56b9:	e8 92 05 00 00       	callq  5c50 <rsalloc>
    56be:	4c 89 e2             	mov    %r12,%rdx
    56c1:	31 f6                	xor    %esi,%esi
    56c3:	48 89 c7             	mov    %rax,%rdi
    56c6:	e8 85 c1 ff ff       	callq  1850 <memset@plt>
    56cb:	41 5c                	pop    %r12
    56cd:	48 8d 40 10          	lea    0x10(%rax),%rax
    56d1:	c3                   	retq   
    56d2:	0f 1f 40 00          	nopl   0x0(%rax)
    56d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    56dd:	00 00 00 

00000000000056e0 <list_deallocate_node_buffer>:
    56e0:	48 8d 7e f0          	lea    -0x10(%rsi),%rdi
    56e4:	e9 a7 05 00 00       	jmpq   5c90 <rsfree>
    56e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000056f0 <__list_place_after_given_node_by_content>:
    56f0:	48 85 f6             	test   %rsi,%rsi
    56f3:	0f 84 9a 00 00 00    	je     5793 <__list_place_after_given_node_by_content+0xa3>
    56f9:	48 8b 06             	mov    (%rsi),%rax
    56fc:	48 85 c0             	test   %rax,%rax
    56ff:	74 2f                	je     5730 <__list_place_after_given_node_by_content+0x40>
    5701:	48 39 4e 10          	cmp    %rcx,0x10(%rsi)
    5705:	74 49                	je     5750 <__list_place_after_given_node_by_content+0x60>
    5707:	48 85 c9             	test   %rcx,%rcx
    570a:	74 64                	je     5770 <__list_place_after_given_node_by_content+0x80>
    570c:	48 8b 39             	mov    (%rcx),%rdi
    570f:	48 83 c0 01          	add    $0x1,%rax
    5713:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    5717:	48 89 3a             	mov    %rdi,(%rdx)
    571a:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    571e:	48 89 11             	mov    %rdx,(%rcx)
    5721:	48 89 06             	mov    %rax,(%rsi)
    5724:	48 8d 42 10          	lea    0x10(%rdx),%rax
    5728:	c3                   	retq   
    5729:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5730:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5734:	48 83 c0 01          	add    $0x1,%rax
    5738:	0f 11 02             	movups %xmm0,(%rdx)
    573b:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    5740:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    5744:	48 89 06             	mov    %rax,(%rsi)
    5747:	48 8d 42 10          	lea    0x10(%rdx),%rax
    574b:	0f 11 46 08          	movups %xmm0,0x8(%rsi)
    574f:	c3                   	retq   
    5750:	48 83 c0 01          	add    $0x1,%rax
    5754:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    575b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    575f:	48 89 11             	mov    %rdx,(%rcx)
    5762:	48 89 06             	mov    %rax,(%rsi)
    5765:	48 8d 42 10          	lea    0x10(%rdx),%rax
    5769:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    576d:	c3                   	retq   
    576e:	66 90                	xchg   %ax,%ax
    5770:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    5774:	48 83 c0 01          	add    $0x1,%rax
    5778:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
    577f:	00 
    5780:	48 89 0a             	mov    %rcx,(%rdx)
    5783:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    5787:	48 89 06             	mov    %rax,(%rsi)
    578a:	48 8d 42 10          	lea    0x10(%rdx),%rax
    578e:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    5792:	c3                   	retq   
    5793:	50                   	push   %rax
    5794:	48 8d 0d 85 ef 00 00 	lea    0xef85(%rip),%rcx        # 14720 <__PRETTY_FUNCTION__.6048>
    579b:	ba d9 02 00 00       	mov    $0x2d9,%edx
    57a0:	48 8d 35 21 f1 00 00 	lea    0xf121(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    57a7:	48 8d 3d 62 37 01 00 	lea    0x13762(%rip),%rdi        # 18f10 <__PRETTY_FUNCTION__.6556+0x3150>
    57ae:	e8 6d c0 ff ff       	callq  1820 <__assert_fail@plt>
    57b3:	0f 1f 00             	nopl   (%rax)
    57b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    57bd:	00 00 00 

00000000000057c0 <__list_extract_given_node>:
    57c0:	48 85 f6             	test   %rsi,%rsi
    57c3:	0f 84 c2 00 00 00    	je     588b <__list_extract_given_node+0xcb>
    57c9:	48 8b 3e             	mov    (%rsi),%rdi
    57cc:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    57d0:	4c 8d 42 10          	lea    0x10(%rdx),%r8
    57d4:	48 39 56 08          	cmp    %rdx,0x8(%rsi)
    57d8:	74 5e                	je     5838 <__list_extract_given_node+0x78>
    57da:	48 8b 42 08          	mov    0x8(%rdx),%rax
    57de:	49 39 d1             	cmp    %rdx,%r9
    57e1:	74 35                	je     5818 <__list_extract_given_node+0x58>
    57e3:	48 8b 0a             	mov    (%rdx),%rcx
    57e6:	48 85 c9             	test   %rcx,%rcx
    57e9:	74 08                	je     57f3 <__list_extract_given_node+0x33>
    57eb:	48 89 41 08          	mov    %rax,0x8(%rcx)
    57ef:	48 8b 42 08          	mov    0x8(%rdx),%rax
    57f3:	48 85 c0             	test   %rax,%rax
    57f6:	74 03                	je     57fb <__list_extract_given_node+0x3b>
    57f8:	48 89 08             	mov    %rcx,(%rax)
    57fb:	66 0f 6f 05 4d f8 00 	movdqa 0xf84d(%rip),%xmm0        # 15050 <__PRETTY_FUNCTION__.5886+0x870>
    5802:	00 
    5803:	48 83 ef 01          	sub    $0x1,%rdi
    5807:	4c 89 c0             	mov    %r8,%rax
    580a:	0f 11 02             	movups %xmm0,(%rdx)
    580d:	48 89 3e             	mov    %rdi,(%rsi)
    5810:	c3                   	retq   
    5811:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5818:	48 89 46 10          	mov    %rax,0x10(%rsi)
    581c:	48 85 c0             	test   %rax,%rax
    581f:	74 3f                	je     5860 <__list_extract_given_node+0xa0>
    5821:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5828:	48 8b 0a             	mov    (%rdx),%rcx
    582b:	48 85 c9             	test   %rcx,%rcx
    582e:	75 bb                	jne    57eb <__list_extract_given_node+0x2b>
    5830:	eb c6                	jmp    57f8 <__list_extract_given_node+0x38>
    5832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5838:	48 8b 0a             	mov    (%rdx),%rcx
    583b:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    583f:	48 85 c9             	test   %rcx,%rcx
    5842:	74 2c                	je     5870 <__list_extract_given_node+0xb0>
    5844:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
    584b:	00 
    584c:	48 8b 42 08          	mov    0x8(%rdx),%rax
    5850:	49 39 d1             	cmp    %rdx,%r9
    5853:	75 96                	jne    57eb <__list_extract_given_node+0x2b>
    5855:	48 89 46 10          	mov    %rax,0x10(%rsi)
    5859:	48 85 c0             	test   %rax,%rax
    585c:	75 c3                	jne    5821 <__list_extract_given_node+0x61>
    585e:	eb 8b                	jmp    57eb <__list_extract_given_node+0x2b>
    5860:	48 8b 0a             	mov    (%rdx),%rcx
    5863:	48 85 c9             	test   %rcx,%rcx
    5866:	0f 85 7f ff ff ff    	jne    57eb <__list_extract_given_node+0x2b>
    586c:	eb 8d                	jmp    57fb <__list_extract_given_node+0x3b>
    586e:	66 90                	xchg   %ax,%ax
    5870:	48 8b 42 08          	mov    0x8(%rdx),%rax
    5874:	49 39 d1             	cmp    %rdx,%r9
    5877:	0f 85 76 ff ff ff    	jne    57f3 <__list_extract_given_node+0x33>
    587d:	48 89 46 10          	mov    %rax,0x10(%rsi)
    5881:	48 85 c0             	test   %rax,%rax
    5884:	75 9b                	jne    5821 <__list_extract_given_node+0x61>
    5886:	e9 70 ff ff ff       	jmpq   57fb <__list_extract_given_node+0x3b>
    588b:	50                   	push   %rax
    588c:	48 8d 0d 6d ee 00 00 	lea    0xee6d(%rip),%rcx        # 14700 <__PRETTY_FUNCTION__.6056>
    5893:	ba 23 03 00 00       	mov    $0x323,%edx
    5898:	48 8d 35 29 f0 00 00 	lea    0xf029(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    589f:	48 8d 3d 33 f0 00 00 	lea    0xf033(%rip),%rdi        # 148d9 <__PRETTY_FUNCTION__.5886+0xf9>
    58a6:	e8 75 bf ff ff       	callq  1820 <__assert_fail@plt>
    58ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000058b0 <list_allocate_node_buffer_from_list>:
    58b0:	41 54                	push   %r12
    58b2:	55                   	push   %rbp
    58b3:	53                   	push   %rbx
    58b4:	48 89 d3             	mov    %rdx,%rbx
    58b7:	48 83 ec 10          	sub    $0x10,%rsp
    58bb:	48 8b 6a 08          	mov    0x8(%rdx),%rbp
    58bf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    58c6:	00 00 
    58c8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    58cd:	31 c0                	xor    %eax,%eax
    58cf:	48 85 ed             	test   %rbp,%rbp
    58d2:	74 7c                	je     5950 <list_allocate_node_buffer_from_list+0xa0>
    58d4:	48 8b 02             	mov    (%rdx),%rax
    58d7:	4c 8b 62 10          	mov    0x10(%rdx),%r12
    58db:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    58df:	48 8b 45 00          	mov    0x0(%rbp),%rax
    58e3:	4c 8d 45 10          	lea    0x10(%rbp),%r8
    58e7:	48 89 43 08          	mov    %rax,0x8(%rbx)
    58eb:	48 85 c0             	test   %rax,%rax
    58ee:	0f 84 d9 00 00 00    	je     59cd <list_allocate_node_buffer_from_list+0x11d>
    58f4:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    58fb:	00 
    58fc:	4c 39 e5             	cmp    %r12,%rbp
    58ff:	0f 84 2c 01 00 00    	je     5a31 <list_allocate_node_buffer_from_list+0x181>
    5905:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5909:	48 89 50 08          	mov    %rdx,0x8(%rax)
    590d:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5911:	48 85 d2             	test   %rdx,%rdx
    5914:	74 03                	je     5919 <list_allocate_node_buffer_from_list+0x69>
    5916:	48 89 02             	mov    %rax,(%rdx)
    5919:	66 0f 6f 05 2f f7 00 	movdqa 0xf72f(%rip),%xmm0        # 15050 <__PRETTY_FUNCTION__.5886+0x870>
    5920:	00 
    5921:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
    5925:	48 89 0b             	mov    %rcx,(%rbx)
    5928:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    592d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5934:	00 00 
    5936:	0f 85 07 01 00 00    	jne    5a43 <list_allocate_node_buffer_from_list+0x193>
    593c:	48 83 c4 10          	add    $0x10,%rsp
    5940:	4c 89 c0             	mov    %r8,%rax
    5943:	5b                   	pop    %rbx
    5944:	5d                   	pop    %rbp
    5945:	41 5c                	pop    %r12
    5947:	c3                   	retq   
    5948:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    594f:	00 
    5950:	4c 8b 25 c9 38 34 00 	mov    0x3438c9(%rip),%r12        # 349220 <node_size_msg_t>
    5957:	48 89 e7             	mov    %rsp,%rdi
    595a:	be 40 00 00 00       	mov    $0x40,%esi
    595f:	49 69 d4 f4 01 00 00 	imul   $0x1f4,%r12,%rdx
    5966:	e8 05 c1 ff ff       	callq  1a70 <posix_memalign@plt>
    596b:	85 c0                	test   %eax,%eax
    596d:	0f 85 ad 00 00 00    	jne    5a20 <list_allocate_node_buffer_from_list+0x170>
    5973:	48 8b 34 24          	mov    (%rsp),%rsi
    5977:	48 8b 3b             	mov    (%rbx),%rdi
    597a:	ba f4 01 00 00       	mov    $0x1f4,%edx
    597f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5983:	48 89 f0             	mov    %rsi,%rax
    5986:	eb 1f                	jmp    59a7 <list_allocate_node_buffer_from_list+0xf7>
    5988:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    598f:	00 
    5990:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    5994:	48 89 48 08          	mov    %rcx,0x8(%rax)
    5998:	48 89 01             	mov    %rax,(%rcx)
    599b:	48 89 43 10          	mov    %rax,0x10(%rbx)
    599f:	4c 01 e0             	add    %r12,%rax
    59a2:	83 ea 01             	sub    $0x1,%edx
    59a5:	74 59                	je     5a00 <list_allocate_node_buffer_from_list+0x150>
    59a7:	0f 11 00             	movups %xmm0,(%rax)
    59aa:	48 85 ed             	test   %rbp,%rbp
    59ad:	75 e1                	jne    5990 <list_allocate_node_buffer_from_list+0xe0>
    59af:	66 48 0f 6e c8       	movq   %rax,%xmm1
    59b4:	4a 8d 0c 20          	lea    (%rax,%r12,1),%rcx
    59b8:	48 89 c5             	mov    %rax,%rbp
    59bb:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    59bf:	0f 11 4b 08          	movups %xmm1,0x8(%rbx)
    59c3:	83 ea 01             	sub    $0x1,%edx
    59c6:	74 38                	je     5a00 <list_allocate_node_buffer_from_list+0x150>
    59c8:	48 89 c8             	mov    %rcx,%rax
    59cb:	eb da                	jmp    59a7 <list_allocate_node_buffer_from_list+0xf7>
    59cd:	4c 39 e5             	cmp    %r12,%rbp
    59d0:	0f 85 37 ff ff ff    	jne    590d <list_allocate_node_buffer_from_list+0x5d>
    59d6:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    59da:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    59de:	48 85 d2             	test   %rdx,%rdx
    59e1:	0f 84 32 ff ff ff    	je     5919 <list_allocate_node_buffer_from_list+0x69>
    59e7:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    59ee:	48 8b 45 00          	mov    0x0(%rbp),%rax
    59f2:	48 85 c0             	test   %rax,%rax
    59f5:	0f 85 0e ff ff ff    	jne    5909 <list_allocate_node_buffer_from_list+0x59>
    59fb:	e9 16 ff ff ff       	jmpq   5916 <list_allocate_node_buffer_from_list+0x66>
    5a00:	4d 69 e4 f3 01 00 00 	imul   $0x1f3,%r12,%r12
    5a07:	48 8d 8f f3 01 00 00 	lea    0x1f3(%rdi),%rcx
    5a0e:	48 81 c7 f4 01 00 00 	add    $0x1f4,%rdi
    5a15:	48 89 3b             	mov    %rdi,(%rbx)
    5a18:	49 01 f4             	add    %rsi,%r12
    5a1b:	e9 bf fe ff ff       	jmpq   58df <list_allocate_node_buffer_from_list+0x2f>
    5a20:	48 8d 3d 05 ef 00 00 	lea    0xef05(%rip),%rdi        # 1492c <__PRETTY_FUNCTION__.5886+0x14c>
    5a27:	e8 14 bd ff ff       	callq  1740 <puts@plt>
    5a2c:	e8 7f bc ff ff       	callq  16b0 <abort@plt>
    5a31:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5a35:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    5a39:	48 85 d2             	test   %rdx,%rdx
    5a3c:	75 a9                	jne    59e7 <list_allocate_node_buffer_from_list+0x137>
    5a3e:	e9 c6 fe ff ff       	jmpq   5909 <list_allocate_node_buffer_from_list+0x59>
    5a43:	e8 58 bd ff ff       	callq  17a0 <__stack_chk_fail@plt>
    5a48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5a4f:	00 

0000000000005a50 <__list_insert_tail_by_nodes>:
    5a50:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
    5a55:	48 8b 47 10          	mov    0x10(%rdi),%rax
    5a59:	74 1d                	je     5a78 <__list_insert_tail_by_nodes+0x28>
    5a5b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    5a5f:	48 89 10             	mov    %rdx,(%rax)
    5a62:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    5a69:	48 01 37             	add    %rsi,(%rdi)
    5a6c:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    5a70:	c3                   	retq   
    5a71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5a78:	48 85 c0             	test   %rax,%rax
    5a7b:	75 1b                	jne    5a98 <__list_insert_tail_by_nodes+0x48>
    5a7d:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
    5a84:	00 
    5a85:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    5a89:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    5a90:	48 01 37             	add    %rsi,(%rdi)
    5a93:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    5a97:	c3                   	retq   
    5a98:	50                   	push   %rax
    5a99:	48 8d 0d 40 ec 00 00 	lea    0xec40(%rip),%rcx        # 146e0 <__PRETTY_FUNCTION__.6077>
    5aa0:	ba 7b 03 00 00       	mov    $0x37b,%edx
    5aa5:	48 8d 35 1c ee 00 00 	lea    0xee1c(%rip),%rsi        # 148c8 <__PRETTY_FUNCTION__.5886+0xe8>
    5aac:	48 8d 3d 96 ee 00 00 	lea    0xee96(%rip),%rdi        # 14949 <__PRETTY_FUNCTION__.5886+0x169>
    5ab3:	e8 68 bd ff ff       	callq  1820 <__assert_fail@plt>
    5ab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5abf:	00 

0000000000005ac0 <list_next_f>:
    5ac0:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
    5ac4:	48 8d 50 10          	lea    0x10(%rax),%rdx
    5ac8:	48 85 c0             	test   %rax,%rax
    5acb:	48 0f 45 c2          	cmovne %rdx,%rax
    5acf:	c3                   	retq   

0000000000005ad0 <list_prev_f>:
    5ad0:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
    5ad4:	48 8d 50 10          	lea    0x10(%rax),%rdx
    5ad8:	48 85 c0             	test   %rax,%rax
    5adb:	48 0f 45 c2          	cmovne %rdx,%rax
    5adf:	c3                   	retq   

0000000000005ae0 <list_search_error>:
    5ae0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    5ae4:	48 85 c0             	test   %rax,%rax
    5ae7:	75 0f                	jne    5af8 <list_search_error+0x18>
    5ae9:	eb 18                	jmp    5b03 <list_search_error+0x23>
    5aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5af0:	48 8b 00             	mov    (%rax),%rax
    5af3:	48 85 c0             	test   %rax,%rax
    5af6:	74 0b                	je     5b03 <list_search_error+0x23>
    5af8:	f2 48 0f 2c 50 18    	cvttsd2si 0x18(%rax),%rdx
    5afe:	3b 50 28             	cmp    0x28(%rax),%edx
    5b01:	74 ed                	je     5af0 <list_search_error+0x10>
    5b03:	c3                   	retq   
    5b04:	66 90                	xchg   %ax,%ax
    5b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5b0d:	00 00 00 

0000000000005b10 <list_print_error>:
    5b10:	41 57                	push   %r15
    5b12:	41 56                	push   %r14
    5b14:	41 55                	push   %r13
    5b16:	41 54                	push   %r12
    5b18:	55                   	push   %rbp
    5b19:	53                   	push   %rbx
    5b1a:	48 83 ec 08          	sub    $0x8,%rsp
    5b1e:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    5b22:	48 85 db             	test   %rbx,%rbx
    5b25:	0f 84 ae 00 00 00    	je     5bd9 <list_print_error+0xc9>
    5b2b:	48 8d 2d 38 ee 00 00 	lea    0xee38(%rip),%rbp        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    5b32:	4c 8d 25 1e ee 00 00 	lea    0xee1e(%rip),%r12        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    5b39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5b40:	83 7b 50 01          	cmpl   $0x1,0x50(%rbx)
    5b44:	0f 84 83 00 00 00    	je     5bcd <list_print_error+0xbd>
    5b4a:	4c 8d 7b 10          	lea    0x10(%rbx),%r15
    5b4e:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    5b52:	4c 8b ab e0 00 00 00 	mov    0xe0(%rbx),%r13
    5b59:	4c 89 ff             	mov    %r15,%rdi
    5b5c:	e8 ff 71 00 00       	callq  cd60 <is_valid>
    5b61:	8b 53 50             	mov    0x50(%rbx),%edx
    5b64:	48 89 e9             	mov    %rbp,%rcx
    5b67:	0f b6 c0             	movzbl %al,%eax
    5b6a:	83 fa 01             	cmp    $0x1,%edx
    5b6d:	74 1d                	je     5b8c <list_print_error+0x7c>
    5b6f:	4c 89 e1             	mov    %r12,%rcx
    5b72:	83 fa 02             	cmp    $0x2,%edx
    5b75:	74 15                	je     5b8c <list_print_error+0x7c>
    5b77:	83 fa 03             	cmp    $0x3,%edx
    5b7a:	48 8d 0d f2 ed 00 00 	lea    0xedf2(%rip),%rcx        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    5b81:	48 8d 35 da ed 00 00 	lea    0xedda(%rip),%rsi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    5b88:	48 0f 45 ce          	cmovne %rsi,%rcx
    5b8c:	44 0f b7 5b 12       	movzwl 0x12(%rbx),%r11d
    5b91:	44 0f b7 53 10       	movzwl 0x10(%rbx),%r10d
    5b96:	bf 01 00 00 00       	mov    $0x1,%edi
    5b9b:	48 8d 35 96 f3 00 00 	lea    0xf396(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    5ba2:	44 8b 4b 24          	mov    0x24(%rbx),%r9d
    5ba6:	44 0f b7 43 20       	movzwl 0x20(%rbx),%r8d
    5bab:	f2 0f 10 43 18       	movsd  0x18(%rbx),%xmm0
    5bb0:	41 56                	push   %r14
    5bb2:	41 55                	push   %r13
    5bb4:	41 57                	push   %r15
    5bb6:	50                   	push   %rax
    5bb7:	b8 01 00 00 00       	mov    $0x1,%eax
    5bbc:	51                   	push   %rcx
    5bbd:	44 89 d9             	mov    %r11d,%ecx
    5bc0:	52                   	push   %rdx
    5bc1:	44 89 d2             	mov    %r10d,%edx
    5bc4:	e8 a7 bd ff ff       	callq  1970 <__printf_chk@plt>
    5bc9:	48 83 c4 30          	add    $0x30,%rsp
    5bcd:	48 8b 1b             	mov    (%rbx),%rbx
    5bd0:	48 85 db             	test   %rbx,%rbx
    5bd3:	0f 85 67 ff ff ff    	jne    5b40 <list_print_error+0x30>
    5bd9:	48 83 c4 08          	add    $0x8,%rsp
    5bdd:	5b                   	pop    %rbx
    5bde:	5d                   	pop    %rbp
    5bdf:	41 5c                	pop    %r12
    5be1:	41 5d                	pop    %r13
    5be3:	41 5e                	pop    %r14
    5be5:	41 5f                	pop    %r15
    5be7:	c3                   	retq   
    5be8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5bef:	00 

0000000000005bf0 <print_list_fw>:
    5bf0:	41 54                	push   %r12
    5bf2:	45 31 e4             	xor    %r12d,%r12d
    5bf5:	55                   	push   %rbp
    5bf6:	48 8d 2d 81 ed 00 00 	lea    0xed81(%rip),%rbp        # 1497e <__PRETTY_FUNCTION__.5886+0x19e>
    5bfd:	53                   	push   %rbx
    5bfe:	48 8d 5f f0          	lea    -0x10(%rdi),%rbx
    5c02:	bf 5b 00 00 00       	mov    $0x5b,%edi
    5c07:	e8 84 ba ff ff       	callq  1690 <putchar@plt>
    5c0c:	0f 1f 40 00          	nopl   0x0(%rax)
    5c10:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    5c14:	48 89 ee             	mov    %rbp,%rsi
    5c17:	bf 01 00 00 00       	mov    $0x1,%edi
    5c1c:	31 c0                	xor    %eax,%eax
    5c1e:	e8 4d bd ff ff       	callq  1970 <__printf_chk@plt>
    5c23:	48 8b 1b             	mov    (%rbx),%rbx
    5c26:	41 83 c4 01          	add    $0x1,%r12d
    5c2a:	48 85 db             	test   %rbx,%rbx
    5c2d:	75 e1                	jne    5c10 <print_list_fw+0x20>
    5c2f:	48 8d 3d 4d ed 00 00 	lea    0xed4d(%rip),%rdi        # 14983 <__PRETTY_FUNCTION__.5886+0x1a3>
    5c36:	e8 05 bb ff ff       	callq  1740 <puts@plt>
    5c3b:	44 89 e0             	mov    %r12d,%eax
    5c3e:	5b                   	pop    %rbx
    5c3f:	5d                   	pop    %rbp
    5c40:	41 5c                	pop    %r12
    5c42:	c3                   	retq   
    5c43:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5c4a:	00 00 00 
    5c4d:	0f 1f 00             	nopl   (%rax)

0000000000005c50 <rsalloc>:
    5c50:	41 54                	push   %r12
    5c52:	e8 b9 bc ff ff       	callq  1910 <malloc@plt>
    5c57:	49 89 c4             	mov    %rax,%r12
    5c5a:	48 85 c0             	test   %rax,%rax
    5c5d:	74 09                	je     5c68 <rsalloc+0x18>
    5c5f:	4c 89 e0             	mov    %r12,%rax
    5c62:	41 5c                	pop    %r12
    5c64:	c3                   	retq   
    5c65:	0f 1f 00             	nopl   (%rax)
    5c68:	31 c0                	xor    %eax,%eax
    5c6a:	48 8d 35 27 f3 00 00 	lea    0xf327(%rip),%rsi        # 14f98 <__PRETTY_FUNCTION__.5886+0x7b8>
    5c71:	bf 01 00 00 00       	mov    $0x1,%edi
    5c76:	e8 95 16 00 00       	callq  7310 <rootsim_error>
    5c7b:	4c 89 e0             	mov    %r12,%rax
    5c7e:	41 5c                	pop    %r12
    5c80:	c3                   	retq   
    5c81:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5c86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5c8d:	00 00 00 

0000000000005c90 <rsfree>:
    5c90:	e9 eb b9 ff ff       	jmpq   1680 <free@plt>
    5c95:	90                   	nop
    5c96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5c9d:	00 00 00 

0000000000005ca0 <rsrealloc>:
    5ca0:	e9 ab bc ff ff       	jmpq   1950 <realloc@plt>
    5ca5:	90                   	nop
    5ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5cad:	00 00 00 

0000000000005cb0 <rscalloc>:
    5cb0:	e9 fb bb ff ff       	jmpq   18b0 <calloc@plt>
    5cb5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5cbc:	00 00 00 
    5cbf:	90                   	nop

0000000000005cc0 <revwin_check_space.part.0>:
    5cc0:	53                   	push   %rbx
    5cc1:	48 89 f2             	mov    %rsi,%rdx
    5cc4:	48 89 fb             	mov    %rdi,%rbx
    5cc7:	48 8d 35 cc f3 00 00 	lea    0xf3cc(%rip),%rsi        # 1509a <__PRETTY_FUNCTION__.6351+0xa>
    5cce:	bf 01 00 00 00       	mov    $0x1,%edi
    5cd3:	31 c0                	xor    %eax,%eax
    5cd5:	e8 96 bc ff ff       	callq  1970 <__printf_chk@plt>
    5cda:	48 c7 c0 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rax
    5ce1:	49 89 d8             	mov    %rbx,%r8
    5ce4:	48 8d 35 cd f3 00 00 	lea    0xf3cd(%rip),%rsi        # 150b8 <__PRETTY_FUNCTION__.6351+0x28>
    5ceb:	bf 01 00 00 00       	mov    $0x1,%edi
    5cf0:	64 48 8b 00          	mov    %fs:(%rax),%rax
    5cf4:	0f be 48 12          	movsbl 0x12(%rax),%ecx
    5cf8:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    5cff:	64 8b 10             	mov    %fs:(%rax),%edx
    5d02:	31 c0                	xor    %eax,%eax
    5d04:	e8 67 bc ff ff       	callq  1970 <__printf_chk@plt>
    5d09:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    5d0d:	48 8b 13             	mov    (%rbx),%rdx
    5d10:	31 c0                	xor    %eax,%eax
    5d12:	48 2b 4b 08          	sub    0x8(%rbx),%rcx
    5d16:	48 2b 53 18          	sub    0x18(%rbx),%rdx
    5d1a:	bf 01 00 00 00       	mov    $0x1,%edi
    5d1f:	48 8d 35 3a f4 00 00 	lea    0xf43a(%rip),%rsi        # 15160 <__PRETTY_FUNCTION__.6351+0xd0>
    5d26:	e8 45 bc ff ff       	callq  1970 <__printf_chk@plt>
    5d2b:	48 8b 13             	mov    (%rbx),%rdx
    5d2e:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    5d32:	31 c0                	xor    %eax,%eax
    5d34:	48 2b 4b 10          	sub    0x10(%rbx),%rcx
    5d38:	48 8d 35 59 f4 00 00 	lea    0xf459(%rip),%rsi        # 15198 <__PRETTY_FUNCTION__.6351+0x108>
    5d3f:	bf 01 00 00 00       	mov    $0x1,%edi
    5d44:	48 29 da             	sub    %rbx,%rdx
    5d47:	e8 24 bc ff ff       	callq  1970 <__printf_chk@plt>
    5d4c:	ba 28 00 00 00       	mov    $0x28,%edx
    5d51:	be 01 00 00 00       	mov    $0x1,%esi
    5d56:	48 8b 0d 03 73 21 00 	mov    0x217303(%rip),%rcx        # 21d060 <stderr@@GLIBC_2.2.5>
    5d5d:	48 8d 3d 6c f4 00 00 	lea    0xf46c(%rip),%rdi        # 151d0 <__PRETTY_FUNCTION__.6351+0x140>
    5d64:	e8 e7 bc ff ff       	callq  1a50 <fwrite@plt>
    5d69:	bf f4 ff ff ff       	mov    $0xfffffff4,%edi
    5d6e:	e8 cd bc ff ff       	callq  1a40 <exit@plt>
    5d73:	0f 1f 00             	nopl   (%rax)
    5d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5d7d:	00 00 00 

0000000000005d80 <reverse_single_xmm>:
    5d80:	48 83 ec 28          	sub    $0x28,%rsp
    5d84:	48 8b 57 18          	mov    0x18(%rdi),%rdx
    5d88:	b9 7f 08 00 00       	mov    $0x87f,%ecx
    5d8d:	66 0f 6f 05 ab f5 00 	movdqa 0xf5ab(%rip),%xmm0        # 15340 <__PRETTY_FUNCTION__.6351+0x2b0>
    5d94:	00 
    5d95:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5d9c:	00 00 
    5d9e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5da3:	31 c0                	xor    %eax,%eax
    5da5:	48 8b 47 10          	mov    0x10(%rdi),%rax
    5da9:	c7 44 24 10 00 00 f3 	movl   $0xff30000,0x10(%rsp)
    5db0:	0f 
    5db1:	66 89 4c 24 14       	mov    %cx,0x14(%rsp)
    5db6:	48 29 c2             	sub    %rax,%rdx
    5db9:	0f 29 04 24          	movaps %xmm0,(%rsp)
    5dbd:	48 83 fa 7f          	cmp    $0x7f,%rdx
    5dc1:	0f 86 aa 00 00 00    	jbe    5e71 <reverse_single_xmm+0xf1>
    5dc7:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
    5dcb:	0f 11 08             	movups %xmm1,(%rax)
    5dce:	f3 0f 6f 56 10       	movdqu 0x10(%rsi),%xmm2
    5dd3:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    5dd7:	f3 0f 6f 5e 20       	movdqu 0x20(%rsi),%xmm3
    5ddc:	0f 11 58 20          	movups %xmm3,0x20(%rax)
    5de0:	f3 0f 6f 66 30       	movdqu 0x30(%rsi),%xmm4
    5de5:	0f 11 60 30          	movups %xmm4,0x30(%rax)
    5de9:	f3 0f 6f 6e 40       	movdqu 0x40(%rsi),%xmm5
    5dee:	0f 11 68 40          	movups %xmm5,0x40(%rax)
    5df2:	f3 0f 6f 76 50       	movdqu 0x50(%rsi),%xmm6
    5df7:	0f 11 70 50          	movups %xmm6,0x50(%rax)
    5dfb:	f3 0f 6f 7e 60       	movdqu 0x60(%rsi),%xmm7
    5e00:	0f 11 78 60          	movups %xmm7,0x60(%rax)
    5e04:	f3 0f 6f 4e 70       	movdqu 0x70(%rsi),%xmm1
    5e09:	0f 11 48 70          	movups %xmm1,0x70(%rax)
    5e0d:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    5e11:	48 8b 47 18          	mov    0x18(%rdi),%rax
    5e15:	48 89 d1             	mov    %rdx,%rcx
    5e18:	49 89 c0             	mov    %rax,%r8
    5e1b:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
    5e1f:	48 29 c1             	sub    %rax,%rcx
    5e22:	49 29 d0             	sub    %rdx,%r8
    5e25:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    5e29:	83 e9 04             	sub    $0x4,%ecx
    5e2c:	49 83 f8 15          	cmp    $0x15,%r8
    5e30:	76 4e                	jbe    5e80 <reverse_single_xmm+0x100>
    5e32:	48 8d 50 ea          	lea    -0x16(%rax),%rdx
    5e36:	89 4c 24 0e          	mov    %ecx,0xe(%rsp)
    5e3a:	48 89 57 18          	mov    %rdx,0x18(%rdi)
    5e3e:	8b 54 24 10          	mov    0x10(%rsp),%edx
    5e42:	48 89 74 24 02       	mov    %rsi,0x2(%rsp)
    5e47:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
    5e4c:	89 50 fa             	mov    %edx,-0x6(%rax)
    5e4f:	ba 7f 08 00 00       	mov    $0x87f,%edx
    5e54:	66 89 50 fe          	mov    %dx,-0x2(%rax)
    5e58:	0f 11 50 ea          	movups %xmm2,-0x16(%rax)
    5e5c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    5e61:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5e68:	00 00 
    5e6a:	75 0f                	jne    5e7b <reverse_single_xmm+0xfb>
    5e6c:	48 83 c4 28          	add    $0x28,%rsp
    5e70:	c3                   	retq   
    5e71:	be 80 00 00 00       	mov    $0x80,%esi
    5e76:	e8 45 fe ff ff       	callq  5cc0 <revwin_check_space.part.0>
    5e7b:	e8 20 b9 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    5e80:	be 16 00 00 00       	mov    $0x16,%esi
    5e85:	e8 36 fe ff ff       	callq  5cc0 <revwin_check_space.part.0>
    5e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005e90 <reverse_single_embedded>:
    5e90:	48 83 ec 28          	sub    $0x28,%rsp
    5e94:	48 8b 16             	mov    (%rsi),%rdx
    5e97:	66 0f 6f 05 b1 f4 00 	movdqa 0xf4b1(%rip),%xmm0        # 15350 <__PRETTY_FUNCTION__.6351+0x2c0>
    5e9e:	00 
    5e9f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5ea6:	00 00 
    5ea8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5ead:	31 c0                	xor    %eax,%eax
    5eaf:	48 8b 47 18          	mov    0x18(%rdi),%rax
    5eb3:	c7 44 24 10 c7 40 04 	movl   $0xb00440c7,0x10(%rsp)
    5eba:	b0 
    5ebb:	49 89 d0             	mov    %rdx,%r8
    5ebe:	0f 29 04 24          	movaps %xmm0,(%rsp)
    5ec2:	48 89 c1             	mov    %rax,%rcx
    5ec5:	48 2b 4f 10          	sub    0x10(%rdi),%rcx
    5ec9:	49 c1 e8 20          	shr    $0x20,%r8
    5ecd:	48 83 f9 16          	cmp    $0x16,%rcx
    5ed1:	76 4c                	jbe    5f1f <reverse_single_embedded+0x8f>
    5ed3:	44 89 44 24 13       	mov    %r8d,0x13(%rsp)
    5ed8:	48 8d 48 e9          	lea    -0x17(%rax),%rcx
    5edc:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    5ee0:	8b 54 24 10          	mov    0x10(%rsp),%edx
    5ee4:	48 89 4f 18          	mov    %rcx,0x18(%rdi)
    5ee8:	89 50 f9             	mov    %edx,-0x7(%rax)
    5eeb:	0f b7 54 24 14       	movzwl 0x14(%rsp),%edx
    5ef0:	48 89 74 24 02       	mov    %rsi,0x2(%rsp)
    5ef5:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    5efa:	66 89 50 fd          	mov    %dx,-0x3(%rax)
    5efe:	0f b6 54 24 16       	movzbl 0x16(%rsp),%edx
    5f03:	0f 11 48 e9          	movups %xmm1,-0x17(%rax)
    5f07:	88 50 ff             	mov    %dl,-0x1(%rax)
    5f0a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    5f0f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5f16:	00 00 
    5f18:	75 0f                	jne    5f29 <reverse_single_embedded+0x99>
    5f1a:	48 83 c4 28          	add    $0x28,%rsp
    5f1e:	c3                   	retq   
    5f1f:	be 17 00 00 00       	mov    $0x17,%esi
    5f24:	e8 97 fd ff ff       	callq  5cc0 <revwin_check_space.part.0>
    5f29:	e8 72 b8 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    5f2e:	66 90                	xchg   %ax,%ax

0000000000005f30 <reverse_chunk>:
    5f30:	41 54                	push   %r12
    5f32:	49 89 d4             	mov    %rdx,%r12
    5f35:	55                   	push   %rbp
    5f36:	48 89 fd             	mov    %rdi,%rbp
    5f39:	53                   	push   %rbx
    5f3a:	48 83 ec 30          	sub    $0x30,%rsp
    5f3e:	66 0f 6f 05 1a f4 00 	movdqa 0xf41a(%rip),%xmm0        # 15360 <__PRETTY_FUNCTION__.6351+0x2d0>
    5f45:	00 
    5f46:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    5f4a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5f51:	00 00 
    5f53:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5f58:	31 c0                	xor    %eax,%eax
    5f5a:	48 8b 45 18          	mov    0x18(%rbp),%rax
    5f5e:	c7 44 24 20 c7 f3 48 	movl   $0xa548f3c7,0x20(%rsp)
    5f65:	a5 
    5f66:	0f 29 04 24          	movaps %xmm0,(%rsp)
    5f6a:	66 0f 6f 05 fe f3 00 	movdqa 0xf3fe(%rip),%xmm0        # 15370 <__PRETTY_FUNCTION__.6351+0x2e0>
    5f71:	00 
    5f72:	48 29 f8             	sub    %rdi,%rax
    5f75:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    5f7a:	48 39 c2             	cmp    %rax,%rdx
    5f7d:	77 6e                	ja     5fed <reverse_chunk+0xbd>
    5f7f:	48 89 f3             	mov    %rsi,%rbx
    5f82:	e8 69 b9 ff ff       	callq  18f0 <memcpy@plt>
    5f87:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    5f8b:	48 8b 45 18          	mov    0x18(%rbp),%rax
    5f8f:	4a 8d 0c 22          	lea    (%rdx,%r12,1),%rcx
    5f93:	48 89 c6             	mov    %rax,%rsi
    5f96:	48 29 ce             	sub    %rcx,%rsi
    5f99:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
    5f9d:	48 83 fe 23          	cmp    $0x23,%rsi
    5fa1:	76 5a                	jbe    5ffd <reverse_chunk+0xcd>
    5fa3:	48 89 54 24 09       	mov    %rdx,0x9(%rsp)
    5fa8:	8b 54 24 20          	mov    0x20(%rsp),%edx
    5fac:	48 8d 48 dc          	lea    -0x24(%rax),%rcx
    5fb0:	48 89 4d 18          	mov    %rcx,0x18(%rbp)
    5fb4:	44 89 64 24 03       	mov    %r12d,0x3(%rsp)
    5fb9:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    5fbe:	48 89 5c 24 16       	mov    %rbx,0x16(%rsp)
    5fc3:	66 0f 6f 54 24 10    	movdqa 0x10(%rsp),%xmm2
    5fc9:	89 50 fc             	mov    %edx,-0x4(%rax)
    5fcc:	0f 11 48 dc          	movups %xmm1,-0x24(%rax)
    5fd0:	0f 11 50 ec          	movups %xmm2,-0x14(%rax)
    5fd4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5fd9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5fe0:	00 00 
    5fe2:	75 14                	jne    5ff8 <reverse_chunk+0xc8>
    5fe4:	48 83 c4 30          	add    $0x30,%rsp
    5fe8:	5b                   	pop    %rbx
    5fe9:	5d                   	pop    %rbp
    5fea:	41 5c                	pop    %r12
    5fec:	c3                   	retq   
    5fed:	48 89 d6             	mov    %rdx,%rsi
    5ff0:	48 89 ef             	mov    %rbp,%rdi
    5ff3:	e8 c8 fc ff ff       	callq  5cc0 <revwin_check_space.part.0>
    5ff8:	e8 a3 b7 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    5ffd:	be 24 00 00 00       	mov    $0x24,%esi
    6002:	48 89 ef             	mov    %rbp,%rdi
    6005:	e8 b6 fc ff ff       	callq  5cc0 <revwin_check_space.part.0>
    600a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006010 <revwin_flush_cache>:
    6010:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    6017:	00 00 
    6019:	b9 41 02 00 00       	mov    $0x241,%ecx
    601e:	48 8d b8 48 49 ff ff 	lea    -0xb6b8(%rax),%rdi
    6025:	31 c0                	xor    %eax,%eax
    6027:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    602a:	c3                   	retq   
    602b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006030 <revwin_create>:
    6030:	48 83 ec 08          	sub    $0x8,%rsp
    6034:	64 48 8b 3c 25 40 49 	mov    %fs:0xffffffffffff4940,%rdi
    603b:	ff ff 
    603d:	e8 ee 05 00 00       	callq  6630 <slab_alloc>
    6042:	48 85 c0             	test   %rax,%rax
    6045:	74 44                	je     608b <revwin_create+0x5b>
    6047:	8b 0d c7 6f 21 00    	mov    0x216fc7(%rip),%ecx        # 21d014 <revwin_size>
    604d:	48 8d 70 20          	lea    0x20(%rax),%rsi
    6051:	48 89 70 08          	mov    %rsi,0x8(%rax)
    6055:	48 83 e9 01          	sub    $0x1,%rcx
    6059:	48 89 70 10          	mov    %rsi,0x10(%rax)
    605d:	48 8d 14 0e          	lea    (%rsi,%rcx,1),%rdx
    6061:	48 89 10             	mov    %rdx,(%rax)
    6064:	48 89 50 18          	mov    %rdx,0x18(%rax)
    6068:	48 83 f9 01          	cmp    $0x1,%rcx
    606c:	76 2e                	jbe    609c <revwin_create+0x6c>
    606e:	48 8d 4a fe          	lea    -0x2(%rdx),%rcx
    6072:	48 89 48 18          	mov    %rcx,0x18(%rax)
    6076:	b9 58 c3 ff ff       	mov    $0xffffc358,%ecx
    607b:	66 89 4a fe          	mov    %cx,-0x2(%rdx)
    607f:	48 8b 50 18          	mov    0x18(%rax),%rdx
    6083:	48 89 10             	mov    %rdx,(%rax)
    6086:	48 83 c4 08          	add    $0x8,%rsp
    608a:	c3                   	retq   
    608b:	48 8d 3d 6e f1 00 00 	lea    0xf16e(%rip),%rdi        # 15200 <__PRETTY_FUNCTION__.6351+0x170>
    6092:	e8 a9 b6 ff ff       	callq  1740 <puts@plt>
    6097:	e8 14 b6 ff ff       	callq  16b0 <abort@plt>
    609c:	be 02 00 00 00       	mov    $0x2,%esi
    60a1:	48 89 c7             	mov    %rax,%rdi
    60a4:	e8 17 fc ff ff       	callq  5cc0 <revwin_check_space.part.0>
    60a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000060b0 <revwin_free>:
    60b0:	48 89 fe             	mov    %rdi,%rsi
    60b3:	48 85 ff             	test   %rdi,%rdi
    60b6:	74 18                	je     60d0 <revwin_free+0x20>
    60b8:	64 48 8b 3c 25 40 49 	mov    %fs:0xffffffffffff4940,%rdi
    60bf:	ff ff 
    60c1:	e9 2a 08 00 00       	jmpq   68f0 <slab_free>
    60c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    60cd:	00 00 00 
    60d0:	c3                   	retq   
    60d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    60d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    60dd:	00 00 00 

00000000000060e0 <reverse_init>:
    60e0:	53                   	push   %rbx
    60e1:	48 89 fb             	mov    %rdi,%rbx
    60e4:	bf 50 00 00 00       	mov    $0x50,%edi
    60e9:	e8 22 b8 ff ff       	callq  1910 <malloc@plt>
    60ee:	64 48 89 04 25 40 49 	mov    %rax,%fs:0xffffffffffff4940
    60f5:	ff ff 
    60f7:	48 85 c0             	test   %rax,%rax
    60fa:	74 3e                	je     613a <reverse_init+0x5a>
    60fc:	8b 35 12 6f 21 00    	mov    0x216f12(%rip),%esi        # 21d014 <revwin_size>
    6102:	48 89 c7             	mov    %rax,%rdi
    6105:	48 85 db             	test   %rbx,%rbx
    6108:	75 26                	jne    6130 <reverse_init+0x50>
    610a:	e8 b1 02 00 00       	callq  63c0 <slab_init>
    610f:	b9 41 02 00 00       	mov    $0x241,%ecx
    6114:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    611b:	00 00 
    611d:	48 8d b8 48 49 ff ff 	lea    -0xb6b8(%rax),%rdi
    6124:	31 c0                	xor    %eax,%eax
    6126:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    6129:	5b                   	pop    %rbx
    612a:	c3                   	retq   
    612b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6130:	89 1d de 6e 21 00    	mov    %ebx,0x216ede(%rip)        # 21d014 <revwin_size>
    6136:	89 de                	mov    %ebx,%esi
    6138:	eb d0                	jmp    610a <reverse_init+0x2a>
    613a:	48 8d 3d f7 f0 00 00 	lea    0xf0f7(%rip),%rdi        # 15238 <__PRETTY_FUNCTION__.6351+0x1a8>
    6141:	e8 fa b5 ff ff       	callq  1740 <puts@plt>
    6146:	e8 65 b5 ff ff       	callq  16b0 <abort@plt>
    614b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006150 <reverse_fini>:
    6150:	48 83 ec 08          	sub    $0x8,%rsp
    6154:	64 48 8b 3c 25 40 49 	mov    %fs:0xffffffffffff4940,%rdi
    615b:	ff ff 
    615d:	e8 3e 0a 00 00       	callq  6ba0 <slab_destroy>
    6162:	31 d2                	xor    %edx,%edx
    6164:	48 8d 35 6b ef 00 00 	lea    0xef6b(%rip),%rsi        # 150d6 <__PRETTY_FUNCTION__.6351+0x46>
    616b:	31 c0                	xor    %eax,%eax
    616d:	bf 01 00 00 00       	mov    $0x1,%edi
    6172:	48 83 c4 08          	add    $0x8,%rsp
    6176:	e9 f5 b7 ff ff       	jmpq   1970 <__printf_chk@plt>
    617b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006180 <revwin_reset>:
    6180:	48 85 ff             	test   %rdi,%rdi
    6183:	74 0d                	je     6192 <revwin_reset+0x12>
    6185:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
    6189:	66 0f c6 c0 01       	shufpd $0x1,%xmm0,%xmm0
    618e:	0f 11 47 10          	movups %xmm0,0x10(%rdi)
    6192:	c3                   	retq   
    6193:	0f 1f 00             	nopl   (%rax)
    6196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    619d:	00 00 00 

00000000000061a0 <reverse_code_generator>:
    61a0:	41 55                	push   %r13
    61a2:	41 54                	push   %r12
    61a4:	55                   	push   %rbp
    61a5:	53                   	push   %rbx
    61a6:	48 83 ec 28          	sub    $0x28,%rsp
    61aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    61b1:	00 00 
    61b3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    61b8:	31 c0                	xor    %eax,%eax
    61ba:	48 c7 c0 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rax
    61c1:	64 48 8b 00          	mov    %fs:(%rax),%rax
    61c5:	4c 8b a8 c8 00 00 00 	mov    0xc8(%rax),%r13
    61cc:	4d 85 ed             	test   %r13,%r13
    61cf:	0f 84 60 01 00 00    	je     6335 <reverse_code_generator+0x195>
    61d5:	48 89 fd             	mov    %rdi,%rbp
    61d8:	49 89 f4             	mov    %rsi,%r12
    61db:	48 89 e7             	mov    %rsp,%rdi
    61de:	31 f6                	xor    %esi,%esi
    61e0:	e8 1b b6 ff ff       	callq  1800 <gettimeofday@plt>
    61e5:	48 89 ee             	mov    %rbp,%rsi
    61e8:	48 89 ea             	mov    %rbp,%rdx
    61eb:	64 4c 8b 0c 25 00 00 	mov    %fs:0x0,%r9
    61f2:	00 00 
    61f4:	48 c1 ee 05          	shr    $0x5,%rsi
    61f8:	48 c1 ea 0a          	shr    $0xa,%rdx
    61fc:	83 e6 1f             	and    $0x1f,%esi
    61ff:	48 8d 04 f6          	lea    (%rsi,%rsi,8),%rax
    6203:	48 c1 e0 04          	shl    $0x4,%rax
    6207:	49 89 c0             	mov    %rax,%r8
    620a:	4c 01 c8             	add    %r9,%rax
    620d:	4c 8d 90 48 49 ff ff 	lea    -0xb6b8(%rax),%r10
    6214:	48 39 90 50 49 ff ff 	cmp    %rdx,-0xb6b0(%rax)
    621b:	74 19                	je     6236 <reverse_code_generator+0x96>
    621d:	4f 8d 9c 08 50 49 ff 	lea    -0xb6b0(%r8,%r9,1),%r11
    6224:	ff 
    6225:	b9 12 00 00 00       	mov    $0x12,%ecx
    622a:	31 c0                	xor    %eax,%eax
    622c:	4c 89 df             	mov    %r11,%rdi
    622f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    6232:	49 89 52 08          	mov    %rdx,0x8(%r10)
    6236:	48 8d 04 f6          	lea    (%rsi,%rsi,8),%rax
    623a:	4b 8d bc 08 60 49 ff 	lea    -0xb6a0(%r8,%r9,1),%rdi
    6241:	ff 
    6242:	89 e9                	mov    %ebp,%ecx
    6244:	48 c1 e0 04          	shl    $0x4,%rax
    6248:	4a 8d b4 08 48 49 ff 	lea    -0xb6b8(%rax,%r9,1),%rsi
    624f:	ff 
    6250:	b8 01 00 00 00       	mov    $0x1,%eax
    6255:	83 46 10 01          	addl   $0x1,0x10(%rsi)
    6259:	8b 17                	mov    (%rdi),%edx
    625b:	d3 e0                	shl    %cl,%eax
    625d:	85 c2                	test   %eax,%edx
    625f:	0f 85 9b 00 00 00    	jne    6300 <reverse_code_generator+0x160>
    6265:	09 d0                	or     %edx,%eax
    6267:	66 0f ef c0          	pxor   %xmm0,%xmm0
    626b:	89 07                	mov    %eax,(%rdi)
    626d:	8b 46 14             	mov    0x14(%rsi),%eax
    6270:	83 c0 01             	add    $0x1,%eax
    6273:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    6278:	f2 0f 59 05 10 f1 00 	mulsd  0xf110(%rip),%xmm0        # 15390 <__PRETTY_FUNCTION__.6351+0x300>
    627f:	00 
    6280:	89 46 14             	mov    %eax,0x14(%rsi)
    6283:	64 f2 0f 11 04 25 48 	movsd  %xmm0,%fs:0xffffffffffff4948
    628a:	49 ff ff 
    628d:	66 0f 2f 05 03 f1 00 	comisd 0xf103(%rip),%xmm0        # 15398 <__PRETTY_FUNCTION__.6351+0x308>
    6294:	00 
    6295:	8b 05 d5 6d 21 00    	mov    0x216dd5(%rip),%eax        # 21d070 <strategy_id>
    629b:	77 33                	ja     62d0 <reverse_code_generator+0x130>
    629d:	48 8d 1d ec fb ff ff 	lea    -0x414(%rip),%rbx        # 5e90 <reverse_single_embedded>
    62a4:	83 f8 01             	cmp    $0x1,%eax
    62a7:	74 67                	je     6310 <reverse_code_generator+0x170>
    62a9:	4c 89 e2             	mov    %r12,%rdx
    62ac:	48 89 ee             	mov    %rbp,%rsi
    62af:	4c 89 ef             	mov    %r13,%rdi
    62b2:	ff d3                	callq  *%rbx
    62b4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    62b9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    62c0:	00 00 
    62c2:	75 6c                	jne    6330 <reverse_code_generator+0x190>
    62c4:	48 83 c4 28          	add    $0x28,%rsp
    62c8:	5b                   	pop    %rbx
    62c9:	5d                   	pop    %rbp
    62ca:	41 5c                	pop    %r12
    62cc:	41 5d                	pop    %r13
    62ce:	c3                   	retq   
    62cf:	90                   	nop
    62d0:	48 8d 1d 59 fc ff ff 	lea    -0x3a7(%rip),%rbx        # 5f30 <reverse_chunk>
    62d7:	85 c0                	test   %eax,%eax
    62d9:	75 ce                	jne    62a9 <reverse_code_generator+0x109>
    62db:	48 8d 35 0a ee 00 00 	lea    0xee0a(%rip),%rsi        # 150ec <__PRETTY_FUNCTION__.6351+0x5c>
    62e2:	bf 01 00 00 00       	mov    $0x1,%edi
    62e7:	b8 01 00 00 00       	mov    $0x1,%eax
    62ec:	c7 05 7a 6d 21 00 01 	movl   $0x1,0x216d7a(%rip)        # 21d070 <strategy_id>
    62f3:	00 00 00 
    62f6:	e8 75 b6 ff ff       	callq  1970 <__printf_chk@plt>
    62fb:	eb ac                	jmp    62a9 <reverse_code_generator+0x109>
    62fd:	0f 1f 00             	nopl   (%rax)
    6300:	64 f2 0f 10 04 25 48 	movsd  %fs:0xffffffffffff4948,%xmm0
    6307:	49 ff ff 
    630a:	eb 81                	jmp    628d <reverse_code_generator+0xed>
    630c:	0f 1f 40 00          	nopl   0x0(%rax)
    6310:	48 8d 35 89 ef 00 00 	lea    0xef89(%rip),%rsi        # 152a0 <__PRETTY_FUNCTION__.6351+0x210>
    6317:	bf 01 00 00 00       	mov    $0x1,%edi
    631c:	c7 05 4a 6d 21 00 00 	movl   $0x0,0x216d4a(%rip)        # 21d070 <strategy_id>
    6323:	00 00 00 
    6326:	e8 45 b6 ff ff       	callq  1970 <__printf_chk@plt>
    632b:	e9 79 ff ff ff       	jmpq   62a9 <reverse_code_generator+0x109>
    6330:	e8 6b b4 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    6335:	48 8d 3d 34 ef 00 00 	lea    0xef34(%rip),%rdi        # 15270 <__PRETTY_FUNCTION__.6351+0x1e0>
    633c:	e8 ff b3 ff ff       	callq  1740 <puts@plt>
    6341:	e8 6a b3 ff ff       	callq  16b0 <abort@plt>
    6346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    634d:	00 00 00 

0000000000006350 <execute_undo_event>:
    6350:	55                   	push   %rbp
    6351:	48 83 ec 20          	sub    $0x20,%rsp
    6355:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    635c:	00 00 
    635e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6363:	31 c0                	xor    %eax,%eax
    6365:	48 85 f6             	test   %rsi,%rsi
    6368:	74 26                	je     6390 <execute_undo_event+0x40>
    636a:	48 89 f5             	mov    %rsi,%rbp
    636d:	48 89 e7             	mov    %rsp,%rdi
    6370:	31 f6                	xor    %esi,%esi
    6372:	e8 89 b4 ff ff       	callq  1800 <gettimeofday@plt>
    6377:	48 8b 45 18          	mov    0x18(%rbp),%rax
    637b:	48 3b 45 10          	cmp    0x10(%rbp),%rax
    637f:	74 2a                	je     63ab <execute_undo_event+0x5b>
    6381:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    6385:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    6389:	c6 40 ff 50          	movb   $0x50,-0x1(%rax)
    638d:	ff 55 18             	callq  *0x18(%rbp)
    6390:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6395:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    639c:	00 00 
    639e:	75 06                	jne    63a6 <execute_undo_event+0x56>
    63a0:	48 83 c4 20          	add    $0x20,%rsp
    63a4:	5d                   	pop    %rbp
    63a5:	c3                   	retq   
    63a6:	e8 f5 b3 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    63ab:	be 01 00 00 00       	mov    $0x1,%esi
    63b0:	48 89 ef             	mov    %rbp,%rdi
    63b3:	e8 08 f9 ff ff       	callq  5cc0 <revwin_check_space.part.0>
    63b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    63bf:	00 

00000000000063c0 <slab_init>:
    63c0:	41 54                	push   %r12
    63c2:	4c 8b 25 af 6c 21 00 	mov    0x216caf(%rip),%r12        # 21d078 <slab_pagesize>
    63c9:	55                   	push   %rbp
    63ca:	48 89 f5             	mov    %rsi,%rbp
    63cd:	53                   	push   %rbx
    63ce:	48 89 fb             	mov    %rdi,%rbx
    63d1:	4d 85 e4             	test   %r12,%r12
    63d4:	0f 84 a6 01 00 00    	je     6580 <slab_init+0x1c0>
    63da:	48 85 db             	test   %rbx,%rbx
    63dd:	0f 84 09 02 00 00    	je     65ec <slab_init+0x22c>
    63e3:	48 85 ed             	test   %rbp,%rbp
    63e6:	0f 84 1f 02 00 00    	je     660b <slab_init+0x24b>
    63ec:	4d 85 e4             	test   %r12,%r12
    63ef:	0f 84 d8 01 00 00    	je     65cd <slab_init+0x20d>
    63f5:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
    63fa:	4c 85 e0             	test   %r12,%rax
    63fd:	0f 85 ca 01 00 00    	jne    65cd <slab_init+0x20d>
    6403:	48 89 2b             	mov    %rbp,(%rbx)
    6406:	48 c1 e5 06          	shl    $0x6,%rbp
    640a:	48 83 c5 28          	add    $0x28,%rbp
    640e:	0f 88 2c 01 00 00    	js     6540 <slab_init+0x180>
    6414:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6418:	f2 48 0f 2a c5       	cvtsi2sd %rbp,%xmm0
    641d:	e8 ee b3 ff ff       	callq  1810 <log2@plt>
    6422:	f2 0f 10 1d 56 ef 00 	movsd  0xef56(%rip),%xmm3        # 15380 <__PRETTY_FUNCTION__.6351+0x2f0>
    6429:	00 
    642a:	f2 0f 10 25 6e ef 00 	movsd  0xef6e(%rip),%xmm4        # 153a0 <__PRETTY_FUNCTION__.6351+0x310>
    6431:	00 
    6432:	66 0f 28 d0          	movapd %xmm0,%xmm2
    6436:	66 0f 28 c8          	movapd %xmm0,%xmm1
    643a:	66 0f 54 d3          	andpd  %xmm3,%xmm2
    643e:	66 0f 2e e2          	ucomisd %xmm2,%xmm4
    6442:	0f 87 b0 00 00 00    	ja     64f8 <slab_init+0x138>
    6448:	f2 0f 10 05 58 ef 00 	movsd  0xef58(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    644f:	00 
    6450:	66 0f 2f c8          	comisd %xmm0,%xmm1
    6454:	0f 83 86 00 00 00    	jae    64e0 <slab_init+0x120>
    645a:	f2 48 0f 2c c9       	cvttsd2si %xmm1,%rcx
    645f:	b8 01 00 00 00       	mov    $0x1,%eax
    6464:	48 c7 43 08 40 00 00 	movq   $0x40,0x8(%rbx)
    646b:	00 
    646c:	48 d3 e0             	shl    %cl,%rax
    646f:	48 89 43 10          	mov    %rax,0x10(%rbx)
    6473:	48 89 c1             	mov    %rax,%rcx
    6476:	48 39 e8             	cmp    %rbp,%rax
    6479:	0f 84 e1 00 00 00    	je     6560 <slab_init+0x1a0>
    647f:	48 89 c6             	mov    %rax,%rsi
    6482:	48 d1 ee             	shr    %rsi
    6485:	48 83 f8 51          	cmp    $0x51,%rax
    6489:	76 14                	jbe    649f <slab_init+0xdf>
    648b:	48 8b 3b             	mov    (%rbx),%rdi
    648e:	48 8d 46 d8          	lea    -0x28(%rsi),%rax
    6492:	48 8d 14 3f          	lea    (%rdi,%rdi,1),%rdx
    6496:	48 39 d0             	cmp    %rdx,%rax
    6499:	0f 83 01 01 00 00    	jae    65a0 <slab_init+0x1e0>
    649f:	48 c7 c2 fe ff ff ff 	mov    $0xfffffffffffffffe,%rdx
    64a6:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    64ad:	4c 39 e1             	cmp    %r12,%rcx
    64b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    64b4:	48 89 43 28          	mov    %rax,0x28(%rbx)
    64b8:	4c 0f 43 e1          	cmovae %rcx,%r12
    64bc:	48 f7 d9             	neg    %rcx
    64bf:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    64c3:	48 89 4b 30          	mov    %rcx,0x30(%rbx)
    64c7:	4c 89 63 18          	mov    %r12,0x18(%rbx)
    64cb:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    64d2:	00 
    64d3:	0f 11 43 38          	movups %xmm0,0x38(%rbx)
    64d7:	5b                   	pop    %rbx
    64d8:	5d                   	pop    %rbp
    64d9:	41 5c                	pop    %r12
    64db:	c3                   	retq   
    64dc:	0f 1f 40 00          	nopl   0x0(%rax)
    64e0:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
    64e4:	f2 48 0f 2c c9       	cvttsd2si %xmm1,%rcx
    64e9:	48 0f ba f9 3f       	btc    $0x3f,%rcx
    64ee:	e9 6c ff ff ff       	jmpq   645f <slab_init+0x9f>
    64f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    64f8:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    64fd:	66 0f ef d2          	pxor   %xmm2,%xmm2
    6501:	f2 0f 10 25 b7 ea 00 	movsd  0xeab7(%rip),%xmm4        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    6508:	00 
    6509:	66 0f 55 d8          	andnpd %xmm0,%xmm3
    650d:	f2 0f 10 05 93 ee 00 	movsd  0xee93(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    6514:	00 
    6515:	f2 48 0f 2a d0       	cvtsi2sd %rax,%xmm2
    651a:	f2 0f c2 ca 06       	cmpnlesd %xmm2,%xmm1
    651f:	66 0f 54 cc          	andpd  %xmm4,%xmm1
    6523:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    6527:	66 0f 56 cb          	orpd   %xmm3,%xmm1
    652b:	66 0f 2f c8          	comisd %xmm0,%xmm1
    652f:	73 af                	jae    64e0 <slab_init+0x120>
    6531:	e9 24 ff ff ff       	jmpq   645a <slab_init+0x9a>
    6536:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    653d:	00 00 00 
    6540:	48 89 e8             	mov    %rbp,%rax
    6543:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6547:	48 d1 e8             	shr    %rax
    654a:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    654f:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    6553:	e9 c5 fe ff ff       	jmpq   641d <slab_init+0x5d>
    6558:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    655f:	00 
    6560:	48 89 e9             	mov    %rbp,%rcx
    6563:	48 c7 c2 fe ff ff ff 	mov    $0xfffffffffffffffe,%rdx
    656a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    6571:	e9 37 ff ff ff       	jmpq   64ad <slab_init+0xed>
    6576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    657d:	00 00 00 
    6580:	bf 1e 00 00 00       	mov    $0x1e,%edi
    6585:	e8 76 b4 ff ff       	callq  1a00 <sysconf@plt>
    658a:	48 89 05 e7 6a 21 00 	mov    %rax,0x216ae7(%rip)        # 21d078 <slab_pagesize>
    6591:	49 89 c4             	mov    %rax,%r12
    6594:	e9 41 fe ff ff       	jmpq   63da <slab_init+0x1a>
    6599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    65a0:	31 d2                	xor    %edx,%edx
    65a2:	b9 40 00 00 00       	mov    $0x40,%ecx
    65a7:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    65ab:	48 f7 f7             	div    %rdi
    65ae:	29 c1                	sub    %eax,%ecx
    65b0:	48 89 43 08          	mov    %rax,0x8(%rbx)
    65b4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    65bb:	48 d3 e8             	shr    %cl,%rax
    65be:	48 89 f1             	mov    %rsi,%rcx
    65c1:	48 89 c2             	mov    %rax,%rdx
    65c4:	48 83 f2 01          	xor    $0x1,%rdx
    65c8:	e9 e0 fe ff ff       	jmpq   64ad <slab_init+0xed>
    65cd:	48 8d 0d bc ea 00 00 	lea    0xeabc(%rip),%rcx        # 15090 <__PRETTY_FUNCTION__.6351>
    65d4:	ba 28 00 00 00       	mov    $0x28,%edx
    65d9:	48 8d 35 2a eb 00 00 	lea    0xeb2a(%rip),%rsi        # 1510a <__PRETTY_FUNCTION__.6351+0x7a>
    65e0:	48 8d 3d 3e eb 00 00 	lea    0xeb3e(%rip),%rdi        # 15125 <__PRETTY_FUNCTION__.6351+0x95>
    65e7:	e8 34 b2 ff ff       	callq  1820 <__assert_fail@plt>
    65ec:	48 8d 0d 9d ea 00 00 	lea    0xea9d(%rip),%rcx        # 15090 <__PRETTY_FUNCTION__.6351>
    65f3:	ba 26 00 00 00       	mov    $0x26,%edx
    65f8:	48 8d 35 0b eb 00 00 	lea    0xeb0b(%rip),%rsi        # 1510a <__PRETTY_FUNCTION__.6351+0x7a>
    65ff:	48 8d 3d 13 eb 00 00 	lea    0xeb13(%rip),%rdi        # 15119 <__PRETTY_FUNCTION__.6351+0x89>
    6606:	e8 15 b2 ff ff       	callq  1820 <__assert_fail@plt>
    660b:	48 8d 0d 7e ea 00 00 	lea    0xea7e(%rip),%rcx        # 15090 <__PRETTY_FUNCTION__.6351>
    6612:	ba 27 00 00 00       	mov    $0x27,%edx
    6617:	48 8d 35 ec ea 00 00 	lea    0xeaec(%rip),%rsi        # 1510a <__PRETTY_FUNCTION__.6351+0x7a>
    661e:	48 8d 3d 9b ec 00 00 	lea    0xec9b(%rip),%rdi        # 152c0 <__PRETTY_FUNCTION__.6351+0x230>
    6625:	e8 f6 b1 ff ff       	callq  1820 <__assert_fail@plt>
    662a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006630 <slab_alloc>:
    6630:	41 55                	push   %r13
    6632:	41 54                	push   %r12
    6634:	55                   	push   %rbp
    6635:	53                   	push   %rbx
    6636:	48 83 ec 08          	sub    $0x8,%rsp
    663a:	48 85 ff             	test   %rdi,%rdi
    663d:	0f 84 77 02 00 00    	je     68ba <slab_alloc+0x28a>
    6643:	48 8b 47 38          	mov    0x38(%rdi),%rax
    6647:	48 89 fb             	mov    %rdi,%rbx
    664a:	48 85 c0             	test   %rax,%rax
    664d:	74 41                	je     6690 <slab_alloc+0x60>
    664f:	48 8b 70 10          	mov    0x10(%rax),%rsi
    6653:	31 c9                	xor    %ecx,%ecx
    6655:	ba 01 00 00 00       	mov    $0x1,%edx
    665a:	f3 48 0f bc ce       	tzcnt  %rsi,%rcx
    665f:	48 89 f7             	mov    %rsi,%rdi
    6662:	48 d3 e2             	shl    %cl,%rdx
    6665:	48 63 c9             	movslq %ecx,%rcx
    6668:	48 0f af 0b          	imul   (%rbx),%rcx
    666c:	48 31 d7             	xor    %rdx,%rdi
    666f:	48 89 78 10          	mov    %rdi,0x10(%rax)
    6673:	4c 8d 64 08 28       	lea    0x28(%rax,%rcx,1),%r12
    6678:	48 39 d6             	cmp    %rdx,%rsi
    667b:	74 6b                	je     66e8 <slab_alloc+0xb8>
    667d:	48 83 c4 08          	add    $0x8,%rsp
    6681:	4c 89 e0             	mov    %r12,%rax
    6684:	5b                   	pop    %rbx
    6685:	5d                   	pop    %rbp
    6686:	41 5c                	pop    %r12
    6688:	41 5d                	pop    %r13
    668a:	c3                   	retq   
    668b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6690:	4c 8b 67 40          	mov    0x40(%rdi),%r12
    6694:	4c 89 67 38          	mov    %r12,0x38(%rdi)
    6698:	4d 85 e4             	test   %r12,%r12
    669b:	74 78                	je     6715 <slab_alloc+0xe5>
    669d:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    66a2:	48 89 47 40          	mov    %rax,0x40(%rdi)
    66a6:	48 85 c0             	test   %rax,%rax
    66a9:	74 07                	je     66b2 <slab_alloc+0x82>
    66ab:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    66b2:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    66b9:	00 00 
    66bb:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    66c0:	48 85 c0             	test   %rax,%rax
    66c3:	0f 85 3d 01 00 00    	jne    6806 <slab_alloc+0x1d6>
    66c9:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    66ce:	48 83 40 18 01       	addq   $0x1,0x18(%rax)
    66d3:	48 8b 43 20          	mov    0x20(%rbx),%rax
    66d7:	49 83 c4 28          	add    $0x28,%r12
    66db:	49 89 44 24 e8       	mov    %rax,-0x18(%r12)
    66e0:	eb 9b                	jmp    667d <slab_alloc+0x4d>
    66e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    66e8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    66ec:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    66f0:	48 85 d2             	test   %rdx,%rdx
    66f3:	74 07                	je     66fc <slab_alloc+0xcc>
    66f5:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    66fc:	48 8b 53 48          	mov    0x48(%rbx),%rdx
    6700:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6704:	48 85 d2             	test   %rdx,%rdx
    6707:	74 03                	je     670c <slab_alloc+0xdc>
    6709:	48 89 02             	mov    %rax,(%rdx)
    670c:	48 89 43 48          	mov    %rax,0x48(%rbx)
    6710:	e9 68 ff ff ff       	jmpq   667d <slab_alloc+0x4d>
    6715:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    6719:	48 3b 35 58 69 21 00 	cmp    0x216958(%rip),%rsi        # 21d078 <slab_pagesize>
    6720:	48 8b 6f 18          	mov    0x18(%rdi),%rbp
    6724:	0f 87 ea 00 00 00    	ja     6814 <slab_alloc+0x1e4>
    672a:	31 ff                	xor    %edi,%edi
    672c:	45 31 c9             	xor    %r9d,%r9d
    672f:	ba 07 00 00 00       	mov    $0x7,%edx
    6734:	48 89 ee             	mov    %rbp,%rsi
    6737:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    673d:	b9 22 00 00 00       	mov    $0x22,%ecx
    6742:	e8 69 b0 ff ff       	callq  17b0 <mmap@plt>
    6747:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    674b:	ba 07 00 00 00       	mov    $0x7,%edx
    6750:	48 89 43 38          	mov    %rax,0x38(%rbx)
    6754:	48 89 c7             	mov    %rax,%rdi
    6757:	e8 44 b2 ff ff       	callq  19a0 <mprotect@plt>
    675c:	85 c0                	test   %eax,%eax
    675e:	0f 88 2c 01 00 00    	js     6890 <slab_alloc+0x260>
    6764:	48 8b 73 38          	mov    0x38(%rbx),%rsi
    6768:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
    676c:	0f 84 2f 01 00 00    	je     68a1 <slab_alloc+0x271>
    6772:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    6776:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    677a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    677e:	0f 18 0e             	prefetcht0 (%rsi)
    6781:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6785:	48 c7 46 18 01 00 00 	movq   $0x1,0x18(%rsi)
    678c:	00 
    678d:	49 01 f0             	add    %rsi,%r8
    6790:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    6794:	0f 11 06             	movups %xmm0,(%rsi)
    6797:	48 89 46 10          	mov    %rax,0x10(%rsi)
    679b:	4c 39 c7             	cmp    %r8,%rdi
    679e:	74 5d                	je     67fd <slab_alloc+0x1cd>
    67a0:	4c 8b 4b 28          	mov    0x28(%rbx),%r9
    67a4:	48 8d 04 0f          	lea    (%rdi,%rcx,1),%rax
    67a8:	48 89 77 20          	mov    %rsi,0x20(%rdi)
    67ac:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    67b3:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
    67ba:	00 
    67bb:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    67bf:	48 89 7b 40          	mov    %rdi,0x40(%rbx)
    67c3:	4c 39 c0             	cmp    %r8,%rax
    67c6:	74 2d                	je     67f5 <slab_alloc+0x1c5>
    67c8:	48 89 fa             	mov    %rdi,%rdx
    67cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    67d0:	48 89 42 08          	mov    %rax,0x8(%rdx)
    67d4:	48 89 c7             	mov    %rax,%rdi
    67d7:	48 89 10             	mov    %rdx,(%rax)
    67da:	48 01 ca             	add    %rcx,%rdx
    67dd:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    67e4:	00 
    67e5:	48 89 70 20          	mov    %rsi,0x20(%rax)
    67e9:	4c 89 48 10          	mov    %r9,0x10(%rax)
    67ed:	48 01 c8             	add    %rcx,%rax
    67f0:	49 39 c0             	cmp    %rax,%r8
    67f3:	75 db                	jne    67d0 <slab_alloc+0x1a0>
    67f5:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    67fc:	00 
    67fd:	4c 8d 66 28          	lea    0x28(%rsi),%r12
    6801:	e9 77 fe ff ff       	jmpq   667d <slab_alloc+0x4d>
    6806:	48 83 c0 01          	add    $0x1,%rax
    680a:	49 89 44 24 18       	mov    %rax,0x18(%r12)
    680f:	e9 bf fe ff ff       	jmpq   66d3 <slab_alloc+0xa3>
    6814:	48 8d 7f 38          	lea    0x38(%rdi),%rdi
    6818:	48 89 ea             	mov    %rbp,%rdx
    681b:	e8 50 b2 ff ff       	callq  1a70 <posix_memalign@plt>
    6820:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    6824:	ba 07 00 00 00       	mov    $0x7,%edx
    6829:	48 89 ee             	mov    %rbp,%rsi
    682c:	41 89 c5             	mov    %eax,%r13d
    682f:	85 c0                	test   %eax,%eax
    6831:	75 16                	jne    6849 <slab_alloc+0x219>
    6833:	e8 68 b1 ff ff       	callq  19a0 <mprotect@plt>
    6838:	85 c0                	test   %eax,%eax
    683a:	0f 88 99 00 00 00    	js     68d9 <slab_alloc+0x2a9>
    6840:	48 8b 73 38          	mov    0x38(%rbx),%rsi
    6844:	e9 29 ff ff ff       	jmpq   6772 <slab_alloc+0x142>
    6849:	e8 52 b1 ff ff       	callq  19a0 <mprotect@plt>
    684e:	85 c0                	test   %eax,%eax
    6850:	79 0c                	jns    685e <slab_alloc+0x22e>
    6852:	48 8d 3d 8f ea 00 00 	lea    0xea8f(%rip),%rdi        # 152e8 <__PRETTY_FUNCTION__.6351+0x258>
    6859:	e8 e2 ae ff ff       	callq  1740 <puts@plt>
    685e:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    6862:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    6866:	45 89 e9             	mov    %r13d,%r9d
    6869:	be 01 00 00 00       	mov    $0x1,%esi
    686e:	48 8b 3d eb 67 21 00 	mov    0x2167eb(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    6875:	48 8d 15 94 ea 00 00 	lea    0xea94(%rip),%rdx        # 15310 <__PRETTY_FUNCTION__.6351+0x280>
    687c:	31 c0                	xor    %eax,%eax
    687e:	e8 dd b1 ff ff       	callq  1a60 <__fprintf_chk@plt>
    6883:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
    688a:	00 
    688b:	e9 ed fd ff ff       	jmpq   667d <slab_alloc+0x4d>
    6890:	48 8d 3d 51 ea 00 00 	lea    0xea51(%rip),%rdi        # 152e8 <__PRETTY_FUNCTION__.6351+0x258>
    6897:	e8 a4 ae ff ff       	callq  1740 <puts@plt>
    689c:	e9 c3 fe ff ff       	jmpq   6764 <slab_alloc+0x134>
    68a1:	48 8d 3d 98 e8 00 00 	lea    0xe898(%rip),%rdi        # 15140 <__PRETTY_FUNCTION__.6351+0xb0>
    68a8:	e8 43 b1 ff ff       	callq  19f0 <perror@plt>
    68ad:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
    68b4:	00 
    68b5:	e9 c3 fd ff ff       	jmpq   667d <slab_alloc+0x4d>
    68ba:	48 8d 0d bf e7 00 00 	lea    0xe7bf(%rip),%rcx        # 15080 <__PRETTY_FUNCTION__.6358>
    68c1:	ba 44 00 00 00       	mov    $0x44,%edx
    68c6:	48 8d 35 3d e8 00 00 	lea    0xe83d(%rip),%rsi        # 1510a <__PRETTY_FUNCTION__.6351+0x7a>
    68cd:	48 8d 3d 45 e8 00 00 	lea    0xe845(%rip),%rdi        # 15119 <__PRETTY_FUNCTION__.6351+0x89>
    68d4:	e8 47 af ff ff       	callq  1820 <__assert_fail@plt>
    68d9:	48 8d 3d 08 ea 00 00 	lea    0xea08(%rip),%rdi        # 152e8 <__PRETTY_FUNCTION__.6351+0x258>
    68e0:	e8 5b ae ff ff       	callq  1740 <puts@plt>
    68e5:	e9 56 ff ff ff       	jmpq   6840 <slab_alloc+0x210>
    68ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000068f0 <slab_free>:
    68f0:	55                   	push   %rbp
    68f1:	53                   	push   %rbx
    68f2:	48 83 ec 08          	sub    $0x8,%rsp
    68f6:	48 85 ff             	test   %rdi,%rdi
    68f9:	0f 84 81 02 00 00    	je     6b80 <slab_free+0x290>
    68ff:	48 85 f6             	test   %rsi,%rsi
    6902:	0f 84 59 02 00 00    	je     6b61 <slab_free+0x271>
    6908:	4c 8b 47 30          	mov    0x30(%rdi),%r8
    690c:	31 d2                	xor    %edx,%edx
    690e:	49 21 f0             	and    %rsi,%r8
    6911:	4c 29 c6             	sub    %r8,%rsi
    6914:	48 8d 46 d8          	lea    -0x28(%rsi),%rax
    6918:	48 f7 37             	divq   (%rdi)
    691b:	49 8b 50 10          	mov    0x10(%r8),%rdx
    691f:	48 85 d2             	test   %rdx,%rdx
    6922:	74 2c                	je     6950 <slab_free+0x60>
    6924:	48 8b 77 28          	mov    0x28(%rdi),%rsi
    6928:	48 89 d1             	mov    %rdx,%rcx
    692b:	48 f7 d1             	not    %rcx
    692e:	48 21 f1             	and    %rsi,%rcx
    6931:	4c 8d 49 ff          	lea    -0x1(%rcx),%r9
    6935:	49 85 c9             	test   %rcx,%r9
    6938:	74 66                	je     69a0 <slab_free+0xb0>
    693a:	48 0f ab c2          	bts    %rax,%rdx
    693e:	49 89 50 10          	mov    %rdx,0x10(%r8)
    6942:	48 83 c4 08          	add    $0x8,%rsp
    6946:	5b                   	pop    %rbx
    6947:	5d                   	pop    %rbp
    6948:	c3                   	retq   
    6949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6950:	89 c1                	mov    %eax,%ecx
    6952:	ba 01 00 00 00       	mov    $0x1,%edx
    6957:	49 8b 40 08          	mov    0x8(%r8),%rax
    695b:	48 d3 e2             	shl    %cl,%rdx
    695e:	49 89 50 10          	mov    %rdx,0x10(%r8)
    6962:	4c 39 47 48          	cmp    %r8,0x48(%rdi)
    6966:	0f 84 9e 00 00 00    	je     6a0a <slab_free+0x11a>
    696c:	49 8b 10             	mov    (%r8),%rdx
    696f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    6973:	48 85 c0             	test   %rax,%rax
    6976:	74 07                	je     697f <slab_free+0x8f>
    6978:	49 8b 40 08          	mov    0x8(%r8),%rax
    697c:	48 89 10             	mov    %rdx,(%rax)
    697f:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    6986:	48 8b 47 38          	mov    0x38(%rdi),%rax
    698a:	49 89 40 08          	mov    %rax,0x8(%r8)
    698e:	48 85 c0             	test   %rax,%rax
    6991:	74 03                	je     6996 <slab_free+0xa6>
    6993:	4c 89 00             	mov    %r8,(%rax)
    6996:	4c 89 47 38          	mov    %r8,0x38(%rdi)
    699a:	eb a6                	jmp    6942 <slab_free+0x52>
    699c:	0f 1f 40 00          	nopl   0x0(%rax)
    69a0:	49 8b 40 18          	mov    0x18(%r8),%rax
    69a4:	48 83 f8 01          	cmp    $0x1,%rax
    69a8:	0f 84 80 00 00 00    	je     6a2e <slab_free+0x13e>
    69ae:	48 85 c0             	test   %rax,%rax
    69b1:	74 70                	je     6a23 <slab_free+0x133>
    69b3:	49 89 70 10          	mov    %rsi,0x10(%r8)
    69b7:	49 8b 50 08          	mov    0x8(%r8),%rdx
    69bb:	4c 39 47 38          	cmp    %r8,0x38(%rdi)
    69bf:	0f 84 30 01 00 00    	je     6af5 <slab_free+0x205>
    69c5:	49 8b 08             	mov    (%r8),%rcx
    69c8:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    69cc:	48 85 d2             	test   %rdx,%rdx
    69cf:	74 07                	je     69d8 <slab_free+0xe8>
    69d1:	49 8b 50 08          	mov    0x8(%r8),%rdx
    69d5:	48 89 0a             	mov    %rcx,(%rdx)
    69d8:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    69df:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    69e3:	49 89 50 08          	mov    %rdx,0x8(%r8)
    69e7:	48 85 d2             	test   %rdx,%rdx
    69ea:	74 03                	je     69ef <slab_free+0xff>
    69ec:	4c 89 02             	mov    %r8,(%rdx)
    69ef:	4c 89 47 40          	mov    %r8,0x40(%rdi)
    69f3:	48 85 c0             	test   %rax,%rax
    69f6:	0f 85 ec 00 00 00    	jne    6ae8 <slab_free+0x1f8>
    69fc:	49 8b 40 20          	mov    0x20(%r8),%rax
    6a00:	48 83 68 18 01       	subq   $0x1,0x18(%rax)
    6a05:	e9 38 ff ff ff       	jmpq   6942 <slab_free+0x52>
    6a0a:	48 89 47 48          	mov    %rax,0x48(%rdi)
    6a0e:	48 85 c0             	test   %rax,%rax
    6a11:	0f 84 6f ff ff ff    	je     6986 <slab_free+0x96>
    6a17:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6a1e:	e9 63 ff ff ff       	jmpq   6986 <slab_free+0x96>
    6a23:	49 8b 50 20          	mov    0x20(%r8),%rdx
    6a27:	48 83 7a 18 01       	cmpq   $0x1,0x18(%rdx)
    6a2c:	75 85                	jne    69b3 <slab_free+0xc3>
    6a2e:	49 8b 50 08          	mov    0x8(%r8),%rdx
    6a32:	4c 39 47 38          	cmp    %r8,0x38(%rdi)
    6a36:	0f 84 e7 00 00 00    	je     6b23 <slab_free+0x233>
    6a3c:	49 8b 08             	mov    (%r8),%rcx
    6a3f:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    6a43:	48 85 d2             	test   %rdx,%rdx
    6a46:	74 07                	je     6a4f <slab_free+0x15f>
    6a48:	49 8b 50 08          	mov    0x8(%r8),%rdx
    6a4c:	48 89 0a             	mov    %rcx,(%rdx)
    6a4f:	48 85 c0             	test   %rax,%rax
    6a52:	0f 85 e4 00 00 00    	jne    6b3c <slab_free+0x24c>
    6a58:	4d 8b 58 20          	mov    0x20(%r8),%r11
    6a5c:	48 8b 6f 18          	mov    0x18(%rdi),%rbp
    6a60:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    6a64:	4d 8d 0c 2b          	lea    (%r11,%rbp,1),%r9
    6a68:	4d 39 cb             	cmp    %r9,%r11
    6a6b:	74 48                	je     6ab5 <slab_free+0x1c5>
    6a6d:	4c 8b 57 40          	mov    0x40(%rdi),%r10
    6a71:	4c 89 d8             	mov    %r11,%rax
    6a74:	31 db                	xor    %ebx,%ebx
    6a76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6a7d:	00 00 00 
    6a80:	4c 39 d0             	cmp    %r10,%rax
    6a83:	0f 84 85 00 00 00    	je     6b0e <slab_free+0x21e>
    6a89:	4c 39 c0             	cmp    %r8,%rax
    6a8c:	74 17                	je     6aa5 <slab_free+0x1b5>
    6a8e:	48 8b 08             	mov    (%rax),%rcx
    6a91:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6a95:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    6a99:	48 85 d2             	test   %rdx,%rdx
    6a9c:	74 07                	je     6aa5 <slab_free+0x1b5>
    6a9e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6aa2:	48 89 0a             	mov    %rcx,(%rdx)
    6aa5:	48 01 f0             	add    %rsi,%rax
    6aa8:	49 39 c1             	cmp    %rax,%r9
    6aab:	75 d3                	jne    6a80 <slab_free+0x190>
    6aad:	84 db                	test   %bl,%bl
    6aaf:	0f 85 8f 00 00 00    	jne    6b44 <slab_free+0x254>
    6ab5:	48 3b 35 bc 65 21 00 	cmp    0x2165bc(%rip),%rsi        # 21d078 <slab_pagesize>
    6abc:	77 57                	ja     6b15 <slab_free+0x225>
    6abe:	48 89 ee             	mov    %rbp,%rsi
    6ac1:	4c 89 df             	mov    %r11,%rdi
    6ac4:	e8 97 ae ff ff       	callq  1960 <munmap@plt>
    6ac9:	83 f8 ff             	cmp    $0xffffffff,%eax
    6acc:	0f 85 70 fe ff ff    	jne    6942 <slab_free+0x52>
    6ad2:	58                   	pop    %rax
    6ad3:	48 8d 3d 78 e6 00 00 	lea    0xe678(%rip),%rdi        # 15152 <__PRETTY_FUNCTION__.6351+0xc2>
    6ada:	5b                   	pop    %rbx
    6adb:	5d                   	pop    %rbp
    6adc:	e9 0f af ff ff       	jmpq   19f0 <perror@plt>
    6ae1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6ae8:	48 83 e8 01          	sub    $0x1,%rax
    6aec:	49 89 40 18          	mov    %rax,0x18(%r8)
    6af0:	e9 4d fe ff ff       	jmpq   6942 <slab_free+0x52>
    6af5:	48 89 57 38          	mov    %rdx,0x38(%rdi)
    6af9:	48 85 d2             	test   %rdx,%rdx
    6afc:	0f 84 dd fe ff ff    	je     69df <slab_free+0xef>
    6b02:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    6b09:	e9 d1 fe ff ff       	jmpq   69df <slab_free+0xef>
    6b0e:	bb 01 00 00 00       	mov    $0x1,%ebx
    6b13:	eb 90                	jmp    6aa5 <slab_free+0x1b5>
    6b15:	48 83 c4 08          	add    $0x8,%rsp
    6b19:	4c 89 df             	mov    %r11,%rdi
    6b1c:	5b                   	pop    %rbx
    6b1d:	5d                   	pop    %rbp
    6b1e:	e9 5d ab ff ff       	jmpq   1680 <free@plt>
    6b23:	48 89 57 38          	mov    %rdx,0x38(%rdi)
    6b27:	48 85 d2             	test   %rdx,%rdx
    6b2a:	0f 84 1f ff ff ff    	je     6a4f <slab_free+0x15f>
    6b30:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    6b37:	e9 13 ff ff ff       	jmpq   6a4f <slab_free+0x15f>
    6b3c:	4d 89 c3             	mov    %r8,%r11
    6b3f:	e9 18 ff ff ff       	jmpq   6a5c <slab_free+0x16c>
    6b44:	49 8b 42 08          	mov    0x8(%r10),%rax
    6b48:	48 89 47 40          	mov    %rax,0x40(%rdi)
    6b4c:	48 85 c0             	test   %rax,%rax
    6b4f:	0f 84 60 ff ff ff    	je     6ab5 <slab_free+0x1c5>
    6b55:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6b5c:	e9 54 ff ff ff       	jmpq   6ab5 <slab_free+0x1c5>
    6b61:	48 8d 0d 08 e5 00 00 	lea    0xe508(%rip),%rcx        # 15070 <__PRETTY_FUNCTION__.6375>
    6b68:	ba aa 00 00 00       	mov    $0xaa,%edx
    6b6d:	48 8d 35 96 e5 00 00 	lea    0xe596(%rip),%rsi        # 1510a <__PRETTY_FUNCTION__.6351+0x7a>
    6b74:	48 8d 3d ca e5 00 00 	lea    0xe5ca(%rip),%rdi        # 15145 <__PRETTY_FUNCTION__.6351+0xb5>
    6b7b:	e8 a0 ac ff ff       	callq  1820 <__assert_fail@plt>
    6b80:	48 8d 0d e9 e4 00 00 	lea    0xe4e9(%rip),%rcx        # 15070 <__PRETTY_FUNCTION__.6375>
    6b87:	ba a9 00 00 00       	mov    $0xa9,%edx
    6b8c:	48 8d 35 77 e5 00 00 	lea    0xe577(%rip),%rsi        # 1510a <__PRETTY_FUNCTION__.6351+0x7a>
    6b93:	48 8d 3d 7f e5 00 00 	lea    0xe57f(%rip),%rdi        # 15119 <__PRETTY_FUNCTION__.6351+0x89>
    6b9a:	e8 81 ac ff ff       	callq  1820 <__assert_fail@plt>
    6b9f:	90                   	nop

0000000000006ba0 <slab_destroy>:
    6ba0:	41 54                	push   %r12
    6ba2:	55                   	push   %rbp
    6ba3:	53                   	push   %rbx
    6ba4:	48 83 ec 20          	sub    $0x20,%rsp
    6ba8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6baf:	00 00 
    6bb1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6bb6:	31 c0                	xor    %eax,%eax
    6bb8:	48 85 ff             	test   %rdi,%rdi
    6bbb:	0f 84 e9 00 00 00    	je     6caa <slab_destroy+0x10a>
    6bc1:	48 8b 47 48          	mov    0x48(%rdi),%rax
    6bc5:	f3 0f 6f 47 38       	movdqu 0x38(%rdi),%xmm0
    6bca:	48 89 fd             	mov    %rdi,%rbp
    6bcd:	31 db                	xor    %ebx,%ebx
    6bcf:	48 89 e7             	mov    %rsp,%rdi
    6bd2:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
    6bd7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6bdc:	0f 29 04 24          	movaps %xmm0,(%rsp)
    6be0:	48 8b 07             	mov    (%rdi),%rax
    6be3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6be8:	48 85 c0             	test   %rax,%rax
    6beb:	74 25                	je     6c12 <slab_destroy+0x72>
    6bed:	48 8b 50 18          	mov    0x18(%rax),%rdx
    6bf1:	48 89 c1             	mov    %rax,%rcx
    6bf4:	48 8b 40 08          	mov    0x8(%rax),%rax
    6bf8:	48 85 d2             	test   %rdx,%rdx
    6bfb:	74 eb                	je     6be8 <slab_destroy+0x48>
    6bfd:	48 85 db             	test   %rbx,%rbx
    6c00:	0f 84 8a 00 00 00    	je     6c90 <slab_destroy+0xf0>
    6c06:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    6c0a:	48 89 ce             	mov    %rcx,%rsi
    6c0d:	48 85 c0             	test   %rax,%rax
    6c10:	75 db                	jne    6bed <slab_destroy+0x4d>
    6c12:	48 83 c7 08          	add    $0x8,%rdi
    6c16:	4c 39 c7             	cmp    %r8,%rdi
    6c19:	75 c5                	jne    6be0 <slab_destroy+0x40>
    6c1b:	48 85 db             	test   %rbx,%rbx
    6c1e:	74 3a                	je     6c5a <slab_destroy+0xba>
    6c20:	48 c7 46 08 00 00 00 	movq   $0x0,0x8(%rsi)
    6c27:	00 
    6c28:	48 8b 05 49 64 21 00 	mov    0x216449(%rip),%rax        # 21d078 <slab_pagesize>
    6c2f:	48 39 45 10          	cmp    %rax,0x10(%rbp)
    6c33:	77 43                	ja     6c78 <slab_destroy+0xd8>
    6c35:	4c 8d 25 16 e5 00 00 	lea    0xe516(%rip),%r12        # 15152 <__PRETTY_FUNCTION__.6351+0xc2>
    6c3c:	0f 1f 40 00          	nopl   0x0(%rax)
    6c40:	48 8b 75 18          	mov    0x18(%rbp),%rsi
    6c44:	48 89 df             	mov    %rbx,%rdi
    6c47:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
    6c4b:	e8 10 ad ff ff       	callq  1960 <munmap@plt>
    6c50:	83 f8 ff             	cmp    $0xffffffff,%eax
    6c53:	74 4b                	je     6ca0 <slab_destroy+0x100>
    6c55:	48 85 db             	test   %rbx,%rbx
    6c58:	75 e6                	jne    6c40 <slab_destroy+0xa0>
    6c5a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6c5f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    6c66:	00 00 
    6c68:	75 5f                	jne    6cc9 <slab_destroy+0x129>
    6c6a:	48 83 c4 20          	add    $0x20,%rsp
    6c6e:	5b                   	pop    %rbx
    6c6f:	5d                   	pop    %rbp
    6c70:	41 5c                	pop    %r12
    6c72:	c3                   	retq   
    6c73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6c78:	48 89 df             	mov    %rbx,%rdi
    6c7b:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
    6c7f:	e8 fc a9 ff ff       	callq  1680 <free@plt>
    6c84:	48 85 db             	test   %rbx,%rbx
    6c87:	75 ef                	jne    6c78 <slab_destroy+0xd8>
    6c89:	eb cf                	jmp    6c5a <slab_destroy+0xba>
    6c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6c90:	48 89 ce             	mov    %rcx,%rsi
    6c93:	48 89 cb             	mov    %rcx,%rbx
    6c96:	e9 4d ff ff ff       	jmpq   6be8 <slab_destroy+0x48>
    6c9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6ca0:	4c 89 e7             	mov    %r12,%rdi
    6ca3:	e8 48 ad ff ff       	callq  19f0 <perror@plt>
    6ca8:	eb ab                	jmp    6c55 <slab_destroy+0xb5>
    6caa:	48 8d 0d af e3 00 00 	lea    0xe3af(%rip),%rcx        # 15060 <__PRETTY_FUNCTION__.6392>
    6cb1:	ba 07 01 00 00       	mov    $0x107,%edx
    6cb6:	48 8d 35 4d e4 00 00 	lea    0xe44d(%rip),%rsi        # 1510a <__PRETTY_FUNCTION__.6351+0x7a>
    6cbd:	48 8d 3d 55 e4 00 00 	lea    0xe455(%rip),%rdi        # 15119 <__PRETTY_FUNCTION__.6351+0x89>
    6cc4:	e8 57 ab ff ff       	callq  1820 <__assert_fail@plt>
    6cc9:	e8 d2 aa ff ff       	callq  17a0 <__stack_chk_fail@plt>
    6cce:	66 90                	xchg   %ax,%ax

0000000000006cd0 <_set_jmp>:
    6cd0:	9c                   	pushfq 
    6cd1:	50                   	push   %rax
    6cd2:	41 53                	push   %r11
    6cd4:	48 89 f8             	mov    %rdi,%rax
    6cd7:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    6cdc:	4c 89 18             	mov    %r11,(%rax)
    6cdf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6ce3:	48 89 48 10          	mov    %rcx,0x10(%rax)
    6ce7:	48 89 58 18          	mov    %rbx,0x18(%rax)
    6ceb:	48 89 60 20          	mov    %rsp,0x20(%rax)
    6cef:	48 83 40 20 10       	addq   $0x10,0x20(%rax)
    6cf4:	48 89 68 28          	mov    %rbp,0x28(%rax)
    6cf8:	48 89 70 30          	mov    %rsi,0x30(%rax)
    6cfc:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    6d01:	4c 89 58 38          	mov    %r11,0x38(%rax)
    6d05:	4c 89 40 40          	mov    %r8,0x40(%rax)
    6d09:	4c 89 48 48          	mov    %r9,0x48(%rax)
    6d0d:	4c 89 50 50          	mov    %r10,0x50(%rax)
    6d11:	4c 8b 1c 24          	mov    (%rsp),%r11
    6d15:	4c 89 58 58          	mov    %r11,0x58(%rax)
    6d19:	4c 89 60 60          	mov    %r12,0x60(%rax)
    6d1d:	4c 89 68 68          	mov    %r13,0x68(%rax)
    6d21:	4c 89 70 70          	mov    %r14,0x70(%rax)
    6d25:	4c 89 78 78          	mov    %r15,0x78(%rax)
    6d29:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    6d2e:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    6d35:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    6d3a:	4c 89 98 80 00 00 00 	mov    %r11,0x80(%rax)
    6d41:	0f ae 80 90 00 00 00 	fxsave 0x90(%rax)
    6d48:	48 83 c4 18          	add    $0x18,%rsp
    6d4c:	48 31 c0             	xor    %rax,%rax
    6d4f:	c3                   	retq   

0000000000006d50 <_long_jmp>:
    6d50:	48 89 f8             	mov    %rdi,%rax
    6d53:	4c 8b 90 80 00 00 00 	mov    0x80(%rax),%r10
    6d5a:	4c 8b 58 20          	mov    0x20(%rax),%r11
    6d5e:	4d 89 53 08          	mov    %r10,0x8(%r11)
    6d62:	49 89 33             	mov    %rsi,(%r11)
    6d65:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6d69:	48 8b 48 10          	mov    0x10(%rax),%rcx
    6d6d:	48 8b 58 18          	mov    0x18(%rax),%rbx
    6d71:	48 8b 60 20          	mov    0x20(%rax),%rsp
    6d75:	48 8b 68 28          	mov    0x28(%rax),%rbp
    6d79:	48 8b 70 30          	mov    0x30(%rax),%rsi
    6d7d:	48 8b 78 38          	mov    0x38(%rax),%rdi
    6d81:	4c 8b 40 40          	mov    0x40(%rax),%r8
    6d85:	4c 8b 48 48          	mov    0x48(%rax),%r9
    6d89:	4c 8b 50 50          	mov    0x50(%rax),%r10
    6d8d:	4c 8b 58 58          	mov    0x58(%rax),%r11
    6d91:	4c 8b 60 60          	mov    0x60(%rax),%r12
    6d95:	4c 8b 68 68          	mov    0x68(%rax),%r13
    6d99:	4c 8b 70 70          	mov    0x70(%rax),%r14
    6d9d:	4c 8b 78 78          	mov    0x78(%rax),%r15
    6da1:	ff b0 88 00 00 00    	pushq  0x88(%rax)
    6da7:	9d                   	popfq  
    6da8:	0f ae 88 90 00 00 00 	fxrstor 0x90(%rax)
    6daf:	48 8b 60 20          	mov    0x20(%rax),%rsp
    6db3:	58                   	pop    %rax
    6db4:	c3                   	retq   
    6db5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6dbc:	00 00 00 
    6dbf:	90                   	nop

0000000000006dc0 <ipi_register_thread>:
    6dc0:	41 57                	push   %r15
    6dc2:	41 56                	push   %r14
    6dc4:	41 55                	push   %r13
    6dc6:	41 54                	push   %r12
    6dc8:	55                   	push   %rbp
    6dc9:	53                   	push   %rbx
    6dca:	48 83 ec 08          	sub    $0x8,%rsp
    6dce:	85 ff                	test   %edi,%edi
    6dd0:	0f 88 a2 02 00 00    	js     7078 <ipi_register_thread+0x2b8>
    6dd6:	48 89 d3             	mov    %rdx,%rbx
    6dd9:	48 85 d2             	test   %rdx,%rdx
    6ddc:	0f 84 e6 02 00 00    	je     70c8 <ipi_register_thread+0x308>
    6de2:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    6de7:	48 39 44 24 48       	cmp    %rax,0x48(%rsp)
    6dec:	0f 86 de 01 00 00    	jbe    6fd0 <ipi_register_thread+0x210>
    6df2:	48 c7 c0 00 49 ff ff 	mov    $0xffffffffffff4900,%rax
    6df9:	4c 89 cd             	mov    %r9,%rbp
    6dfc:	31 ff                	xor    %edi,%edi
    6dfe:	49 89 f4             	mov    %rsi,%r12
    6e01:	49 89 cd             	mov    %rcx,%r13
    6e04:	4d 89 c6             	mov    %r8,%r14
    6e07:	45 31 c9             	xor    %r9d,%r9d
    6e0a:	45 31 c0             	xor    %r8d,%r8d
    6e0d:	64 8b 00             	mov    %fs:(%rax),%eax
    6e10:	b9 22 00 02 00       	mov    $0x20022,%ecx
    6e15:	ba 03 00 00 00       	mov    $0x3,%edx
    6e1a:	48 89 ee             	mov    %rbp,%rsi
    6e1d:	64 89 04 25 80 5b ff 	mov    %eax,%fs:0xffffffffffff5b80
    6e24:	ff 
    6e25:	e8 86 a9 ff ff       	callq  17b0 <mmap@plt>
    6e2a:	48 89 03             	mov    %rax,(%rbx)
    6e2d:	48 89 c7             	mov    %rax,%rdi
    6e30:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    6e34:	0f 84 76 01 00 00    	je     6fb0 <ipi_register_thread+0x1f0>
    6e3a:	31 f6                	xor    %esi,%esi
    6e3c:	48 89 ea             	mov    %rbp,%rdx
    6e3f:	e8 0c aa ff ff       	callq  1850 <memset@plt>
    6e44:	48 8b 3b             	mov    (%rbx),%rdi
    6e47:	48 89 ee             	mov    %rbp,%rsi
    6e4a:	e8 91 a8 ff ff       	callq  16e0 <mlock@plt>
    6e4f:	85 c0                	test   %eax,%eax
    6e51:	0f 85 99 01 00 00    	jne    6ff0 <ipi_register_thread+0x230>
    6e57:	be 00 08 00 00       	mov    $0x800,%esi
    6e5c:	48 8d 3d ad 1b 01 00 	lea    0x11bad(%rip),%rdi        # 18a10 <__PRETTY_FUNCTION__.6556+0x2c50>
    6e63:	31 c0                	xor    %eax,%eax
    6e65:	e8 46 ab ff ff       	callq  19b0 <open@plt>
    6e6a:	64 89 04 25 84 5b ff 	mov    %eax,%fs:0xffffffffffff5b84
    6e71:	ff 
    6e72:	41 89 c7             	mov    %eax,%r15d
    6e75:	85 c0                	test   %eax,%eax
    6e77:	0f 88 33 02 00 00    	js     70b0 <ipi_register_thread+0x2f0>
    6e7d:	89 c7                	mov    %eax,%edi
    6e7f:	4c 89 e2             	mov    %r12,%rdx
    6e82:	31 c0                	xor    %eax,%eax
    6e84:	be 04 00 00 00       	mov    $0x4,%esi
    6e89:	e8 e2 a9 ff ff       	callq  1870 <ioctl@plt>
    6e8e:	85 c0                	test   %eax,%eax
    6e90:	0f 88 72 01 00 00    	js     7008 <ipi_register_thread+0x248>
    6e96:	48 8b 13             	mov    (%rbx),%rdx
    6e99:	31 c0                	xor    %eax,%eax
    6e9b:	be 10 00 00 00       	mov    $0x10,%esi
    6ea0:	44 89 ff             	mov    %r15d,%edi
    6ea3:	e8 c8 a9 ff ff       	callq  1870 <ioctl@plt>
    6ea8:	85 c0                	test   %eax,%eax
    6eaa:	0f 88 50 02 00 00    	js     7100 <ipi_register_thread+0x340>
    6eb0:	31 c0                	xor    %eax,%eax
    6eb2:	48 89 ea             	mov    %rbp,%rdx
    6eb5:	be 20 00 00 00       	mov    $0x20,%esi
    6eba:	44 89 ff             	mov    %r15d,%edi
    6ebd:	e8 ae a9 ff ff       	callq  1870 <ioctl@plt>
    6ec2:	85 c0                	test   %eax,%eax
    6ec4:	0f 88 66 02 00 00    	js     7130 <ipi_register_thread+0x370>
    6eca:	48 8b 03             	mov    (%rbx),%rax
    6ecd:	bf be 00 00 00       	mov    $0xbe,%edi
    6ed2:	48 8b 00             	mov    (%rax),%rax
    6ed5:	49 89 45 00          	mov    %rax,0x0(%r13)
    6ed9:	e8 22 ab ff ff       	callq  1a00 <sysconf@plt>
    6ede:	48 85 c0             	test   %rax,%rax
    6ee1:	0f 88 39 02 00 00    	js     7120 <ipi_register_thread+0x360>
    6ee7:	49 8b 55 00          	mov    0x0(%r13),%rdx
    6eeb:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
    6eef:	49 89 06             	mov    %rax,(%r14)
    6ef2:	48 8d 15 47 af ff ff 	lea    -0x50b9(%rip),%rdx        # 1e40 <_start>
    6ef9:	31 c0                	xor    %eax,%eax
    6efb:	44 89 ff             	mov    %r15d,%edi
    6efe:	be 40 00 00 00       	mov    $0x40,%esi
    6f03:	e8 68 a9 ff ff       	callq  1870 <ioctl@plt>
    6f08:	85 c0                	test   %eax,%eax
    6f0a:	0f 88 40 02 00 00    	js     7150 <ipi_register_thread+0x390>
    6f10:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    6f15:	be 80 00 00 00       	mov    $0x80,%esi
    6f1a:	44 89 ff             	mov    %r15d,%edi
    6f1d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    6f21:	31 c0                	xor    %eax,%eax
    6f23:	e8 48 a9 ff ff       	callq  1870 <ioctl@plt>
    6f28:	85 c0                	test   %eax,%eax
    6f2a:	0f 88 40 02 00 00    	js     7170 <ipi_register_thread+0x3b0>
    6f30:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    6f35:	31 c0                	xor    %eax,%eax
    6f37:	be 40 00 00 00       	mov    $0x40,%esi
    6f3c:	44 89 ff             	mov    %r15d,%edi
    6f3f:	e8 2c a9 ff ff       	callq  1870 <ioctl@plt>
    6f44:	85 c0                	test   %eax,%eax
    6f46:	0f 88 94 01 00 00    	js     70e0 <ipi_register_thread+0x320>
    6f4c:	48 8d 15 20 d7 00 00 	lea    0xd720(%rip),%rdx        # 14673 <__libc_csu_fini+0x3>
    6f53:	be 80 00 00 00       	mov    $0x80,%esi
    6f58:	44 89 ff             	mov    %r15d,%edi
    6f5b:	31 c0                	xor    %eax,%eax
    6f5d:	e8 0e a9 ff ff       	callq  1870 <ioctl@plt>
    6f62:	41 89 c0             	mov    %eax,%r8d
    6f65:	31 c0                	xor    %eax,%eax
    6f67:	45 85 c0             	test   %r8d,%r8d
    6f6a:	79 55                	jns    6fc1 <ipi_register_thread+0x201>
    6f6c:	48 8d 15 01 d7 00 00 	lea    0xd701(%rip),%rdx        # 14674 <_fini>
    6f73:	48 8d 35 fe f2 00 00 	lea    0xf2fe(%rip),%rsi        # 16278 <__PRETTY_FUNCTION__.6556+0x4b8>
    6f7a:	bf 01 00 00 00       	mov    $0x1,%edi
    6f7f:	90                   	nop
    6f80:	e8 eb a9 ff ff       	callq  1970 <__printf_chk@plt>
    6f85:	64 44 8b 24 25 84 5b 	mov    %fs:0xffffffffffff5b84,%r12d
    6f8c:	ff ff 
    6f8e:	be 08 00 00 00       	mov    $0x8,%esi
    6f93:	31 c0                	xor    %eax,%eax
    6f95:	44 89 e7             	mov    %r12d,%edi
    6f98:	e8 d3 a8 ff ff       	callq  1870 <ioctl@plt>
    6f9d:	44 89 e7             	mov    %r12d,%edi
    6fa0:	e8 eb a8 ff ff       	callq  1890 <close@plt>
    6fa5:	e9 86 00 00 00       	jmpq   7030 <ipi_register_thread+0x270>
    6faa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6fb0:	48 8d 3d 21 ef 00 00 	lea    0xef21(%rip),%rdi        # 15ed8 <__PRETTY_FUNCTION__.6556+0x118>
    6fb7:	e8 84 a7 ff ff       	callq  1740 <puts@plt>
    6fbc:	b8 01 00 00 00       	mov    $0x1,%eax
    6fc1:	48 83 c4 08          	add    $0x8,%rsp
    6fc5:	5b                   	pop    %rbx
    6fc6:	5d                   	pop    %rbp
    6fc7:	41 5c                	pop    %r12
    6fc9:	41 5d                	pop    %r13
    6fcb:	41 5e                	pop    %r14
    6fcd:	41 5f                	pop    %r15
    6fcf:	c3                   	retq   
    6fd0:	48 8d 3d a9 ee 00 00 	lea    0xeea9(%rip),%rdi        # 15e80 <__PRETTY_FUNCTION__.6556+0xc0>
    6fd7:	e8 64 a7 ff ff       	callq  1740 <puts@plt>
    6fdc:	48 83 c4 08          	add    $0x8,%rsp
    6fe0:	b8 01 00 00 00       	mov    $0x1,%eax
    6fe5:	5b                   	pop    %rbx
    6fe6:	5d                   	pop    %rbp
    6fe7:	41 5c                	pop    %r12
    6fe9:	41 5d                	pop    %r13
    6feb:	41 5e                	pop    %r14
    6fed:	41 5f                	pop    %r15
    6fef:	c3                   	retq   
    6ff0:	48 8d 3d 41 ef 00 00 	lea    0xef41(%rip),%rdi        # 15f38 <__PRETTY_FUNCTION__.6556+0x178>
    6ff7:	e8 44 a7 ff ff       	callq  1740 <puts@plt>
    6ffc:	e9 56 fe ff ff       	jmpq   6e57 <ipi_register_thread+0x97>
    7001:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7008:	64 8b 14 25 80 5b ff 	mov    %fs:0xffffffffffff5b80,%edx
    700f:	ff 
    7010:	bf 01 00 00 00       	mov    $0x1,%edi
    7015:	48 8d 35 0c f0 00 00 	lea    0xf00c(%rip),%rsi        # 16028 <__PRETTY_FUNCTION__.6556+0x268>
    701c:	31 c0                	xor    %eax,%eax
    701e:	e8 4d a9 ff ff       	callq  1970 <__printf_chk@plt>
    7023:	64 8b 3c 25 84 5b ff 	mov    %fs:0xffffffffffff5b84,%edi
    702a:	ff 
    702b:	e8 60 a8 ff ff       	callq  1890 <close@plt>
    7030:	48 8b 3b             	mov    (%rbx),%rdi
    7033:	48 89 ee             	mov    %rbp,%rsi
    7036:	e8 25 a6 ff ff       	callq  1660 <munlock@plt>
    703b:	85 c0                	test   %eax,%eax
    703d:	75 61                	jne    70a0 <ipi_register_thread+0x2e0>
    703f:	48 8b 3b             	mov    (%rbx),%rdi
    7042:	48 89 ee             	mov    %rbp,%rsi
    7045:	e8 16 a9 ff ff       	callq  1960 <munmap@plt>
    704a:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    7051:	85 c0                	test   %eax,%eax
    7053:	74 0c                	je     7061 <ipi_register_thread+0x2a1>
    7055:	48 8d 3d 94 ef 00 00 	lea    0xef94(%rip),%rdi        # 15ff0 <__PRETTY_FUNCTION__.6556+0x230>
    705c:	e8 df a6 ff ff       	callq  1740 <puts@plt>
    7061:	48 83 c4 08          	add    $0x8,%rsp
    7065:	b8 01 00 00 00       	mov    $0x1,%eax
    706a:	5b                   	pop    %rbx
    706b:	5d                   	pop    %rbp
    706c:	41 5c                	pop    %r12
    706e:	41 5d                	pop    %r13
    7070:	41 5e                	pop    %r14
    7072:	41 5f                	pop    %r15
    7074:	c3                   	retq   
    7075:	0f 1f 00             	nopl   (%rax)
    7078:	48 8d 3d 59 ed 00 00 	lea    0xed59(%rip),%rdi        # 15dd8 <__PRETTY_FUNCTION__.6556+0x18>
    707f:	e8 bc a6 ff ff       	callq  1740 <puts@plt>
    7084:	48 83 c4 08          	add    $0x8,%rsp
    7088:	b8 01 00 00 00       	mov    $0x1,%eax
    708d:	5b                   	pop    %rbx
    708e:	5d                   	pop    %rbp
    708f:	41 5c                	pop    %r12
    7091:	41 5d                	pop    %r13
    7093:	41 5e                	pop    %r14
    7095:	41 5f                	pop    %r15
    7097:	c3                   	retq   
    7098:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    709f:	00 
    70a0:	48 8d 3d 11 ef 00 00 	lea    0xef11(%rip),%rdi        # 15fb8 <__PRETTY_FUNCTION__.6556+0x1f8>
    70a7:	e8 94 a6 ff ff       	callq  1740 <puts@plt>
    70ac:	eb 91                	jmp    703f <ipi_register_thread+0x27f>
    70ae:	66 90                	xchg   %ax,%ax
    70b0:	48 8d 3d b9 ee 00 00 	lea    0xeeb9(%rip),%rdi        # 15f70 <__PRETTY_FUNCTION__.6556+0x1b0>
    70b7:	e8 84 a6 ff ff       	callq  1740 <puts@plt>
    70bc:	e9 6f ff ff ff       	jmpq   7030 <ipi_register_thread+0x270>
    70c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    70c8:	48 8d 3d 59 ed 00 00 	lea    0xed59(%rip),%rdi        # 15e28 <__PRETTY_FUNCTION__.6556+0x68>
    70cf:	e8 6c a6 ff ff       	callq  1740 <puts@plt>
    70d4:	b8 01 00 00 00       	mov    $0x1,%eax
    70d9:	e9 e3 fe ff ff       	jmpq   6fc1 <ipi_register_thread+0x201>
    70de:	66 90                	xchg   %ax,%ax
    70e0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    70e5:	48 8d 35 24 f1 00 00 	lea    0xf124(%rip),%rsi        # 16210 <__PRETTY_FUNCTION__.6556+0x450>
    70ec:	bf 01 00 00 00       	mov    $0x1,%edi
    70f1:	31 c0                	xor    %eax,%eax
    70f3:	e9 88 fe ff ff       	jmpq   6f80 <ipi_register_thread+0x1c0>
    70f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    70ff:	00 
    7100:	64 8b 14 25 80 5b ff 	mov    %fs:0xffffffffffff5b80,%edx
    7107:	ff 
    7108:	48 8d 35 71 ef 00 00 	lea    0xef71(%rip),%rsi        # 16080 <__PRETTY_FUNCTION__.6556+0x2c0>
    710f:	bf 01 00 00 00       	mov    $0x1,%edi
    7114:	31 c0                	xor    %eax,%eax
    7116:	e8 55 a8 ff ff       	callq  1970 <__printf_chk@plt>
    711b:	e9 65 fe ff ff       	jmpq   6f85 <ipi_register_thread+0x1c5>
    7120:	49 8b 45 00          	mov    0x0(%r13),%rax
    7124:	48 05 00 02 00 00    	add    $0x200,%rax
    712a:	e9 c0 fd ff ff       	jmpq   6eef <ipi_register_thread+0x12f>
    712f:	90                   	nop
    7130:	64 8b 14 25 80 5b ff 	mov    %fs:0xffffffffffff5b80,%edx
    7137:	ff 
    7138:	48 8d 35 a1 ef 00 00 	lea    0xefa1(%rip),%rsi        # 160e0 <__PRETTY_FUNCTION__.6556+0x320>
    713f:	bf 01 00 00 00       	mov    $0x1,%edi
    7144:	31 c0                	xor    %eax,%eax
    7146:	e8 25 a8 ff ff       	callq  1970 <__printf_chk@plt>
    714b:	e9 35 fe ff ff       	jmpq   6f85 <ipi_register_thread+0x1c5>
    7150:	48 8d 15 e9 ac ff ff 	lea    -0x5317(%rip),%rdx        # 1e40 <_start>
    7157:	48 8d 35 ea ef 00 00 	lea    0xefea(%rip),%rsi        # 16148 <__PRETTY_FUNCTION__.6556+0x388>
    715e:	bf 01 00 00 00       	mov    $0x1,%edi
    7163:	31 c0                	xor    %eax,%eax
    7165:	e9 16 fe ff ff       	jmpq   6f80 <ipi_register_thread+0x1c0>
    716a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7170:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    7175:	48 8d 35 34 f0 00 00 	lea    0xf034(%rip),%rsi        # 161b0 <__PRETTY_FUNCTION__.6556+0x3f0>
    717c:	bf 01 00 00 00       	mov    $0x1,%edi
    7181:	31 c0                	xor    %eax,%eax
    7183:	e9 f8 fd ff ff       	jmpq   6f80 <ipi_register_thread+0x1c0>
    7188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    718f:	00 

0000000000007190 <ipi_unregister_thread>:
    7190:	41 55                	push   %r13
    7192:	31 c0                	xor    %eax,%eax
    7194:	45 31 ed             	xor    %r13d,%r13d
    7197:	41 54                	push   %r12
    7199:	55                   	push   %rbp
    719a:	48 89 f5             	mov    %rsi,%rbp
    719d:	be 08 00 00 00       	mov    $0x8,%esi
    71a2:	53                   	push   %rbx
    71a3:	48 89 fb             	mov    %rdi,%rbx
    71a6:	48 83 ec 08          	sub    $0x8,%rsp
    71aa:	64 44 8b 24 25 84 5b 	mov    %fs:0xffffffffffff5b84,%r12d
    71b1:	ff ff 
    71b3:	44 89 e7             	mov    %r12d,%edi
    71b6:	e8 b5 a6 ff ff       	callq  1870 <ioctl@plt>
    71bb:	85 c0                	test   %eax,%eax
    71bd:	78 61                	js     7220 <ipi_unregister_thread+0x90>
    71bf:	44 89 e7             	mov    %r12d,%edi
    71c2:	e8 c9 a6 ff ff       	callq  1890 <close@plt>
    71c7:	48 85 db             	test   %rbx,%rbx
    71ca:	74 25                	je     71f1 <ipi_unregister_thread+0x61>
    71cc:	48 8b 3b             	mov    (%rbx),%rdi
    71cf:	48 89 ee             	mov    %rbp,%rsi
    71d2:	e8 89 a4 ff ff       	callq  1660 <munlock@plt>
    71d7:	85 c0                	test   %eax,%eax
    71d9:	75 75                	jne    7250 <ipi_unregister_thread+0xc0>
    71db:	48 8b 3b             	mov    (%rbx),%rdi
    71de:	48 89 ee             	mov    %rbp,%rsi
    71e1:	e8 7a a7 ff ff       	callq  1960 <munmap@plt>
    71e6:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    71ed:	85 c0                	test   %eax,%eax
    71ef:	75 0f                	jne    7200 <ipi_unregister_thread+0x70>
    71f1:	48 83 c4 08          	add    $0x8,%rsp
    71f5:	44 89 e8             	mov    %r13d,%eax
    71f8:	5b                   	pop    %rbx
    71f9:	5d                   	pop    %rbp
    71fa:	41 5c                	pop    %r12
    71fc:	41 5d                	pop    %r13
    71fe:	c3                   	retq   
    71ff:	90                   	nop
    7200:	48 8d 3d e9 ed 00 00 	lea    0xede9(%rip),%rdi        # 15ff0 <__PRETTY_FUNCTION__.6556+0x230>
    7207:	e8 34 a5 ff ff       	callq  1740 <puts@plt>
    720c:	48 83 c4 08          	add    $0x8,%rsp
    7210:	44 89 e8             	mov    %r13d,%eax
    7213:	5b                   	pop    %rbx
    7214:	5d                   	pop    %rbp
    7215:	41 5c                	pop    %r12
    7217:	41 5d                	pop    %r13
    7219:	c3                   	retq   
    721a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7220:	64 8b 14 25 80 5b ff 	mov    %fs:0xffffffffffff5b80,%edx
    7227:	ff 
    7228:	48 8d 35 b1 f0 00 00 	lea    0xf0b1(%rip),%rsi        # 162e0 <__PRETTY_FUNCTION__.6556+0x520>
    722f:	bf 01 00 00 00       	mov    $0x1,%edi
    7234:	31 c0                	xor    %eax,%eax
    7236:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    723c:	e8 2f a7 ff ff       	callq  1970 <__printf_chk@plt>
    7241:	64 44 8b 24 25 84 5b 	mov    %fs:0xffffffffffff5b84,%r12d
    7248:	ff ff 
    724a:	e9 70 ff ff ff       	jmpq   71bf <ipi_unregister_thread+0x2f>
    724f:	90                   	nop
    7250:	48 8d 3d 61 ed 00 00 	lea    0xed61(%rip),%rdi        # 15fb8 <__PRETTY_FUNCTION__.6556+0x1f8>
    7257:	e8 e4 a4 ff ff       	callq  1740 <puts@plt>
    725c:	e9 7a ff ff ff       	jmpq   71db <ipi_unregister_thread+0x4b>
    7261:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    726d:	00 00 00 

0000000000007270 <ipi_print_and_reset_counters_ipi_module>:
    7270:	48 83 ec 08          	sub    $0x8,%rsp
    7274:	64 8b 3c 25 84 5b ff 	mov    %fs:0xffffffffffff5b84,%edi
    727b:	ff 
    727c:	be 00 01 00 00       	mov    $0x100,%esi
    7281:	31 c0                	xor    %eax,%eax
    7283:	e8 e8 a5 ff ff       	callq  1870 <ioctl@plt>
    7288:	41 89 c0             	mov    %eax,%r8d
    728b:	31 c0                	xor    %eax,%eax
    728d:	45 85 c0             	test   %r8d,%r8d
    7290:	78 0e                	js     72a0 <ipi_print_and_reset_counters_ipi_module+0x30>
    7292:	48 83 c4 08          	add    $0x8,%rsp
    7296:	c3                   	retq   
    7297:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    729e:	00 00 
    72a0:	64 8b 14 25 80 5b ff 	mov    %fs:0xffffffffffff5b80,%edx
    72a7:	ff 
    72a8:	48 8d 35 71 f0 00 00 	lea    0xf071(%rip),%rsi        # 16320 <__PRETTY_FUNCTION__.6556+0x560>
    72af:	bf 01 00 00 00       	mov    $0x1,%edi
    72b4:	e8 b7 a6 ff ff       	callq  1970 <__printf_chk@plt>
    72b9:	b8 01 00 00 00       	mov    $0x1,%eax
    72be:	48 83 c4 08          	add    $0x8,%rsp
    72c2:	c3                   	retq   
    72c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    72ca:	00 00 00 
    72cd:	0f 1f 00             	nopl   (%rax)

00000000000072d0 <do_sleep>:
    72d0:	48 83 ec 08          	sub    $0x8,%rsp
    72d4:	8b 15 a6 5d 21 00    	mov    0x215da6(%rip),%edx        # 21d080 <sec_stop>
    72da:	bf 01 00 00 00       	mov    $0x1,%edi
    72df:	31 c0                	xor    %eax,%eax
    72e1:	48 8d 35 60 f0 00 00 	lea    0xf060(%rip),%rsi        # 16348 <__PRETTY_FUNCTION__.6556+0x588>
    72e8:	e8 83 a6 ff ff       	callq  1970 <__printf_chk@plt>
    72ed:	8b 3d 8d 5d 21 00    	mov    0x215d8d(%rip),%edi        # 21d080 <sec_stop>
    72f3:	e8 a8 a7 ff ff       	callq  1aa0 <sleep@plt>
    72f8:	8b 05 82 5d 21 00    	mov    0x215d82(%rip),%eax        # 21d080 <sec_stop>
    72fe:	85 c0                	test   %eax,%eax
    7300:	74 07                	je     7309 <do_sleep+0x39>
    7302:	c6 05 7b 5d 21 00 01 	movb   $0x1,0x215d7b(%rip)        # 21d084 <stop_timer>
    7309:	31 ff                	xor    %edi,%edi
    730b:	e8 f0 a5 ff ff       	callq  1900 <pthread_exit@plt>

0000000000007310 <rootsim_error>:
    7310:	55                   	push   %rbp
    7311:	53                   	push   %rbx
    7312:	89 fb                	mov    %edi,%ebx
    7314:	48 81 ec e8 04 00 00 	sub    $0x4e8,%rsp
    731b:	48 89 94 24 40 04 00 	mov    %rdx,0x440(%rsp)
    7322:	00 
    7323:	48 89 8c 24 48 04 00 	mov    %rcx,0x448(%rsp)
    732a:	00 
    732b:	4c 89 84 24 50 04 00 	mov    %r8,0x450(%rsp)
    7332:	00 
    7333:	4c 89 8c 24 58 04 00 	mov    %r9,0x458(%rsp)
    733a:	00 
    733b:	84 c0                	test   %al,%al
    733d:	74 40                	je     737f <rootsim_error+0x6f>
    733f:	0f 29 84 24 60 04 00 	movaps %xmm0,0x460(%rsp)
    7346:	00 
    7347:	0f 29 8c 24 70 04 00 	movaps %xmm1,0x470(%rsp)
    734e:	00 
    734f:	0f 29 94 24 80 04 00 	movaps %xmm2,0x480(%rsp)
    7356:	00 
    7357:	0f 29 9c 24 90 04 00 	movaps %xmm3,0x490(%rsp)
    735e:	00 
    735f:	0f 29 a4 24 a0 04 00 	movaps %xmm4,0x4a0(%rsp)
    7366:	00 
    7367:	0f 29 ac 24 b0 04 00 	movaps %xmm5,0x4b0(%rsp)
    736e:	00 
    736f:	0f 29 b4 24 c0 04 00 	movaps %xmm6,0x4c0(%rsp)
    7376:	00 
    7377:	0f 29 bc 24 d0 04 00 	movaps %xmm7,0x4d0(%rsp)
    737e:	00 
    737f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7386:	00 00 
    7388:	48 89 84 24 28 04 00 	mov    %rax,0x428(%rsp)
    738f:	00 
    7390:	31 c0                	xor    %eax,%eax
    7392:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
    7397:	49 89 f0             	mov    %rsi,%r8
    739a:	b9 00 04 00 00       	mov    $0x400,%ecx
    739f:	48 8d 84 24 00 05 00 	lea    0x500(%rsp),%rax
    73a6:	00 
    73a7:	4c 8d 4c 24 08       	lea    0x8(%rsp),%r9
    73ac:	ba 01 00 00 00       	mov    $0x1,%edx
    73b1:	48 89 ef             	mov    %rbp,%rdi
    73b4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    73b9:	be 00 04 00 00       	mov    $0x400,%esi
    73be:	48 8d 84 24 30 04 00 	lea    0x430(%rsp),%rax
    73c5:	00 
    73c6:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%rsp)
    73cd:	00 
    73ce:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
    73d5:	00 
    73d6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    73db:	e8 50 a5 ff ff       	callq  1930 <__vsnprintf_chk@plt>
    73e0:	48 8b 0d 79 5c 21 00 	mov    0x215c79(%rip),%rcx        # 21d060 <stderr@@GLIBC_2.2.5>
    73e7:	84 db                	test   %bl,%bl
    73e9:	74 55                	je     7440 <rootsim_error+0x130>
    73eb:	ba 0e 00 00 00       	mov    $0xe,%edx
    73f0:	be 01 00 00 00       	mov    $0x1,%esi
    73f5:	48 8d 3d 1d 16 01 00 	lea    0x1161d(%rip),%rdi        # 18a19 <__PRETTY_FUNCTION__.6556+0x2c59>
    73fc:	e8 4f a6 ff ff       	callq  1a50 <fwrite@plt>
    7401:	48 8b 35 58 5c 21 00 	mov    0x215c58(%rip),%rsi        # 21d060 <stderr@@GLIBC_2.2.5>
    7408:	48 89 ef             	mov    %rbp,%rdi
    740b:	e8 20 a4 ff ff       	callq  1830 <fputs@plt>
    7410:	48 8b 3d 49 5c 21 00 	mov    0x215c49(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    7417:	e8 04 a5 ff ff       	callq  1920 <fflush@plt>
    741c:	c6 05 6d 5c 21 00 01 	movb   $0x1,0x215c6d(%rip)        # 21d090 <sim_error>
    7423:	48 8b 84 24 28 04 00 	mov    0x428(%rsp),%rax
    742a:	00 
    742b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7432:	00 00 
    7434:	75 3d                	jne    7473 <rootsim_error+0x163>
    7436:	48 81 c4 e8 04 00 00 	add    $0x4e8,%rsp
    743d:	5b                   	pop    %rbx
    743e:	5d                   	pop    %rbp
    743f:	c3                   	retq   
    7440:	ba 0a 00 00 00       	mov    $0xa,%edx
    7445:	be 01 00 00 00       	mov    $0x1,%esi
    744a:	48 8d 3d d7 15 01 00 	lea    0x115d7(%rip),%rdi        # 18a28 <__PRETTY_FUNCTION__.6556+0x2c68>
    7451:	e8 fa a5 ff ff       	callq  1a50 <fwrite@plt>
    7456:	48 8b 35 03 5c 21 00 	mov    0x215c03(%rip),%rsi        # 21d060 <stderr@@GLIBC_2.2.5>
    745d:	48 89 ef             	mov    %rbp,%rdi
    7460:	e8 cb a3 ff ff       	callq  1830 <fputs@plt>
    7465:	48 8b 3d f4 5b 21 00 	mov    0x215bf4(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    746c:	e8 af a4 ff ff       	callq  1920 <fflush@plt>
    7471:	eb b0                	jmp    7423 <rootsim_error+0x113>
    7473:	e8 28 a3 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    7478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    747f:	00 

0000000000007480 <_mkdir>:
    7480:	41 54                	push   %r12
    7482:	48 89 fe             	mov    %rdi,%rsi
    7485:	ba 00 02 00 00       	mov    $0x200,%edx
    748a:	55                   	push   %rbp
    748b:	53                   	push   %rbx
    748c:	48 81 ec 10 02 00 00 	sub    $0x210,%rsp
    7493:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    749a:	00 00 
    749c:	48 89 84 24 08 02 00 	mov    %rax,0x208(%rsp)
    74a3:	00 
    74a4:	31 c0                	xor    %eax,%eax
    74a6:	49 89 e4             	mov    %rsp,%r12
    74a9:	4c 89 e7             	mov    %r12,%rdi
    74ac:	e8 4f a2 ff ff       	callq  1700 <strncpy@plt>
    74b1:	4c 89 e2             	mov    %r12,%rdx
    74b4:	8b 0a                	mov    (%rdx),%ecx
    74b6:	48 83 c2 04          	add    $0x4,%rdx
    74ba:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    74c0:	f7 d1                	not    %ecx
    74c2:	21 c8                	and    %ecx,%eax
    74c4:	25 80 80 80 80       	and    $0x80808080,%eax
    74c9:	74 e9                	je     74b4 <_mkdir+0x34>
    74cb:	89 c1                	mov    %eax,%ecx
    74cd:	c1 e9 10             	shr    $0x10,%ecx
    74d0:	a9 80 80 00 00       	test   $0x8080,%eax
    74d5:	0f 44 c1             	cmove  %ecx,%eax
    74d8:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    74dc:	48 0f 44 d1          	cmove  %rcx,%rdx
    74e0:	89 c6                	mov    %eax,%esi
    74e2:	40 00 c6             	add    %al,%sil
    74e5:	48 83 da 03          	sbb    $0x3,%rdx
    74e9:	4c 29 e2             	sub    %r12,%rdx
    74ec:	80 7c 14 ff 2f       	cmpb   $0x2f,-0x1(%rsp,%rdx,1)
    74f1:	0f 84 b9 00 00 00    	je     75b0 <_mkdir+0x130>
    74f7:	0f b6 44 24 01       	movzbl 0x1(%rsp),%eax
    74fc:	84 c0                	test   %al,%al
    74fe:	74 40                	je     7540 <_mkdir+0xc0>
    7500:	48 8d 5c 24 01       	lea    0x1(%rsp),%rbx
    7505:	48 8d 2d 64 ee 00 00 	lea    0xee64(%rip),%rbp        # 16370 <__PRETTY_FUNCTION__.6556+0x5b0>
    750c:	eb 0e                	jmp    751c <_mkdir+0x9c>
    750e:	66 90                	xchg   %ax,%ax
    7510:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    7514:	48 83 c3 01          	add    $0x1,%rbx
    7518:	84 c0                	test   %al,%al
    751a:	74 24                	je     7540 <_mkdir+0xc0>
    751c:	3c 2f                	cmp    $0x2f,%al
    751e:	75 f0                	jne    7510 <_mkdir+0x90>
    7520:	31 f6                	xor    %esi,%esi
    7522:	4c 89 e7             	mov    %r12,%rdi
    7525:	c6 03 00             	movb   $0x0,(%rbx)
    7528:	e8 93 a4 ff ff       	callq  19c0 <access@plt>
    752d:	85 c0                	test   %eax,%eax
    752f:	75 47                	jne    7578 <_mkdir+0xf8>
    7531:	c6 03 2f             	movb   $0x2f,(%rbx)
    7534:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    7538:	48 83 c3 01          	add    $0x1,%rbx
    753c:	84 c0                	test   %al,%al
    753e:	75 dc                	jne    751c <_mkdir+0x9c>
    7540:	31 f6                	xor    %esi,%esi
    7542:	4c 89 e7             	mov    %r12,%rdi
    7545:	e8 76 a4 ff ff       	callq  19c0 <access@plt>
    754a:	85 c0                	test   %eax,%eax
    754c:	75 72                	jne    75c0 <_mkdir+0x140>
    754e:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
    7555:	00 
    7556:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    755d:	00 00 
    755f:	0f 85 99 00 00 00    	jne    75fe <_mkdir+0x17e>
    7565:	48 81 c4 10 02 00 00 	add    $0x210,%rsp
    756c:	5b                   	pop    %rbx
    756d:	5d                   	pop    %rbp
    756e:	41 5c                	pop    %r12
    7570:	c3                   	retq   
    7571:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7578:	be c0 01 00 00       	mov    $0x1c0,%esi
    757d:	4c 89 e7             	mov    %r12,%rdi
    7580:	e8 ab a1 ff ff       	callq  1730 <mkdir@plt>
    7585:	85 c0                	test   %eax,%eax
    7587:	74 a8                	je     7531 <_mkdir+0xb1>
    7589:	e8 32 a1 ff ff       	callq  16c0 <__errno_location@plt>
    758e:	83 38 11             	cmpl   $0x11,(%rax)
    7591:	74 9e                	je     7531 <_mkdir+0xb1>
    7593:	4c 89 e2             	mov    %r12,%rdx
    7596:	48 89 ee             	mov    %rbp,%rsi
    7599:	bf 01 00 00 00       	mov    $0x1,%edi
    759e:	31 c0                	xor    %eax,%eax
    75a0:	e8 6b fd ff ff       	callq  7310 <rootsim_error>
    75a5:	eb 8a                	jmp    7531 <_mkdir+0xb1>
    75a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    75ae:	00 00 
    75b0:	c6 44 14 ff 00       	movb   $0x0,-0x1(%rsp,%rdx,1)
    75b5:	e9 3d ff ff ff       	jmpq   74f7 <_mkdir+0x77>
    75ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    75c0:	be c0 01 00 00       	mov    $0x1c0,%esi
    75c5:	4c 89 e7             	mov    %r12,%rdi
    75c8:	e8 63 a1 ff ff       	callq  1730 <mkdir@plt>
    75cd:	85 c0                	test   %eax,%eax
    75cf:	0f 84 79 ff ff ff    	je     754e <_mkdir+0xce>
    75d5:	e8 e6 a0 ff ff       	callq  16c0 <__errno_location@plt>
    75da:	83 38 11             	cmpl   $0x11,(%rax)
    75dd:	0f 84 6b ff ff ff    	je     754e <_mkdir+0xce>
    75e3:	4c 89 e2             	mov    %r12,%rdx
    75e6:	48 8d 35 83 ed 00 00 	lea    0xed83(%rip),%rsi        # 16370 <__PRETTY_FUNCTION__.6556+0x5b0>
    75ed:	bf 01 00 00 00       	mov    $0x1,%edi
    75f2:	31 c0                	xor    %eax,%eax
    75f4:	e8 17 fd ff ff       	callq  7310 <rootsim_error>
    75f9:	e9 50 ff ff ff       	jmpq   754e <_mkdir+0xce>
    75fe:	e8 9d a1 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    7603:	0f 1f 00             	nopl   (%rax)
    7606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    760d:	00 00 00 

0000000000007610 <set_affinity>:
    7610:	41 55                	push   %r13
    7612:	41 54                	push   %r12
    7614:	41 89 fc             	mov    %edi,%r12d
    7617:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    761e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7625:	00 00 
    7627:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    762e:	00 
    762f:	31 c0                	xor    %eax,%eax
    7631:	83 ff 07             	cmp    $0x7,%edi
    7634:	77 7b                	ja     76b1 <set_affinity+0xa1>
    7636:	64 89 3c 25 00 49 ff 	mov    %edi,%fs:0xffffffffffff4900
    763d:	ff 
    763e:	89 f9                	mov    %edi,%ecx
    7640:	89 fa                	mov    %edi,%edx
    7642:	31 c0                	xor    %eax,%eax
    7644:	48 8d 35 e8 13 01 00 	lea    0x113e8(%rip),%rsi        # 18a33 <__PRETTY_FUNCTION__.6556+0x2c73>
    764b:	bf 01 00 00 00       	mov    $0x1,%edi
    7650:	49 89 e5             	mov    %rsp,%r13
    7653:	e8 18 a3 ff ff       	callq  1970 <__printf_chk@plt>
    7658:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    765d:	31 c0                	xor    %eax,%eax
    765f:	b9 0f 00 00 00       	mov    $0xf,%ecx
    7664:	48 89 d7             	mov    %rdx,%rdi
    7667:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    766a:	44 89 e1             	mov    %r12d,%ecx
    766d:	b8 01 00 00 00       	mov    $0x1,%eax
    7672:	48 d3 e0             	shl    %cl,%rax
    7675:	48 89 04 24          	mov    %rax,(%rsp)
    7679:	e8 12 a3 ff ff       	callq  1990 <pthread_self@plt>
    767e:	4c 89 ea             	mov    %r13,%rdx
    7681:	be 80 00 00 00       	mov    $0x80,%esi
    7686:	48 89 c7             	mov    %rax,%rdi
    7689:	e8 42 a1 ff ff       	callq  17d0 <pthread_setaffinity_np@plt>
    768e:	85 c0                	test   %eax,%eax
    7690:	75 3f                	jne    76d1 <set_affinity+0xc1>
    7692:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    7699:	00 
    769a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    76a1:	00 00 
    76a3:	75 27                	jne    76cc <set_affinity+0xbc>
    76a5:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    76ac:	41 5c                	pop    %r12
    76ae:	41 5d                	pop    %r13
    76b0:	c3                   	retq   
    76b1:	89 fa                	mov    %edi,%edx
    76b3:	48 8d 35 de ec 00 00 	lea    0xecde(%rip),%rsi        # 16398 <__PRETTY_FUNCTION__.6556+0x5d8>
    76ba:	bf 01 00 00 00       	mov    $0x1,%edi
    76bf:	e8 ac a2 ff ff       	callq  1970 <__printf_chk@plt>
    76c4:	83 cf ff             	or     $0xffffffff,%edi
    76c7:	e8 74 a3 ff ff       	callq  1a40 <exit@plt>
    76cc:	e8 cf a0 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    76d1:	e8 ea 9f ff ff       	callq  16c0 <__errno_location@plt>
    76d6:	8b 38                	mov    (%rax),%edi
    76d8:	e8 b3 a3 ff ff       	callq  1a90 <strerror@plt>
    76dd:	bf 01 00 00 00       	mov    $0x1,%edi
    76e2:	48 8d 35 d7 ec 00 00 	lea    0xecd7(%rip),%rsi        # 163c0 <__PRETTY_FUNCTION__.6556+0x600>
    76e9:	48 89 c2             	mov    %rax,%rdx
    76ec:	31 c0                	xor    %eax,%eax
    76ee:	e8 7d a2 ff ff       	callq  1970 <__printf_chk@plt>
    76f3:	83 cf ff             	or     $0xffffffff,%edi
    76f6:	e8 45 a3 ff ff       	callq  1a40 <exit@plt>
    76fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007700 <SetState>:
    7700:	e9 bb d2 ff ff       	jmpq   49c0 <ParallelSetState>
    7705:	90                   	nop
    7706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    770d:	00 00 00 

0000000000007710 <nodes_init>:
    7710:	48 c7 05 05 1b 34 00 	movq   $0x180,0x341b05(%rip)        # 349220 <node_size_msg_t>
    7717:	80 01 00 00 
    771b:	48 c7 05 02 1b 34 00 	movq   $0x80,0x341b02(%rip)        # 349228 <node_size_state_t>
    7722:	80 00 00 00 
    7726:	c3                   	retq   
    7727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    772e:	00 00 

0000000000007730 <LPs_metada_init>:
    7730:	41 57                	push   %r15
    7732:	31 c9                	xor    %ecx,%ecx
    7734:	41 56                	push   %r14
    7736:	41 55                	push   %r13
    7738:	41 54                	push   %r12
    773a:	55                   	push   %rbp
    773b:	53                   	push   %rbx
    773c:	48 83 ec 18          	sub    $0x18,%rsp
    7740:	8b 3d 6a 1a 34 00    	mov    0x341a6a(%rip),%edi        # 3491b0 <n_prc_tot>
    7746:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    774d:	00 00 
    774f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7754:	31 c0                	xor    %eax,%eax
    7756:	66 89 0d 97 1a 34 00 	mov    %cx,0x341a97(%rip)        # 3491f4 <rootsim_config+0x34>
    775d:	48 b8 64 00 00 00 d1 	movabs $0x7d100000064,%rax
    7764:	07 00 00 
    7767:	48 89 fb             	mov    %rdi,%rbx
    776a:	48 c1 e7 03          	shl    $0x3,%rdi
    776e:	48 c7 05 5b 1a 34 00 	movq   $0x2,0x341a5b(%rip)        # 3491d4 <rootsim_config+0x14>
    7775:	02 00 00 00 
    7779:	c7 05 61 1a 34 00 02 	movl   $0x2,0x341a61(%rip)        # 3491e4 <rootsim_config+0x24>
    7780:	00 00 00 
    7783:	48 89 05 5e 1a 34 00 	mov    %rax,0x341a5e(%rip)        # 3491e8 <rootsim_config+0x28>
    778a:	48 c7 05 73 1a 34 00 	movq   $0x0,0x341a73(%rip)        # 349208 <rootsim_config+0x48>
    7791:	00 00 00 00 
    7795:	c6 05 64 1a 34 00 00 	movb   $0x0,0x341a64(%rip)        # 349200 <rootsim_config+0x40>
    779c:	c6 05 6d 1a 34 00 01 	movb   $0x1,0x341a6d(%rip)        # 349210 <rootsim_config+0x50>
    77a3:	e8 68 a1 ff ff       	callq  1910 <malloc@plt>
    77a8:	48 89 05 d9 58 21 00 	mov    %rax,0x2158d9(%rip)        # 21d088 <LPS>
    77af:	49 89 c6             	mov    %rax,%r14
    77b2:	89 d8                	mov    %ebx,%eax
    77b4:	c1 e8 06             	shr    $0x6,%eax
    77b7:	48 8d 3c c5 08 00 00 	lea    0x8(,%rax,8),%rdi
    77be:	00 
    77bf:	e8 4c a1 ff ff       	callq  1910 <malloc@plt>
    77c4:	89 da                	mov    %ebx,%edx
    77c6:	48 89 e7             	mov    %rsp,%rdi
    77c9:	be 40 00 00 00       	mov    $0x40,%esi
    77ce:	c1 e2 06             	shl    $0x6,%edx
    77d1:	48 89 05 b8 19 34 00 	mov    %rax,0x3419b8(%rip)        # 349190 <sim_ended>
    77d8:	49 89 c5             	mov    %rax,%r13
    77db:	e8 90 a2 ff ff       	callq  1a70 <posix_memalign@plt>
    77e0:	85 c0                	test   %eax,%eax
    77e2:	75 0b                	jne    77ef <LPs_metada_init+0xbf>
    77e4:	48 8b 14 24          	mov    (%rsp),%rdx
    77e8:	48 89 15 b1 19 34 00 	mov    %rdx,0x3419b1(%rip)        # 3491a0 <lp_lock>
    77ef:	4d 85 f6             	test   %r14,%r14
    77f2:	0f 94 c1             	sete   %cl
    77f5:	4d 85 ed             	test   %r13,%r13
    77f8:	0f 94 c2             	sete   %dl
    77fb:	08 d1                	or     %dl,%cl
    77fd:	0f 85 d2 01 00 00    	jne    79d5 <LPs_metada_init+0x2a5>
    7803:	83 f8 01             	cmp    $0x1,%eax
    7806:	0f 84 c9 01 00 00    	je     79d5 <LPs_metada_init+0x2a5>
    780c:	49 bc 00 00 00 00 01 	movabs $0x100000000,%r12
    7813:	00 00 00 
    7816:	31 ed                	xor    %ebp,%ebp
    7818:	85 db                	test   %ebx,%ebx
    781a:	0f 85 98 00 00 00    	jne    78b8 <LPs_metada_init+0x188>
    7820:	e9 52 01 00 00       	jmpq   7977 <LPs_metada_init+0x247>
    7825:	0f 1f 00             	nopl   (%rax)
    7828:	be 20 00 00 00       	mov    $0x20,%esi
    782d:	89 ef                	mov    %ebp,%edi
    782f:	e8 4c d4 ff ff       	callq  4c80 <umalloc>
    7834:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7838:	be 20 00 00 00       	mov    $0x20,%esi
    783d:	89 ef                	mov    %ebp,%edi
    783f:	0f 11 00             	movups %xmm0,(%rax)
    7842:	48 8b 15 3f 58 21 00 	mov    0x21583f(%rip),%rdx        # 21d088 <LPS>
    7849:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    784d:	4a 8b 14 ea          	mov    (%rdx,%r13,8),%rdx
    7851:	48 89 42 28          	mov    %rax,0x28(%rdx)
    7855:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    785c:	00 
    785d:	e8 1e d4 ff ff       	callq  4c80 <umalloc>
    7862:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7866:	0f 11 00             	movups %xmm0,(%rax)
    7869:	4c 8b 35 18 58 21 00 	mov    0x215818(%rip),%r14        # 21d088 <LPS>
    7870:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7874:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7878:	4b 8b 14 ee          	mov    (%r14,%r13,8),%rdx
    787c:	48 89 42 38          	mov    %rax,0x38(%rdx)
    7880:	8b 05 2a 19 34 00    	mov    0x34192a(%rip),%eax        # 3491b0 <n_prc_tot>
    7886:	48 c7 42 40 00 00 00 	movq   $0x0,0x40(%rdx)
    788d:	00 
    788e:	4c 89 62 48          	mov    %r12,0x48(%rdx)
    7892:	c7 42 70 00 00 00 00 	movl   $0x0,0x70(%rdx)
    7899:	c6 82 98 00 00 00 01 	movb   $0x1,0x98(%rdx)
    78a0:	0f 11 82 80 00 00 00 	movups %xmm0,0x80(%rdx)
    78a7:	39 c3                	cmp    %eax,%ebx
    78a9:	0f 83 b1 00 00 00    	jae    7960 <LPs_metada_init+0x230>
    78af:	4c 8b 2d da 18 34 00 	mov    0x3418da(%rip),%r13        # 349190 <sim_ended>
    78b6:	89 dd                	mov    %ebx,%ebp
    78b8:	48 8b 15 e1 18 34 00 	mov    0x3418e1(%rip),%rdx        # 3491a0 <lp_lock>
    78bf:	89 e8                	mov    %ebp,%eax
    78c1:	bf a0 00 00 00       	mov    $0xa0,%edi
    78c6:	44 8d 7d 01          	lea    0x1(%rbp),%r15d
    78ca:	c1 e0 04             	shl    $0x4,%eax
    78cd:	4c 89 fb             	mov    %r15,%rbx
    78d0:	48 8d 04 82          	lea    (%rdx,%rax,4),%rax
    78d4:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    78da:	89 e8                	mov    %ebp,%eax
    78dc:	c1 e8 06             	shr    $0x6,%eax
    78df:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    78e4:	41 89 ed             	mov    %ebp,%r13d
    78e7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    78ee:	e8 1d a0 ff ff       	callq  1910 <malloc@plt>
    78f3:	ba 01 00 00 00       	mov    $0x1,%edx
    78f8:	4b 89 04 ee          	mov    %rax,(%r14,%r13,8)
    78fc:	89 28                	mov    %ebp,(%rax)
    78fe:	4c 89 78 08          	mov    %r15,0x8(%rax)
    7902:	66 89 50 10          	mov    %dx,0x10(%rax)
    7906:	48 c7 40 14 32 00 00 	movq   $0x32,0x14(%rax)
    790d:	00 
    790e:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    7912:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    7919:	00 
    791a:	83 fd ff             	cmp    $0xffffffff,%ebp
    791d:	0f 85 05 ff ff ff    	jne    7828 <LPs_metada_init+0xf8>
    7923:	bf 20 00 00 00       	mov    $0x20,%edi
    7928:	e8 23 e3 ff ff       	callq  5c50 <rsalloc>
    792d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7931:	bf 20 00 00 00       	mov    $0x20,%edi
    7936:	0f 11 00             	movups %xmm0,(%rax)
    7939:	48 8b 15 48 57 21 00 	mov    0x215748(%rip),%rdx        # 21d088 <LPS>
    7940:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7944:	4a 8b 14 ea          	mov    (%rdx,%r13,8),%rdx
    7948:	48 89 42 28          	mov    %rax,0x28(%rdx)
    794c:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    7953:	00 
    7954:	e8 f7 e2 ff ff       	callq  5c50 <rsalloc>
    7959:	e9 04 ff ff ff       	jmpq   7862 <LPs_metada_init+0x132>
    795e:	66 90                	xchg   %ax,%ax
    7960:	c1 e8 06             	shr    $0x6,%eax
    7963:	48 83 c0 01          	add    $0x1,%rax
    7967:	48 c1 e0 06          	shl    $0x6,%rax
    796b:	49 39 c7             	cmp    %rax,%r15
    796e:	73 46                	jae    79b6 <LPs_metada_init+0x286>
    7970:	4c 8b 2d 19 18 34 00 	mov    0x341819(%rip),%r13        # 349190 <sim_ended>
    7977:	be 01 00 00 00       	mov    $0x1,%esi
    797c:	eb 09                	jmp    7987 <LPs_metada_init+0x257>
    797e:	66 90                	xchg   %ax,%ax
    7980:	4c 8b 2d 09 18 34 00 	mov    0x341809(%rip),%r13        # 349190 <sim_ended>
    7987:	89 d8                	mov    %ebx,%eax
    7989:	48 89 f2             	mov    %rsi,%rdx
    798c:	89 d9                	mov    %ebx,%ecx
    798e:	c1 e8 06             	shr    $0x6,%eax
    7991:	48 d3 e2             	shl    %cl,%rdx
    7994:	f0 49 09 54 c5 00    	lock or %rdx,0x0(%r13,%rax,8)
    799a:	8b 05 10 18 34 00    	mov    0x341810(%rip),%eax        # 3491b0 <n_prc_tot>
    79a0:	c1 e8 06             	shr    $0x6,%eax
    79a3:	48 83 c0 01          	add    $0x1,%rax
    79a7:	48 c1 e0 06          	shl    $0x6,%rax
    79ab:	8d 53 01             	lea    0x1(%rbx),%edx
    79ae:	48 89 d3             	mov    %rdx,%rbx
    79b1:	48 39 c2             	cmp    %rax,%rdx
    79b4:	72 ca                	jb     7980 <LPs_metada_init+0x250>
    79b6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    79bb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    79c2:	00 00 
    79c4:	75 33                	jne    79f9 <LPs_metada_init+0x2c9>
    79c6:	48 83 c4 18          	add    $0x18,%rsp
    79ca:	5b                   	pop    %rbx
    79cb:	5d                   	pop    %rbp
    79cc:	41 5c                	pop    %r12
    79ce:	41 5d                	pop    %r13
    79d0:	41 5e                	pop    %r14
    79d2:	41 5f                	pop    %r15
    79d4:	c3                   	retq   
    79d5:	b9 2d 01 00 00       	mov    $0x12d,%ecx
    79da:	48 8d 15 6e 10 01 00 	lea    0x1106e(%rip),%rdx        # 18a4f <__PRETTY_FUNCTION__.6556+0x2c8f>
    79e1:	48 8d 35 73 10 01 00 	lea    0x11073(%rip),%rsi        # 18a5b <__PRETTY_FUNCTION__.6556+0x2c9b>
    79e8:	31 c0                	xor    %eax,%eax
    79ea:	bf 01 00 00 00       	mov    $0x1,%edi
    79ef:	e8 7c 9f ff ff       	callq  1970 <__printf_chk@plt>
    79f4:	e8 b7 9c ff ff       	callq  16b0 <abort@plt>
    79f9:	e8 a2 9d ff ff       	callq  17a0 <__stack_chk_fail@plt>
    79fe:	66 90                	xchg   %ax,%ax

0000000000007a00 <check_termination>:
    7a00:	8b 0d aa 17 34 00    	mov    0x3417aa(%rip),%ecx        # 3491b0 <n_prc_tot>
    7a06:	48 8b 35 83 17 34 00 	mov    0x341783(%rip),%rsi        # 349190 <sim_ended>
    7a0d:	31 d2                	xor    %edx,%edx
    7a0f:	31 c0                	xor    %eax,%eax
    7a11:	c1 e9 06             	shr    $0x6,%ecx
    7a14:	48 83 c1 01          	add    $0x1,%rcx
    7a18:	eb 11                	jmp    7a2b <check_termination+0x2b>
    7a1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7a20:	8d 42 01             	lea    0x1(%rdx),%eax
    7a23:	48 89 c2             	mov    %rax,%rdx
    7a26:	48 39 c8             	cmp    %rcx,%rax
    7a29:	73 15                	jae    7a40 <check_termination+0x40>
    7a2b:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    7a2f:	48 8b 00             	mov    (%rax),%rax
    7a32:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    7a36:	74 e8                	je     7a20 <check_termination+0x20>
    7a38:	31 c0                	xor    %eax,%eax
    7a3a:	c3                   	retq   
    7a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7a40:	b8 01 00 00 00       	mov    $0x1,%eax
    7a45:	c3                   	retq   
    7a46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7a4d:	00 00 00 

0000000000007a50 <insert_ordered_in_list>:
    7a50:	48 85 c9             	test   %rcx,%rcx
    7a53:	0f 84 17 02 00 00    	je     7c70 <insert_ordered_in_list+0x220>
    7a59:	41 57                	push   %r15
    7a5b:	49 89 d7             	mov    %rdx,%r15
    7a5e:	41 56                	push   %r14
    7a60:	41 55                	push   %r13
    7a62:	41 89 fd             	mov    %edi,%r13d
    7a65:	41 54                	push   %r12
    7a67:	49 89 f4             	mov    %rsi,%r12
    7a6a:	55                   	push   %rbp
    7a6b:	48 89 cd             	mov    %rcx,%rbp
    7a6e:	53                   	push   %rbx
    7a6f:	48 83 ec 18          	sub    $0x18,%rsp
    7a73:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
    7a77:	48 85 c0             	test   %rax,%rax
    7a7a:	0f 84 d0 01 00 00    	je     7c50 <insert_ordered_in_list+0x200>
    7a80:	48 3d dd 0d 00 00    	cmp    $0xddd,%rax
    7a86:	74 18                	je     7aa0 <insert_ordered_in_list+0x50>
    7a88:	48 83 c4 18          	add    $0x18,%rsp
    7a8c:	5b                   	pop    %rbx
    7a8d:	5d                   	pop    %rbp
    7a8e:	41 5c                	pop    %r12
    7a90:	41 5d                	pop    %r13
    7a92:	41 5e                	pop    %r14
    7a94:	41 5f                	pop    %r15
    7a96:	c3                   	retq   
    7a97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7a9e:	00 00 
    7aa0:	48 8d 41 f0          	lea    -0x10(%rcx),%rax
    7aa4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7aa9:	49 8b 5f f0          	mov    -0x10(%r15),%rbx
    7aad:	48 85 db             	test   %rbx,%rbx
    7ab0:	0f 84 c2 01 00 00    	je     7c78 <insert_ordered_in_list+0x228>
    7ab6:	f2 41 0f 10 4f 08    	movsd  0x8(%r15),%xmm1
    7abc:	f2 0f 10 43 18       	movsd  0x18(%rbx),%xmm0
    7ac1:	48 83 c3 10          	add    $0x10,%rbx
    7ac5:	4c 8d 35 14 e9 00 00 	lea    0xe914(%rip),%r14        # 163e0 <__PRETTY_FUNCTION__.6556+0x620>
    7acc:	66 0f 2f c8          	comisd %xmm0,%xmm1
    7ad0:	77 19                	ja     7aeb <insert_ordered_in_list+0x9b>
    7ad2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7ad8:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    7adc:	7a 1b                	jp     7af9 <insert_ordered_in_list+0xa9>
    7ade:	75 19                	jne    7af9 <insert_ordered_in_list+0xa9>
    7ae0:	0f b7 43 10          	movzwl 0x10(%rbx),%eax
    7ae4:	66 41 39 47 10       	cmp    %ax,0x10(%r15)
    7ae9:	76 0e                	jbe    7af9 <insert_ordered_in_list+0xa9>
    7aeb:	4c 89 f7             	mov    %r14,%rdi
    7aee:	e8 4d 9c ff ff       	callq  1740 <puts@plt>
    7af3:	cc                   	int3   
    7af4:	f2 0f 10 43 08       	movsd  0x8(%rbx),%xmm0
    7af9:	f2 0f 10 4d 08       	movsd  0x8(%rbp),%xmm1
    7afe:	66 0f 2f c1          	comisd %xmm1,%xmm0
    7b02:	77 3c                	ja     7b40 <insert_ordered_in_list+0xf0>
    7b04:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    7b08:	7a 0c                	jp     7b16 <insert_ordered_in_list+0xc6>
    7b0a:	75 0a                	jne    7b16 <insert_ordered_in_list+0xc6>
    7b0c:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
    7b10:	66 39 43 10          	cmp    %ax,0x10(%rbx)
    7b14:	77 2a                	ja     7b40 <insert_ordered_in_list+0xf0>
    7b16:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
    7b1a:	48 85 c0             	test   %rax,%rax
    7b1d:	0f 84 5d 01 00 00    	je     7c80 <insert_ordered_in_list+0x230>
    7b23:	49 89 df             	mov    %rbx,%r15
    7b26:	48 8d 58 10          	lea    0x10(%rax),%rbx
    7b2a:	66 0f 28 c8          	movapd %xmm0,%xmm1
    7b2e:	f2 0f 10 43 08       	movsd  0x8(%rbx),%xmm0
    7b33:	66 0f 2f c8          	comisd %xmm0,%xmm1
    7b37:	76 9f                	jbe    7ad8 <insert_ordered_in_list+0x88>
    7b39:	eb b0                	jmp    7aeb <insert_ordered_in_list+0x9b>
    7b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7b40:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    7b45:	49 8d 4f f0          	lea    -0x10(%r15),%rcx
    7b49:	4c 89 e6             	mov    %r12,%rsi
    7b4c:	44 89 ef             	mov    %r13d,%edi
    7b4f:	e8 9c db ff ff       	callq  56f0 <__list_place_after_given_node_by_content>
    7b54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b58:	48 85 c0             	test   %rax,%rax
    7b5b:	0f 84 77 01 00 00    	je     7cd8 <insert_ordered_in_list+0x288>
    7b61:	48 83 c0 10          	add    $0x10,%rax
    7b65:	48 39 c3             	cmp    %rax,%rbx
    7b68:	0f 85 6a 01 00 00    	jne    7cd8 <insert_ordered_in_list+0x288>
    7b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b72:	48 85 c0             	test   %rax,%rax
    7b75:	74 79                	je     7bf0 <insert_ordered_in_list+0x1a0>
    7b77:	48 83 c0 10          	add    $0x10,%rax
    7b7b:	49 39 c7             	cmp    %rax,%r15
    7b7e:	75 70                	jne    7bf0 <insert_ordered_in_list+0x1a0>
    7b80:	49 8b 47 f0          	mov    -0x10(%r15),%rax
    7b84:	48 85 c0             	test   %rax,%rax
    7b87:	74 7d                	je     7c06 <insert_ordered_in_list+0x1b6>
    7b89:	48 83 c0 10          	add    $0x10,%rax
    7b8d:	48 39 c5             	cmp    %rax,%rbp
    7b90:	75 74                	jne    7c06 <insert_ordered_in_list+0x1b6>
    7b92:	48 85 db             	test   %rbx,%rbx
    7b95:	0f 84 81 00 00 00    	je     7c1c <insert_ordered_in_list+0x1cc>
    7b9b:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
    7b9f:	48 85 c0             	test   %rax,%rax
    7ba2:	0f 84 18 01 00 00    	je     7cc0 <insert_ordered_in_list+0x270>
    7ba8:	48 83 c0 10          	add    $0x10,%rax
    7bac:	48 39 c5             	cmp    %rax,%rbp
    7baf:	0f 85 0b 01 00 00    	jne    7cc0 <insert_ordered_in_list+0x270>
    7bb5:	f2 0f 10 45 08       	movsd  0x8(%rbp),%xmm0
    7bba:	66 0f 2f 43 08       	comisd 0x8(%rbx),%xmm0
    7bbf:	0f 87 1b 01 00 00    	ja     7ce0 <insert_ordered_in_list+0x290>
    7bc5:	f2 41 0f 10 4f 08    	movsd  0x8(%r15),%xmm1
    7bcb:	66 0f 2f c8          	comisd %xmm0,%xmm1
    7bcf:	77 5c                	ja     7c2d <insert_ordered_in_list+0x1dd>
    7bd1:	66 0f 2f 43 08       	comisd 0x8(%rbx),%xmm0
    7bd6:	0f 86 ac fe ff ff    	jbe    7a88 <insert_ordered_in_list+0x38>
    7bdc:	48 8d 3d c5 e8 00 00 	lea    0xe8c5(%rip),%rdi        # 164a8 <__PRETTY_FUNCTION__.6556+0x6e8>
    7be3:	e8 58 9b ff ff       	callq  1740 <puts@plt>
    7be8:	cc                   	int3   
    7be9:	e9 9a fe ff ff       	jmpq   7a88 <insert_ordered_in_list+0x38>
    7bee:	66 90                	xchg   %ax,%ax
    7bf0:	48 8d 3d 39 e8 00 00 	lea    0xe839(%rip),%rdi        # 16430 <__PRETTY_FUNCTION__.6556+0x670>
    7bf7:	e8 44 9b ff ff       	callq  1740 <puts@plt>
    7bfc:	cc                   	int3   
    7bfd:	49 8b 47 f0          	mov    -0x10(%r15),%rax
    7c01:	48 85 c0             	test   %rax,%rax
    7c04:	75 83                	jne    7b89 <insert_ordered_in_list+0x139>
    7c06:	48 8d 3d 4b e8 00 00 	lea    0xe84b(%rip),%rdi        # 16458 <__PRETTY_FUNCTION__.6556+0x698>
    7c0d:	e8 2e 9b ff ff       	callq  1740 <puts@plt>
    7c12:	cc                   	int3   
    7c13:	48 85 db             	test   %rbx,%rbx
    7c16:	0f 85 7f ff ff ff    	jne    7b9b <insert_ordered_in_list+0x14b>
    7c1c:	f2 41 0f 10 47 08    	movsd  0x8(%r15),%xmm0
    7c22:	66 0f 2f 45 08       	comisd 0x8(%rbp),%xmm0
    7c27:	0f 86 5b fe ff ff    	jbe    7a88 <insert_ordered_in_list+0x38>
    7c2d:	48 8d 3d 94 e8 00 00 	lea    0xe894(%rip),%rdi        # 164c8 <__PRETTY_FUNCTION__.6556+0x708>
    7c34:	e8 07 9b ff ff       	callq  1740 <puts@plt>
    7c39:	cc                   	int3   
    7c3a:	48 85 db             	test   %rbx,%rbx
    7c3d:	0f 84 45 fe ff ff    	je     7a88 <insert_ordered_in_list+0x38>
    7c43:	f2 0f 10 45 08       	movsd  0x8(%rbp),%xmm0
    7c48:	eb 87                	jmp    7bd1 <insert_ordered_in_list+0x181>
    7c4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c50:	48 8d 41 f0          	lea    -0x10(%rcx),%rax
    7c54:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7c59:	48 39 46 08          	cmp    %rax,0x8(%rsi)
    7c5d:	0f 84 25 fe ff ff    	je     7a88 <insert_ordered_in_list+0x38>
    7c63:	e9 41 fe ff ff       	jmpq   7aa9 <insert_ordered_in_list+0x59>
    7c68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7c6f:	00 
    7c70:	c3                   	retq   
    7c71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7c78:	4c 89 fb             	mov    %r15,%rbx
    7c7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7c80:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    7c85:	4c 89 e6             	mov    %r12,%rsi
    7c88:	48 8d 4b f0          	lea    -0x10(%rbx),%rcx
    7c8c:	44 89 ef             	mov    %r13d,%edi
    7c8f:	45 31 e4             	xor    %r12d,%r12d
    7c92:	e8 59 da ff ff       	callq  56f0 <__list_place_after_given_node_by_content>
    7c97:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7c9c:	74 62                	je     7d00 <insert_ordered_in_list+0x2b0>
    7c9e:	48 8d 3d 63 e7 00 00 	lea    0xe763(%rip),%rdi        # 16408 <__PRETTY_FUNCTION__.6556+0x648>
    7ca5:	e8 96 9a ff ff       	callq  1740 <puts@plt>
    7caa:	cc                   	int3   
    7cab:	49 89 df             	mov    %rbx,%r15
    7cae:	4c 89 e3             	mov    %r12,%rbx
    7cb1:	e9 b8 fe ff ff       	jmpq   7b6e <insert_ordered_in_list+0x11e>
    7cb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7cbd:	00 00 00 
    7cc0:	48 8d 3d b9 e7 00 00 	lea    0xe7b9(%rip),%rdi        # 16480 <__PRETTY_FUNCTION__.6556+0x6c0>
    7cc7:	e8 74 9a ff ff       	callq  1740 <puts@plt>
    7ccc:	cc                   	int3   
    7ccd:	e9 e3 fe ff ff       	jmpq   7bb5 <insert_ordered_in_list+0x165>
    7cd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7cd8:	49 89 dc             	mov    %rbx,%r12
    7cdb:	4c 89 fb             	mov    %r15,%rbx
    7cde:	eb be                	jmp    7c9e <insert_ordered_in_list+0x24e>
    7ce0:	48 8d 3d c1 e7 00 00 	lea    0xe7c1(%rip),%rdi        # 164a8 <__PRETTY_FUNCTION__.6556+0x6e8>
    7ce7:	e8 54 9a ff ff       	callq  1740 <puts@plt>
    7cec:	cc                   	int3   
    7ced:	f2 0f 10 45 08       	movsd  0x8(%rbp),%xmm0
    7cf2:	e9 ce fe ff ff       	jmpq   7bc5 <insert_ordered_in_list+0x175>
    7cf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7cfe:	00 00 
    7d00:	49 89 df             	mov    %rbx,%r15
    7d03:	31 db                	xor    %ebx,%ebx
    7d05:	e9 64 fe ff ff       	jmpq   7b6e <insert_ordered_in_list+0x11e>
    7d0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007d10 <insert_current_msg_after_given_event>:
    7d10:	41 54                	push   %r12
    7d12:	55                   	push   %rbp
    7d13:	48 c7 c5 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rbp
    7d1a:	53                   	push   %rbx
    7d1b:	48 89 fb             	mov    %rdi,%rbx
    7d1e:	64 48 8b 55 00       	mov    %fs:0x0(%rbp),%rdx
    7d23:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
    7d27:	48 85 c0             	test   %rax,%rax
    7d2a:	74 14                	je     7d40 <insert_current_msg_after_given_event+0x30>
    7d2c:	48 3d dd 0d 00 00    	cmp    $0xddd,%rax
    7d32:	74 2d                	je     7d61 <insert_current_msg_after_given_event+0x51>
    7d34:	5b                   	pop    %rbx
    7d35:	5d                   	pop    %rbp
    7d36:	41 5c                	pop    %r12
    7d38:	c3                   	retq   
    7d39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7d40:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    7d47:	ff 
    7d48:	48 8b 05 39 53 21 00 	mov    0x215339(%rip),%rax        # 21d088 <LPS>
    7d4f:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
    7d53:	48 8b 48 28          	mov    0x28(%rax),%rcx
    7d57:	48 8d 42 f0          	lea    -0x10(%rdx),%rax
    7d5b:	48 39 41 08          	cmp    %rax,0x8(%rcx)
    7d5f:	74 d3                	je     7d34 <insert_current_msg_after_given_event+0x24>
    7d61:	8b 42 18             	mov    0x18(%rdx),%eax
    7d64:	85 c0                	test   %eax,%eax
    7d66:	0f 85 b4 01 00 00    	jne    7f20 <insert_current_msg_after_given_event+0x210>
    7d6c:	4c 8b 63 f0          	mov    -0x10(%rbx),%r12
    7d70:	4d 85 e4             	test   %r12,%r12
    7d73:	0f 84 27 01 00 00    	je     7ea0 <insert_current_msg_after_given_event+0x190>
    7d79:	64 8b 34 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%esi
    7d80:	ff 
    7d81:	48 83 ea 10          	sub    $0x10,%rdx
    7d85:	48 8d 4b f0          	lea    -0x10(%rbx),%rcx
    7d89:	49 83 c4 10          	add    $0x10,%r12
    7d8d:	48 8b 05 f4 52 21 00 	mov    0x2152f4(%rip),%rax        # 21d088 <LPS>
    7d94:	48 89 f7             	mov    %rsi,%rdi
    7d97:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
    7d9b:	48 8b 70 28          	mov    0x28(%rax),%rsi
    7d9f:	e8 4c d9 ff ff       	callq  56f0 <__list_place_after_given_node_by_content>
    7da4:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
    7da9:	48 8b 50 f0          	mov    -0x10(%rax),%rdx
    7dad:	48 85 d2             	test   %rdx,%rdx
    7db0:	0f 84 21 01 00 00    	je     7ed7 <insert_current_msg_after_given_event+0x1c7>
    7db6:	48 83 c2 10          	add    $0x10,%rdx
    7dba:	49 39 d4             	cmp    %rdx,%r12
    7dbd:	0f 85 14 01 00 00    	jne    7ed7 <insert_current_msg_after_given_event+0x1c7>
    7dc3:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    7dc7:	48 85 d2             	test   %rdx,%rdx
    7dca:	0f 84 26 01 00 00    	je     7ef6 <insert_current_msg_after_given_event+0x1e6>
    7dd0:	48 83 c2 10          	add    $0x10,%rdx
    7dd4:	48 39 d3             	cmp    %rdx,%rbx
    7dd7:	0f 85 19 01 00 00    	jne    7ef6 <insert_current_msg_after_given_event+0x1e6>
    7ddd:	48 8b 53 f0          	mov    -0x10(%rbx),%rdx
    7de1:	48 85 d2             	test   %rdx,%rdx
    7de4:	74 6a                	je     7e50 <insert_current_msg_after_given_event+0x140>
    7de6:	48 83 c2 10          	add    $0x10,%rdx
    7dea:	48 39 d0             	cmp    %rdx,%rax
    7ded:	75 61                	jne    7e50 <insert_current_msg_after_given_event+0x140>
    7def:	4d 85 e4             	test   %r12,%r12
    7df2:	74 6e                	je     7e62 <insert_current_msg_after_given_event+0x152>
    7df4:	49 8b 44 24 f8       	mov    -0x8(%r12),%rax
    7df9:	48 8d 50 10          	lea    0x10(%rax),%rdx
    7dfd:	48 85 c0             	test   %rax,%rax
    7e00:	48 0f 45 c2          	cmovne %rdx,%rax
    7e04:	64 48 39 45 00       	cmp    %rax,%fs:0x0(%rbp)
    7e09:	74 0d                	je     7e18 <insert_current_msg_after_given_event+0x108>
    7e0b:	48 8d 3d 6e e6 00 00 	lea    0xe66e(%rip),%rdi        # 16480 <__PRETTY_FUNCTION__.6556+0x6c0>
    7e12:	e8 29 99 ff ff       	callq  1740 <puts@plt>
    7e17:	cc                   	int3   
    7e18:	64 f2 0f 10 04 25 88 	movsd  %fs:0xffffffffffff5e88,%xmm0
    7e1f:	5e ff ff 
    7e22:	f2 0f 10 4b 08       	movsd  0x8(%rbx),%xmm1
    7e27:	66 0f 2f c8          	comisd %xmm0,%xmm1
    7e2b:	77 4a                	ja     7e77 <insert_current_msg_after_given_event+0x167>
    7e2d:	66 41 0f 2f 44 24 08 	comisd 0x8(%r12),%xmm0
    7e34:	0f 86 fa fe ff ff    	jbe    7d34 <insert_current_msg_after_given_event+0x24>
    7e3a:	48 8d 3d 67 e6 00 00 	lea    0xe667(%rip),%rdi        # 164a8 <__PRETTY_FUNCTION__.6556+0x6e8>
    7e41:	e8 fa 98 ff ff       	callq  1740 <puts@plt>
    7e46:	cc                   	int3   
    7e47:	5b                   	pop    %rbx
    7e48:	5d                   	pop    %rbp
    7e49:	41 5c                	pop    %r12
    7e4b:	c3                   	retq   
    7e4c:	0f 1f 40 00          	nopl   0x0(%rax)
    7e50:	48 8d 3d f9 e6 00 00 	lea    0xe6f9(%rip),%rdi        # 16550 <__PRETTY_FUNCTION__.6556+0x790>
    7e57:	e8 e4 98 ff ff       	callq  1740 <puts@plt>
    7e5c:	cc                   	int3   
    7e5d:	4d 85 e4             	test   %r12,%r12
    7e60:	75 92                	jne    7df4 <insert_current_msg_after_given_event+0xe4>
    7e62:	f2 0f 10 43 08       	movsd  0x8(%rbx),%xmm0
    7e67:	64 66 0f 2f 04 25 88 	comisd %fs:0xffffffffffff5e88,%xmm0
    7e6e:	5e ff ff 
    7e71:	0f 86 bd fe ff ff    	jbe    7d34 <insert_current_msg_after_given_event+0x24>
    7e77:	48 8d 3d fa e6 00 00 	lea    0xe6fa(%rip),%rdi        # 16578 <__PRETTY_FUNCTION__.6556+0x7b8>
    7e7e:	e8 bd 98 ff ff       	callq  1740 <puts@plt>
    7e83:	cc                   	int3   
    7e84:	4d 85 e4             	test   %r12,%r12
    7e87:	0f 84 a7 fe ff ff    	je     7d34 <insert_current_msg_after_given_event+0x24>
    7e8d:	64 f2 0f 10 04 25 88 	movsd  %fs:0xffffffffffff5e88,%xmm0
    7e94:	5e ff ff 
    7e97:	eb 94                	jmp    7e2d <insert_current_msg_after_given_event+0x11d>
    7e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7ea0:	64 8b 34 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%esi
    7ea7:	ff 
    7ea8:	48 8b 05 d9 51 21 00 	mov    0x2151d9(%rip),%rax        # 21d088 <LPS>
    7eaf:	48 83 ea 10          	sub    $0x10,%rdx
    7eb3:	48 8d 4b f0          	lea    -0x10(%rbx),%rcx
    7eb7:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
    7ebb:	48 89 f7             	mov    %rsi,%rdi
    7ebe:	48 8b 70 28          	mov    0x28(%rax),%rsi
    7ec2:	e8 29 d8 ff ff       	callq  56f0 <__list_place_after_given_node_by_content>
    7ec7:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
    7ecc:	48 83 78 f0 00       	cmpq   $0x0,-0x10(%rax)
    7ed1:	0f 84 ec fe ff ff    	je     7dc3 <insert_current_msg_after_given_event+0xb3>
    7ed7:	48 8d 3d 2a e5 00 00 	lea    0xe52a(%rip),%rdi        # 16408 <__PRETTY_FUNCTION__.6556+0x648>
    7ede:	e8 5d 98 ff ff       	callq  1740 <puts@plt>
    7ee3:	cc                   	int3   
    7ee4:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
    7ee9:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    7eed:	48 85 d2             	test   %rdx,%rdx
    7ef0:	0f 85 da fe ff ff    	jne    7dd0 <insert_current_msg_after_given_event+0xc0>
    7ef6:	48 8d 3d 2b e6 00 00 	lea    0xe62b(%rip),%rdi        # 16528 <__PRETTY_FUNCTION__.6556+0x768>
    7efd:	e8 3e 98 ff ff       	callq  1740 <puts@plt>
    7f02:	cc                   	int3   
    7f03:	48 8b 53 f0          	mov    -0x10(%rbx),%rdx
    7f07:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
    7f0c:	48 85 d2             	test   %rdx,%rdx
    7f0f:	0f 85 d1 fe ff ff    	jne    7de6 <insert_current_msg_after_given_event+0xd6>
    7f15:	e9 d0 fe ff ff       	jmpq   7dea <insert_current_msg_after_given_event+0xda>
    7f1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7f20:	48 8d 3d c1 e5 00 00 	lea    0xe5c1(%rip),%rdi        # 164e8 <__PRETTY_FUNCTION__.6556+0x728>
    7f27:	e8 14 98 ff ff       	callq  1740 <puts@plt>
    7f2c:	cc                   	int3   
    7f2d:	4c 8b 63 f0          	mov    -0x10(%rbx),%r12
    7f31:	64 48 8b 55 00       	mov    %fs:0x0(%rbp),%rdx
    7f36:	4d 85 e4             	test   %r12,%r12
    7f39:	0f 85 3a fe ff ff    	jne    7d79 <insert_current_msg_after_given_event+0x69>
    7f3f:	e9 5c ff ff ff       	jmpq   7ea0 <insert_current_msg_after_given_event+0x190>
    7f44:	66 90                	xchg   %ax,%ax
    7f46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f4d:	00 00 00 

0000000000007f50 <deallocate_event>:
    7f50:	48 c7 c0 c0 5e ff ff 	mov    $0xffffffffffff5ec0,%rax
    7f57:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7f5b:	48 8d 77 f0          	lea    -0x10(%rdi),%rsi
    7f5f:	0f 11 47 f0          	movups %xmm0,-0x10(%rdi)
    7f63:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    7f67:	e9 c4 ce ff ff       	jmpq   4e30 <__list_insert_tail_by_node>
    7f6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007f70 <allocate_event>:
    7f70:	48 83 ec 08          	sub    $0x8,%rsp
    7f74:	48 c7 c0 c0 5e ff ff 	mov    $0xffffffffffff5ec0,%rax
    7f7b:	be 40 01 00 00       	mov    $0x140,%esi
    7f80:	64 48 8b 10          	mov    %fs:(%rax),%rdx
    7f84:	e8 27 d9 ff ff       	callq  58b0 <list_allocate_node_buffer_from_list>
    7f89:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7f8d:	0f 11 40 f0          	movups %xmm0,-0x10(%rax)
    7f91:	48 83 c4 08          	add    $0x8,%rsp
    7f95:	c3                   	retq   
    7f96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f9d:	00 00 00 

0000000000007fa0 <ScheduleNewEvent>:
    7fa0:	41 56                	push   %r14
    7fa2:	41 55                	push   %r13
    7fa4:	49 89 d5             	mov    %rdx,%r13
    7fa7:	41 54                	push   %r12
    7fa9:	55                   	push   %rbp
    7faa:	48 83 ec 18          	sub    $0x18,%rsp
    7fae:	48 8b 05 d3 50 21 00 	mov    0x2150d3(%rip),%rax        # 21d088 <LPS>
    7fb5:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    7fbb:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    7fc2:	ff 
    7fc3:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    7fc7:	66 83 78 10 10       	cmpw   $0x10,0x10(%rax)
    7fcc:	74 32                	je     8000 <ScheduleNewEvent+0x60>
    7fce:	31 c0                	xor    %eax,%eax
    7fd0:	89 fd                	mov    %edi,%ebp
    7fd2:	41 89 f4             	mov    %esi,%r12d
    7fd5:	41 89 ce             	mov    %ecx,%r14d
    7fd8:	e8 23 b3 00 00       	callq  13300 <check_ScheduleNewEventFuture>
    7fdd:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    7fe3:	44 89 f1             	mov    %r14d,%ecx
    7fe6:	89 ef                	mov    %ebp,%edi
    7fe8:	48 83 c4 18          	add    $0x18,%rsp
    7fec:	4c 89 ea             	mov    %r13,%rdx
    7fef:	44 89 e6             	mov    %r12d,%esi
    7ff2:	5d                   	pop    %rbp
    7ff3:	41 5c                	pop    %r12
    7ff5:	41 5d                	pop    %r13
    7ff7:	41 5e                	pop    %r14
    7ff9:	e9 02 47 00 00       	jmpq   c700 <queue_insert>
    7ffe:	66 90                	xchg   %ax,%ax
    8000:	48 83 c4 18          	add    $0x18,%rsp
    8004:	31 c0                	xor    %eax,%eax
    8006:	5d                   	pop    %rbp
    8007:	41 5c                	pop    %r12
    8009:	41 5d                	pop    %r13
    800b:	41 5e                	pop    %r14
    800d:	e9 fe b3 00 00       	jmpq   13410 <check_ScheduleNewEventPast>
    8012:	0f 1f 40 00          	nopl   0x0(%rax)
    8016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    801d:	00 00 00 

0000000000008020 <check_OnGVT>:
    8020:	41 57                	push   %r15
    8022:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    8028:	41 56                	push   %r14
    802a:	41 55                	push   %r13
    802c:	41 54                	push   %r12
    802e:	55                   	push   %rbp
    802f:	89 fd                	mov    %edi,%ebp
    8031:	53                   	push   %rbx
    8032:	89 eb                	mov    %ebp,%ebx
    8034:	89 e9                	mov    %ebp,%ecx
    8036:	c1 eb 06             	shr    $0x6,%ebx
    8039:	49 d3 e7             	shl    %cl,%r15
    803c:	48 c1 e3 03          	shl    $0x3,%rbx
    8040:	48 83 ec 08          	sub    $0x8,%rsp
    8044:	64 89 2c 25 78 5e ff 	mov    %ebp,%fs:0xffffffffffff5e78
    804b:	ff 
    804c:	48 8b 05 35 50 21 00 	mov    0x215035(%rip),%rax        # 21d088 <LPS>
    8053:	48 8b 14 e8          	mov    (%rax,%rbp,8),%rdx
    8057:	48 8b 05 32 11 34 00 	mov    0x341132(%rip),%rax        # 349190 <sim_ended>
    805e:	48 01 d8             	add    %rbx,%rax
    8061:	c7 42 50 00 00 00 00 	movl   $0x0,0x50(%rdx)
    8068:	48 8b 00             	mov    (%rax),%rax
    806b:	4c 21 f8             	and    %r15,%rax
    806e:	48 d3 e8             	shr    %cl,%rax
    8071:	48 85 c0             	test   %rax,%rax
    8074:	0f 85 46 01 00 00    	jne    81c0 <check_OnGVT+0x1a0>
    807a:	48 c7 c0 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rax
    8081:	44 0f b7 6a 10       	movzwl 0x10(%rdx),%r13d
    8086:	49 89 ec             	mov    %rbp,%r12
    8089:	64 4c 8b 30          	mov    %fs:(%rax),%r14
    808d:	66 41 83 fd 01       	cmp    $0x1,%r13w
    8092:	0f 85 08 01 00 00    	jne    81a0 <check_OnGVT+0x180>
    8098:	48 c7 c0 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rax
    809f:	b9 00 01 00 00       	mov    $0x100,%ecx
    80a4:	44 89 e7             	mov    %r12d,%edi
    80a7:	66 89 4a 10          	mov    %cx,0x10(%rdx)
    80ab:	64 44 89 24 25 78 5e 	mov    %r12d,%fs:0xffffffffffff5e78
    80b2:	ff ff 
    80b4:	64 48 c7 00 00 00 00 	movq   $0x0,%fs:(%rax)
    80bb:	00 
    80bc:	48 8b 42 30          	mov    0x30(%rdx),%rax
    80c0:	f2 0f 10 42 60       	movsd  0x60(%rdx),%xmm0
    80c5:	48 89 82 80 00 00 00 	mov    %rax,0x80(%rdx)
    80cc:	8b 42 68             	mov    0x68(%rdx),%eax
    80cf:	8d 70 01             	lea    0x1(%rax),%esi
    80d2:	e8 39 c4 ff ff       	callq  4510 <rollback>
    80d7:	48 8b 05 aa 4f 21 00 	mov    0x214faa(%rip),%rax        # 21d088 <LPS>
    80de:	44 89 e7             	mov    %r12d,%edi
    80e1:	48 8b 04 e8          	mov    (%rax,%rbp,8),%rax
    80e5:	48 8b 70 20          	mov    0x20(%rax),%rsi
    80e9:	e8 82 a0 ff ff       	callq  2170 <OnGVT>
    80ee:	85 c0                	test   %eax,%eax
    80f0:	0f 85 da 00 00 00    	jne    81d0 <check_OnGVT+0x1b0>
    80f6:	48 8b 05 8b 4f 21 00 	mov    0x214f8b(%rip),%rax        # 21d088 <LPS>
    80fd:	ba 08 00 00 00       	mov    $0x8,%edx
    8102:	44 89 e7             	mov    %r12d,%edi
    8105:	be ff ff ff ff       	mov    $0xffffffff,%esi
    810a:	f2 0f 10 05 d6 ce 00 	movsd  0xced6(%rip),%xmm0        # 14fe8 <__PRETTY_FUNCTION__.5886+0x808>
    8111:	00 
    8112:	48 8b 04 e8          	mov    (%rax,%rbp,8),%rax
    8116:	66 89 50 10          	mov    %dx,0x10(%rax)
    811a:	e8 f1 c3 ff ff       	callq  4510 <rollback>
    811f:	48 8b 05 62 4f 21 00 	mov    0x214f62(%rip),%rax        # 21d088 <LPS>
    8126:	44 89 e7             	mov    %r12d,%edi
    8129:	f2 0f 10 05 8f ce 00 	movsd  0xce8f(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    8130:	00 
    8131:	be 35 01 00 00       	mov    $0x135,%esi
    8136:	48 8b 14 e8          	mov    (%rax,%rbp,8),%rdx
    813a:	66 44 89 6a 10       	mov    %r13w,0x10(%rdx)
    813f:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    8146:	ff 
    8147:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    814b:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
    8152:	c6 80 98 00 00 00 01 	movb   $0x1,0x98(%rax)
    8159:	c7 42 40 00 00 00 00 	movl   $0x0,0x40(%rdx)
    8160:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    8167:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
    816e:	00 00 00 00 
    8172:	48 89 50 30          	mov    %rdx,0x30(%rax)
    8176:	48 c7 c0 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rax
    817d:	64 44 89 24 25 78 5e 	mov    %r12d,%fs:0xffffffffffff5e78
    8184:	ff ff 
    8186:	64 4c 89 30          	mov    %r14,%fs:(%rax)
    818a:	48 83 c4 08          	add    $0x8,%rsp
    818e:	5b                   	pop    %rbx
    818f:	5d                   	pop    %rbp
    8190:	41 5c                	pop    %r12
    8192:	41 5d                	pop    %r13
    8194:	41 5e                	pop    %r14
    8196:	41 5f                	pop    %r15
    8198:	e9 23 81 00 00       	jmpq   102c0 <statistics_post_lp_data>
    819d:	0f 1f 00             	nopl   (%rax)
    81a0:	48 8d 3d f9 e3 00 00 	lea    0xe3f9(%rip),%rdi        # 165a0 <__PRETTY_FUNCTION__.6556+0x7e0>
    81a7:	e8 94 95 ff ff       	callq  1740 <puts@plt>
    81ac:	cc                   	int3   
    81ad:	48 8b 05 d4 4e 21 00 	mov    0x214ed4(%rip),%rax        # 21d088 <LPS>
    81b4:	48 8b 14 e8          	mov    (%rax,%rbp,8),%rdx
    81b8:	e9 db fe ff ff       	jmpq   8098 <check_OnGVT+0x78>
    81bd:	0f 1f 00             	nopl   (%rax)
    81c0:	48 83 c4 08          	add    $0x8,%rsp
    81c4:	5b                   	pop    %rbx
    81c5:	5d                   	pop    %rbp
    81c6:	41 5c                	pop    %r12
    81c8:	41 5d                	pop    %r13
    81ca:	41 5e                	pop    %r14
    81cc:	41 5f                	pop    %r15
    81ce:	c3                   	retq   
    81cf:	90                   	nop
    81d0:	48 8b 05 b9 0f 34 00 	mov    0x340fb9(%rip),%rax        # 349190 <sim_ended>
    81d7:	c7 05 c3 4e 21 00 01 	movl   $0x1,0x214ec3(%rip)        # 21d0a4 <start_periodic_check_ongvt>
    81de:	00 00 00 
    81e1:	f0 4c 09 3c 18       	lock or %r15,(%rax,%rbx,1)
    81e6:	e9 0b ff ff ff       	jmpq   80f6 <check_OnGVT+0xd6>
    81eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000081f0 <round_check_OnGVT>:
    81f0:	8b 35 ba 0f 34 00    	mov    0x340fba(%rip),%esi        # 3491b0 <n_prc_tot>
    81f6:	31 d2                	xor    %edx,%edx
    81f8:	53                   	push   %rbx
    81f9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    81ff:	89 f0                	mov    %esi,%eax
    8201:	f7 35 81 0f 34 00    	divl   0x340f81(%rip)        # 349188 <n_cores>
    8207:	64 0f af 04 25 90 5e 	imul   %fs:0xffffffffffff5e90,%eax
    820e:	ff ff 
    8210:	89 c7                	mov    %eax,%edi
    8212:	89 c1                	mov    %eax,%ecx
    8214:	48 8b 05 75 0f 34 00 	mov    0x340f75(%rip),%rax        # 349190 <sim_ended>
    821b:	89 ca                	mov    %ecx,%edx
    821d:	c1 ea 06             	shr    $0x6,%edx
    8220:	48 8d 04 d0          	lea    (%rax,%rdx,8),%rax
    8224:	4c 89 c2             	mov    %r8,%rdx
    8227:	48 8b 00             	mov    (%rax),%rax
    822a:	48 d3 e2             	shl    %cl,%rdx
    822d:	48 21 c2             	and    %rax,%rdx
    8230:	48 d3 ea             	shr    %cl,%rdx
    8233:	48 85 d2             	test   %rdx,%rdx
    8236:	75 1a                	jne    8252 <round_check_OnGVT+0x62>
    8238:	48 89 cb             	mov    %rcx,%rbx
    823b:	48 8b 15 5e 0f 34 00 	mov    0x340f5e(%rip),%rdx        # 3491a0 <lp_lock>
    8242:	48 c1 e3 06          	shl    $0x6,%rbx
    8246:	83 e3 c0             	and    $0xffffffc0,%ebx
    8249:	48 01 da             	add    %rbx,%rdx
    824c:	8b 02                	mov    (%rdx),%eax
    824e:	85 c0                	test   %eax,%eax
    8250:	74 16                	je     8268 <round_check_OnGVT+0x78>
    8252:	8d 41 01             	lea    0x1(%rcx),%eax
    8255:	31 d2                	xor    %edx,%edx
    8257:	f7 f6                	div    %esi
    8259:	89 d1                	mov    %edx,%ecx
    825b:	39 d7                	cmp    %edx,%edi
    825d:	75 b5                	jne    8214 <round_check_OnGVT+0x24>
    825f:	5b                   	pop    %rbx
    8260:	c3                   	retq   
    8261:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8268:	64 8b 34 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%esi
    826f:	ff 
    8270:	83 c6 01             	add    $0x1,%esi
    8273:	f0 0f b1 32          	lock cmpxchg %esi,(%rdx)
    8277:	75 40                	jne    82b9 <round_check_OnGVT+0xc9>
    8279:	48 8b 15 08 4e 21 00 	mov    0x214e08(%rip),%rdx        # 21d088 <LPS>
    8280:	89 c8                	mov    %ecx,%eax
    8282:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    8286:	f2 0f 10 40 60       	movsd  0x60(%rax),%xmm0
    828b:	66 0f 2f 05 4d cd 00 	comisd 0xcd4d(%rip),%xmm0        # 14fe0 <__PRETTY_FUNCTION__.5886+0x800>
    8292:	00 
    8293:	77 1b                	ja     82b0 <round_check_OnGVT+0xc0>
    8295:	64 8b 04 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%eax
    829c:	ff 
    829d:	48 8b 15 fc 0e 34 00 	mov    0x340efc(%rip),%rdx        # 3491a0 <lp_lock>
    82a4:	31 c9                	xor    %ecx,%ecx
    82a6:	83 c0 01             	add    $0x1,%eax
    82a9:	f0 0f b1 0c 1a       	lock cmpxchg %ecx,(%rdx,%rbx,1)
    82ae:	5b                   	pop    %rbx
    82af:	c3                   	retq   
    82b0:	89 cf                	mov    %ecx,%edi
    82b2:	e8 69 fd ff ff       	callq  8020 <check_OnGVT>
    82b7:	eb dc                	jmp    8295 <round_check_OnGVT+0xa5>
    82b9:	8b 35 f1 0e 34 00    	mov    0x340ef1(%rip),%esi        # 3491b0 <n_prc_tot>
    82bf:	eb 91                	jmp    8252 <round_check_OnGVT+0x62>
    82c1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    82c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    82cd:	00 00 00 

00000000000082d0 <init_simulation>:
    82d0:	41 54                	push   %r12
    82d2:	55                   	push   %rbp
    82d3:	53                   	push   %rbx
    82d4:	64 89 3c 25 90 5e ff 	mov    %edi,%fs:0xffffffffffff5e90
    82db:	ff 
    82dc:	e8 2f f3 ff ff       	callq  7610 <set_affinity>
    82e1:	31 c0                	xor    %eax,%eax
    82e3:	e8 28 43 00 00       	callq  c610 <unsafe_set_init>
    82e8:	48 c7 c1 00 5f ff ff 	mov    $0xffffffffffff5f00,%rcx
    82ef:	64 48 8b 14 25 00 00 	mov    %fs:0x0,%rdx
    82f6:	00 00 
    82f8:	48 01 ca             	add    %rcx,%rdx
    82fb:	48 8d 42 68          	lea    0x68(%rdx),%rax
    82ff:	48 81 c2 68 a0 00 00 	add    $0xa068,%rdx
    8306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    830d:	00 00 00 
    8310:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8317:	48 05 40 01 00 00    	add    $0x140,%rax
    831d:	48 39 d0             	cmp    %rdx,%rax
    8320:	75 ee                	jne    8310 <init_simulation+0x40>
    8322:	64 8b 3c 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edi
    8329:	ff 
    832a:	64 c7 01 00 00 00 00 	movl   $0x0,%fs:(%rcx)
    8331:	83 ff ff             	cmp    $0xffffffff,%edi
    8334:	0f 84 dd 00 00 00    	je     8417 <init_simulation+0x147>
    833a:	be 20 00 00 00       	mov    $0x20,%esi
    833f:	e8 3c c9 ff ff       	callq  4c80 <umalloc>
    8344:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8348:	48 c7 c2 d0 5e ff ff 	mov    $0xffffffffffff5ed0,%rdx
    834f:	0f 11 00             	movups %xmm0,(%rax)
    8352:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    8356:	64 8b 3c 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edi
    835d:	ff 
    835e:	64 48 89 02          	mov    %rax,%fs:(%rdx)
    8362:	83 ff ff             	cmp    $0xffffffff,%edi
    8365:	0f 84 ca 00 00 00    	je     8435 <init_simulation+0x165>
    836b:	be 20 00 00 00       	mov    $0x20,%esi
    8370:	e8 0b c9 ff ff       	callq  4c80 <umalloc>
    8375:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8379:	48 c7 c2 c8 5e ff ff 	mov    $0xffffffffffff5ec8,%rdx
    8380:	0f 11 00             	movups %xmm0,(%rax)
    8383:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    8387:	64 8b 3c 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edi
    838e:	ff 
    838f:	64 48 89 02          	mov    %rax,%fs:(%rdx)
    8393:	83 ff ff             	cmp    $0xffffffff,%edi
    8396:	0f 84 8a 00 00 00    	je     8426 <init_simulation+0x156>
    839c:	be 20 00 00 00       	mov    $0x20,%esi
    83a1:	e8 da c8 ff ff       	callq  4c80 <umalloc>
    83a6:	49 c7 c4 c0 5e ff ff 	mov    $0xffffffffffff5ec0,%r12
    83ad:	66 0f ef c0          	pxor   %xmm0,%xmm0
    83b1:	0f 11 00             	movups %xmm0,(%rax)
    83b4:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    83b8:	64 8b 3c 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edi
    83bf:	ff 
    83c0:	64 49 89 04 24       	mov    %rax,%fs:(%r12)
    83c5:	31 c0                	xor    %eax,%eax
    83c7:	e8 94 b4 00 00       	callq  13860 <initialize_preempt_counter>
    83cc:	64 8b 2c 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%ebp
    83d3:	ff 
    83d4:	85 ed                	test   %ebp,%ebp
    83d6:	74 6c                	je     8444 <init_simulation+0x174>
    83d8:	64 c7 04 25 78 5e ff 	movl   $0xffffffff,%fs:0xffffffffffff5e78
    83df:	ff ff ff ff ff 
    83e4:	48 8b 3d 55 4c 21 00 	mov    0x214c55(%rip),%rdi        # 21d040 <stdout@@GLIBC_2.2.5>
    83eb:	e8 30 95 ff ff       	callq  1920 <fflush@plt>
    83f0:	f0 83 05 a8 4c 21 00 	lock addl $0x1,0x214ca8(%rip)        # 21d0a0 <ready_wt>
    83f7:	01 
    83f8:	0f ae f0             	mfence 
    83fb:	8b 15 87 0d 34 00    	mov    0x340d87(%rip),%edx        # 349188 <n_cores>
    8401:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8408:	8b 05 92 4c 21 00    	mov    0x214c92(%rip),%eax        # 21d0a0 <ready_wt>
    840e:	39 d0                	cmp    %edx,%eax
    8410:	75 f6                	jne    8408 <init_simulation+0x138>
    8412:	5b                   	pop    %rbx
    8413:	5d                   	pop    %rbp
    8414:	41 5c                	pop    %r12
    8416:	c3                   	retq   
    8417:	bf 20 00 00 00       	mov    $0x20,%edi
    841c:	e8 2f d8 ff ff       	callq  5c50 <rsalloc>
    8421:	e9 1e ff ff ff       	jmpq   8344 <init_simulation+0x74>
    8426:	bf 20 00 00 00       	mov    $0x20,%edi
    842b:	e8 20 d8 ff ff       	callq  5c50 <rsalloc>
    8430:	e9 71 ff ff ff       	jmpq   83a6 <init_simulation+0xd6>
    8435:	bf 20 00 00 00       	mov    $0x20,%edi
    843a:	e8 11 d8 ff ff       	callq  5c50 <rsalloc>
    843f:	e9 31 ff ff ff       	jmpq   8375 <init_simulation+0xa5>
    8444:	31 c0                	xor    %eax,%eax
    8446:	e8 e5 f2 ff ff       	callq  7730 <LPs_metada_init>
    844b:	48 8d 3d 21 06 01 00 	lea    0x10621(%rip),%rdi        # 18a73 <__PRETTY_FUNCTION__.6556+0x2cb3>
    8452:	e8 e9 92 ff ff       	callq  1740 <puts@plt>
    8457:	e8 24 a2 ff ff       	callq  2680 <dymelor_init>
    845c:	48 8d 3d 28 06 01 00 	lea    0x10628(%rip),%rdi        # 18a8b <__PRETTY_FUNCTION__.6556+0x2ccb>
    8463:	e8 d8 92 ff ff       	callq  1740 <puts@plt>
    8468:	31 c0                	xor    %eax,%eax
    846a:	e8 71 7c 00 00       	callq  100e0 <statistics_init>
    846f:	48 8d 3d 2b 06 01 00 	lea    0x1062b(%rip),%rdi        # 18aa1 <__PRETTY_FUNCTION__.6556+0x2ce1>
    8476:	e8 c5 92 ff ff       	callq  1740 <puts@plt>
    847b:	e8 60 41 00 00       	callq  c5e0 <queue_init>
    8480:	48 8d 3d 33 06 01 00 	lea    0x10633(%rip),%rdi        # 18aba <__PRETTY_FUNCTION__.6556+0x2cfa>
    8487:	e8 b4 92 ff ff       	callq  1740 <puts@plt>
    848c:	e8 7f 75 00 00       	callq  fa10 <numerical_init>
    8491:	48 8d 3d 36 06 01 00 	lea    0x10636(%rip),%rdi        # 18ace <__PRETTY_FUNCTION__.6556+0x2d0e>
    8498:	e8 a3 92 ff ff       	callq  1740 <puts@plt>
    849d:	48 8d 3d 42 06 01 00 	lea    0x10642(%rip),%rdi        # 18ae6 <__PRETTY_FUNCTION__.6556+0x2d26>
    84a4:	48 c7 05 71 0d 34 00 	movq   $0x180,0x340d71(%rip)        # 349220 <node_size_msg_t>
    84ab:	80 01 00 00 
    84af:	48 c7 05 6e 0d 34 00 	movq   $0x80,0x340d6e(%rip)        # 349228 <node_size_state_t>
    84b6:	80 00 00 00 
    84ba:	e8 81 92 ff ff       	callq  1740 <puts@plt>
    84bf:	64 c7 04 25 78 5e ff 	movl   $0x0,%fs:0xffffffffffff5e78
    84c6:	ff 00 00 00 00 
    84cb:	8b 35 df 0c 34 00    	mov    0x340cdf(%rip),%esi        # 3491b0 <n_prc_tot>
    84d1:	85 f6                	test   %esi,%esi
    84d3:	0f 84 5e 01 00 00    	je     8637 <init_simulation+0x367>
    84d9:	48 c7 c3 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rbx
    84e0:	64 49 8b 14 24       	mov    %fs:(%r12),%rdx
    84e5:	89 ef                	mov    %ebp,%edi
    84e7:	be 40 01 00 00       	mov    $0x140,%esi
    84ec:	e8 bf d3 ff ff       	callq  58b0 <list_allocate_node_buffer_from_list>
    84f1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    84f6:	66 0f ef c9          	pxor   %xmm1,%xmm1
    84fa:	64 48 89 03          	mov    %rax,%fs:(%rbx)
    84fe:	66 89 10             	mov    %dx,(%rax)
    8501:	48 8b 15 80 4b 21 00 	mov    0x214b80(%rip),%rdx        # 21d088 <LPS>
    8508:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    850f:	ff 
    8510:	c6 40 12 09          	movb   $0x9,0x12(%rax)
    8514:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    851b:	00 
    851c:	48 8d 14 ca          	lea    (%rdx,%rcx,8),%rdx
    8520:	48 89 cf             	mov    %rcx,%rdi
    8523:	66 89 48 02          	mov    %cx,0x2(%rax)
    8527:	48 8b 0a             	mov    (%rdx),%rcx
    852a:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
    8531:	8b 49 4c             	mov    0x4c(%rcx),%ecx
    8534:	0f 11 48 20          	movups %xmm1,0x20(%rax)
    8538:	48 8b 32             	mov    (%rdx),%rsi
    853b:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    853f:	89 48 14             	mov    %ecx,0x14(%rax)
    8542:	48 8b 4e 30          	mov    0x30(%rsi),%rcx
    8546:	48 8b 76 28          	mov    0x28(%rsi),%rsi
    854a:	48 83 e9 10          	sub    $0x10,%rcx
    854e:	e8 9d d1 ff ff       	callq  56f0 <__list_place_after_given_node_by_content>
    8553:	64 48 8b 03          	mov    %fs:(%rbx),%rax
    8557:	31 c9                	xor    %ecx,%ecx
    8559:	be 09 00 00 00       	mov    $0x9,%esi
    855e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8562:	48 c7 80 38 01 00 00 	movq   $0x0,0x138(%rax)
    8569:	00 00 00 00 
    856d:	48 8b 05 14 4b 21 00 	mov    0x214b14(%rip),%rax        # 21d088 <LPS>
    8574:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    857b:	ff 
    857c:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8580:	48 89 d7             	mov    %rdx,%rdi
    8583:	31 d2                	xor    %edx,%edx
    8585:	4c 8b 40 20          	mov    0x20(%rax),%r8
    8589:	e8 a2 99 ff ff       	callq  1f30 <ProcessEvent>
    858e:	e8 0d 43 00 00       	callq  c8a0 <queue_deliver_msgs>
    8593:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    859a:	ff 
    859b:	48 8b 05 e6 4a 21 00 	mov    0x214ae6(%rip),%rax        # 21d088 <LPS>
    85a2:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    85a6:	48 89 d7             	mov    %rdx,%rdi
    85a9:	64 48 8b 13          	mov    %fs:(%rbx),%rdx
    85ad:	83 40 48 01          	addl   $0x1,0x48(%rax)
    85b1:	48 89 50 30          	mov    %rdx,0x30(%rax)
    85b5:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
    85b9:	e8 a2 bb ff ff       	callq  4160 <LogState>
    85be:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    85c5:	ff 
    85c6:	48 8b 05 bb 4a 21 00 	mov    0x214abb(%rip),%rax        # 21d088 <LPS>
    85cd:	48 8b 35 fc c9 00 00 	mov    0xc9fc(%rip),%rsi        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    85d4:	48 8b 2c d0          	mov    (%rax,%rdx,8),%rbp
    85d8:	48 89 d7             	mov    %rdx,%rdi
    85db:	48 8b 45 38          	mov    0x38(%rbp),%rax
    85df:	48 8b 40 08          	mov    0x8(%rax),%rax
    85e3:	48 89 70 10          	mov    %rsi,0x10(%rax)
    85e7:	c6 45 1c 00          	movb   $0x0,0x1c(%rbp)
    85eb:	48 c7 45 50 00 00 00 	movq   $0x0,0x50(%rbp)
    85f2:	00 
    85f3:	e8 a8 b5 00 00       	callq  13ba0 <allocate_dummy_bound>
    85f8:	48 89 85 88 00 00 00 	mov    %rax,0x88(%rbp)
    85ff:	48 8b 05 82 4a 21 00 	mov    0x214a82(%rip),%rax        # 21d088 <LPS>
    8606:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    860d:	ff 
    860e:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8612:	48 89 d5             	mov    %rdx,%rbp
    8615:	83 c5 01             	add    $0x1,%ebp
    8618:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
    861f:	00 00 00 00 
    8623:	64 89 2c 25 78 5e ff 	mov    %ebp,%fs:0xffffffffffff5e78
    862a:	ff 
    862b:	3b 2d 7f 0b 34 00    	cmp    0x340b7f(%rip),%ebp        # 3491b0 <n_prc_tot>
    8631:	0f 82 a9 fe ff ff    	jb     84e0 <init_simulation+0x210>
    8637:	48 8b 05 22 0c 34 00 	mov    0x340c22(%rip),%rax        # 349260 <nbcalqueue>
    863e:	48 8d 3d b5 04 01 00 	lea    0x104b5(%rip),%rdi        # 18afa <__PRETTY_FUNCTION__.6556+0x2d3a>
    8645:	48 8b 50 40          	mov    0x40(%rax),%rdx
    8649:	48 8b 82 80 00 00 00 	mov    0x80(%rdx),%rax
    8650:	89 c0                	mov    %eax,%eax
    8652:	48 89 82 80 00 00 00 	mov    %rax,0x80(%rdx)
    8659:	e8 e2 90 ff ff       	callq  1740 <puts@plt>
    865e:	64 8b 0c 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%ecx
    8665:	ff 
    8666:	64 c7 04 25 78 5e ff 	movl   $0xffffffff,%fs:0xffffffffffff5e78
    866d:	ff ff ff ff ff 
    8672:	85 c9                	test   %ecx,%ecx
    8674:	0f 85 6a fd ff ff    	jne    83e4 <init_simulation+0x114>
    867a:	31 c9                	xor    %ecx,%ecx
    867c:	31 f6                	xor    %esi,%esi
    867e:	48 8d 15 4b ec ff ff 	lea    -0x13b5(%rip),%rdx        # 72d0 <do_sleep>
    8685:	48 8d 3d f4 0a 34 00 	lea    0x340af4(%rip),%rdi        # 349180 <sleeper>
    868c:	e8 0f 90 ff ff       	callq  16a0 <pthread_create@plt>
    8691:	85 c0                	test   %eax,%eax
    8693:	0f 84 4b fd ff ff    	je     83e4 <init_simulation+0x114>
    8699:	e8 22 90 ff ff       	callq  16c0 <__errno_location@plt>
    869e:	8b 38                	mov    (%rax),%edi
    86a0:	e8 eb 93 ff ff       	callq  1a90 <strerror@plt>
    86a5:	48 8b 3d b4 49 21 00 	mov    0x2149b4(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    86ac:	be 01 00 00 00       	mov    $0x1,%esi
    86b1:	48 8d 15 77 04 01 00 	lea    0x10477(%rip),%rdx        # 18b2f <__PRETTY_FUNCTION__.6556+0x2d6f>
    86b8:	48 89 c1             	mov    %rax,%rcx
    86bb:	31 c0                	xor    %eax,%eax
    86bd:	e8 9e 93 ff ff       	callq  1a60 <__fprintf_chk@plt>
    86c2:	e8 e9 8f ff ff       	callq  16b0 <abort@plt>
    86c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    86ce:	00 00 

00000000000086d0 <executeEvent>:
    86d0:	41 56                	push   %r14
    86d2:	41 89 ce             	mov    %ecx,%r14d
    86d5:	41 55                	push   %r13
    86d7:	49 89 d5             	mov    %rdx,%r13
    86da:	41 54                	push   %r12
    86dc:	41 89 f4             	mov    %esi,%r12d
    86df:	55                   	push   %rbp
    86e0:	89 fd                	mov    %edi,%ebp
    86e2:	53                   	push   %rbx
    86e3:	4c 89 c3             	mov    %r8,%rbx
    86e6:	48 83 ec 10          	sub    $0x10,%rsp
    86ea:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    86f0:	e8 9b 41 00 00       	callq  c890 <queue_clean>
    86f5:	64 39 2c 25 78 5e ff 	cmp    %ebp,%fs:0xffffffffffff5e78
    86fc:	ff 
    86fd:	74 0d                	je     870c <executeEvent+0x3c>
    86ff:	48 8d 3d 62 c7 00 00 	lea    0xc762(%rip),%rdi        # 14e68 <__PRETTY_FUNCTION__.5886+0x688>
    8706:	e8 35 90 ff ff       	callq  1740 <puts@plt>
    870b:	cc                   	int3   
    870c:	0f 31                	rdtsc  
    870e:	89 c0                	mov    %eax,%eax
    8710:	48 c1 e2 20          	shl    $0x20,%rdx
    8714:	48 09 c2             	or     %rax,%rdx
    8717:	89 e8                	mov    %ebp,%eax
    8719:	64 48 89 14 25 38 5e 	mov    %rdx,%fs:0xffffffffffff5e38
    8720:	ff ff 
    8722:	48 8b 15 5f 49 21 00 	mov    0x21495f(%rip),%rdx        # 21d088 <LPS>
    8729:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    872d:	0f b7 50 10          	movzwl 0x10(%rax),%edx
    8731:	66 83 fa 01          	cmp    $0x1,%dx
    8735:	74 0a                	je     8741 <executeEvent+0x71>
    8737:	66 83 fa 10          	cmp    $0x10,%dx
    873b:	0f 85 9f 00 00 00    	jne    87e0 <executeEvent+0x110>
    8741:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    8747:	49 89 d8             	mov    %rbx,%r8
    874a:	44 89 f1             	mov    %r14d,%ecx
    874d:	4c 89 ea             	mov    %r13,%rdx
    8750:	44 89 e6             	mov    %r12d,%esi
    8753:	89 ef                	mov    %ebp,%edi
    8755:	e8 d6 97 ff ff       	callq  1f30 <ProcessEvent>
    875a:	0f 31                	rdtsc  
    875c:	48 c1 e2 20          	shl    $0x20,%rdx
    8760:	89 c3                	mov    %eax,%ebx
    8762:	48 09 d3             	or     %rdx,%rbx
    8765:	64 48 8b 14 25 38 5e 	mov    %fs:0xffffffffffff5e38,%rdx
    876c:	ff ff 
    876e:	48 39 da             	cmp    %rbx,%rdx
    8771:	0f 87 b1 00 00 00    	ja     8828 <executeEvent+0x158>
    8777:	48 29 d3             	sub    %rdx,%rbx
    877a:	0f 88 80 00 00 00    	js     8800 <executeEvent+0x130>
    8780:	66 0f ef c9          	pxor   %xmm1,%xmm1
    8784:	f2 48 0f 2a cb       	cvtsi2sd %rbx,%xmm1
    8789:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    878f:	f2 0f 10 05 29 c8 00 	movsd  0xc829(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    8796:	00 
    8797:	be 64 00 00 00       	mov    $0x64,%esi
    879c:	89 ef                	mov    %ebp,%edi
    879e:	e8 1d 7b 00 00       	callq  102c0 <statistics_post_lp_data>
    87a3:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    87a9:	be c8 00 00 00       	mov    $0xc8,%esi
    87ae:	89 ef                	mov    %ebp,%edi
    87b0:	e8 0b 7b 00 00       	callq  102c0 <statistics_post_lp_data>
    87b5:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    87bc:	ff 
    87bd:	48 8b 05 c4 48 21 00 	mov    0x2148c4(%rip),%rax        # 21d088 <LPS>
    87c4:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    87c8:	66 83 78 10 10       	cmpw   $0x10,0x10(%rax)
    87cd:	0f 84 7d 00 00 00    	je     8850 <executeEvent+0x180>
    87d3:	48 83 c4 10          	add    $0x10,%rsp
    87d7:	5b                   	pop    %rbx
    87d8:	5d                   	pop    %rbp
    87d9:	41 5c                	pop    %r12
    87db:	41 5d                	pop    %r13
    87dd:	41 5e                	pop    %r14
    87df:	c3                   	retq   
    87e0:	48 8d 35 f1 dd 00 00 	lea    0xddf1(%rip),%rsi        # 165d8 <__PRETTY_FUNCTION__.6556+0x818>
    87e7:	bf 01 00 00 00       	mov    $0x1,%edi
    87ec:	31 c0                	xor    %eax,%eax
    87ee:	e8 7d 91 ff ff       	callq  1970 <__printf_chk@plt>
    87f3:	cc                   	int3   
    87f4:	e9 48 ff ff ff       	jmpq   8741 <executeEvent+0x71>
    87f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8800:	48 89 d8             	mov    %rbx,%rax
    8803:	83 e3 01             	and    $0x1,%ebx
    8806:	66 0f ef c0          	pxor   %xmm0,%xmm0
    880a:	48 d1 e8             	shr    %rax
    880d:	48 09 d8             	or     %rbx,%rax
    8810:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    8815:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    8819:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    881f:	e9 6b ff ff ff       	jmpq   878f <executeEvent+0xbf>
    8824:	0f 1f 40 00          	nopl   0x0(%rax)
    8828:	48 89 d9             	mov    %rbx,%rcx
    882b:	48 8d 35 8e c5 00 00 	lea    0xc58e(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
    8832:	bf 01 00 00 00       	mov    $0x1,%edi
    8837:	31 c0                	xor    %eax,%eax
    8839:	e8 32 91 ff ff       	callq  1970 <__printf_chk@plt>
    883e:	cc                   	int3   
    883f:	64 48 8b 14 25 38 5e 	mov    %fs:0xffffffffffff5e38,%rdx
    8846:	ff ff 
    8848:	e9 2a ff ff ff       	jmpq   8777 <executeEvent+0xa7>
    884d:	0f 1f 00             	nopl   (%rax)
    8850:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    8856:	48 83 c4 10          	add    $0x10,%rsp
    885a:	89 ef                	mov    %ebp,%edi
    885c:	be cc 00 00 00       	mov    $0xcc,%esi
    8861:	5b                   	pop    %rbx
    8862:	5d                   	pop    %rbp
    8863:	41 5c                	pop    %r12
    8865:	41 5d                	pop    %r13
    8867:	41 5e                	pop    %r14
    8869:	e9 52 7a 00 00       	jmpq   102c0 <statistics_post_lp_data>
    886e:	66 90                	xchg   %ax,%ax

0000000000008870 <thread_loop>:
    8870:	41 57                	push   %r15
    8872:	41 56                	push   %r14
    8874:	41 55                	push   %r13
    8876:	41 54                	push   %r12
    8878:	55                   	push   %rbp
    8879:	53                   	push   %rbx
    887a:	48 83 ec 08          	sub    $0x8,%rsp
    887e:	e8 4d fa ff ff       	callq  82d0 <init_simulation>
    8883:	0f 31                	rdtsc  
    8885:	48 c1 e2 20          	shl    $0x20,%rdx
    8889:	89 c0                	mov    %eax,%eax
    888b:	48 09 c2             	or     %rax,%rdx
    888e:	64 48 89 14 25 48 5e 	mov    %rdx,%fs:0xffffffffffff5e48
    8895:	ff ff 
    8897:	57                   	push   %rdi
    8898:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    889f:	00 00 
    88a1:	48 8d b8 90 5b ff ff 	lea    -0xa470(%rax),%rdi
    88a8:	e8 23 e4 ff ff       	callq  6cd0 <_set_jmp>
    88ad:	48 83 c4 08          	add    $0x8,%rsp
    88b1:	85 c0                	test   %eax,%eax
    88b3:	0f 84 c7 0a 00 00    	je     9380 <thread_loop+0xb10>
    88b9:	83 f8 02             	cmp    $0x2,%eax
    88bc:	0f 84 ce 0a 00 00    	je     9390 <thread_loop+0xb20>
    88c2:	89 c2                	mov    %eax,%edx
    88c4:	48 8d 35 35 dd 00 00 	lea    0xdd35(%rip),%rsi        # 16600 <__PRETTY_FUNCTION__.6556+0x840>
    88cb:	bf 01 00 00 00       	mov    $0x1,%edi
    88d0:	31 c0                	xor    %eax,%eax
    88d2:	e8 99 90 ff ff       	callq  1970 <__printf_chk@plt>
    88d7:	cc                   	int3   
    88d8:	31 c0                	xor    %eax,%eax
    88da:	4c 8d 2d 89 c0 00 00 	lea    0xc089(%rip),%r13        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    88e1:	49 bc 45 21 40 70 47 	movabs $0x7738164770402145,%r12
    88e8:	16 38 77 
    88eb:	e8 60 a1 00 00       	callq  12a50 <check_thread_loop_before_fetch>
    88f0:	8b 05 8a 47 21 00    	mov    0x21478a(%rip),%eax        # 21d080 <sec_stop>
    88f6:	85 c0                	test   %eax,%eax
    88f8:	75 0b                	jne    8905 <thread_loop+0x95>
    88fa:	0f b6 05 84 47 21 00 	movzbl 0x214784(%rip),%eax        # 21d085 <stop>
    8901:	84 c0                	test   %al,%al
    8903:	74 1d                	je     8922 <thread_loop+0xb2>
    8905:	8b 05 75 47 21 00    	mov    0x214775(%rip),%eax        # 21d080 <sec_stop>
    890b:	85 c0                	test   %eax,%eax
    890d:	0f 84 45 08 00 00    	je     9158 <thread_loop+0x8e8>
    8913:	0f b6 05 6a 47 21 00 	movzbl 0x21476a(%rip),%eax        # 21d084 <stop_timer>
    891a:	84 c0                	test   %al,%al
    891c:	0f 85 36 08 00 00    	jne    9158 <thread_loop+0x8e8>
    8922:	0f b6 05 67 47 21 00 	movzbl 0x214767(%rip),%eax        # 21d090 <sim_error>
    8929:	84 c0                	test   %al,%al
    892b:	0f 85 27 08 00 00    	jne    9158 <thread_loop+0x8e8>
    8931:	64 c7 04 25 78 5e ff 	movl   $0xffffffff,%fs:0xffffffffffff5e78
    8938:	ff ff ff ff ff 
    893d:	0f 31                	rdtsc  
    893f:	48 c1 e2 20          	shl    $0x20,%rdx
    8943:	89 c0                	mov    %eax,%eax
    8945:	48 09 c2             	or     %rax,%rdx
    8948:	31 c0                	xor    %eax,%eax
    894a:	64 48 89 14 25 40 5e 	mov    %rdx,%fs:0xffffffffffff5e40
    8951:	ff ff 
    8953:	e8 08 48 00 00       	callq  d160 <fetch_internal>
    8958:	85 c0                	test   %eax,%eax
    895a:	0f 84 e0 03 00 00    	je     8d40 <thread_loop+0x4d0>
    8960:	48 c7 c5 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rbp
    8967:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
    896c:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    8970:	64 89 14 25 78 5e ff 	mov    %edx,%fs:0xffffffffffff5e78
    8977:	ff 
    8978:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
    897d:	64 f2 0f 11 04 25 88 	movsd  %xmm0,%fs:0xffffffffffff5e88
    8984:	5e ff ff 
    8987:	8b 70 40             	mov    0x40(%rax),%esi
    898a:	64 48 89 34 25 60 5e 	mov    %rsi,%fs:0xffffffffffff5e60
    8991:	ff ff 
    8993:	48 8b 40 20          	mov    0x20(%rax),%rax
    8997:	64 48 89 04 25 58 5e 	mov    %rax,%fs:0xffffffffffff5e58
    899e:	ff ff 
    89a0:	31 c0                	xor    %eax,%eax
    89a2:	e8 29 a2 00 00       	callq  12bd0 <check_thread_loop_after_fetch>
    89a7:	48 8b 05 12 c6 00 00 	mov    0xc612(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    89ae:	be 6e 00 00 00       	mov    $0x6e,%esi
    89b3:	64 8b 3c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edi
    89ba:	ff 
    89bb:	66 48 0f 6e c0       	movq   %rax,%xmm0
    89c0:	e8 fb 78 00 00       	callq  102c0 <statistics_post_lp_data>
    89c5:	0f 31                	rdtsc  
    89c7:	48 c1 e2 20          	shl    $0x20,%rdx
    89cb:	89 c3                	mov    %eax,%ebx
    89cd:	48 09 d3             	or     %rdx,%rbx
    89d0:	64 48 8b 14 25 40 5e 	mov    %fs:0xffffffffffff5e40,%rdx
    89d7:	ff ff 
    89d9:	48 39 da             	cmp    %rbx,%rdx
    89dc:	0f 87 3e 04 00 00    	ja     8e20 <thread_loop+0x5b0>
    89e2:	48 29 d3             	sub    %rdx,%rbx
    89e5:	0f 88 15 04 00 00    	js     8e00 <thread_loop+0x590>
    89eb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    89ef:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    89f4:	64 8b 3c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edi
    89fb:	ff 
    89fc:	be d7 00 00 00       	mov    $0xd7,%esi
    8a01:	e8 ba 78 00 00       	callq  102c0 <statistics_post_lp_data>
    8a06:	31 c0                	xor    %eax,%eax
    8a08:	e8 73 b3 00 00       	callq  13d80 <change_bound_with_current_msg>
    8a0d:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    8a14:	ff 
    8a15:	48 8b 05 6c 46 21 00 	mov    0x21466c(%rip),%rax        # 21d088 <LPS>
    8a1c:	64 f2 0f 10 04 25 88 	movsd  %fs:0xffffffffffff5e88,%xmm0
    8a23:	5e ff ff 
    8a26:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8a2a:	48 89 d7             	mov    %rdx,%rdi
    8a2d:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    8a34:	f2 0f 10 4a 08       	movsd  0x8(%rdx),%xmm1
    8a39:	66 0f 2f c8          	comisd %xmm0,%xmm1
    8a3d:	77 24                	ja     8a63 <thread_loop+0x1f3>
    8a3f:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    8a43:	7a 11                	jp     8a56 <thread_loop+0x1e6>
    8a45:	75 0f                	jne    8a56 <thread_loop+0x1e6>
    8a47:	64 48 8b 4d 00       	mov    %fs:0x0(%rbp),%rcx
    8a4c:	0f b7 5a 10          	movzwl 0x10(%rdx),%ebx
    8a50:	66 39 59 10          	cmp    %bx,0x10(%rcx)
    8a54:	76 12                	jbe    8a68 <thread_loop+0x1f8>
    8a56:	80 b8 98 00 00 00 00 	cmpb   $0x0,0x98(%rax)
    8a5d:	0f 85 e9 00 00 00    	jne    8b4c <thread_loop+0x2dc>
    8a63:	64 48 8b 4d 00       	mov    %fs:0x0(%rbp),%rcx
    8a68:	48 39 ca             	cmp    %rcx,%rdx
    8a6b:	0f 84 67 05 00 00    	je     8fd8 <thread_loop+0x768>
    8a71:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    8a77:	0f b7 58 10          	movzwl 0x10(%rax),%ebx
    8a7b:	48 89 48 58          	mov    %rcx,0x58(%rax)
    8a7f:	66 44 89 40 10       	mov    %r8w,0x10(%rax)
    8a84:	8b 40 4c             	mov    0x4c(%rax),%eax
    8a87:	89 81 d8 00 00 00    	mov    %eax,0xd8(%rcx)
    8a8d:	0f 31                	rdtsc  
    8a8f:	89 c0                	mov    %eax,%eax
    8a91:	48 c1 e2 20          	shl    $0x20,%rdx
    8a95:	0f b7 71 10          	movzwl 0x10(%rcx),%esi
    8a99:	48 09 c2             	or     %rax,%rdx
    8a9c:	48 89 91 f8 00 00 00 	mov    %rdx,0xf8(%rcx)
    8aa3:	e8 68 ba ff ff       	callq  4510 <rollback>
    8aa8:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    8aaf:	ff 
    8ab0:	be 31 01 00 00       	mov    $0x131,%esi
    8ab5:	48 8b 05 cc 45 21 00 	mov    0x2145cc(%rip),%rax        # 21d088 <LPS>
    8abc:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8ac0:	48 89 d7             	mov    %rdx,%rdi
    8ac3:	66 89 58 10          	mov    %bx,0x10(%rax)
    8ac7:	48 8b 05 f2 c4 00 00 	mov    0xc4f2(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    8ace:	66 48 0f 6e c0       	movq   %rax,%xmm0
    8ad3:	e8 e8 77 00 00       	callq  102c0 <statistics_post_lp_data>
    8ad8:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    8adf:	ff 
    8ae0:	48 8b 05 a1 45 21 00 	mov    0x2145a1(%rip),%rax        # 21d088 <LPS>
    8ae7:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8aeb:	48 89 d7             	mov    %rdx,%rdi
    8aee:	80 b8 98 00 00 00 00 	cmpb   $0x0,0x98(%rax)
    8af5:	74 3d                	je     8b34 <thread_loop+0x2c4>
    8af7:	48 8b 05 c2 c4 00 00 	mov    0xc4c2(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    8afe:	be 66 00 00 00       	mov    $0x66,%esi
    8b03:	64 48 83 3c 25 60 5e 	cmpq   $0x3,%fs:0xffffffffffff5e60
    8b0a:	ff ff 03 
    8b0d:	66 48 0f 6e c0       	movq   %rax,%xmm0
    8b12:	75 05                	jne    8b19 <thread_loop+0x2a9>
    8b14:	be 6d 00 00 00       	mov    $0x6d,%esi
    8b19:	e8 a2 77 00 00       	callq  102c0 <statistics_post_lp_data>
    8b1e:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    8b25:	ff 
    8b26:	48 8b 05 5b 45 21 00 	mov    0x21455b(%rip),%rax        # 21d088 <LPS>
    8b2d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8b31:	48 89 d7             	mov    %rdx,%rdi
    8b34:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
    8b3b:	c6 80 98 00 00 00 01 	movb   $0x1,0x98(%rax)
    8b42:	83 7a 40 04          	cmpl   $0x4,0x40(%rdx)
    8b46:	0f 84 84 07 00 00    	je     92d0 <thread_loop+0xa60>
    8b4c:	31 c0                	xor    %eax,%eax
    8b4e:	e8 4d 9c 00 00       	callq  127a0 <check_after_rollback>
    8b53:	64 48 83 3c 25 60 5e 	cmpq   $0x3,%fs:0xffffffffffff5e60
    8b5a:	ff ff 03 
    8b5d:	0f 84 ed 06 00 00    	je     9250 <thread_loop+0x9e0>
    8b63:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
    8b68:	f6 80 d0 00 00 00 01 	testb  $0x1,0xd0(%rax)
    8b6f:	0f 85 43 04 00 00    	jne    8fb8 <thread_loop+0x748>
    8b75:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    8b7c:	ff 
    8b7d:	48 8b 15 04 45 21 00 	mov    0x214504(%rip),%rdx        # 21d088 <LPS>
    8b84:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
    8b88:	8b 4a 4c             	mov    0x4c(%rdx),%ecx
    8b8b:	48 8b ba 80 00 00 00 	mov    0x80(%rdx),%rdi
    8b92:	89 48 14             	mov    %ecx,0x14(%rax)
    8b95:	e8 76 f1 ff ff       	callq  7d10 <insert_current_msg_after_given_event>
    8b9a:	64 48 8b 7d 00       	mov    %fs:0x0(%rbp),%rdi
    8b9f:	f6 87 d0 00 00 00 01 	testb  $0x1,0xd0(%rdi)
    8ba6:	0f 85 64 03 00 00    	jne    8f10 <thread_loop+0x6a0>
    8bac:	e8 6f af 00 00       	callq  13b20 <start_exposition_of_current_event>
    8bb1:	48 8b 15 d0 44 21 00 	mov    0x2144d0(%rip),%rdx        # 21d088 <LPS>
    8bb8:	48 83 ec 08          	sub    $0x8,%rsp
    8bbc:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    8bc3:	ff 
    8bc4:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
    8bc9:	48 c7 c3 40 ff ff ff 	mov    $0xffffffffffffff40,%rbx
    8bd0:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
    8bd4:	48 89 cf             	mov    %rcx,%rdi
    8bd7:	64 f2 0f 10 04 25 88 	movsd  %fs:0xffffffffffff5e88,%xmm0
    8bde:	5e ff ff 
    8be1:	0f be 70 12          	movsbl 0x12(%rax),%esi
    8be5:	0f be 48 13          	movsbl 0x13(%rax),%ecx
    8be9:	4c 8b 42 20          	mov    0x20(%rdx),%r8
    8bed:	64 44 0f b6 0b       	movzbl %fs:(%rbx),%r9d
    8bf2:	50                   	push   %rax
    8bf3:	48 8d 50 44          	lea    0x44(%rax),%rdx
    8bf7:	e8 d4 fa ff ff       	callq  86d0 <executeEvent>
    8bfc:	e8 9f 3c 00 00       	callq  c8a0 <queue_deliver_msgs>
    8c01:	64 48 8b 7d 00       	mov    %fs:0x0(%rbp),%rdi
    8c06:	e8 b5 ad 00 00       	callq  139c0 <end_exposition_of_current_event>
    8c0b:	31 c0                	xor    %eax,%eax
    8c0d:	e8 9e aa 00 00       	callq  136b0 <check_thread_loop_after_executeEvent>
    8c12:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    8c19:	ff 
    8c1a:	64 48 8b 4d 00       	mov    %fs:0x0(%rbp),%rcx
    8c1f:	48 8b 05 62 44 21 00 	mov    0x214462(%rip),%rax        # 21d088 <LPS>
    8c26:	48 89 d7             	mov    %rdx,%rdi
    8c29:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8c2d:	8b 50 48             	mov    0x48(%rax),%edx
    8c30:	48 89 48 30          	mov    %rcx,0x30(%rax)
    8c34:	89 51 18             	mov    %edx,0x18(%rcx)
    8c37:	83 c2 01             	add    $0x1,%edx
    8c3a:	89 50 48             	mov    %edx,0x48(%rax)
    8c3d:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
    8c44:	00 00 00 00 
    8c48:	e8 13 b5 ff ff       	callq  4160 <LogState>
    8c4d:	64 80 3b 00          	cmpb   $0x0,%fs:(%rbx)
    8c51:	59                   	pop    %rcx
    8c52:	5e                   	pop    %rsi
    8c53:	0f 85 37 02 00 00    	jne    8e90 <thread_loop+0x620>
    8c59:	64 8b 3c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edi
    8c60:	ff 
    8c61:	64 8b 04 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%eax
    8c68:	ff 
    8c69:	c1 e7 06             	shl    $0x6,%edi
    8c6c:	48 8b 15 2d 05 34 00 	mov    0x34052d(%rip),%rdx        # 3491a0 <lp_lock>
    8c73:	31 c9                	xor    %ecx,%ecx
    8c75:	c1 ef 02             	shr    $0x2,%edi
    8c78:	83 c0 01             	add    $0x1,%eax
    8c7b:	f0 0f b1 0c ba       	lock cmpxchg %ecx,(%rdx,%rdi,4)
    8c80:	0f 85 d6 07 00 00    	jne    945c <thread_loop+0xbec>
    8c86:	64 80 3b 00          	cmpb   $0x0,%fs:(%rbx)
    8c8a:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    8c91:	ff 
    8c92:	0f 85 b0 01 00 00    	jne    8e48 <thread_loop+0x5d8>
    8c98:	48 8b 35 f1 04 34 00 	mov    0x3404f1(%rip),%rsi        # 349190 <sim_ended>
    8c9f:	83 f9 ff             	cmp    $0xffffffff,%ecx
    8ca2:	0f 84 0b 01 00 00    	je     8db3 <thread_loop+0x543>
    8ca8:	89 c8                	mov    %ecx,%eax
    8caa:	c1 e8 06             	shr    $0x6,%eax
    8cad:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    8cb1:	48 8b 10             	mov    (%rax),%rdx
    8cb4:	b8 01 00 00 00       	mov    $0x1,%eax
    8cb9:	48 d3 e0             	shl    %cl,%rax
    8cbc:	48 21 d0             	and    %rdx,%rax
    8cbf:	48 d3 e8             	shr    %cl,%rax
    8cc2:	48 85 c0             	test   %rax,%rax
    8cc5:	0f 85 f5 03 00 00    	jne    90c0 <thread_loop+0x850>
    8ccb:	e8 a0 2e 00 00       	callq  bb70 <nbc_prune>
    8cd0:	64 8b 14 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edx
    8cd7:	ff 
    8cd8:	85 d2                	test   %edx,%edx
    8cda:	0f 85 10 fc ff ff    	jne    88f0 <thread_loop+0x80>
    8ce0:	64 48 8b 04 25 68 5e 	mov    %fs:0xffffffffffff5e68,%rax
    8ce7:	ff ff 
    8ce9:	48 83 c0 01          	add    $0x1,%rax
    8ced:	64 48 89 04 25 68 5e 	mov    %rax,%fs:0xffffffffffff5e68
    8cf4:	ff ff 
    8cf6:	49 0f af c4          	imul   %r12,%rax
    8cfa:	48 c1 c8 0f          	ror    $0xf,%rax
    8cfe:	48 3d 0e 48 00 00    	cmp    $0x480e,%rax
    8d04:	0f 87 e6 fb ff ff    	ja     88f0 <thread_loop+0x80>
    8d0a:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    8d11:	ff 
    8d12:	31 d2                	xor    %edx,%edx
    8d14:	64 f2 0f 10 04 25 88 	movsd  %fs:0xffffffffffff5e88,%xmm0
    8d1b:	5e ff ff 
    8d1e:	48 8d 35 ee fd 00 00 	lea    0xfdee(%rip),%rsi        # 18b13 <__PRETTY_FUNCTION__.6556+0x2d53>
    8d25:	bf 01 00 00 00       	mov    $0x1,%edi
    8d2a:	b8 01 00 00 00       	mov    $0x1,%eax
    8d2f:	e8 3c 8c ff ff       	callq  1970 <__printf_chk@plt>
    8d34:	e9 b7 fb ff ff       	jmpq   88f0 <thread_loop+0x80>
    8d39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d40:	f2 0f 10 05 78 c2 00 	movsd  0xc278(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    8d47:	00 
    8d48:	64 8b 3c 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edi
    8d4f:	ff 
    8d50:	be 6f 00 00 00       	mov    $0x6f,%esi
    8d55:	e8 86 7a 00 00       	callq  107e0 <statistics_post_th_data>
    8d5a:	0f 31                	rdtsc  
    8d5c:	48 c1 e2 20          	shl    $0x20,%rdx
    8d60:	89 c3                	mov    %eax,%ebx
    8d62:	48 09 d3             	or     %rdx,%rbx
    8d65:	64 48 8b 14 25 40 5e 	mov    %fs:0xffffffffffff5e40,%rdx
    8d6c:	ff ff 
    8d6e:	48 39 da             	cmp    %rbx,%rdx
    8d71:	0f 87 b9 03 00 00    	ja     9130 <thread_loop+0x8c0>
    8d77:	48 29 d3             	sub    %rdx,%rbx
    8d7a:	0f 88 90 03 00 00    	js     9110 <thread_loop+0x8a0>
    8d80:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8d84:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    8d89:	64 8b 3c 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edi
    8d90:	ff 
    8d91:	be d8 00 00 00       	mov    $0xd8,%esi
    8d96:	e8 45 7a 00 00       	callq  107e0 <statistics_post_th_data>
    8d9b:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    8da2:	ff 
    8da3:	48 8b 35 e6 03 34 00 	mov    0x3403e6(%rip),%rsi        # 349190 <sim_ended>
    8daa:	83 f9 ff             	cmp    $0xffffffff,%ecx
    8dad:	0f 85 f5 fe ff ff    	jne    8ca8 <thread_loop+0x438>
    8db3:	64 8b 0c 25 54 5e ff 	mov    %fs:0xffffffffffff5e54,%ecx
    8dba:	ff 
    8dbb:	8b 3d ef 03 34 00    	mov    0x3403ef(%rip),%edi        # 3491b0 <n_prc_tot>
    8dc1:	89 c8                	mov    %ecx,%eax
    8dc3:	c1 e8 06             	shr    $0x6,%eax
    8dc6:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    8dca:	48 8b 10             	mov    (%rax),%rdx
    8dcd:	b8 01 00 00 00       	mov    $0x1,%eax
    8dd2:	48 d3 e0             	shl    %cl,%rax
    8dd5:	48 21 d0             	and    %rdx,%rax
    8dd8:	48 d3 e8             	shr    %cl,%rax
    8ddb:	48 85 c0             	test   %rax,%rax
    8dde:	0f 85 1c 04 00 00    	jne    9200 <thread_loop+0x990>
    8de4:	8d 41 01             	lea    0x1(%rcx),%eax
    8de7:	31 d2                	xor    %edx,%edx
    8de9:	f7 f7                	div    %edi
    8deb:	64 89 14 25 54 5e ff 	mov    %edx,%fs:0xffffffffffff5e54
    8df2:	ff 
    8df3:	e9 d3 fe ff ff       	jmpq   8ccb <thread_loop+0x45b>
    8df8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8dff:	00 
    8e00:	48 89 d8             	mov    %rbx,%rax
    8e03:	83 e3 01             	and    $0x1,%ebx
    8e06:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8e0a:	48 d1 e8             	shr    %rax
    8e0d:	48 09 d8             	or     %rbx,%rax
    8e10:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    8e15:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    8e19:	e9 d6 fb ff ff       	jmpq   89f4 <thread_loop+0x184>
    8e1e:	66 90                	xchg   %ax,%ax
    8e20:	48 89 d9             	mov    %rbx,%rcx
    8e23:	48 8d 35 96 bf 00 00 	lea    0xbf96(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
    8e2a:	bf 01 00 00 00       	mov    $0x1,%edi
    8e2f:	31 c0                	xor    %eax,%eax
    8e31:	e8 3a 8b ff ff       	callq  1970 <__printf_chk@plt>
    8e36:	cc                   	int3   
    8e37:	64 48 8b 14 25 40 5e 	mov    %fs:0xffffffffffff5e40,%rdx
    8e3e:	ff ff 
    8e40:	e9 9d fb ff ff       	jmpq   89e2 <thread_loop+0x172>
    8e45:	0f 1f 00             	nopl   (%rax)
    8e48:	48 8b 05 71 c1 00 00 	mov    0xc171(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    8e4f:	89 cf                	mov    %ecx,%edi
    8e51:	be 84 03 00 00       	mov    $0x384,%esi
    8e56:	66 48 0f 6e c0       	movq   %rax,%xmm0
    8e5b:	e8 60 74 00 00       	callq  102c0 <statistics_post_lp_data>
    8e60:	64 48 8b 7d 00       	mov    %fs:0x0(%rbp),%rdi
    8e65:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    8e6c:	ff 
    8e6d:	64 48 8b 34 25 70 5e 	mov    %fs:0xffffffffffff5e70,%rsi
    8e74:	ff ff 
    8e76:	e8 25 3f 00 00       	callq  cda0 <commit_event>
    8e7b:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    8e82:	ff 
    8e83:	e9 10 fe ff ff       	jmpq   8c98 <thread_loop+0x428>
    8e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8e8f:	00 
    8e90:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    8e97:	ff 
    8e98:	48 8b 05 e9 41 21 00 	mov    0x2141e9(%rip),%rax        # 21d088 <LPS>
    8e9f:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8ea3:	48 89 d7             	mov    %rdx,%rdi
    8ea6:	48 8b 70 20          	mov    0x20(%rax),%rsi
    8eaa:	e8 c1 92 ff ff       	callq  2170 <OnGVT>
    8eaf:	85 c0                	test   %eax,%eax
    8eb1:	0f 85 49 04 00 00    	jne    9300 <thread_loop+0xa90>
    8eb7:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    8ebe:	ff 
    8ebf:	48 8b 05 c2 41 21 00 	mov    0x2141c2(%rip),%rax        # 21d088 <LPS>
    8ec6:	48 89 d7             	mov    %rdx,%rdi
    8ec9:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx
    8ecd:	c7 42 50 00 00 00 00 	movl   $0x0,0x50(%rdx)
    8ed4:	64 80 3b 00          	cmpb   $0x0,%fs:(%rbx)
    8ed8:	0f 84 83 fd ff ff    	je     8c61 <thread_loop+0x3f1>
    8ede:	8b 42 70             	mov    0x70(%rdx),%eax
    8ee1:	83 c0 01             	add    $0x1,%eax
    8ee4:	89 42 70             	mov    %eax,0x70(%rdx)
    8ee7:	69 c0 d5 78 e9 26    	imul   $0x26e978d5,%eax,%eax
    8eed:	c1 c8 03             	ror    $0x3,%eax
    8ef0:	3d 37 89 41 00       	cmp    $0x418937,%eax
    8ef5:	0f 87 66 fd ff ff    	ja     8c61 <thread_loop+0x3f1>
    8efb:	f2 0f 10 42 60       	movsd  0x60(%rdx),%xmm0
    8f00:	e8 2b bb ff ff       	callq  4a30 <clean_checkpoint>
    8f05:	e9 4f fd ff ff       	jmpq   8c59 <thread_loop+0x3e9>
    8f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8f10:	48 8d 35 e1 d7 00 00 	lea    0xd7e1(%rip),%rsi        # 166f8 <__PRETTY_FUNCTION__.6556+0x938>
    8f17:	bf 01 00 00 00       	mov    $0x1,%edi
    8f1c:	31 c0                	xor    %eax,%eax
    8f1e:	e8 4d 8a ff ff       	callq  1970 <__printf_chk@plt>
    8f23:	64 48 8b 5d 00       	mov    %fs:0x0(%rbp),%rbx
    8f28:	48 89 df             	mov    %rbx,%rdi
    8f2b:	4c 8b 73 20          	mov    0x20(%rbx),%r14
    8f2f:	4c 8b bb d0 00 00 00 	mov    0xd0(%rbx),%r15
    8f36:	e8 25 3e 00 00       	callq  cd60 <is_valid>
    8f3b:	64 48 8b 55 00       	mov    %fs:0x0(%rbp),%rdx
    8f40:	4c 89 ee             	mov    %r13,%rsi
    8f43:	0f b6 c0             	movzbl %al,%eax
    8f46:	8b 4a 40             	mov    0x40(%rdx),%ecx
    8f49:	83 f9 01             	cmp    $0x1,%ecx
    8f4c:	74 21                	je     8f6f <thread_loop+0x6ff>
    8f4e:	48 8d 35 02 ba 00 00 	lea    0xba02(%rip),%rsi        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    8f55:	83 f9 02             	cmp    $0x2,%ecx
    8f58:	74 15                	je     8f6f <thread_loop+0x6ff>
    8f5a:	83 f9 03             	cmp    $0x3,%ecx
    8f5d:	48 8d 35 0f ba 00 00 	lea    0xba0f(%rip),%rsi        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    8f64:	48 8d 3d f7 b9 00 00 	lea    0xb9f7(%rip),%rdi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    8f6b:	48 0f 45 f7          	cmovne %rdi,%rsi
    8f6f:	44 0f b7 5a 02       	movzwl 0x2(%rdx),%r11d
    8f74:	44 8b 4a 14          	mov    0x14(%rdx),%r9d
    8f78:	bf 01 00 00 00       	mov    $0x1,%edi
    8f7d:	44 0f b7 42 10       	movzwl 0x10(%rdx),%r8d
    8f82:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
    8f87:	0f b7 12             	movzwl (%rdx),%edx
    8f8a:	41 56                	push   %r14
    8f8c:	41 57                	push   %r15
    8f8e:	53                   	push   %rbx
    8f8f:	50                   	push   %rax
    8f90:	b8 01 00 00 00       	mov    $0x1,%eax
    8f95:	56                   	push   %rsi
    8f96:	48 8d 35 9b bf 00 00 	lea    0xbf9b(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    8f9d:	51                   	push   %rcx
    8f9e:	44 89 d9             	mov    %r11d,%ecx
    8fa1:	e8 ca 89 ff ff       	callq  1970 <__printf_chk@plt>
    8fa6:	cc                   	int3   
    8fa7:	64 48 8b 7d 00       	mov    %fs:0x0(%rbp),%rdi
    8fac:	48 83 c4 30          	add    $0x30,%rsp
    8fb0:	e9 f7 fb ff ff       	jmpq   8bac <thread_loop+0x33c>
    8fb5:	0f 1f 00             	nopl   (%rax)
    8fb8:	48 8d 35 09 d7 00 00 	lea    0xd709(%rip),%rsi        # 166c8 <__PRETTY_FUNCTION__.6556+0x908>
    8fbf:	bf 01 00 00 00       	mov    $0x1,%edi
    8fc4:	31 c0                	xor    %eax,%eax
    8fc6:	e8 a5 89 ff ff       	callq  1970 <__printf_chk@plt>
    8fcb:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
    8fd0:	e9 a0 fb ff ff       	jmpq   8b75 <thread_loop+0x305>
    8fd5:	0f 1f 00             	nopl   (%rax)
    8fd8:	64 48 83 3c 25 60 5e 	cmpq   $0x3,%fs:0xffffffffffff5e60
    8fdf:	ff ff 03 
    8fe2:	0f 84 89 fa ff ff    	je     8a71 <thread_loop+0x201>
    8fe8:	64 48 81 3c 25 58 5e 	cmpq   $0xba4a4a,%fs:0xffffffffffff5e58
    8fef:	ff ff 4a 4a ba 00 
    8ff5:	0f 84 2d 04 00 00    	je     9428 <thread_loop+0xbb8>
    8ffb:	48 8d 35 6e d6 00 00 	lea    0xd66e(%rip),%rsi        # 16670 <__PRETTY_FUNCTION__.6556+0x8b0>
    9002:	bf 01 00 00 00       	mov    $0x1,%edi
    9007:	31 c0                	xor    %eax,%eax
    9009:	e8 62 89 ff ff       	callq  1970 <__printf_chk@plt>
    900e:	64 48 8b 5d 00       	mov    %fs:0x0(%rbp),%rbx
    9013:	48 89 df             	mov    %rbx,%rdi
    9016:	4c 8b 73 20          	mov    0x20(%rbx),%r14
    901a:	4c 8b bb d0 00 00 00 	mov    0xd0(%rbx),%r15
    9021:	e8 3a 3d 00 00       	callq  cd60 <is_valid>
    9026:	64 48 8b 55 00       	mov    %fs:0x0(%rbp),%rdx
    902b:	4c 89 ee             	mov    %r13,%rsi
    902e:	0f b6 c0             	movzbl %al,%eax
    9031:	8b 4a 40             	mov    0x40(%rdx),%ecx
    9034:	83 f9 01             	cmp    $0x1,%ecx
    9037:	74 21                	je     905a <thread_loop+0x7ea>
    9039:	48 8d 35 17 b9 00 00 	lea    0xb917(%rip),%rsi        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    9040:	83 f9 02             	cmp    $0x2,%ecx
    9043:	74 15                	je     905a <thread_loop+0x7ea>
    9045:	83 f9 03             	cmp    $0x3,%ecx
    9048:	48 8d 35 24 b9 00 00 	lea    0xb924(%rip),%rsi        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    904f:	48 8d 3d 0c b9 00 00 	lea    0xb90c(%rip),%rdi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    9056:	48 0f 45 f7          	cmovne %rdi,%rsi
    905a:	44 0f b7 5a 02       	movzwl 0x2(%rdx),%r11d
    905f:	44 8b 4a 14          	mov    0x14(%rdx),%r9d
    9063:	bf 01 00 00 00       	mov    $0x1,%edi
    9068:	44 0f b7 42 10       	movzwl 0x10(%rdx),%r8d
    906d:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
    9072:	0f b7 12             	movzwl (%rdx),%edx
    9075:	41 56                	push   %r14
    9077:	41 57                	push   %r15
    9079:	53                   	push   %rbx
    907a:	50                   	push   %rax
    907b:	b8 01 00 00 00       	mov    $0x1,%eax
    9080:	56                   	push   %rsi
    9081:	48 8d 35 b0 be 00 00 	lea    0xbeb0(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    9088:	51                   	push   %rcx
    9089:	44 89 d9             	mov    %r11d,%ecx
    908c:	e8 df 88 ff ff       	callq  1970 <__printf_chk@plt>
    9091:	cc                   	int3   
    9092:	48 8b 05 ef 3f 21 00 	mov    0x213fef(%rip),%rax        # 21d088 <LPS>
    9099:	64 48 8b 4d 00       	mov    %fs:0x0(%rbp),%rcx
    909e:	48 83 c4 30          	add    $0x30,%rsp
    90a2:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    90a9:	ff 
    90aa:	64 f2 0f 10 04 25 88 	movsd  %fs:0xffffffffffff5e88,%xmm0
    90b1:	5e ff ff 
    90b4:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    90b8:	48 89 d7             	mov    %rdx,%rdi
    90bb:	e9 b1 f9 ff ff       	jmpq   8a71 <thread_loop+0x201>
    90c0:	8b 0d ea 00 34 00    	mov    0x3400ea(%rip),%ecx        # 3491b0 <n_prc_tot>
    90c6:	31 d2                	xor    %edx,%edx
    90c8:	31 c0                	xor    %eax,%eax
    90ca:	c1 e9 06             	shr    $0x6,%ecx
    90cd:	48 83 c1 01          	add    $0x1,%rcx
    90d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    90d8:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    90dc:	48 8b 00             	mov    (%rax),%rax
    90df:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    90e3:	0f 85 e2 fb ff ff    	jne    8ccb <thread_loop+0x45b>
    90e9:	8d 42 01             	lea    0x1(%rdx),%eax
    90ec:	48 89 c2             	mov    %rax,%rdx
    90ef:	48 39 c8             	cmp    %rcx,%rax
    90f2:	72 e4                	jb     90d8 <thread_loop+0x868>
    90f4:	31 c0                	xor    %eax,%eax
    90f6:	ba 01 00 00 00       	mov    $0x1,%edx
    90fb:	f0 0f b0 15 82 3f 21 	lock cmpxchg %dl,0x213f82(%rip)        # 21d085 <stop>
    9102:	00 
    9103:	e9 c3 fb ff ff       	jmpq   8ccb <thread_loop+0x45b>
    9108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    910f:	00 
    9110:	48 89 d8             	mov    %rbx,%rax
    9113:	83 e3 01             	and    $0x1,%ebx
    9116:	66 0f ef c0          	pxor   %xmm0,%xmm0
    911a:	48 d1 e8             	shr    %rax
    911d:	48 09 d8             	or     %rbx,%rax
    9120:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    9125:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    9129:	e9 5b fc ff ff       	jmpq   8d89 <thread_loop+0x519>
    912e:	66 90                	xchg   %ax,%ax
    9130:	48 89 d9             	mov    %rbx,%rcx
    9133:	48 8d 35 86 bc 00 00 	lea    0xbc86(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
    913a:	bf 01 00 00 00       	mov    $0x1,%edi
    913f:	31 c0                	xor    %eax,%eax
    9141:	e8 2a 88 ff ff       	callq  1970 <__printf_chk@plt>
    9146:	cc                   	int3   
    9147:	64 48 8b 14 25 40 5e 	mov    %fs:0xffffffffffff5e40,%rdx
    914e:	ff ff 
    9150:	e9 22 fc ff ff       	jmpq   8d77 <thread_loop+0x507>
    9155:	0f 1f 00             	nopl   (%rax)
    9158:	0f 31                	rdtsc  
    915a:	48 c1 e2 20          	shl    $0x20,%rdx
    915e:	89 c3                	mov    %eax,%ebx
    9160:	48 09 d3             	or     %rdx,%rbx
    9163:	64 48 8b 14 25 48 5e 	mov    %fs:0xffffffffffff5e48,%rdx
    916a:	ff ff 
    916c:	48 39 da             	cmp    %rbx,%rdx
    916f:	0f 87 8b 02 00 00    	ja     9400 <thread_loop+0xb90>
    9175:	48 29 d3             	sub    %rdx,%rbx
    9178:	0f 88 e2 01 00 00    	js     9360 <thread_loop+0xaf0>
    917e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9182:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    9187:	64 8b 3c 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edi
    918e:	ff 
    918f:	be d0 00 00 00       	mov    $0xd0,%esi
    9194:	e8 47 76 00 00       	callq  107e0 <statistics_post_th_data>
    9199:	0f b6 05 f0 3e 21 00 	movzbl 0x213ef0(%rip),%eax        # 21d090 <sim_error>
    91a0:	84 c0                	test   %al,%al
    91a2:	0f 85 28 02 00 00    	jne    93d0 <thread_loop+0xb60>
    91a8:	0f b6 05 d6 3e 21 00 	movzbl 0x213ed6(%rip),%eax        # 21d085 <stop>
    91af:	84 c0                	test   %al,%al
    91b1:	75 0b                	jne    91be <thread_loop+0x94e>
    91b3:	0f b6 05 ca 3e 21 00 	movzbl 0x213eca(%rip),%eax        # 21d084 <stop_timer>
    91ba:	84 c0                	test   %al,%al
    91bc:	74 2b                	je     91e9 <thread_loop+0x979>
    91be:	64 8b 14 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edx
    91c5:	ff 
    91c6:	48 8d 35 03 d6 00 00 	lea    0xd603(%rip),%rsi        # 167d0 <__PRETTY_FUNCTION__.6556+0xa10>
    91cd:	bf 01 00 00 00       	mov    $0x1,%edi
    91d2:	31 c0                	xor    %eax,%eax
    91d4:	e8 97 87 ff ff       	callq  1970 <__printf_chk@plt>
    91d9:	64 8b 04 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%eax
    91e0:	ff 
    91e1:	85 c0                	test   %eax,%eax
    91e3:	0f 84 57 02 00 00    	je     9440 <thread_loop+0xbd0>
    91e9:	48 83 c4 08          	add    $0x8,%rsp
    91ed:	5b                   	pop    %rbx
    91ee:	5d                   	pop    %rbp
    91ef:	41 5c                	pop    %r12
    91f1:	41 5d                	pop    %r13
    91f3:	41 5e                	pop    %r14
    91f5:	41 5f                	pop    %r15
    91f7:	c3                   	retq   
    91f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    91ff:	00 
    9200:	41 89 f8             	mov    %edi,%r8d
    9203:	31 d2                	xor    %edx,%edx
    9205:	31 c0                	xor    %eax,%eax
    9207:	41 c1 e8 06          	shr    $0x6,%r8d
    920b:	49 83 c0 01          	add    $0x1,%r8
    920f:	90                   	nop
    9210:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    9214:	48 8b 00             	mov    (%rax),%rax
    9217:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    921b:	0f 85 c3 fb ff ff    	jne    8de4 <thread_loop+0x574>
    9221:	8d 42 01             	lea    0x1(%rdx),%eax
    9224:	48 89 c2             	mov    %rax,%rdx
    9227:	4c 39 c0             	cmp    %r8,%rax
    922a:	72 e4                	jb     9210 <thread_loop+0x9a0>
    922c:	31 c0                	xor    %eax,%eax
    922e:	ba 01 00 00 00       	mov    $0x1,%edx
    9233:	f0 0f b0 15 4a 3e 21 	lock cmpxchg %dl,0x213e4a(%rip)        # 21d085 <stop>
    923a:	00 
    923b:	64 8b 0c 25 54 5e ff 	mov    %fs:0xffffffffffff5e54,%ecx
    9242:	ff 
    9243:	8b 3d 67 ff 33 00    	mov    0x33ff67(%rip),%edi        # 3491b0 <n_prc_tot>
    9249:	e9 96 fb ff ff       	jmpq   8de4 <thread_loop+0x574>
    924e:	66 90                	xchg   %ax,%ax
    9250:	64 48 8b 55 00       	mov    %fs:0x0(%rbp),%rdx
    9255:	48 8b 3d 04 00 34 00 	mov    0x340004(%rip),%rdi        # 349260 <nbcalqueue>
    925c:	48 c7 42 20 4a 4a ba 	movq   $0xba4a4a,0x20(%rdx)
    9263:	00 
    9264:	64 8b 04 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%eax
    926b:	ff 
    926c:	83 c0 01             	add    $0x1,%eax
    926f:	89 42 18             	mov    %eax,0x18(%rdx)
    9272:	64 48 8b 34 25 70 5e 	mov    %fs:0xffffffffffff5e70,%rsi
    9279:	ff ff 
    927b:	e8 d0 2c 00 00       	callq  bf50 <delete>
    9280:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    9287:	ff 
    9288:	48 8b 05 f9 3d 21 00 	mov    0x213df9(%rip),%rax        # 21d088 <LPS>
    928f:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
    9293:	48 89 ca             	mov    %rcx,%rdx
    9296:	c1 e2 06             	shl    $0x6,%edx
    9299:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
    92a0:	c1 ea 02             	shr    $0x2,%edx
    92a3:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
    92aa:	00 00 00 00 
    92ae:	48 89 48 30          	mov    %rcx,0x30(%rax)
    92b2:	64 8b 04 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%eax
    92b9:	ff 
    92ba:	48 8b 0d df fe 33 00 	mov    0x33fedf(%rip),%rcx        # 3491a0 <lp_lock>
    92c1:	31 f6                	xor    %esi,%esi
    92c3:	83 c0 01             	add    $0x1,%eax
    92c6:	f0 0f b1 34 91       	lock cmpxchg %esi,(%rcx,%rdx,4)
    92cb:	e9 20 f6 ff ff       	jmpq   88f0 <thread_loop+0x80>
    92d0:	c7 42 40 00 00 00 00 	movl   $0x0,0x40(%rdx)
    92d7:	c1 e7 06             	shl    $0x6,%edi
    92da:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    92e1:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
    92e8:	00 00 00 00 
    92ec:	c1 ef 02             	shr    $0x2,%edi
    92ef:	48 89 50 30          	mov    %rdx,0x30(%rax)
    92f3:	89 fa                	mov    %edi,%edx
    92f5:	eb bb                	jmp    92b2 <thread_loop+0xa42>
    92f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    92fe:	00 00 
    9300:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    9307:	ff 
    9308:	48 8b 05 79 3d 21 00 	mov    0x213d79(%rip),%rax        # 21d088 <LPS>
    930f:	bf 01 00 00 00       	mov    $0x1,%edi
    9314:	48 8d 35 25 d4 00 00 	lea    0xd425(%rip),%rsi        # 16740 <__PRETTY_FUNCTION__.6556+0x980>
    931b:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    931f:	48 89 d1             	mov    %rdx,%rcx
    9322:	8b 50 48             	mov    0x48(%rax),%edx
    9325:	31 c0                	xor    %eax,%eax
    9327:	e8 44 86 ff ff       	callq  1970 <__printf_chk@plt>
    932c:	48 8b 35 5d fe 33 00 	mov    0x33fe5d(%rip),%rsi        # 349190 <sim_ended>
    9333:	ba 01 00 00 00       	mov    $0x1,%edx
    9338:	c7 05 62 3d 21 00 01 	movl   $0x1,0x213d62(%rip)        # 21d0a4 <start_periodic_check_ongvt>
    933f:	00 00 00 
    9342:	64 8b 0c 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%ecx
    9349:	ff 
    934a:	89 c8                	mov    %ecx,%eax
    934c:	48 d3 e2             	shl    %cl,%rdx
    934f:	c1 e8 06             	shr    $0x6,%eax
    9352:	f0 48 09 14 c6       	lock or %rdx,(%rsi,%rax,8)
    9357:	e9 5b fb ff ff       	jmpq   8eb7 <thread_loop+0x647>
    935c:	0f 1f 40 00          	nopl   0x0(%rax)
    9360:	48 89 d8             	mov    %rbx,%rax
    9363:	83 e3 01             	and    $0x1,%ebx
    9366:	66 0f ef c0          	pxor   %xmm0,%xmm0
    936a:	48 d1 e8             	shr    %rax
    936d:	48 09 d8             	or     %rbx,%rax
    9370:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    9375:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    9379:	e9 09 fe ff ff       	jmpq   9187 <thread_loop+0x917>
    937e:	66 90                	xchg   %ax,%ax
    9380:	31 c0                	xor    %eax,%eax
    9382:	e8 89 97 00 00       	callq  12b10 <check_CFV_INIT>
    9387:	e9 4c f5 ff ff       	jmpq   88d8 <thread_loop+0x68>
    938c:	0f 1f 40 00          	nopl   0x0(%rax)
    9390:	31 c0                	xor    %eax,%eax
    9392:	e8 e9 94 00 00       	callq  12880 <check_CFV_ALREADY_HANDLED>
    9397:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    939e:	ff 
    939f:	48 8b 0d fa fd 33 00 	mov    0x33fdfa(%rip),%rcx        # 3491a0 <lp_lock>
    93a6:	31 f6                	xor    %esi,%esi
    93a8:	64 8b 04 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%eax
    93af:	ff 
    93b0:	c1 e2 06             	shl    $0x6,%edx
    93b3:	c1 ea 02             	shr    $0x2,%edx
    93b6:	83 c0 01             	add    $0x1,%eax
    93b9:	f0 0f b1 34 91       	lock cmpxchg %esi,(%rcx,%rdx,4)
    93be:	64 c7 04 25 78 5e ff 	movl   $0xffffffff,%fs:0xffffffffffff5e78
    93c5:	ff ff ff ff ff 
    93ca:	e9 09 f5 ff ff       	jmpq   88d8 <thread_loop+0x68>
    93cf:	90                   	nop
    93d0:	64 8b 14 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edx
    93d7:	ff 
    93d8:	48 83 c4 08          	add    $0x8,%rsp
    93dc:	48 8d 35 bd d3 00 00 	lea    0xd3bd(%rip),%rsi        # 167a0 <__PRETTY_FUNCTION__.6556+0x9e0>
    93e3:	31 c0                	xor    %eax,%eax
    93e5:	5b                   	pop    %rbx
    93e6:	bf 01 00 00 00       	mov    $0x1,%edi
    93eb:	5d                   	pop    %rbp
    93ec:	41 5c                	pop    %r12
    93ee:	41 5d                	pop    %r13
    93f0:	41 5e                	pop    %r14
    93f2:	41 5f                	pop    %r15
    93f4:	e9 77 85 ff ff       	jmpq   1970 <__printf_chk@plt>
    93f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9400:	48 89 d9             	mov    %rbx,%rcx
    9403:	48 8d 35 b6 b9 00 00 	lea    0xb9b6(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
    940a:	bf 01 00 00 00       	mov    $0x1,%edi
    940f:	31 c0                	xor    %eax,%eax
    9411:	e8 5a 85 ff ff       	callq  1970 <__printf_chk@plt>
    9416:	cc                   	int3   
    9417:	64 48 8b 14 25 48 5e 	mov    %fs:0xffffffffffff5e48,%rdx
    941e:	ff ff 
    9420:	e9 50 fd ff ff       	jmpq   9175 <thread_loop+0x905>
    9425:	0f 1f 00             	nopl   (%rax)
    9428:	48 8d 35 11 d2 00 00 	lea    0xd211(%rip),%rsi        # 16640 <__PRETTY_FUNCTION__.6556+0x880>
    942f:	bf 01 00 00 00       	mov    $0x1,%edi
    9434:	31 c0                	xor    %eax,%eax
    9436:	e8 35 85 ff ff       	callq  1970 <__printf_chk@plt>
    943b:	e9 bb fb ff ff       	jmpq   8ffb <thread_loop+0x78b>
    9440:	48 8b 3d 39 fd 33 00 	mov    0x33fd39(%rip),%rdi        # 349180 <sleeper>
    9447:	48 83 c4 08          	add    $0x8,%rsp
    944b:	31 f6                	xor    %esi,%esi
    944d:	5b                   	pop    %rbx
    944e:	5d                   	pop    %rbp
    944f:	41 5c                	pop    %r12
    9451:	41 5d                	pop    %r13
    9453:	41 5e                	pop    %r14
    9455:	41 5f                	pop    %r15
    9457:	e9 b4 85 ff ff       	jmpq   1a10 <pthread_join@plt>
    945c:	64 8b 14 25 78 5e ff 	mov    %fs:0xffffffffffff5e78,%edx
    9463:	ff 
    9464:	48 8b 05 35 fd 33 00 	mov    0x33fd35(%rip),%rax        # 3491a0 <lp_lock>
    946b:	bf 01 00 00 00       	mov    $0x1,%edi
    9470:	48 8d 35 f1 d2 00 00 	lea    0xd2f1(%rip),%rsi        # 16768 <__PRETTY_FUNCTION__.6556+0x9a8>
    9477:	48 8d 04 90          	lea    (%rax,%rdx,4),%rax
    947b:	48 89 d1             	mov    %rdx,%rcx
    947e:	64 8b 14 25 90 5e ff 	mov    %fs:0xffffffffffff5e90,%edx
    9485:	ff 
    9486:	44 8b 00             	mov    (%rax),%r8d
    9489:	31 c0                	xor    %eax,%eax
    948b:	e8 e0 84 ff ff       	callq  1970 <__printf_chk@plt>
    9490:	e9 f1 f7 ff ff       	jmpq   8c86 <thread_loop+0x416>
    9495:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    949c:	00 00 00 
    949f:	90                   	nop

00000000000094a0 <calqueue_init>:
    94a0:	48 8d 05 79 3c 21 00 	lea    0x213c79(%rip),%rax        # 21d120 <calq>
    94a7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    94ab:	c7 05 43 3c 21 00 00 	movl   $0x0,0x213c43(%rip)        # 21d0f8 <firstsub>
    94b2:	00 00 00 
    94b5:	48 89 05 44 3c 21 00 	mov    %rax,0x213c44(%rip)        # 21d100 <calendar>
    94bc:	48 8b 05 fd ba 00 00 	mov    0xbafd(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    94c3:	c7 05 27 3c 21 00 02 	movl   $0x2,0x213c27(%rip)        # 21d0f4 <nbuckets>
    94ca:	00 00 00 
    94cd:	48 89 05 ec 3b 21 00 	mov    %rax,0x213bec(%rip)        # 21d0c0 <cwidth>
    94d4:	48 8b 05 55 fb 00 00 	mov    0xfb55(%rip),%rax        # 19030 <__PRETTY_FUNCTION__.6556+0x3270>
    94db:	c7 05 0b 3c 21 00 00 	movl   $0x0,0x213c0b(%rip)        # 21d0f0 <qsize>
    94e2:	00 00 00 
    94e5:	48 89 05 dc 3b 21 00 	mov    %rax,0x213bdc(%rip)        # 21d0c8 <buckettop>
    94ec:	48 8b 05 dd ba 00 00 	mov    0xbadd(%rip),%rax        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    94f3:	48 c7 05 d2 3b 21 00 	movq   $0x0,0x213bd2(%rip)        # 21d0d0 <lastprio>
    94fa:	00 00 00 00 
    94fe:	48 89 05 d3 3b 21 00 	mov    %rax,0x213bd3(%rip)        # 21d0d8 <bot_threshold>
    9505:	48 8b 05 2c fb 00 00 	mov    0xfb2c(%rip),%rax        # 19038 <__PRETTY_FUNCTION__.6556+0x3278>
    950c:	c7 05 d6 3b 21 00 00 	movl   $0x0,0x213bd6(%rip)        # 21d0ec <lastbucket>
    9513:	00 00 00 
    9516:	48 89 05 c3 3b 21 00 	mov    %rax,0x213bc3(%rip)        # 21d0e0 <top_threshold>
    951d:	c6 05 c4 3b 21 00 01 	movb   $0x1,0x213bc4(%rip)        # 21d0e8 <resize_enabled>
    9524:	0f 29 05 f5 3b 21 00 	movaps %xmm0,0x213bf5(%rip)        # 21d120 <calq>
    952b:	c3                   	retq   
    952c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009530 <calqueue_put>:
    9530:	55                   	push   %rbp
    9531:	48 89 fd             	mov    %rdi,%rbp
    9534:	bf 18 00 00 00       	mov    $0x18,%edi
    9539:	53                   	push   %rbx
    953a:	48 83 ec 18          	sub    $0x18,%rsp
    953e:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    9543:	e8 c8 83 ff ff       	callq  1910 <malloc@plt>
    9548:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    954d:	f2 0f 10 15 6b 3b 21 	movsd  0x213b6b(%rip),%xmm2        # 21d0c0 <cwidth>
    9554:	00 
    9555:	48 89 68 08          	mov    %rbp,0x8(%rax)
    9559:	48 89 c3             	mov    %rax,%rbx
    955c:	66 0f 28 c1          	movapd %xmm1,%xmm0
    9560:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    9567:	00 
    9568:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    956c:	f2 0f 11 08          	movsd  %xmm1,(%rax)
    9570:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    9576:	f2 0f 11 14 24       	movsd  %xmm2,(%rsp)
    957b:	e8 70 81 ff ff       	callq  16f0 <round@plt>
    9580:	8b 3d 6e 3b 21 00    	mov    0x213b6e(%rip),%edi        # 21d0f4 <nbuckets>
    9586:	f2 0f 10 14 24       	movsd  (%rsp),%xmm2
    958b:	f2 0f 2c c8          	cvttsd2si %xmm0,%ecx
    958f:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    9595:	89 c8                	mov    %ecx,%eax
    9597:	99                   	cltd   
    9598:	f7 ff                	idiv   %edi
    959a:	48 8b 05 5f 3b 21 00 	mov    0x213b5f(%rip),%rax        # 21d100 <calendar>
    95a1:	48 63 f2             	movslq %edx,%rsi
    95a4:	48 8d 34 f0          	lea    (%rax,%rsi,8),%rsi
    95a8:	48 8b 06             	mov    (%rsi),%rax
    95ab:	48 85 c0             	test   %rax,%rax
    95ae:	74 0a                	je     95ba <calqueue_put+0x8a>
    95b0:	f2 0f 10 00          	movsd  (%rax),%xmm0
    95b4:	66 0f 2f c1          	comisd %xmm1,%xmm0
    95b8:	76 7c                	jbe    9636 <calqueue_put+0x106>
    95ba:	48 89 43 10          	mov    %rax,0x10(%rbx)
    95be:	48 89 1e             	mov    %rbx,(%rsi)
    95c1:	8b 05 29 3b 21 00    	mov    0x213b29(%rip),%eax        # 21d0f0 <qsize>
    95c7:	f2 0f 10 05 01 3b 21 	movsd  0x213b01(%rip),%xmm0        # 21d0d0 <lastprio>
    95ce:	00 
    95cf:	83 c0 01             	add    $0x1,%eax
    95d2:	66 0f 2f c1          	comisd %xmm1,%xmm0
    95d6:	89 05 14 3b 21 00    	mov    %eax,0x213b14(%rip)        # 21d0f0 <qsize>
    95dc:	76 31                	jbe    960f <calqueue_put+0xdf>
    95de:	83 c1 01             	add    $0x1,%ecx
    95e1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    95e5:	89 15 01 3b 21 00    	mov    %edx,0x213b01(%rip)        # 21d0ec <lastbucket>
    95eb:	f2 0f 2a c1          	cvtsi2sd %ecx,%xmm0
    95ef:	f2 0f 11 0d d9 3a 21 	movsd  %xmm1,0x213ad9(%rip)        # 21d0d0 <lastprio>
    95f6:	00 
    95f7:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    95fb:	f2 0f 59 15 95 bd 00 	mulsd  0xbd95(%rip),%xmm2        # 15398 <__PRETTY_FUNCTION__.6351+0x308>
    9602:	00 
    9603:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    9607:	f2 0f 11 05 b9 3a 21 	movsd  %xmm0,0x213ab9(%rip)        # 21d0c8 <buckettop>
    960e:	00 
    960f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9613:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    9617:	66 0f 2f 05 c1 3a 21 	comisd 0x213ac1(%rip),%xmm0        # 21d0e0 <top_threshold>
    961e:	00 
    961f:	76 08                	jbe    9629 <calqueue_put+0xf9>
    9621:	81 ff ff ff 00 00    	cmp    $0xffff,%edi
    9627:	7e 27                	jle    9650 <calqueue_put+0x120>
    9629:	48 83 c4 18          	add    $0x18,%rsp
    962d:	5b                   	pop    %rbx
    962e:	5d                   	pop    %rbp
    962f:	c3                   	retq   
    9630:	66 0f 2f 08          	comisd (%rax),%xmm1
    9634:	72 0c                	jb     9642 <calqueue_put+0x112>
    9636:	48 89 c6             	mov    %rax,%rsi
    9639:	48 8b 40 10          	mov    0x10(%rax),%rax
    963d:	48 85 c0             	test   %rax,%rax
    9640:	75 ee                	jne    9630 <calqueue_put+0x100>
    9642:	48 89 43 10          	mov    %rax,0x10(%rbx)
    9646:	48 89 5e 10          	mov    %rbx,0x10(%rsi)
    964a:	e9 72 ff ff ff       	jmpq   95c1 <calqueue_put+0x91>
    964f:	90                   	nop
    9650:	80 3d 91 3a 21 00 00 	cmpb   $0x0,0x213a91(%rip)        # 21d0e8 <resize_enabled>
    9657:	74 d0                	je     9629 <calqueue_put+0xf9>
    9659:	48 83 c4 18          	add    $0x18,%rsp
    965d:	01 ff                	add    %edi,%edi
    965f:	5b                   	pop    %rbx
    9660:	5d                   	pop    %rbp
    9661:	eb 0d                	jmp    9670 <resize.part.0>
    9663:	0f 1f 00             	nopl   (%rax)
    9666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    966d:	00 00 00 

0000000000009670 <resize.part.0>:
    9670:	41 56                	push   %r14
    9672:	b9 19 00 00 00       	mov    $0x19,%ecx
    9677:	41 55                	push   %r13
    9679:	41 54                	push   %r12
    967b:	41 89 fc             	mov    %edi,%r12d
    967e:	55                   	push   %rbp
    967f:	53                   	push   %rbx
    9680:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    9687:	f2 0f 10 3d 41 3a 21 	movsd  0x213a41(%rip),%xmm7        # 21d0d0 <lastprio>
    968e:	00 
    968f:	44 8b 2d 5a 3a 21 00 	mov    0x213a5a(%rip),%r13d        # 21d0f0 <qsize>
    9696:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    969d:	00 00 
    969f:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
    96a6:	00 
    96a7:	31 c0                	xor    %eax,%eax
    96a9:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
    96ae:	48 89 df             	mov    %rbx,%rdi
    96b1:	f2 0f 11 7c 24 10    	movsd  %xmm7,0x10(%rsp)
    96b7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    96ba:	41 83 fd 01          	cmp    $0x1,%r13d
    96be:	0f 8e 0f 03 00 00    	jle    99d3 <resize.part.0+0x363>
    96c4:	41 83 fd 05          	cmp    $0x5,%r13d
    96c8:	0f 8e e3 02 00 00    	jle    99b1 <resize.part.0+0x341>
    96ce:	66 0f ef c0          	pxor   %xmm0,%xmm0
    96d2:	ba 19 00 00 00       	mov    $0x19,%edx
    96d7:	c6 05 0a 3a 21 00 00 	movb   $0x0,0x213a0a(%rip)        # 21d0e8 <resize_enabled>
    96de:	f2 41 0f 2a c5       	cvtsi2sd %r13d,%xmm0
    96e3:	f2 0f 5e 05 55 f9 00 	divsd  0xf955(%rip),%xmm0        # 19040 <__PRETTY_FUNCTION__.6556+0x3280>
    96ea:	00 
    96eb:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
    96ef:	44 8d 68 05          	lea    0x5(%rax),%r13d
    96f3:	41 83 fd 19          	cmp    $0x19,%r13d
    96f7:	44 0f 4f ea          	cmovg  %edx,%r13d
    96fb:	83 f8 fc             	cmp    $0xfffffffc,%eax
    96fe:	0f 8c e9 02 00 00    	jl     99ed <resize.part.0+0x37d>
    9704:	66 0f ef d2          	pxor   %xmm2,%xmm2
    9708:	31 ed                	xor    %ebp,%ebp
    970a:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
    9710:	f2 0f 11 14 24       	movsd  %xmm2,(%rsp)
    9715:	0f 1f 00             	nopl   (%rax)
    9718:	e8 03 03 00 00       	callq  9a20 <calqueue_deq>
    971d:	48 89 04 eb          	mov    %rax,(%rbx,%rbp,8)
    9721:	48 85 ed             	test   %rbp,%rbp
    9724:	74 17                	je     973d <resize.part.0+0xcd>
    9726:	48 8b 54 eb f8       	mov    -0x8(%rbx,%rbp,8),%rdx
    972b:	f2 0f 10 00          	movsd  (%rax),%xmm0
    972f:	f2 0f 5c 02          	subsd  (%rdx),%xmm0
    9733:	f2 0f 58 04 24       	addsd  (%rsp),%xmm0
    9738:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    973d:	48 83 c5 01          	add    $0x1,%rbp
    9741:	41 39 ed             	cmp    %ebp,%r13d
    9744:	7f d2                	jg     9718 <resize.part.0+0xa8>
    9746:	41 8d 45 ff          	lea    -0x1(%r13),%eax
    974a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    974e:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    9753:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    9757:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    975c:	48 8b 78 08          	mov    0x8(%rax),%rdi
    9760:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    9764:	f2 0f 10 00          	movsd  (%rax),%xmm0
    9768:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    976d:	e8 be fd ff ff       	callq  9530 <calqueue_put>
    9772:	41 83 fd 01          	cmp    $0x1,%r13d
    9776:	0f 8e 85 02 00 00    	jle    9a01 <resize.part.0+0x391>
    977c:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    9781:	f2 0f 10 6c 24 18    	movsd  0x18(%rsp),%xmm5
    9787:	41 8d 45 fe          	lea    -0x2(%r13),%eax
    978b:	48 89 dd             	mov    %rbx,%rbp
    978e:	4c 8d 74 c4 28       	lea    0x28(%rsp,%rax,8),%r14
    9793:	45 31 ed             	xor    %r13d,%r13d
    9796:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
    979a:	f2 0f 11 2c 24       	movsd  %xmm5,(%rsp)
    979f:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    97a5:	0f 1f 00             	nopl   (%rax)
    97a8:	48 8b 45 08          	mov    0x8(%rbp),%rax
    97ac:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    97b0:	f2 0f 10 5c 24 08    	movsd  0x8(%rsp),%xmm3
    97b6:	f2 0f 10 00          	movsd  (%rax),%xmm0
    97ba:	66 0f 28 c8          	movapd %xmm0,%xmm1
    97be:	f2 0f 5c 0a          	subsd  (%rdx),%xmm1
    97c2:	66 0f 2f d9          	comisd %xmm1,%xmm3
    97c6:	76 0e                	jbe    97d6 <resize.part.0+0x166>
    97c8:	f2 0f 58 0c 24       	addsd  (%rsp),%xmm1
    97cd:	41 83 c5 01          	add    $0x1,%r13d
    97d1:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    97d6:	48 8b 78 08          	mov    0x8(%rax),%rdi
    97da:	48 83 c5 08          	add    $0x8,%rbp
    97de:	e8 4d fd ff ff       	callq  9530 <calqueue_put>
    97e3:	4c 39 f5             	cmp    %r14,%rbp
    97e6:	75 c0                	jne    97a8 <resize.part.0+0x138>
    97e8:	48 8d ac 24 e8 00 00 	lea    0xe8(%rsp),%rbp
    97ef:	00 
    97f0:	48 8b 3b             	mov    (%rbx),%rdi
    97f3:	48 85 ff             	test   %rdi,%rdi
    97f6:	74 05                	je     97fd <resize.part.0+0x18d>
    97f8:	e8 83 7e ff ff       	callq  1680 <free@plt>
    97fd:	48 83 c3 08          	add    $0x8,%rbx
    9801:	48 39 dd             	cmp    %rbx,%rbp
    9804:	75 ea                	jne    97f0 <resize.part.0+0x180>
    9806:	66 0f ef c0          	pxor   %xmm0,%xmm0
    980a:	f2 0f 10 3c 24       	movsd  (%rsp),%xmm7
    980f:	f2 0f 10 74 24 10    	movsd  0x10(%rsp),%xmm6
    9815:	c6 05 cc 38 21 00 01 	movb   $0x1,0x2138cc(%rip)        # 21d0e8 <resize_enabled>
    981c:	f2 41 0f 2a c5       	cvtsi2sd %r13d,%xmm0
    9821:	f2 0f 10 15 6f bb 00 	movsd  0xbb6f(%rip),%xmm2        # 15398 <__PRETTY_FUNCTION__.6351+0x308>
    9828:	00 
    9829:	f2 0f 11 35 9f 38 21 	movsd  %xmm6,0x21389f(%rip)        # 21d0d0 <lastprio>
    9830:	00 
    9831:	f2 0f 5e f8          	divsd  %xmm0,%xmm7
    9835:	f2 0f 10 05 0b f8 00 	movsd  0xf80b(%rip),%xmm0        # 19048 <__PRETTY_FUNCTION__.6556+0x3288>
    983c:	00 
    983d:	f2 0f 59 c7          	mulsd  %xmm7,%xmm0
    9841:	f2 0f 5e f0          	divsd  %xmm0,%xmm6
    9845:	66 0f 28 f8          	movapd %xmm0,%xmm7
    9849:	f2 0f 59 fa          	mulsd  %xmm2,%xmm7
    984d:	f2 0f 11 3c 24       	movsd  %xmm7,(%rsp)
    9852:	f2 0f 11 74 24 10    	movsd  %xmm6,0x10(%rsp)
    9858:	8b 05 9a 38 21 00    	mov    0x21389a(%rip),%eax        # 21d0f8 <firstsub>
    985e:	4c 8b 2d 9b 38 21 00 	mov    0x21389b(%rip),%r13        # 21d100 <calendar>
    9865:	8b 1d 89 38 21 00    	mov    0x213889(%rip),%ebx        # 21d0f4 <nbuckets>
    986b:	85 c0                	test   %eax,%eax
    986d:	0f 85 4a 01 00 00    	jne    99bd <resize.part.0+0x34d>
    9873:	b8 00 00 02 00       	mov    $0x20000,%eax
    9878:	48 8d 15 a1 38 21 00 	lea    0x2138a1(%rip),%rdx        # 21d120 <calq>
    987f:	44 29 e0             	sub    %r12d,%eax
    9882:	89 05 70 38 21 00    	mov    %eax,0x213870(%rip)        # 21d0f8 <firstsub>
    9888:	48 98                	cltq   
    988a:	48 8d 3c c2          	lea    (%rdx,%rax,8),%rdi
    988e:	48 89 3d 6b 38 21 00 	mov    %rdi,0x21386b(%rip)        # 21d100 <calendar>
    9895:	44 89 25 58 38 21 00 	mov    %r12d,0x213858(%rip)        # 21d0f4 <nbuckets>
    989c:	c7 05 4a 38 21 00 00 	movl   $0x0,0x21384a(%rip)        # 21d0f0 <qsize>
    98a3:	00 00 00 
    98a6:	f2 0f 11 05 12 38 21 	movsd  %xmm0,0x213812(%rip)        # 21d0c0 <cwidth>
    98ad:	00 
    98ae:	45 85 e4             	test   %r12d,%r12d
    98b1:	7e 2c                	jle    98df <resize.part.0+0x26f>
    98b3:	41 8d 44 24 ff       	lea    -0x1(%r12),%eax
    98b8:	31 f6                	xor    %esi,%esi
    98ba:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
    98c0:	48 8d 14 c5 08 00 00 	lea    0x8(,%rax,8),%rdx
    98c7:	00 
    98c8:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    98ce:	e8 7d 7f ff ff       	callq  1850 <memset@plt>
    98d3:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    98d9:	f2 0f 10 54 24 18    	movsd  0x18(%rsp),%xmm2
    98df:	f2 48 0f 2c 4c 24 10 	cvttsd2si 0x10(%rsp),%rcx
    98e6:	66 0f ef c9          	pxor   %xmm1,%xmm1
    98ea:	49 63 f4             	movslq %r12d,%rsi
    98ed:	48 89 c8             	mov    %rcx,%rax
    98f0:	48 83 c1 01          	add    $0x1,%rcx
    98f4:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
    98f9:	48 99                	cqto   
    98fb:	48 f7 fe             	idiv   %rsi
    98fe:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    9902:	f2 0f 58 04 24       	addsd  (%rsp),%xmm0
    9907:	f2 0f 11 05 b9 37 21 	movsd  %xmm0,0x2137b9(%rip)        # 21d0c8 <buckettop>
    990e:	00 
    990f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9913:	f2 41 0f 2a c4       	cvtsi2sd %r12d,%xmm0
    9918:	45 01 e4             	add    %r12d,%r12d
    991b:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    991f:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
    9923:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9927:	89 15 bf 37 21 00    	mov    %edx,0x2137bf(%rip)        # 21d0ec <lastbucket>
    992d:	83 e8 02             	sub    $0x2,%eax
    9930:	83 eb 01             	sub    $0x1,%ebx
    9933:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    9937:	48 63 eb             	movslq %ebx,%rbp
    993a:	f2 0f 11 05 96 37 21 	movsd  %xmm0,0x213796(%rip)        # 21d0d8 <bot_threshold>
    9941:	00 
    9942:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9946:	f2 41 0f 2a c4       	cvtsi2sd %r12d,%xmm0
    994b:	f2 0f 11 05 8d 37 21 	movsd  %xmm0,0x21378d(%rip)        # 21d0e0 <top_threshold>
    9952:	00 
    9953:	78 39                	js     998e <resize.part.0+0x31e>
    9955:	0f 1f 00             	nopl   (%rax)
    9958:	49 8b 5c ed 00       	mov    0x0(%r13,%rbp,8),%rbx
    995d:	48 85 db             	test   %rbx,%rbx
    9960:	74 24                	je     9986 <resize.part.0+0x316>
    9962:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9968:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    996c:	f2 0f 10 03          	movsd  (%rbx),%xmm0
    9970:	e8 bb fb ff ff       	callq  9530 <calqueue_put>
    9975:	48 89 df             	mov    %rbx,%rdi
    9978:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    997c:	e8 ff 7c ff ff       	callq  1680 <free@plt>
    9981:	48 85 db             	test   %rbx,%rbx
    9984:	75 e2                	jne    9968 <resize.part.0+0x2f8>
    9986:	48 83 ed 01          	sub    $0x1,%rbp
    998a:	85 ed                	test   %ebp,%ebp
    998c:	79 ca                	jns    9958 <resize.part.0+0x2e8>
    998e:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
    9995:	00 
    9996:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    999d:	00 00 
    999f:	75 73                	jne    9a14 <resize.part.0+0x3a4>
    99a1:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
    99a8:	5b                   	pop    %rbx
    99a9:	5d                   	pop    %rbp
    99aa:	41 5c                	pop    %r12
    99ac:	41 5d                	pop    %r13
    99ae:	41 5e                	pop    %r14
    99b0:	c3                   	retq   
    99b1:	c6 05 30 37 21 00 00 	movb   $0x0,0x213730(%rip)        # 21d0e8 <resize_enabled>
    99b8:	e9 47 fd ff ff       	jmpq   9704 <resize.part.0+0x94>
    99bd:	c7 05 31 37 21 00 00 	movl   $0x0,0x213731(%rip)        # 21d0f8 <firstsub>
    99c4:	00 00 00 
    99c7:	48 8d 3d 52 37 21 00 	lea    0x213752(%rip),%rdi        # 21d120 <calq>
    99ce:	e9 bb fe ff ff       	jmpq   988e <resize.part.0+0x21e>
    99d3:	f2 0f 10 15 bd b9 00 	movsd  0xb9bd(%rip),%xmm2        # 15398 <__PRETTY_FUNCTION__.6351+0x308>
    99da:	00 
    99db:	f2 0f 10 05 dd b5 00 	movsd  0xb5dd(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    99e2:	00 
    99e3:	f2 0f 11 14 24       	movsd  %xmm2,(%rsp)
    99e8:	e9 6b fe ff ff       	jmpq   9858 <resize.part.0+0x1e8>
    99ed:	66 0f ef f6          	pxor   %xmm6,%xmm6
    99f1:	f2 0f 11 74 24 18    	movsd  %xmm6,0x18(%rsp)
    99f7:	f2 0f 11 34 24       	movsd  %xmm6,(%rsp)
    99fc:	e9 45 fd ff ff       	jmpq   9746 <resize.part.0+0xd6>
    9a01:	f2 0f 10 6c 24 18    	movsd  0x18(%rsp),%xmm5
    9a07:	45 31 ed             	xor    %r13d,%r13d
    9a0a:	f2 0f 11 2c 24       	movsd  %xmm5,(%rsp)
    9a0f:	e9 d4 fd ff ff       	jmpq   97e8 <resize.part.0+0x178>
    9a14:	e8 87 7d ff ff       	callq  17a0 <__stack_chk_fail@plt>
    9a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009a20 <calqueue_deq>:
    9a20:	44 8b 0d c9 36 21 00 	mov    0x2136c9(%rip),%r9d        # 21d0f0 <qsize>
    9a27:	41 54                	push   %r12
    9a29:	45 31 e4             	xor    %r12d,%r12d
    9a2c:	45 85 c9             	test   %r9d,%r9d
    9a2f:	0f 84 d5 00 00 00    	je     9b0a <calqueue_deq+0xea>
    9a35:	8b 3d b1 36 21 00    	mov    0x2136b1(%rip),%edi        # 21d0ec <lastbucket>
    9a3b:	48 8b 0d be 36 21 00 	mov    0x2136be(%rip),%rcx        # 21d100 <calendar>
    9a42:	45 31 c0             	xor    %r8d,%r8d
    9a45:	f2 0f 10 05 7b 36 21 	movsd  0x21367b(%rip),%xmm0        # 21d0c8 <buckettop>
    9a4c:	00 
    9a4d:	8b 35 a1 36 21 00    	mov    0x2136a1(%rip),%esi        # 21d0f4 <nbuckets>
    9a53:	f2 0f 10 15 65 36 21 	movsd  0x213665(%rip),%xmm2        # 21d0c0 <cwidth>
    9a5a:	00 
    9a5b:	89 f8                	mov    %edi,%eax
    9a5d:	eb 0f                	jmp    9a6e <calqueue_deq+0x4e>
    9a5f:	90                   	nop
    9a60:	39 c7                	cmp    %eax,%edi
    9a62:	0f 84 a8 00 00 00    	je     9b10 <calqueue_deq+0xf0>
    9a68:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    9a6e:	48 63 d0             	movslq %eax,%rdx
    9a71:	48 8d 14 d1          	lea    (%rcx,%rdx,8),%rdx
    9a75:	4c 8b 22             	mov    (%rdx),%r12
    9a78:	4d 85 e4             	test   %r12,%r12
    9a7b:	74 10                	je     9a8d <calqueue_deq+0x6d>
    9a7d:	f2 41 0f 10 0c 24    	movsd  (%r12),%xmm1
    9a83:	66 0f 2f c1          	comisd %xmm1,%xmm0
    9a87:	0f 87 eb 00 00 00    	ja     9b78 <calqueue_deq+0x158>
    9a8d:	83 c0 01             	add    $0x1,%eax
    9a90:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    9a94:	39 c6                	cmp    %eax,%esi
    9a96:	75 c8                	jne    9a60 <calqueue_deq+0x40>
    9a98:	85 ff                	test   %edi,%edi
    9a9a:	74 74                	je     9b10 <calqueue_deq+0xf0>
    9a9c:	31 c0                	xor    %eax,%eax
    9a9e:	eb c8                	jmp    9a68 <calqueue_deq+0x48>
    9aa0:	48 63 d0             	movslq %eax,%rdx
    9aa3:	48 8d 14 d1          	lea    (%rcx,%rdx,8),%rdx
    9aa7:	4c 8b 22             	mov    (%rdx),%r12
    9aaa:	f2 41 0f 10 0c 24    	movsd  (%r12),%xmm1
    9ab0:	41 83 e9 01          	sub    $0x1,%r9d
    9ab4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9ab8:	f2 0f 11 0d 10 36 21 	movsd  %xmm1,0x213610(%rip)        # 21d0d0 <lastprio>
    9abf:	00 
    9ac0:	f2 0f 10 0d 10 36 21 	movsd  0x213610(%rip),%xmm1        # 21d0d8 <bot_threshold>
    9ac7:	00 
    9ac8:	f2 41 0f 2a c1       	cvtsi2sd %r9d,%xmm0
    9acd:	89 05 19 36 21 00    	mov    %eax,0x213619(%rip)        # 21d0ec <lastbucket>
    9ad3:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    9ad8:	44 89 0d 11 36 21 00 	mov    %r9d,0x213611(%rip)        # 21d0f0 <qsize>
    9adf:	48 89 02             	mov    %rax,(%rdx)
    9ae2:	66 0f 2f c8          	comisd %xmm0,%xmm1
    9ae6:	76 22                	jbe    9b0a <calqueue_deq+0xea>
    9ae8:	80 3d f9 35 21 00 00 	cmpb   $0x0,0x2135f9(%rip)        # 21d0e8 <resize_enabled>
    9aef:	74 19                	je     9b0a <calqueue_deq+0xea>
    9af1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9af5:	f2 0f 2a c6          	cvtsi2sd %esi,%xmm0
    9af9:	f2 0f 59 05 97 b8 00 	mulsd  0xb897(%rip),%xmm0        # 15398 <__PRETTY_FUNCTION__.6351+0x308>
    9b00:	00 
    9b01:	f2 0f 2c f8          	cvttsd2si %xmm0,%edi
    9b05:	e8 66 fb ff ff       	callq  9670 <resize.part.0>
    9b0a:	4c 89 e0             	mov    %r12,%rax
    9b0d:	41 5c                	pop    %r12
    9b0f:	c3                   	retq   
    9b10:	f2 0f 11 05 b0 35 21 	movsd  %xmm0,0x2135b0(%rip)        # 21d0c8 <buckettop>
    9b17:	00 
    9b18:	85 f6                	test   %esi,%esi
    9b1a:	7e 72                	jle    9b8e <calqueue_deq+0x16e>
    9b1c:	f2 0f 10 0d 84 b8 00 	movsd  0xb884(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    9b23:	00 
    9b24:	44 8d 46 ff          	lea    -0x1(%rsi),%r8d
    9b28:	31 d2                	xor    %edx,%edx
    9b2a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9b2f:	eb 26                	jmp    9b57 <calqueue_deq+0x137>
    9b31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b38:	66 0f 2f c8          	comisd %xmm0,%xmm1
    9b3c:	f2 0f 5d c1          	minsd  %xmm1,%xmm0
    9b40:	0f 47 c2             	cmova  %edx,%eax
    9b43:	66 0f 28 c8          	movapd %xmm0,%xmm1
    9b47:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
    9b4b:	4c 39 c2             	cmp    %r8,%rdx
    9b4e:	0f 84 4c ff ff ff    	je     9aa0 <calqueue_deq+0x80>
    9b54:	48 89 fa             	mov    %rdi,%rdx
    9b57:	48 8b 3c d1          	mov    (%rcx,%rdx,8),%rdi
    9b5b:	48 85 ff             	test   %rdi,%rdi
    9b5e:	74 e7                	je     9b47 <calqueue_deq+0x127>
    9b60:	f2 0f 10 07          	movsd  (%rdi),%xmm0
    9b64:	83 f8 ff             	cmp    $0xffffffff,%eax
    9b67:	75 cf                	jne    9b38 <calqueue_deq+0x118>
    9b69:	66 0f 28 c8          	movapd %xmm0,%xmm1
    9b6d:	89 d0                	mov    %edx,%eax
    9b6f:	eb d6                	jmp    9b47 <calqueue_deq+0x127>
    9b71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b78:	45 84 c0             	test   %r8b,%r8b
    9b7b:	0f 84 2f ff ff ff    	je     9ab0 <calqueue_deq+0x90>
    9b81:	f2 0f 11 05 3f 35 21 	movsd  %xmm0,0x21353f(%rip)        # 21d0c8 <buckettop>
    9b88:	00 
    9b89:	e9 22 ff ff ff       	jmpq   9ab0 <calqueue_deq+0x90>
    9b8e:	4c 8b 61 f8          	mov    -0x8(%rcx),%r12
    9b92:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    9b96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9b9b:	f2 41 0f 10 0c 24    	movsd  (%r12),%xmm1
    9ba1:	e9 0a ff ff ff       	jmpq   9ab0 <calqueue_deq+0x90>
    9ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9bad:	00 00 00 

0000000000009bb0 <calqueue_get>:
    9bb0:	41 54                	push   %r12
    9bb2:	e8 69 fe ff ff       	callq  9a20 <calqueue_deq>
    9bb7:	48 85 c0             	test   %rax,%rax
    9bba:	74 14                	je     9bd0 <calqueue_get+0x20>
    9bbc:	4c 8b 60 08          	mov    0x8(%rax),%r12
    9bc0:	48 89 c7             	mov    %rax,%rdi
    9bc3:	e8 b8 7a ff ff       	callq  1680 <free@plt>
    9bc8:	4c 89 e0             	mov    %r12,%rax
    9bcb:	41 5c                	pop    %r12
    9bcd:	c3                   	retq   
    9bce:	66 90                	xchg   %ax,%ax
    9bd0:	45 31 e4             	xor    %r12d,%r12d
    9bd3:	4c 89 e0             	mov    %r12,%rax
    9bd6:	41 5c                	pop    %r12
    9bd8:	c3                   	retq   
    9bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009be0 <error>:
    9be0:	41 54                	push   %r12
    9be2:	48 81 ec e0 04 00 00 	sub    $0x4e0,%rsp
    9be9:	48 89 b4 24 38 04 00 	mov    %rsi,0x438(%rsp)
    9bf0:	00 
    9bf1:	48 89 94 24 40 04 00 	mov    %rdx,0x440(%rsp)
    9bf8:	00 
    9bf9:	48 89 8c 24 48 04 00 	mov    %rcx,0x448(%rsp)
    9c00:	00 
    9c01:	4c 89 84 24 50 04 00 	mov    %r8,0x450(%rsp)
    9c08:	00 
    9c09:	4c 89 8c 24 58 04 00 	mov    %r9,0x458(%rsp)
    9c10:	00 
    9c11:	84 c0                	test   %al,%al
    9c13:	74 40                	je     9c55 <error+0x75>
    9c15:	0f 29 84 24 60 04 00 	movaps %xmm0,0x460(%rsp)
    9c1c:	00 
    9c1d:	0f 29 8c 24 70 04 00 	movaps %xmm1,0x470(%rsp)
    9c24:	00 
    9c25:	0f 29 94 24 80 04 00 	movaps %xmm2,0x480(%rsp)
    9c2c:	00 
    9c2d:	0f 29 9c 24 90 04 00 	movaps %xmm3,0x490(%rsp)
    9c34:	00 
    9c35:	0f 29 a4 24 a0 04 00 	movaps %xmm4,0x4a0(%rsp)
    9c3c:	00 
    9c3d:	0f 29 ac 24 b0 04 00 	movaps %xmm5,0x4b0(%rsp)
    9c44:	00 
    9c45:	0f 29 b4 24 c0 04 00 	movaps %xmm6,0x4c0(%rsp)
    9c4c:	00 
    9c4d:	0f 29 bc 24 d0 04 00 	movaps %xmm7,0x4d0(%rsp)
    9c54:	00 
    9c55:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9c5c:	00 00 
    9c5e:	48 89 84 24 28 04 00 	mov    %rax,0x428(%rsp)
    9c65:	00 
    9c66:	31 c0                	xor    %eax,%eax
    9c68:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
    9c6d:	49 89 f8             	mov    %rdi,%r8
    9c70:	4c 8d 4c 24 08       	lea    0x8(%rsp),%r9
    9c75:	48 8d 84 24 f0 04 00 	lea    0x4f0(%rsp),%rax
    9c7c:	00 
    9c7d:	b9 00 04 00 00       	mov    $0x400,%ecx
    9c82:	ba 01 00 00 00       	mov    $0x1,%edx
    9c87:	4c 89 e7             	mov    %r12,%rdi
    9c8a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9c8f:	be 00 04 00 00       	mov    $0x400,%esi
    9c94:	48 8d 84 24 30 04 00 	lea    0x430(%rsp),%rax
    9c9b:	00 
    9c9c:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
    9ca3:	00 
    9ca4:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
    9cab:	00 
    9cac:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9cb1:	e8 7a 7c ff ff       	callq  1930 <__vsnprintf_chk@plt>
    9cb6:	bf 01 00 00 00       	mov    $0x1,%edi
    9cbb:	4c 89 e2             	mov    %r12,%rdx
    9cbe:	31 c0                	xor    %eax,%eax
    9cc0:	48 8d 35 3e f2 00 00 	lea    0xf23e(%rip),%rsi        # 18f05 <__PRETTY_FUNCTION__.6556+0x3145>
    9cc7:	e8 a4 7c ff ff       	callq  1970 <__printf_chk@plt>
    9ccc:	bf 01 00 00 00       	mov    $0x1,%edi
    9cd1:	e8 6a 7d ff ff       	callq  1a40 <exit@plt>
    9cd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9cdd:	00 00 00 

0000000000009ce0 <search>:
    9ce0:	41 57                	push   %r15
    9ce2:	41 89 f7             	mov    %esi,%r15d
    9ce5:	41 56                	push   %r14
    9ce7:	49 89 fe             	mov    %rdi,%r14
    9cea:	41 55                	push   %r13
    9cec:	41 54                	push   %r12
    9cee:	49 89 d4             	mov    %rdx,%r12
    9cf1:	55                   	push   %rbp
    9cf2:	48 89 cd             	mov    %rcx,%rbp
    9cf5:	53                   	push   %rbx
    9cf6:	44 89 c3             	mov    %r8d,%ebx
    9cf9:	83 e3 01             	and    $0x1,%ebx
    9cfc:	48 83 ec 18          	sub    $0x18,%rsp
    9d00:	4c 8b 2d 61 f5 33 00 	mov    0x33f561(%rip),%r13        # 349268 <g_tail>
    9d07:	49 8b 06             	mov    (%r14),%rax
    9d0a:	49 8b 0e             	mov    (%r14),%rcx
    9d0d:	48 85 c9             	test   %rcx,%rcx
    9d10:	0f 84 8d 01 00 00    	je     9ea3 <search+0x1c3>
    9d16:	45 85 ff             	test   %r15d,%r15d
    9d19:	0f 84 01 01 00 00    	je     9e20 <search+0x140>
    9d1f:	48 89 ca             	mov    %rcx,%rdx
    9d22:	4c 89 f7             	mov    %r14,%rdi
    9d25:	4d 89 f0             	mov    %r14,%r8
    9d28:	45 31 c9             	xor    %r9d,%r9d
    9d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9d30:	48 89 d0             	mov    %rdx,%rax
    9d33:	83 e0 03             	and    $0x3,%eax
    9d36:	48 83 f8 01          	cmp    $0x1,%rax
    9d3a:	74 12                	je     9d4e <search+0x6e>
    9d3c:	48 83 f8 02          	cmp    $0x2,%rax
    9d40:	0f 85 ca 00 00 00    	jne    9e10 <search+0x130>
    9d46:	84 db                	test   %bl,%bl
    9d48:	0f 84 c2 00 00 00    	je     9e10 <search+0x130>
    9d4e:	41 83 c1 01          	add    $0x1,%r9d
    9d52:	48 89 d0             	mov    %rdx,%rax
    9d55:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    9d59:	48 8b 10             	mov    (%rax),%rdx
    9d5c:	48 89 c7             	mov    %rax,%rdi
    9d5f:	49 39 c5             	cmp    %rax,%r13
    9d62:	74 34                	je     9d98 <search+0xb8>
    9d64:	48 89 d6             	mov    %rdx,%rsi
    9d67:	83 e6 03             	and    $0x3,%esi
    9d6a:	48 83 fe 01          	cmp    $0x1,%rsi
    9d6e:	74 c0                	je     9d30 <search+0x50>
    9d70:	48 83 fe 02          	cmp    $0x2,%rsi
    9d74:	75 04                	jne    9d7a <search+0x9a>
    9d76:	84 db                	test   %bl,%bl
    9d78:	75 b6                	jne    9d30 <search+0x50>
    9d7a:	f2 0f 10 48 18       	movsd  0x18(%rax),%xmm1
    9d7f:	66 0f 2f c1          	comisd %xmm1,%xmm0
    9d83:	77 ab                	ja     9d30 <search+0x50>
    9d85:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    9d89:	7a 0d                	jp     9d98 <search+0xb8>
    9d8b:	75 0b                	jne    9d98 <search+0xb8>
    9d8d:	44 39 78 28          	cmp    %r15d,0x28(%rax)
    9d91:	76 9d                	jbe    9d30 <search+0x50>
    9d93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9d98:	48 89 ca             	mov    %rcx,%rdx
    9d9b:	83 e2 03             	and    $0x3,%edx
    9d9e:	48 09 d0             	or     %rdx,%rax
    9da1:	49 89 c2             	mov    %rax,%r10
    9da4:	48 83 fa 01          	cmp    $0x1,%rdx
    9da8:	74 4f                	je     9df9 <search+0x119>
    9daa:	48 83 fa 02          	cmp    $0x2,%rdx
    9dae:	0f 94 c0             	sete   %al
    9db1:	84 d8                	test   %bl,%al
    9db3:	75 44                	jne    9df9 <search+0x119>
    9db5:	4c 39 d1             	cmp    %r10,%rcx
    9db8:	74 3f                	je     9df9 <search+0x119>
    9dba:	48 89 c8             	mov    %rcx,%rax
    9dbd:	f0 4d 0f b1 10       	lock cmpxchg %r10,(%r8)
    9dc2:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    9dc7:	4c 89 04 24          	mov    %r8,(%rsp)
    9dcb:	0f 85 36 ff ff ff    	jne    9d07 <search+0x27>
    9dd1:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    9dd8:	00 00 
    9dda:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
    9dde:	44 89 ca             	mov    %r9d,%edx
    9de1:	48 89 ce             	mov    %rcx,%rsi
    9de4:	48 8d b8 08 49 ff ff 	lea    -0xb6f8(%rax),%rdi
    9deb:	e8 d0 a6 00 00       	callq  144c0 <mm_node_trash>
    9df0:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    9df5:	4c 8b 04 24          	mov    (%rsp),%r8
    9df9:	4d 89 04 24          	mov    %r8,(%r12)
    9dfd:	4c 89 55 00          	mov    %r10,0x0(%rbp)
    9e01:	48 83 c4 18          	add    $0x18,%rsp
    9e05:	5b                   	pop    %rbx
    9e06:	5d                   	pop    %rbp
    9e07:	41 5c                	pop    %r12
    9e09:	41 5d                	pop    %r13
    9e0b:	41 5e                	pop    %r14
    9e0d:	41 5f                	pop    %r15
    9e0f:	c3                   	retq   
    9e10:	48 89 d1             	mov    %rdx,%rcx
    9e13:	49 89 f8             	mov    %rdi,%r8
    9e16:	45 31 c9             	xor    %r9d,%r9d
    9e19:	e9 34 ff ff ff       	jmpq   9d52 <search+0x72>
    9e1e:	66 90                	xchg   %ax,%ax
    9e20:	45 31 c9             	xor    %r9d,%r9d
    9e23:	48 89 ca             	mov    %rcx,%rdx
    9e26:	4c 89 f7             	mov    %r14,%rdi
    9e29:	4d 89 f0             	mov    %r14,%r8
    9e2c:	0f 1f 40 00          	nopl   0x0(%rax)
    9e30:	48 89 d0             	mov    %rdx,%rax
    9e33:	83 e0 03             	and    $0x3,%eax
    9e36:	48 83 f8 01          	cmp    $0x1,%rax
    9e3a:	74 0a                	je     9e46 <search+0x166>
    9e3c:	48 83 f8 02          	cmp    $0x2,%rax
    9e40:	75 56                	jne    9e98 <search+0x1b8>
    9e42:	84 db                	test   %bl,%bl
    9e44:	74 52                	je     9e98 <search+0x1b8>
    9e46:	41 83 c1 01          	add    $0x1,%r9d
    9e4a:	48 89 d0             	mov    %rdx,%rax
    9e4d:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    9e51:	48 8b 10             	mov    (%rax),%rdx
    9e54:	48 89 c7             	mov    %rax,%rdi
    9e57:	49 39 c5             	cmp    %rax,%r13
    9e5a:	0f 84 38 ff ff ff    	je     9d98 <search+0xb8>
    9e60:	48 89 d6             	mov    %rdx,%rsi
    9e63:	83 e6 03             	and    $0x3,%esi
    9e66:	48 83 fe 01          	cmp    $0x1,%rsi
    9e6a:	74 c4                	je     9e30 <search+0x150>
    9e6c:	48 83 fe 02          	cmp    $0x2,%rsi
    9e70:	75 04                	jne    9e76 <search+0x196>
    9e72:	84 db                	test   %bl,%bl
    9e74:	75 ba                	jne    9e30 <search+0x150>
    9e76:	f2 0f 10 48 18       	movsd  0x18(%rax),%xmm1
    9e7b:	66 0f 2f c1          	comisd %xmm1,%xmm0
    9e7f:	77 af                	ja     9e30 <search+0x150>
    9e81:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    9e85:	0f 8a 0d ff ff ff    	jp     9d98 <search+0xb8>
    9e8b:	74 a3                	je     9e30 <search+0x150>
    9e8d:	e9 06 ff ff ff       	jmpq   9d98 <search+0xb8>
    9e92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9e98:	45 31 c9             	xor    %r9d,%r9d
    9e9b:	48 89 d1             	mov    %rdx,%rcx
    9e9e:	49 89 f8             	mov    %rdi,%r8
    9ea1:	eb a7                	jmp    9e4a <search+0x16a>
    9ea3:	48 8d 15 ec ec 00 00 	lea    0xecec(%rip),%rdx        # 18b96 <__PRETTY_FUNCTION__.6556+0x2dd6>
    9eaa:	48 8d 35 77 ec 00 00 	lea    0xec77(%rip),%rsi        # 18b28 <__PRETTY_FUNCTION__.6556+0x2d68>
    9eb1:	bf 01 00 00 00       	mov    $0x1,%edi
    9eb6:	31 c0                	xor    %eax,%eax
    9eb8:	48 89 0c 24          	mov    %rcx,(%rsp)
    9ebc:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    9ec2:	e8 a9 7a ff ff       	callq  1970 <__printf_chk@plt>
    9ec7:	cc                   	int3   
    9ec8:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    9ece:	48 8b 0c 24          	mov    (%rsp),%rcx
    9ed2:	e9 3f fe ff ff       	jmpq   9d16 <search+0x36>
    9ed7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9ede:	00 00 

0000000000009ee0 <search.constprop.0>:
    9ee0:	41 57                	push   %r15
    9ee2:	48 89 f9             	mov    %rdi,%rcx
    9ee5:	41 56                	push   %r14
    9ee7:	41 55                	push   %r13
    9ee9:	41 54                	push   %r12
    9eeb:	55                   	push   %rbp
    9eec:	48 89 f5             	mov    %rsi,%rbp
    9eef:	53                   	push   %rbx
    9ef0:	48 89 d3             	mov    %rdx,%rbx
    9ef3:	48 83 ec 18          	sub    $0x18,%rsp
    9ef7:	4c 8b 3d 6a f3 33 00 	mov    0x33f36a(%rip),%r15        # 349268 <g_tail>
    9efe:	f2 0f 10 0d ca b0 00 	movsd  0xb0ca(%rip),%xmm1        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    9f05:	00 
    9f06:	48 8b 01             	mov    (%rcx),%rax
    9f09:	4c 8b 29             	mov    (%rcx),%r13
    9f0c:	4d 85 ed             	test   %r13,%r13
    9f0f:	0f 84 d2 00 00 00    	je     9fe7 <search.constprop.0+0x107>
    9f15:	4c 89 ea             	mov    %r13,%rdx
    9f18:	48 89 cf             	mov    %rcx,%rdi
    9f1b:	49 89 ce             	mov    %rcx,%r14
    9f1e:	45 31 c0             	xor    %r8d,%r8d
    9f21:	45 31 c9             	xor    %r9d,%r9d
    9f24:	0f 1f 40 00          	nopl   0x0(%rax)
    9f28:	48 89 d0             	mov    %rdx,%rax
    9f2b:	41 83 c0 01          	add    $0x1,%r8d
    9f2f:	83 e0 03             	and    $0x3,%eax
    9f32:	48 83 e8 01          	sub    $0x1,%rax
    9f36:	48 83 f8 02          	cmp    $0x2,%rax
    9f3a:	48 89 d0             	mov    %rdx,%rax
    9f3d:	4c 0f 43 ea          	cmovae %rdx,%r13
    9f41:	4c 0f 43 f7          	cmovae %rdi,%r14
    9f45:	45 0f 43 c1          	cmovae %r9d,%r8d
    9f49:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    9f4d:	f2 0f 10 40 18       	movsd  0x18(%rax),%xmm0
    9f52:	48 8b 10             	mov    (%rax),%rdx
    9f55:	48 89 c7             	mov    %rax,%rdi
    9f58:	49 39 c7             	cmp    %rax,%r15
    9f5b:	74 23                	je     9f80 <search.constprop.0+0xa0>
    9f5d:	48 89 d6             	mov    %rdx,%rsi
    9f60:	83 e6 03             	and    $0x3,%esi
    9f63:	48 83 ee 01          	sub    $0x1,%rsi
    9f67:	48 83 fe 01          	cmp    $0x1,%rsi
    9f6b:	76 bb                	jbe    9f28 <search.constprop.0+0x48>
    9f6d:	66 0f 2f c8          	comisd %xmm0,%xmm1
    9f71:	77 b5                	ja     9f28 <search.constprop.0+0x48>
    9f73:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    9f77:	7a 07                	jp     9f80 <search.constprop.0+0xa0>
    9f79:	74 ad                	je     9f28 <search.constprop.0+0x48>
    9f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9f80:	4c 89 ea             	mov    %r13,%rdx
    9f83:	83 e2 03             	and    $0x3,%edx
    9f86:	48 09 d0             	or     %rdx,%rax
    9f89:	48 83 ea 01          	sub    $0x1,%rdx
    9f8d:	49 89 c4             	mov    %rax,%r12
    9f90:	48 83 fa 01          	cmp    $0x1,%rdx
    9f94:	76 05                	jbe    9f9b <search.constprop.0+0xbb>
    9f96:	49 39 c5             	cmp    %rax,%r13
    9f99:	75 1d                	jne    9fb8 <search.constprop.0+0xd8>
    9f9b:	4c 89 75 00          	mov    %r14,0x0(%rbp)
    9f9f:	4c 89 23             	mov    %r12,(%rbx)
    9fa2:	48 83 c4 18          	add    $0x18,%rsp
    9fa6:	5b                   	pop    %rbx
    9fa7:	5d                   	pop    %rbp
    9fa8:	41 5c                	pop    %r12
    9faa:	41 5d                	pop    %r13
    9fac:	41 5e                	pop    %r14
    9fae:	41 5f                	pop    %r15
    9fb0:	c3                   	retq   
    9fb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9fb8:	4c 89 e8             	mov    %r13,%rax
    9fbb:	f0 4d 0f b1 26       	lock cmpxchg %r12,(%r14)
    9fc0:	0f 85 40 ff ff ff    	jne    9f06 <search.constprop.0+0x26>
    9fc6:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    9fcd:	00 00 
    9fcf:	4c 89 ee             	mov    %r13,%rsi
    9fd2:	44 89 c2             	mov    %r8d,%edx
    9fd5:	48 83 e6 fc          	and    $0xfffffffffffffffc,%rsi
    9fd9:	48 8d b8 08 49 ff ff 	lea    -0xb6f8(%rax),%rdi
    9fe0:	e8 db a4 00 00       	callq  144c0 <mm_node_trash>
    9fe5:	eb b4                	jmp    9f9b <search.constprop.0+0xbb>
    9fe7:	48 8d 15 a8 eb 00 00 	lea    0xeba8(%rip),%rdx        # 18b96 <__PRETTY_FUNCTION__.6556+0x2dd6>
    9fee:	48 8d 35 33 eb 00 00 	lea    0xeb33(%rip),%rsi        # 18b28 <__PRETTY_FUNCTION__.6556+0x2d68>
    9ff5:	bf 01 00 00 00       	mov    $0x1,%edi
    9ffa:	31 c0                	xor    %eax,%eax
    9ffc:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    a001:	e8 6a 79 ff ff       	callq  1970 <__printf_chk@plt>
    a006:	cc                   	int3   
    a007:	48 8b 05 c2 af 00 00 	mov    0xafc2(%rip),%rax        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    a00e:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    a013:	66 48 0f 6e c8       	movq   %rax,%xmm1
    a018:	e9 f8 fe ff ff       	jmpq   9f15 <search.constprop.0+0x35>
    a01d:	0f 1f 00             	nopl   (%rax)

000000000000a020 <migrate_node>:
    a020:	41 57                	push   %r15
    a022:	49 89 ff             	mov    %rdi,%r15
    a025:	41 56                	push   %r14
    a027:	49 89 f6             	mov    %rsi,%r14
    a02a:	41 55                	push   %r13
    a02c:	41 54                	push   %r12
    a02e:	55                   	push   %rbp
    a02f:	53                   	push   %rbx
    a030:	48 83 ec 38          	sub    $0x38,%rsp
    a034:	f2 0f 10 67 18       	movsd  0x18(%rdi),%xmm4
    a039:	44 8b 67 28          	mov    0x28(%rdi),%r12d
    a03d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a044:	00 00 
    a046:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    a04b:	31 c0                	xor    %eax,%eax
    a04d:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    a051:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    a058:	00 00 
    a05a:	f2 0f 11 64 24 08    	movsd  %xmm4,0x8(%rsp)
    a060:	48 8d b8 08 49 ff ff 	lea    -0xb6f8(%rax),%rdi
    a067:	e8 74 a3 00 00       	callq  143e0 <mm_node_malloc>
    a06c:	a8 03                	test   $0x3,%al
    a06e:	0f 85 34 04 00 00    	jne    a4a8 <migrate_node+0x488>
    a074:	48 85 c0             	test   %rax,%rax
    a077:	f2 0f 10 64 24 08    	movsd  0x8(%rsp),%xmm4
    a07d:	48 89 c5             	mov    %rax,%rbp
    a080:	0f 84 22 04 00 00    	je     a4a8 <migrate_node+0x488>
    a086:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    a08d:	00 
    a08e:	49 89 c5             	mov    %rax,%r13
    a091:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a098:	48 89 58 10          	mov    %rbx,0x10(%rax)
    a09c:	48 bb 00 00 00 00 00 	movabs $0x8000000000000000,%rbx
    a0a3:	00 00 80 
    a0a6:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a0ad:	00 
    a0ae:	c7 40 2c ff ff ff ff 	movl   $0xffffffff,0x2c(%rax)
    a0b5:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
    a0bc:	44 89 60 28          	mov    %r12d,0x28(%rax)
    a0c0:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    a0c7:	00 
    a0c8:	c6 40 30 00          	movb   $0x0,0x30(%rax)
    a0cc:	f2 0f 11 60 18       	movsd  %xmm4,0x18(%rax)
    a0d1:	41 0f b6 47 30       	movzbl 0x30(%r15),%eax
    a0d6:	88 45 30             	mov    %al,0x30(%rbp)
    a0d9:	41 8b 47 2c          	mov    0x2c(%r15),%eax
    a0dd:	89 45 2c             	mov    %eax,0x2c(%rbp)
    a0e0:	41 8b 47 34          	mov    0x34(%r15),%eax
    a0e4:	83 c0 01             	add    $0x1,%eax
    a0e7:	89 45 34             	mov    %eax,0x34(%rbp)
    a0ea:	41 8b 47 38          	mov    0x38(%r15),%eax
    a0ee:	89 45 38             	mov    %eax,0x38(%rbp)
    a0f1:	41 8b 47 3c          	mov    0x3c(%r15),%eax
    a0f5:	89 45 3c             	mov    %eax,0x3c(%rbp)
    a0f8:	49 8b 47 08          	mov    0x8(%r15),%rax
    a0fc:	48 85 c0             	test   %rax,%rax
    a0ff:	0f 85 21 01 00 00    	jne    a226 <migrate_node+0x206>
    a105:	0f 1f 00             	nopl   (%rax)
    a108:	f2 41 0f 10 6e 08    	movsd  0x8(%r14),%xmm5
    a10e:	66 0f 28 d4          	movapd %xmm4,%xmm2
    a112:	f2 0f 5e d5          	divsd  %xmm5,%xmm2
    a116:	66 0f 2f 15 8a b2 00 	comisd 0xb28a(%rip),%xmm2        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    a11d:	00 
    a11e:	0f 83 5c 02 00 00    	jae    a380 <migrate_node+0x360>
    a124:	f2 48 0f 2c c2       	cvttsd2si %xmm2,%rax
    a129:	66 0f 2f 15 1f ef 00 	comisd 0xef1f(%rip),%xmm2        # 19050 <__PRETTY_FUNCTION__.6556+0x3290>
    a130:	00 
    a131:	0f 87 87 03 00 00    	ja     a4be <migrate_node+0x49e>
    a137:	48 85 c0             	test   %rax,%rax
    a13a:	0f 88 60 02 00 00    	js     a3a0 <migrate_node+0x380>
    a140:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a144:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    a149:	f2 0f 59 c5          	mulsd  %xmm5,%xmm0
    a14d:	66 0f 2f c4          	comisd %xmm4,%xmm0
    a151:	0f 87 73 02 00 00    	ja     a3ca <migrate_node+0x3aa>
    a157:	48 89 c1             	mov    %rax,%rcx
    a15a:	48 83 c1 01          	add    $0x1,%rcx
    a15e:	0f 88 74 02 00 00    	js     a3d8 <migrate_node+0x3b8>
    a164:	66 0f ef c9          	pxor   %xmm1,%xmm1
    a168:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
    a16d:	f2 0f 59 cd          	mulsd  %xmm5,%xmm1
    a171:	66 0f 2e e1          	ucomisd %xmm1,%xmm4
    a175:	48 0f 43 c1          	cmovae %rcx,%rax
    a179:	41 8b 7e 10          	mov    0x10(%r14),%edi
    a17d:	31 d2                	xor    %edx,%edx
    a17f:	4c 8d 4c 24 18       	lea    0x18(%rsp),%r9
    a184:	45 31 c0             	xor    %r8d,%r8d
    a187:	66 0f 28 c4          	movapd %xmm4,%xmm0
    a18b:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    a190:	44 89 e6             	mov    %r12d,%esi
    a193:	f2 0f 11 64 24 08    	movsd  %xmm4,0x8(%rsp)
    a199:	48 f7 f7             	div    %rdi
    a19c:	48 89 d0             	mov    %rdx,%rax
    a19f:	4c 89 ca             	mov    %r9,%rdx
    a1a2:	48 c1 e0 06          	shl    $0x6,%rax
    a1a6:	49 03 06             	add    (%r14),%rax
    a1a9:	48 89 c7             	mov    %rax,%rdi
    a1ac:	e8 2f fb ff ff       	callq  9ce0 <search>
    a1b1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    a1b6:	f2 0f 10 64 24 08    	movsd  0x8(%rsp),%xmm4
    a1bc:	48 89 c2             	mov    %rax,%rdx
    a1bf:	83 e2 03             	and    $0x3,%edx
    a1c2:	48 83 fa 03          	cmp    $0x3,%rdx
    a1c6:	0f 84 94 01 00 00    	je     a360 <migrate_node+0x340>
    a1cc:	48 89 c1             	mov    %rax,%rcx
    a1cf:	48 83 c9 02          	or     $0x2,%rcx
    a1d3:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    a1d7:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    a1dc:	66 0f 2e 61 18       	ucomisd 0x18(%rcx),%xmm4
    a1e1:	7a 0c                	jp     a1ef <migrate_node+0x1cf>
    a1e3:	75 0a                	jne    a1ef <migrate_node+0x1cf>
    a1e5:	44 3b 61 28          	cmp    0x28(%rcx),%r12d
    a1e9:	0f 84 31 02 00 00    	je     a420 <migrate_node+0x400>
    a1ef:	48 09 ea             	or     %rbp,%rdx
    a1f2:	f0 48 0f b1 11       	lock cmpxchg %rdx,(%rcx)
    a1f7:	0f 85 63 01 00 00    	jne    a360 <migrate_node+0x340>
    a1fd:	0f 31                	rdtsc  
    a1ff:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
    a203:	48 c1 e2 20          	shl    $0x20,%rdx
    a207:	89 c0                	mov    %eax,%eax
    a209:	48 09 c2             	or     %rax,%rdx
    a20c:	48 89 91 e8 00 00 00 	mov    %rdx,0xe8(%rcx)
    a213:	31 c0                	xor    %eax,%eax
    a215:	f0 4d 0f b1 6f 08    	lock cmpxchg %r13,0x8(%r15)
    a21b:	75 09                	jne    a226 <migrate_node+0x206>
    a21d:	49 8d 7e 40          	lea    0x40(%r14),%rdi
    a221:	e8 8a 1e 00 00       	callq  c0b0 <atomic_inc_x86>
    a226:	4d 8b 47 08          	mov    0x8(%r15),%r8
    a22a:	49 8b 00             	mov    (%r8),%rax
    a22d:	48 89 c2             	mov    %rax,%rdx
    a230:	83 e2 03             	and    $0x3,%edx
    a233:	48 83 fa 02          	cmp    $0x2,%rdx
    a237:	75 0e                	jne    a247 <migrate_node+0x227>
    a239:	48 89 c2             	mov    %rax,%rdx
    a23c:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    a240:	f0 49 0f b1 10       	lock cmpxchg %rdx,(%r8)
    a245:	75 e3                	jne    a22a <migrate_node+0x20a>
    a247:	f2 41 0f 10 60 18    	movsd  0x18(%r8),%xmm4
    a24d:	f2 41 0f 10 6e 08    	movsd  0x8(%r14),%xmm5
    a253:	49 8b 96 80 00 00 00 	mov    0x80(%r14),%rdx
    a25a:	66 0f 28 d4          	movapd %xmm4,%xmm2
    a25e:	f2 0f 5e d5          	divsd  %xmm5,%xmm2
    a262:	48 89 d7             	mov    %rdx,%rdi
    a265:	48 c1 ef 20          	shr    $0x20,%rdi
    a269:	66 0f 2f 15 37 b1 00 	comisd 0xb137(%rip),%xmm2        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    a270:	00 
    a271:	0f 83 89 01 00 00    	jae    a400 <migrate_node+0x3e0>
    a277:	f2 48 0f 2c ca       	cvttsd2si %xmm2,%rcx
    a27c:	66 0f 2f 15 cc ed 00 	comisd 0xedcc(%rip),%xmm2        # 19050 <__PRETTY_FUNCTION__.6556+0x3290>
    a283:	00 
    a284:	0f 87 34 02 00 00    	ja     a4be <migrate_node+0x49e>
    a28a:	48 85 c9             	test   %rcx,%rcx
    a28d:	0f 88 b5 01 00 00    	js     a448 <migrate_node+0x428>
    a293:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a297:	f2 48 0f 2a c1       	cvtsi2sd %rcx,%xmm0
    a29c:	f2 0f 59 c5          	mulsd  %xmm5,%xmm0
    a2a0:	66 0f 2f c4          	comisd %xmm4,%xmm0
    a2a4:	0f 87 c8 01 00 00    	ja     a472 <migrate_node+0x452>
    a2aa:	48 89 ce             	mov    %rcx,%rsi
    a2ad:	48 83 c6 01          	add    $0x1,%rsi
    a2b1:	0f 88 c9 01 00 00    	js     a480 <migrate_node+0x460>
    a2b7:	66 0f ef c9          	pxor   %xmm1,%xmm1
    a2bb:	f2 48 0f 2a ce       	cvtsi2sd %rsi,%xmm1
    a2c0:	f2 0f 59 cd          	mulsd  %xmm5,%xmm1
    a2c4:	66 0f 2e e1          	ucomisd %xmm1,%xmm4
    a2c8:	48 0f 43 ce          	cmovae %rsi,%rcx
    a2cc:	48 39 cf             	cmp    %rcx,%rdi
    a2cf:	72 5f                	jb     a330 <migrate_node+0x310>
    a2d1:	49 8b 00             	mov    (%r8),%rax
    a2d4:	a8 03                	test   $0x3,%al
    a2d6:	75 58                	jne    a330 <migrate_node+0x310>
    a2d8:	48 89 ce             	mov    %rcx,%rsi
    a2db:	89 d7                	mov    %edx,%edi
    a2dd:	49 83 ee 80          	sub    $0xffffffffffffff80,%r14
    a2e1:	48 89 d0             	mov    %rdx,%rax
    a2e4:	48 c1 e6 20          	shl    $0x20,%rsi
    a2e8:	48 83 c7 01          	add    $0x1,%rdi
    a2ec:	48 09 f7             	or     %rsi,%rdi
    a2ef:	f0 49 0f b1 3e       	lock cmpxchg %rdi,(%r14)
    a2f4:	48 89 c7             	mov    %rax,%rdi
    a2f7:	48 39 c2             	cmp    %rax,%rdx
    a2fa:	75 23                	jne    a31f <migrate_node+0x2ff>
    a2fc:	eb 32                	jmp    a330 <migrate_node+0x310>
    a2fe:	66 90                	xchg   %ax,%ax
    a300:	49 8b 10             	mov    (%r8),%rdx
    a303:	83 e2 03             	and    $0x3,%edx
    a306:	75 28                	jne    a330 <migrate_node+0x310>
    a308:	48 8d 50 01          	lea    0x1(%rax),%rdx
    a30c:	48 89 f8             	mov    %rdi,%rax
    a30f:	48 09 f2             	or     %rsi,%rdx
    a312:	f0 49 0f b1 16       	lock cmpxchg %rdx,(%r14)
    a317:	48 39 c7             	cmp    %rax,%rdi
    a31a:	74 14                	je     a330 <migrate_node+0x310>
    a31c:	48 89 c7             	mov    %rax,%rdi
    a31f:	48 89 fa             	mov    %rdi,%rdx
    a322:	89 f8                	mov    %edi,%eax
    a324:	48 c1 ea 20          	shr    $0x20,%rdx
    a328:	48 39 ca             	cmp    %rcx,%rdx
    a32b:	77 d3                	ja     a300 <migrate_node+0x2e0>
    a32d:	0f 1f 00             	nopl   (%rax)
    a330:	f0 49 83 27 fd       	lock andq $0xfffffffffffffffd,(%r15)
    a335:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    a33a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a341:	00 00 
    a343:	0f 85 96 01 00 00    	jne    a4df <migrate_node+0x4bf>
    a349:	48 83 c4 38          	add    $0x38,%rsp
    a34d:	5b                   	pop    %rbx
    a34e:	5d                   	pop    %rbp
    a34f:	41 5c                	pop    %r12
    a351:	41 5d                	pop    %r13
    a353:	41 5e                	pop    %r14
    a355:	41 5f                	pop    %r15
    a357:	c3                   	retq   
    a358:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a35f:	00 
    a360:	49 8b 47 08          	mov    0x8(%r15),%rax
    a364:	48 85 c0             	test   %rax,%rax
    a367:	0f 85 b9 fe ff ff    	jne    a226 <migrate_node+0x206>
    a36d:	44 8b 65 28          	mov    0x28(%rbp),%r12d
    a371:	f2 0f 10 65 18       	movsd  0x18(%rbp),%xmm4
    a376:	e9 8d fd ff ff       	jmpq   a108 <migrate_node+0xe8>
    a37b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a380:	66 0f 28 c2          	movapd %xmm2,%xmm0
    a384:	f2 0f 5c 05 1c b0 00 	subsd  0xb01c(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    a38b:	00 
    a38c:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    a391:	48 31 d8             	xor    %rbx,%rax
    a394:	e9 90 fd ff ff       	jmpq   a129 <migrate_node+0x109>
    a399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a3a0:	48 89 c2             	mov    %rax,%rdx
    a3a3:	48 89 c1             	mov    %rax,%rcx
    a3a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a3aa:	48 d1 ea             	shr    %rdx
    a3ad:	83 e1 01             	and    $0x1,%ecx
    a3b0:	48 09 ca             	or     %rcx,%rdx
    a3b3:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    a3b8:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    a3bc:	f2 0f 59 c5          	mulsd  %xmm5,%xmm0
    a3c0:	66 0f 2f c4          	comisd %xmm4,%xmm0
    a3c4:	0f 86 8d fd ff ff    	jbe    a157 <migrate_node+0x137>
    a3ca:	48 83 e8 01          	sub    $0x1,%rax
    a3ce:	e9 a6 fd ff ff       	jmpq   a179 <migrate_node+0x159>
    a3d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a3d8:	48 89 ca             	mov    %rcx,%rdx
    a3db:	48 89 cf             	mov    %rcx,%rdi
    a3de:	66 0f ef c9          	pxor   %xmm1,%xmm1
    a3e2:	48 d1 ea             	shr    %rdx
    a3e5:	83 e7 01             	and    $0x1,%edi
    a3e8:	48 09 fa             	or     %rdi,%rdx
    a3eb:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    a3f0:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
    a3f4:	e9 74 fd ff ff       	jmpq   a16d <migrate_node+0x14d>
    a3f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a400:	66 0f 28 c2          	movapd %xmm2,%xmm0
    a404:	f2 0f 5c 05 9c af 00 	subsd  0xaf9c(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    a40b:	00 
    a40c:	f2 48 0f 2c c8       	cvttsd2si %xmm0,%rcx
    a411:	48 0f ba f9 3f       	btc    $0x3f,%rcx
    a416:	e9 61 fe ff ff       	jmpq   a27c <migrate_node+0x25c>
    a41b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a420:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    a427:	00 00 
    a429:	48 89 ee             	mov    %rbp,%rsi
    a42c:	48 8d b8 08 49 ff ff 	lea    -0xb6f8(%rax),%rdi
    a433:	e8 68 a0 00 00       	callq  144a0 <mm_node_free>
    a438:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
    a43d:	e9 d1 fd ff ff       	jmpq   a213 <migrate_node+0x1f3>
    a442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a448:	48 89 c8             	mov    %rcx,%rax
    a44b:	48 89 ce             	mov    %rcx,%rsi
    a44e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a452:	48 d1 e8             	shr    %rax
    a455:	83 e6 01             	and    $0x1,%esi
    a458:	48 09 f0             	or     %rsi,%rax
    a45b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    a460:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    a464:	f2 0f 59 c5          	mulsd  %xmm5,%xmm0
    a468:	66 0f 2f c4          	comisd %xmm4,%xmm0
    a46c:	0f 86 38 fe ff ff    	jbe    a2aa <migrate_node+0x28a>
    a472:	48 83 e9 01          	sub    $0x1,%rcx
    a476:	e9 51 fe ff ff       	jmpq   a2cc <migrate_node+0x2ac>
    a47b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a480:	48 89 f0             	mov    %rsi,%rax
    a483:	49 89 f1             	mov    %rsi,%r9
    a486:	66 0f ef c9          	pxor   %xmm1,%xmm1
    a48a:	48 d1 e8             	shr    %rax
    a48d:	41 83 e1 01          	and    $0x1,%r9d
    a491:	4c 09 c8             	or     %r9,%rax
    a494:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    a499:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
    a49d:	e9 1e fe ff ff       	jmpq   a2c0 <migrate_node+0x2a0>
    a4a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a4a8:	e8 e3 74 ff ff       	callq  1990 <pthread_self@plt>
    a4ad:	48 8d 3d 4c c3 00 00 	lea    0xc34c(%rip),%rdi        # 16800 <__PRETTY_FUNCTION__.6556+0xa40>
    a4b4:	48 89 c6             	mov    %rax,%rsi
    a4b7:	31 c0                	xor    %eax,%eax
    a4b9:	e8 22 f7 ff ff       	callq  9be0 <error>
    a4be:	f2 0f 10 1d 92 eb 00 	movsd  0xeb92(%rip),%xmm3        # 19058 <__PRETTY_FUNCTION__.6556+0x3298>
    a4c5:	00 
    a4c6:	66 0f 28 cd          	movapd %xmm5,%xmm1
    a4ca:	66 0f 28 c4          	movapd %xmm4,%xmm0
    a4ce:	48 8d 3d 53 c3 00 00 	lea    0xc353(%rip),%rdi        # 16828 <__PRETTY_FUNCTION__.6556+0xa68>
    a4d5:	b8 04 00 00 00       	mov    $0x4,%eax
    a4da:	e8 01 f7 ff ff       	callq  9be0 <error>
    a4df:	e8 bc 72 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    a4e4:	66 90                	xchg   %ax,%ax
    a4e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a4ed:	00 00 00 

000000000000a4f0 <read_table>:
    a4f0:	41 57                	push   %r15
    a4f2:	48 89 fe             	mov    %rdi,%rsi
    a4f5:	66 0f ef d2          	pxor   %xmm2,%xmm2
    a4f9:	66 0f ef c9          	pxor   %xmm1,%xmm1
    a4fd:	41 56                	push   %r14
    a4ff:	41 55                	push   %r13
    a501:	41 54                	push   %r12
    a503:	55                   	push   %rbp
    a504:	53                   	push   %rbx
    a505:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
    a50c:	f2 0f 10 46 10       	movsd  0x10(%rsi),%xmm0
    a511:	f2 0f 10 25 7f ae 00 	movsd  0xae7f(%rip),%xmm4        # 15398 <__PRETTY_FUNCTION__.6351+0x308>
    a518:	00 
    a519:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    a51e:	48 8b 1d 43 ed 33 00 	mov    0x33ed43(%rip),%rbx        # 349268 <g_tail>
    a525:	66 0f 28 d8          	movapd %xmm0,%xmm3
    a529:	f2 0f 59 dc          	mulsd  %xmm4,%xmm3
    a52d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a534:	00 00 
    a536:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
    a53d:	00 
    a53e:	31 c0                	xor    %eax,%eax
    a540:	48 8b 47 40          	mov    0x40(%rdi),%rax
    a544:	8b 78 10             	mov    0x10(%rax),%edi
    a547:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    a54c:	8b 40 40             	mov    0x40(%rax),%eax
    a54f:	89 7c 24 30          	mov    %edi,0x30(%rsp)
    a553:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
    a557:	89 f8                	mov    %edi,%eax
    a559:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    a55e:	f2 0f 59 d9          	mulsd  %xmm1,%xmm3
    a562:	66 0f 2f da          	comisd %xmm2,%xmm3
    a566:	0f 87 19 03 00 00    	ja     a885 <read_table+0x395>
    a56c:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    a570:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    a574:	66 0f 2f d0          	comisd %xmm0,%xmm2
    a578:	0f 87 07 03 00 00    	ja     a885 <read_table+0x395>
    a57e:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    a583:	48 8b 46 18          	mov    0x18(%rsi),%rax
    a587:	48 85 c0             	test   %rax,%rax
    a58a:	0f 84 c7 02 00 00    	je     a857 <read_table+0x367>
    a590:	4c 8b 6e 18          	mov    0x18(%rsi),%r13
    a594:	66 0f ef ed          	pxor   %xmm5,%xmm5
    a598:	48 8b 06             	mov    (%rsi),%rax
    a59b:	f2 41 0f 10 7d 08    	movsd  0x8(%r13),%xmm7
    a5a1:	48 89 04 24          	mov    %rax,(%rsp)
    a5a5:	66 0f 2f ef          	comisd %xmm7,%xmm5
    a5a9:	f2 0f 11 7c 24 40    	movsd  %xmm7,0x40(%rsp)
    a5af:	64 c6 04 25 b8 5e ff 	movb   $0x1,%fs:0xffffffffffff5eb8
    a5b6:	ff 01 
    a5b8:	0f 87 1e 04 00 00    	ja     a9dc <read_table+0x4ec>
    a5be:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    a5c5:	00 00 
    a5c7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    a5cc:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
    a5d1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    a5d6:	48 c7 c0 c8 ff ff ff 	mov    $0xffffffffffffffc8,%rax
    a5dd:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    a5e2:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
    a5e7:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    a5ec:	48 03 6c 24 38       	add    0x38(%rsp),%rbp
    a5f1:	48 89 ef             	mov    %rbp,%rdi
    a5f4:	e8 27 74 ff ff       	callq  1a20 <drand48_r@plt>
    a5f9:	f2 4c 0f 2c 74 24 68 	cvttsd2si 0x68(%rsp),%r14
    a600:	8b 44 24 30          	mov    0x30(%rsp),%eax
    a604:	44 0f af f0          	imul   %eax,%r14d
    a608:	85 c0                	test   %eax,%eax
    a60a:	0f 84 1c 0d 00 00    	je     b32c <read_table+0xe3c>
    a610:	44 01 f0             	add    %r14d,%eax
    a613:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
    a618:	48 8d 6c 24 58       	lea    0x58(%rsp),%rbp
    a61d:	89 44 24 08          	mov    %eax,0x8(%rsp)
    a621:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a628:	44 89 f0             	mov    %r14d,%eax
    a62b:	31 d2                	xor    %edx,%edx
    a62d:	f7 74 24 30          	divl   0x30(%rsp)
    a631:	48 8b 04 24          	mov    (%rsp),%rax
    a635:	48 c1 e2 06          	shl    $0x6,%rdx
    a639:	48 01 d0             	add    %rdx,%rax
    a63c:	48 8b 38             	mov    (%rax),%rdi
    a63f:	48 83 e7 fc          	and    $0xfffffffffffffffc,%rdi
    a643:	49 89 ff             	mov    %rdi,%r15
    a646:	48 39 fb             	cmp    %rdi,%rbx
    a649:	75 2c                	jne    a677 <read_table+0x187>
    a64b:	eb 4e                	jmp    a69b <read_table+0x1ab>
    a64d:	0f 1f 00             	nopl   (%rax)
    a650:	a8 03                	test   $0x3,%al
    a652:	75 47                	jne    a69b <read_table+0x1ab>
    a654:	48 89 c1             	mov    %rax,%rcx
    a657:	48 83 c9 03          	or     $0x3,%rcx
    a65b:	f0 48 0f b1 0a       	lock cmpxchg %rcx,(%rdx)
    a660:	75 39                	jne    a69b <read_table+0x1ab>
    a662:	4c 89 ff             	mov    %r15,%rdi
    a665:	4c 89 ee             	mov    %r13,%rsi
    a668:	e8 b3 f9 ff ff       	callq  a020 <migrate_node>
    a66d:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
    a672:	4c 39 fb             	cmp    %r15,%rbx
    a675:	74 24                	je     a69b <read_table+0x1ab>
    a677:	48 89 ea             	mov    %rbp,%rdx
    a67a:	4c 89 e6             	mov    %r12,%rsi
    a67d:	4c 89 ff             	mov    %r15,%rdi
    a680:	e8 5b f8 ff ff       	callq  9ee0 <search.constprop.0>
    a685:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    a68a:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    a68e:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
    a693:	48 8b 02             	mov    (%rdx),%rax
    a696:	48 39 da             	cmp    %rbx,%rdx
    a699:	75 b5                	jne    a650 <read_table+0x160>
    a69b:	41 83 c6 01          	add    $0x1,%r14d
    a69f:	44 3b 74 24 08       	cmp    0x8(%rsp),%r14d
    a6a4:	75 82                	jne    a628 <read_table+0x138>
    a6a6:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    a6ab:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    a6b0:	48 03 7c 24 20       	add    0x20(%rsp),%rdi
    a6b5:	e8 66 73 ff ff       	callq  1a20 <drand48_r@plt>
    a6ba:	f2 4c 0f 2c 7c 24 68 	cvttsd2si 0x68(%rsp),%r15
    a6c1:	8b 74 24 30          	mov    0x30(%rsp),%esi
    a6c5:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
    a6ca:	41 01 f7             	add    %esi,%r15d
    a6cd:	44 89 f8             	mov    %r15d,%eax
    a6d0:	01 f0                	add    %esi,%eax
    a6d2:	89 44 24 18          	mov    %eax,0x18(%rsp)
    a6d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a6dd:	00 00 00 
    a6e0:	44 89 f8             	mov    %r15d,%eax
    a6e3:	31 d2                	xor    %edx,%edx
    a6e5:	f7 74 24 30          	divl   0x30(%rsp)
    a6e9:	48 8b 04 24          	mov    (%rsp),%rax
    a6ed:	48 c1 e2 06          	shl    $0x6,%rdx
    a6f1:	4c 8d 34 10          	lea    (%rax,%rdx,1),%r14
    a6f5:	49 8b 3e             	mov    (%r14),%rdi
    a6f8:	48 83 e7 fc          	and    $0xfffffffffffffffc,%rdi
    a6fc:	49 89 fd             	mov    %rdi,%r13
    a6ff:	48 39 fb             	cmp    %rdi,%rbx
    a702:	75 1c                	jne    a720 <read_table+0x230>
    a704:	eb 59                	jmp    a75f <read_table+0x26f>
    a706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a70d:	00 00 00 
    a710:	48 89 c1             	mov    %rax,%rcx
    a713:	83 e1 03             	and    $0x3,%ecx
    a716:	48 83 f9 01          	cmp    $0x1,%rcx
    a71a:	0f 85 70 02 00 00    	jne    a990 <read_table+0x4a0>
    a720:	48 89 ea             	mov    %rbp,%rdx
    a723:	4c 89 e6             	mov    %r12,%rsi
    a726:	4c 89 ef             	mov    %r13,%rdi
    a729:	e8 b2 f7 ff ff       	callq  9ee0 <search.constprop.0>
    a72e:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    a733:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    a737:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
    a73c:	48 8b 02             	mov    (%rdx),%rax
    a73f:	48 39 da             	cmp    %rbx,%rdx
    a742:	75 cc                	jne    a710 <read_table+0x220>
    a744:	49 8b 45 00          	mov    0x0(%r13),%rax
    a748:	83 e0 03             	and    $0x3,%eax
    a74b:	48 83 f8 03          	cmp    $0x3,%rax
    a74f:	0f 84 67 02 00 00    	je     a9bc <read_table+0x4cc>
    a755:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
    a75a:	4c 39 eb             	cmp    %r13,%rbx
    a75d:	75 c1                	jne    a720 <read_table+0x230>
    a75f:	48 89 ea             	mov    %rbp,%rdx
    a762:	4c 89 e6             	mov    %r12,%rsi
    a765:	4c 89 f7             	mov    %r14,%rdi
    a768:	e8 73 f7 ff ff       	callq  9ee0 <search.constprop.0>
    a76d:	4c 8b 44 24 58       	mov    0x58(%rsp),%r8
    a772:	4c 89 c0             	mov    %r8,%rax
    a775:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    a779:	48 39 d8             	cmp    %rbx,%rax
    a77c:	74 27                	je     a7a5 <read_table+0x2b5>
    a77e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a782:	4c 8b 08             	mov    (%rax),%r9
    a785:	53                   	push   %rbx
    a786:	bf 01 00 00 00       	mov    $0x1,%edi
    a78b:	48 8d 35 46 c1 00 00 	lea    0xc146(%rip),%rsi        # 168d8 <__PRETTY_FUNCTION__.6556+0xb18>
    a792:	31 c0                	xor    %eax,%eax
    a794:	52                   	push   %rdx
    a795:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    a79a:	4c 89 f2             	mov    %r14,%rdx
    a79d:	e8 ce 71 ff ff       	callq  1970 <__printf_chk@plt>
    a7a2:	cc                   	int3   
    a7a3:	58                   	pop    %rax
    a7a4:	5a                   	pop    %rdx
    a7a5:	41 83 c7 01          	add    $0x1,%r15d
    a7a9:	44 39 7c 24 18       	cmp    %r15d,0x18(%rsp)
    a7ae:	0f 85 2c ff ff ff    	jne    a6e0 <read_table+0x1f0>
    a7b4:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    a7b9:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    a7be:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    a7c3:	f0 4c 0f b1 6b 40    	lock cmpxchg %r13,0x40(%rbx)
    a7c9:	0f 85 83 00 00 00    	jne    a852 <read_table+0x362>
    a7cf:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    a7d4:	48 81 c7 08 49 ff ff 	add    $0xffffffffffff4908,%rdi
    a7db:	e8 00 9c 00 00       	callq  143e0 <mm_node_malloc>
    a7e0:	a8 03                	test   $0x3,%al
    a7e2:	0f 85 a8 04 00 00    	jne    ac90 <read_table+0x7a0>
    a7e8:	48 85 c0             	test   %rax,%rax
    a7eb:	0f 84 9f 04 00 00    	je     ac90 <read_table+0x7a0>
    a7f1:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    a7f6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a7fd:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
    a804:	48 89 58 10          	mov    %rbx,0x10(%rax)
    a808:	48 8b 1d d9 a7 00 00 	mov    0xa7d9(%rip),%rbx        # 14fe8 <__PRETTY_FUNCTION__.5886+0x808>
    a80f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a816:	00 
    a817:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    a81e:	00 
    a81f:	48 89 58 18          	mov    %rbx,0x18(%rax)
    a823:	c7 40 2c ff ff ff ff 	movl   $0xffffffff,0x2c(%rax)
    a82a:	c6 40 30 00          	movb   $0x0,0x30(%rax)
    a82e:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
    a835:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    a83c:	00 
    a83d:	64 48 8b 14 25 a8 5e 	mov    %fs:0xffffffffffff5ea8,%rdx
    a844:	ff ff 
    a846:	48 89 10             	mov    %rdx,(%rax)
    a849:	64 48 89 04 25 a8 5e 	mov    %rax,%fs:0xffffffffffff5ea8
    a850:	ff ff 
    a852:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    a857:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
    a85e:	00 
    a85f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a866:	00 00 
    a868:	0f 85 ad 0c 00 00    	jne    b51b <read_table+0x102b>
    a86e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    a873:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
    a87a:	5b                   	pop    %rbx
    a87b:	5d                   	pop    %rbp
    a87c:	41 5c                	pop    %r12
    a87e:	41 5d                	pop    %r13
    a880:	41 5e                	pop    %r14
    a882:	41 5f                	pop    %r15
    a884:	c3                   	retq   
    a885:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    a88a:	48 8b 40 18          	mov    0x18(%rax),%rax
    a88e:	48 85 c0             	test   %rax,%rax
    a891:	0f 85 e7 fc ff ff    	jne    a57e <read_table+0x8e>
    a897:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    a89c:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    a8a1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a8a5:	8b 7c 24 30          	mov    0x30(%rsp),%edi
    a8a9:	8b 40 40             	mov    0x40(%rax),%eax
    a8ac:	44 8b 06             	mov    (%rsi),%r8d
    a8af:	89 c2                	mov    %eax,%edx
    a8b1:	f7 d2                	not    %edx
    a8b3:	c1 fa 1f             	sar    $0x1f,%edx
    a8b6:	21 c2                	and    %eax,%edx
    a8b8:	8b 46 04             	mov    0x4(%rsi),%eax
    a8bb:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    a8c0:	43 8d 04 00          	lea    (%r8,%r8,1),%eax
    a8c4:	f2 0f 59 46 08       	mulsd  0x8(%rsi),%xmm0
    a8c9:	31 f6                	xor    %esi,%esi
    a8cb:	39 c7                	cmp    %eax,%edi
    a8cd:	72 21                	jb     a8f0 <read_table+0x400>
    a8cf:	66 0f 28 d0          	movapd %xmm0,%xmm2
    a8d3:	89 d1                	mov    %edx,%ecx
    a8d5:	66 0f ef db          	pxor   %xmm3,%xmm3
    a8d9:	f2 48 0f 2a d9       	cvtsi2sd %rcx,%xmm3
    a8de:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
    a8e2:	8d 0c 3f             	lea    (%rdi,%rdi,1),%ecx
    a8e5:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    a8e9:	66 0f 2f da          	comisd %xmm2,%xmm3
    a8ed:	0f 47 f1             	cmova  %ecx,%esi
    a8f0:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
    a8f5:	31 c9                	xor    %ecx,%ecx
    a8f7:	41 39 c2             	cmp    %eax,%r10d
    a8fa:	76 1f                	jbe    a91b <read_table+0x42b>
    a8fc:	f2 0f 59 c4          	mulsd  %xmm4,%xmm0
    a900:	89 d7                	mov    %edx,%edi
    a902:	66 0f ef d2          	pxor   %xmm2,%xmm2
    a906:	f2 48 0f 2a d7       	cvtsi2sd %rdi,%xmm2
    a90b:	44 89 d7             	mov    %r10d,%edi
    a90e:	d1 ef                	shr    %edi
    a910:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    a914:	66 0f 2f c2          	comisd %xmm2,%xmm0
    a918:	0f 47 cf             	cmova  %edi,%ecx
    a91b:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
    a920:	41 83 fa 01          	cmp    $0x1,%r10d
    a924:	40 0f 94 c7          	sete   %dil
    a928:	45 31 e4             	xor    %r12d,%r12d
    a92b:	39 c2                	cmp    %eax,%edx
    a92d:	41 0f 97 c4          	seta   %r12b
    a931:	41 21 fc             	and    %edi,%r12d
    a934:	41 f7 dc             	neg    %r12d
    a937:	41 21 c4             	and    %eax,%r12d
    a93a:	41 39 c2             	cmp    %eax,%r10d
    a93d:	40 0f 94 c7          	sete   %dil
    a941:	31 c0                	xor    %eax,%eax
    a943:	41 39 d0             	cmp    %edx,%r8d
    a946:	0f 97 c0             	seta   %al
    a949:	21 f8                	and    %edi,%eax
    a94b:	41 01 c4             	add    %eax,%r12d
    a94e:	41 01 f4             	add    %esi,%r12d
    a951:	41 01 cc             	add    %ecx,%r12d
    a954:	41 8d 6c 24 ff       	lea    -0x1(%r12),%ebp
    a959:	81 fd ff ff 00 00    	cmp    $0xffff,%ebp
    a95f:	0f 87 19 fc ff ff    	ja     a57e <read_table+0x8e>
    a965:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    a96a:	ba c0 00 00 00       	mov    $0xc0,%edx
    a96f:	be 40 00 00 00       	mov    $0x40,%esi
    a974:	e8 f7 70 ff ff       	callq  1a70 <posix_memalign@plt>
    a979:	85 c0                	test   %eax,%eax
    a97b:	0f 84 2e 0a 00 00    	je     b3af <read_table+0xebf>
    a981:	48 8d 3d 78 bf 00 00 	lea    0xbf78(%rip),%rdi        # 16900 <__PRETTY_FUNCTION__.6556+0xb40>
    a988:	31 c0                	xor    %eax,%eax
    a98a:	e8 51 f2 ff ff       	callq  9be0 <error>
    a98f:	90                   	nop
    a990:	48 85 c9             	test   %rcx,%rcx
    a993:	0f 85 ab fd ff ff    	jne    a744 <read_table+0x254>
    a999:	48 89 c1             	mov    %rax,%rcx
    a99c:	48 83 c9 03          	or     $0x3,%rcx
    a9a0:	f0 48 0f b1 0a       	lock cmpxchg %rcx,(%rdx)
    a9a5:	0f 85 75 fd ff ff    	jne    a720 <read_table+0x230>
    a9ab:	49 8b 45 00          	mov    0x0(%r13),%rax
    a9af:	83 e0 03             	and    $0x3,%eax
    a9b2:	48 83 f8 03          	cmp    $0x3,%rax
    a9b6:	0f 85 99 fd ff ff    	jne    a755 <read_table+0x265>
    a9bc:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a9c1:	4c 89 ef             	mov    %r13,%rdi
    a9c4:	e8 57 f6 ff ff       	callq  a020 <migrate_node>
    a9c9:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
    a9ce:	4c 39 eb             	cmp    %r13,%rbx
    a9d1:	0f 85 49 fd ff ff    	jne    a720 <read_table+0x230>
    a9d7:	e9 83 fd ff ff       	jmpq   a75f <read_table+0x26f>
    a9dc:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    a9e1:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
    a9e6:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
    a9eb:	4c 8b 3d 76 e8 33 00 	mov    0x33e876(%rip),%r15        # 349268 <g_tail>
    a9f2:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    a9f7:	48 8d 6c 24 58       	lea    0x58(%rsp),%rbp
    a9fc:	44 8b 70 10          	mov    0x10(%rax),%r14d
    aa00:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    aa07:	00 00 
    aa09:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
    aa10:	00 00 
    aa12:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    aa17:	48 c7 c0 c8 ff ff ff 	mov    $0xffffffffffffffc8,%rax
    aa1e:	44 89 74 24 08       	mov    %r14d,0x8(%rsp)
    aa23:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    aa28:	64 48 03 04 25 00 00 	add    %fs:0x0,%rax
    aa2f:	00 00 
    aa31:	48 89 c7             	mov    %rax,%rdi
    aa34:	e8 e7 6f ff ff       	callq  1a20 <drand48_r@plt>
    aa39:	f2 48 0f 2c 44 24 68 	cvttsd2si 0x68(%rsp),%rax
    aa40:	89 c6                	mov    %eax,%esi
    aa42:	44 89 f0             	mov    %r14d,%eax
    aa45:	41 0f af f6          	imul   %r14d,%esi
    aa49:	41 01 f6             	add    %esi,%r14d
    aa4c:	44 89 74 24 34       	mov    %r14d,0x34(%rsp)
    aa51:	85 c0                	test   %eax,%eax
    aa53:	0f 84 7e 00 00 00    	je     aad7 <read_table+0x5e7>
    aa59:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
    aa5e:	41 89 f6             	mov    %esi,%r14d
    aa61:	44 89 f0             	mov    %r14d,%eax
    aa64:	31 d2                	xor    %edx,%edx
    aa66:	f7 74 24 08          	divl   0x8(%rsp)
    aa6a:	48 8b 04 24          	mov    (%rsp),%rax
    aa6e:	48 c1 e2 06          	shl    $0x6,%rdx
    aa72:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
    aa76:	48 8b 03             	mov    (%rbx),%rax
    aa79:	48 89 c2             	mov    %rax,%rdx
    aa7c:	83 e2 03             	and    $0x3,%edx
    aa7f:	48 83 fa 03          	cmp    $0x3,%rdx
    aa83:	74 23                	je     aaa8 <read_table+0x5b8>
    aa85:	48 89 c2             	mov    %rax,%rdx
    aa88:	48 83 ca 03          	or     $0x3,%rdx
    aa8c:	f0 48 0f b1 13       	lock cmpxchg %rdx,(%rbx)
    aa91:	74 15                	je     aaa8 <read_table+0x5b8>
    aa93:	eb e1                	jmp    aa76 <read_table+0x586>
    aa95:	0f 1f 00             	nopl   (%rax)
    aa98:	48 89 c1             	mov    %rax,%rcx
    aa9b:	83 e1 03             	and    $0x3,%ecx
    aa9e:	48 83 f9 01          	cmp    $0x1,%rcx
    aaa2:	0f 85 be 01 00 00    	jne    ac66 <read_table+0x776>
    aaa8:	4c 89 e2             	mov    %r12,%rdx
    aaab:	48 89 ee             	mov    %rbp,%rsi
    aaae:	48 89 df             	mov    %rbx,%rdi
    aab1:	e8 2a f4 ff ff       	callq  9ee0 <search.constprop.0>
    aab6:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    aabb:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    aabf:	48 8b 02             	mov    (%rdx),%rax
    aac2:	49 39 d7             	cmp    %rdx,%r15
    aac5:	75 d1                	jne    aa98 <read_table+0x5a8>
    aac7:	41 83 c6 01          	add    $0x1,%r14d
    aacb:	44 3b 74 24 34       	cmp    0x34(%rsp),%r14d
    aad0:	75 8f                	jne    aa61 <read_table+0x571>
    aad2:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    aad7:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    aadc:	66 0f ef f6          	pxor   %xmm6,%xmm6
    aae0:	48 8b 46 18          	mov    0x18(%rsi),%rax
    aae4:	4c 8b 8e 80 00 00 00 	mov    0x80(%rsi),%r9
    aaeb:	f2 0f 10 48 08       	movsd  0x8(%rax),%xmm1
    aaf0:	66 0f 2f ce          	comisd %xmm6,%xmm1
    aaf4:	0f 83 e3 07 00 00    	jae    b2dd <read_table+0xded>
    aafa:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    aaff:	41 8b 45 10          	mov    0x10(%r13),%eax
    ab03:	8b 36                	mov    (%rsi),%esi
    ab05:	8d 14 36             	lea    (%rsi,%rsi,1),%edx
    ab08:	89 74 24 08          	mov    %esi,0x8(%rsp)
    ab0c:	39 d0                	cmp    %edx,%eax
    ab0e:	0f 86 04 08 00 00    	jbe    b318 <read_table+0xe28>
    ab14:	83 f8 05             	cmp    $0x5,%eax
    ab17:	0f 86 21 08 00 00    	jbe    b33e <read_table+0xe4e>
    ab1d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ab21:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    ab26:	f2 0f 5e 05 12 e5 00 	divsd  0xe512(%rip),%xmm0        # 19040 <__PRETTY_FUNCTION__.6556+0x3280>
    ab2d:	00 
    ab2e:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    ab33:	83 c0 05             	add    $0x5,%eax
    ab36:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    ab3b:	83 f8 19             	cmp    $0x19,%eax
    ab3e:	b9 00 00 00 00       	mov    $0x0,%ecx
    ab43:	f2 0f 10 05 85 a4 00 	movsd  0xa485(%rip),%xmm0        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    ab4a:	00 
    ab4b:	44 8b 7e 04          	mov    0x4(%rsi),%r15d
    ab4f:	be 19 00 00 00       	mov    $0x19,%esi
    ab54:	0f 46 f0             	cmovbe %eax,%esi
    ab57:	85 c0                	test   %eax,%eax
    ab59:	0f 95 c2             	setne  %dl
    ab5c:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    ab60:	0f 9b c0             	setnp  %al
    ab63:	0f 45 c1             	cmovne %ecx,%eax
    ab66:	84 c2                	test   %al,%dl
    ab68:	0f 84 92 09 00 00    	je     b500 <read_table+0x1010>
    ab6e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    ab73:	49 c1 e9 20          	shr    $0x20,%r9
    ab77:	31 c9                	xor    %ecx,%ecx
    ab79:	48 8b 3d e8 e6 33 00 	mov    0x33e6e8(%rip),%rdi        # 349268 <g_tail>
    ab80:	f2 0f 10 35 60 a4 00 	movsd  0xa460(%rip),%xmm6        # 14fe8 <__PRETTY_FUNCTION__.5886+0x808>
    ab87:	00 
    ab88:	f2 0f 10 2d 18 a8 00 	movsd  0xa818(%rip),%xmm5        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    ab8f:	00 
    ab90:	49 be 00 00 00 00 00 	movabs $0x8000000000000000,%r14
    ab97:	00 00 80 
    ab9a:	4c 8b 20             	mov    (%rax),%r12
    ab9d:	f2 0f 10 48 08       	movsd  0x8(%rax),%xmm1
    aba2:	8b 68 10             	mov    0x10(%rax),%ebp
    aba5:	85 ed                	test   %ebp,%ebp
    aba7:	0f 84 a5 01 00 00    	je     ad52 <read_table+0x862>
    abad:	46 8d 54 0d 00       	lea    0x0(%rbp,%r9,1),%r10d
    abb2:	66 0f 28 e6          	movapd %xmm6,%xmm4
    abb6:	45 89 c8             	mov    %r9d,%r8d
    abb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    abc0:	44 89 c8             	mov    %r9d,%eax
    abc3:	66 0f ef db          	pxor   %xmm3,%xmm3
    abc7:	66 0f ef d2          	pxor   %xmm2,%xmm2
    abcb:	31 d2                	xor    %edx,%edx
    abcd:	f7 f5                	div    %ebp
    abcf:	f2 49 0f 2a d8       	cvtsi2sd %r8,%xmm3
    abd4:	45 8d 41 01          	lea    0x1(%r9),%r8d
    abd8:	f2 49 0f 2a d0       	cvtsi2sd %r8,%xmm2
    abdd:	4d 89 c1             	mov    %r8,%r9
    abe0:	f2 0f 59 d9          	mulsd  %xmm1,%xmm3
    abe4:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    abe8:	48 c1 e2 06          	shl    $0x6,%rdx
    abec:	49 8d 04 14          	lea    (%r12,%rdx,1),%rax
    abf0:	48 8b 10             	mov    (%rax),%rdx
    abf3:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    abf7:	48 39 d7             	cmp    %rdx,%rdi
    abfa:	0f 84 d0 00 00 00    	je     acd0 <read_table+0x7e0>
    ac00:	39 f1                	cmp    %esi,%ecx
    ac02:	72 24                	jb     ac28 <read_table+0x738>
    ac04:	e9 c7 00 00 00       	jmpq   acd0 <read_table+0x7e0>
    ac09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ac10:	4c 89 da             	mov    %r11,%rdx
    ac13:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    ac17:	48 39 d7             	cmp    %rdx,%rdi
    ac1a:	0f 84 b0 00 00 00    	je     acd0 <read_table+0x7e0>
    ac20:	39 ce                	cmp    %ecx,%esi
    ac22:	0f 86 a8 00 00 00    	jbe    acd0 <read_table+0x7e0>
    ac28:	4c 8b 1a             	mov    (%rdx),%r11
    ac2b:	4c 89 d8             	mov    %r11,%rax
    ac2e:	83 e0 03             	and    $0x3,%eax
    ac31:	48 83 e8 01          	sub    $0x1,%rax
    ac35:	48 83 f8 01          	cmp    $0x1,%rax
    ac39:	76 d5                	jbe    ac10 <read_table+0x720>
    ac3b:	f2 0f 10 42 18       	movsd  0x18(%rdx),%xmm0
    ac40:	66 0f 2f d0          	comisd %xmm0,%xmm2
    ac44:	76 6a                	jbe    acb0 <read_table+0x7c0>
    ac46:	66 0f 2f c3          	comisd %xmm3,%xmm0
    ac4a:	72 64                	jb     acb0 <read_table+0x7c0>
    ac4c:	89 c8                	mov    %ecx,%eax
    ac4e:	66 0f 2e 44 c4 70    	ucomisd 0x70(%rsp,%rax,8),%xmm0
    ac54:	7a 02                	jp     ac58 <read_table+0x768>
    ac56:	74 58                	je     acb0 <read_table+0x7c0>
    ac58:	8d 41 01             	lea    0x1(%rcx),%eax
    ac5b:	48 89 c1             	mov    %rax,%rcx
    ac5e:	f2 0f 11 44 c4 70    	movsd  %xmm0,0x70(%rsp,%rax,8)
    ac64:	eb aa                	jmp    ac10 <read_table+0x720>
    ac66:	48 85 c9             	test   %rcx,%rcx
    ac69:	0f 85 58 fe ff ff    	jne    aac7 <read_table+0x5d7>
    ac6f:	48 89 c1             	mov    %rax,%rcx
    ac72:	48 83 c9 03          	or     $0x3,%rcx
    ac76:	f0 48 0f b1 0a       	lock cmpxchg %rcx,(%rdx)
    ac7b:	0f 84 46 fe ff ff    	je     aac7 <read_table+0x5d7>
    ac81:	e9 22 fe ff ff       	jmpq   aaa8 <read_table+0x5b8>
    ac86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ac8d:	00 00 00 
    ac90:	e8 fb 6c ff ff       	callq  1990 <pthread_self@plt>
    ac95:	48 8d 3d 64 bb 00 00 	lea    0xbb64(%rip),%rdi        # 16800 <__PRETTY_FUNCTION__.6556+0xa40>
    ac9c:	48 89 c6             	mov    %rax,%rsi
    ac9f:	31 c0                	xor    %eax,%eax
    aca1:	e8 3a ef ff ff       	callq  9be0 <error>
    aca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    acad:	00 00 00 
    acb0:	66 0f 2f c2          	comisd %xmm2,%xmm0
    acb4:	0f 82 56 ff ff ff    	jb     ac10 <read_table+0x720>
    acba:	66 0f 2f e0          	comisd %xmm0,%xmm4
    acbe:	0f 86 4c ff ff ff    	jbe    ac10 <read_table+0x720>
    acc4:	66 0f 28 e0          	movapd %xmm0,%xmm4
    acc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    accf:	00 
    acd0:	45 39 d1             	cmp    %r10d,%r9d
    acd3:	0f 85 e7 fe ff ff    	jne    abc0 <read_table+0x6d0>
    acd9:	66 0f 2e e6          	ucomisd %xmm6,%xmm4
    acdd:	0f 8b 65 08 00 00    	jnp    b548 <read_table+0x1058>
    ace3:	66 0f 28 d4          	movapd %xmm4,%xmm2
    ace7:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
    aceb:	66 0f 2f d5          	comisd %xmm5,%xmm2
    acef:	0f 83 50 06 00 00    	jae    b345 <read_table+0xe55>
    acf5:	f2 4c 0f 2c ca       	cvttsd2si %xmm2,%r9
    acfa:	66 0f 2f 15 4e e3 00 	comisd 0xe34e(%rip),%xmm2        # 19050 <__PRETTY_FUNCTION__.6556+0x3290>
    ad01:	00 
    ad02:	0f 87 4b 08 00 00    	ja     b553 <read_table+0x1063>
    ad08:	4d 85 c9             	test   %r9,%r9
    ad0b:	0f 88 49 06 00 00    	js     b35a <read_table+0xe6a>
    ad11:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ad15:	f2 49 0f 2a c1       	cvtsi2sd %r9,%xmm0
    ad1a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    ad1e:	66 0f 2f c4          	comisd %xmm4,%xmm0
    ad22:	0f 87 5c 06 00 00    	ja     b384 <read_table+0xe94>
    ad28:	4c 89 c8             	mov    %r9,%rax
    ad2b:	48 83 c0 01          	add    $0x1,%rax
    ad2f:	0f 88 58 06 00 00    	js     b38d <read_table+0xe9d>
    ad35:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ad39:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    ad3e:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    ad42:	66 0f 2e e0          	ucomisd %xmm0,%xmm4
    ad46:	4c 0f 43 c8          	cmovae %rax,%r9
    ad4a:	39 ce                	cmp    %ecx,%esi
    ad4c:	0f 85 53 fe ff ff    	jne    aba5 <read_table+0x6b5>
    ad52:	39 ce                	cmp    %ecx,%esi
    ad54:	0f 46 ce             	cmovbe %esi,%ecx
    ad57:	83 f9 01             	cmp    $0x1,%ecx
    ad5a:	0f 86 a0 07 00 00    	jbe    b500 <read_table+0x1010>
    ad60:	8d 51 ff             	lea    -0x1(%rcx),%edx
    ad63:	83 f9 02             	cmp    $0x2,%ecx
    ad66:	0f 84 a1 07 00 00    	je     b50d <read_table+0x101d>
    ad6c:	66 0f 28 8c 24 80 00 	movapd 0x80(%rsp),%xmm1
    ad73:	00 00 
    ad75:	66 0f 10 7c 24 78    	movupd 0x78(%rsp),%xmm7
    ad7b:	66 0f ef ed          	pxor   %xmm5,%xmm5
    ad7f:	89 d0                	mov    %edx,%eax
    ad81:	d1 e8                	shr    %eax
    ad83:	66 0f 5c cf          	subpd  %xmm7,%xmm1
    ad87:	66 0f 28 c1          	movapd %xmm1,%xmm0
    ad8b:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    ad8f:	f2 0f 58 c5          	addsd  %xmm5,%xmm0
    ad93:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ad97:	83 f8 01             	cmp    $0x1,%eax
    ad9a:	0f 84 e0 06 00 00    	je     b480 <read_table+0xf90>
    ada0:	66 0f 28 8c 24 90 00 	movapd 0x90(%rsp),%xmm1
    ada7:	00 00 
    ada9:	66 0f 10 b4 24 88 00 	movupd 0x88(%rsp),%xmm6
    adb0:	00 00 
    adb2:	66 0f 5c ce          	subpd  %xmm6,%xmm1
    adb6:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    adba:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    adbe:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    adc2:	83 f8 02             	cmp    $0x2,%eax
    adc5:	0f 84 b5 06 00 00    	je     b480 <read_table+0xf90>
    adcb:	66 0f 28 8c 24 a0 00 	movapd 0xa0(%rsp),%xmm1
    add2:	00 00 
    add4:	66 0f 10 bc 24 98 00 	movupd 0x98(%rsp),%xmm7
    addb:	00 00 
    addd:	66 0f 5c cf          	subpd  %xmm7,%xmm1
    ade1:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ade5:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    ade9:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    aded:	83 f8 03             	cmp    $0x3,%eax
    adf0:	0f 84 8a 06 00 00    	je     b480 <read_table+0xf90>
    adf6:	66 0f 28 8c 24 b0 00 	movapd 0xb0(%rsp),%xmm1
    adfd:	00 00 
    adff:	66 0f 10 ac 24 a8 00 	movupd 0xa8(%rsp),%xmm5
    ae06:	00 00 
    ae08:	66 0f 5c cd          	subpd  %xmm5,%xmm1
    ae0c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ae10:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    ae14:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ae18:	83 f8 04             	cmp    $0x4,%eax
    ae1b:	0f 84 5f 06 00 00    	je     b480 <read_table+0xf90>
    ae21:	66 0f 28 8c 24 c0 00 	movapd 0xc0(%rsp),%xmm1
    ae28:	00 00 
    ae2a:	66 0f 10 b4 24 b8 00 	movupd 0xb8(%rsp),%xmm6
    ae31:	00 00 
    ae33:	66 0f 5c ce          	subpd  %xmm6,%xmm1
    ae37:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ae3b:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    ae3f:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ae43:	83 f8 05             	cmp    $0x5,%eax
    ae46:	0f 84 34 06 00 00    	je     b480 <read_table+0xf90>
    ae4c:	66 0f 28 8c 24 d0 00 	movapd 0xd0(%rsp),%xmm1
    ae53:	00 00 
    ae55:	66 0f 10 bc 24 c8 00 	movupd 0xc8(%rsp),%xmm7
    ae5c:	00 00 
    ae5e:	66 0f 5c cf          	subpd  %xmm7,%xmm1
    ae62:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ae66:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    ae6a:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ae6e:	83 f8 06             	cmp    $0x6,%eax
    ae71:	0f 84 09 06 00 00    	je     b480 <read_table+0xf90>
    ae77:	66 0f 28 8c 24 e0 00 	movapd 0xe0(%rsp),%xmm1
    ae7e:	00 00 
    ae80:	66 0f 10 ac 24 d8 00 	movupd 0xd8(%rsp),%xmm5
    ae87:	00 00 
    ae89:	66 0f 5c cd          	subpd  %xmm5,%xmm1
    ae8d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ae91:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    ae95:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    ae99:	83 f8 07             	cmp    $0x7,%eax
    ae9c:	0f 84 de 05 00 00    	je     b480 <read_table+0xf90>
    aea2:	66 0f 28 8c 24 f0 00 	movapd 0xf0(%rsp),%xmm1
    aea9:	00 00 
    aeab:	66 0f 10 b4 24 e8 00 	movupd 0xe8(%rsp),%xmm6
    aeb2:	00 00 
    aeb4:	66 0f 5c ce          	subpd  %xmm6,%xmm1
    aeb8:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    aebc:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    aec0:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    aec4:	83 f8 08             	cmp    $0x8,%eax
    aec7:	0f 84 b3 05 00 00    	je     b480 <read_table+0xf90>
    aecd:	66 0f 28 8c 24 00 01 	movapd 0x100(%rsp),%xmm1
    aed4:	00 00 
    aed6:	66 0f 10 bc 24 f8 00 	movupd 0xf8(%rsp),%xmm7
    aedd:	00 00 
    aedf:	66 0f 5c cf          	subpd  %xmm7,%xmm1
    aee3:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    aee7:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    aeeb:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    aeef:	83 f8 09             	cmp    $0x9,%eax
    aef2:	0f 84 88 05 00 00    	je     b480 <read_table+0xf90>
    aef8:	66 0f 28 8c 24 10 01 	movapd 0x110(%rsp),%xmm1
    aeff:	00 00 
    af01:	66 0f 10 ac 24 08 01 	movupd 0x108(%rsp),%xmm5
    af08:	00 00 
    af0a:	66 0f 5c cd          	subpd  %xmm5,%xmm1
    af0e:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    af12:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    af16:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    af1a:	83 f8 0a             	cmp    $0xa,%eax
    af1d:	0f 84 5d 05 00 00    	je     b480 <read_table+0xf90>
    af23:	66 0f 28 8c 24 20 01 	movapd 0x120(%rsp),%xmm1
    af2a:	00 00 
    af2c:	66 0f 10 b4 24 18 01 	movupd 0x118(%rsp),%xmm6
    af33:	00 00 
    af35:	66 0f 5c ce          	subpd  %xmm6,%xmm1
    af39:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    af3d:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    af41:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    af45:	83 f8 0c             	cmp    $0xc,%eax
    af48:	0f 85 32 05 00 00    	jne    b480 <read_table+0xf90>
    af4e:	66 0f 28 8c 24 30 01 	movapd 0x130(%rsp),%xmm1
    af55:	00 00 
    af57:	66 0f 10 bc 24 28 01 	movupd 0x128(%rsp),%xmm7
    af5e:	00 00 
    af60:	66 0f 5c cf          	subpd  %xmm7,%xmm1
    af64:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    af68:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    af6c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    af70:	66 0f ef c9          	pxor   %xmm1,%xmm1
    af74:	31 c0                	xor    %eax,%eax
    af76:	f2 0f 2a ca          	cvtsi2sd %edx,%xmm1
    af7a:	ba 02 00 00 00       	mov    $0x2,%edx
    af7f:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    af83:	66 0f ef c9          	pxor   %xmm1,%xmm1
    af87:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    af8b:	83 f9 03             	cmp    $0x3,%ecx
    af8e:	0f 86 fb 02 00 00    	jbe    b28f <read_table+0xd9f>
    af94:	f2 0f 10 9c 24 80 00 	movsd  0x80(%rsp),%xmm3
    af9b:	00 00 
    af9d:	66 0f 28 cb          	movapd %xmm3,%xmm1
    afa1:	f2 0f 5c 4c 24 78    	subsd  0x78(%rsp),%xmm1
    afa7:	66 0f 2f c1          	comisd %xmm1,%xmm0
    afab:	0f 86 f9 04 00 00    	jbe    b4aa <read_table+0xfba>
    afb1:	66 0f ef ed          	pxor   %xmm5,%xmm5
    afb5:	b8 01 00 00 00       	mov    $0x1,%eax
    afba:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    afbe:	f2 0f 10 94 24 88 00 	movsd  0x88(%rsp),%xmm2
    afc5:	00 00 
    afc7:	66 0f 28 ea          	movapd %xmm2,%xmm5
    afcb:	f2 0f 5c eb          	subsd  %xmm3,%xmm5
    afcf:	66 0f 2f c5          	comisd %xmm5,%xmm0
    afd3:	76 07                	jbe    afdc <read_table+0xaec>
    afd5:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    afd9:	83 c0 01             	add    $0x1,%eax
    afdc:	83 f9 05             	cmp    $0x5,%ecx
    afdf:	0f 86 da 04 00 00    	jbe    b4bf <read_table+0xfcf>
    afe5:	f2 0f 10 9c 24 90 00 	movsd  0x90(%rsp),%xmm3
    afec:	00 00 
    afee:	66 0f 28 f3          	movapd %xmm3,%xmm6
    aff2:	f2 0f 5c f2          	subsd  %xmm2,%xmm6
    aff6:	66 0f 2f c6          	comisd %xmm6,%xmm0
    affa:	76 07                	jbe    b003 <read_table+0xb13>
    affc:	f2 0f 58 ce          	addsd  %xmm6,%xmm1
    b000:	83 c0 01             	add    $0x1,%eax
    b003:	f2 0f 10 94 24 98 00 	movsd  0x98(%rsp),%xmm2
    b00a:	00 00 
    b00c:	66 0f 28 ea          	movapd %xmm2,%xmm5
    b010:	f2 0f 5c eb          	subsd  %xmm3,%xmm5
    b014:	66 0f 2f c5          	comisd %xmm5,%xmm0
    b018:	76 07                	jbe    b021 <read_table+0xb31>
    b01a:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    b01e:	83 c0 01             	add    $0x1,%eax
    b021:	83 f9 07             	cmp    $0x7,%ecx
    b024:	0f 86 a9 04 00 00    	jbe    b4d3 <read_table+0xfe3>
    b02a:	f2 0f 10 9c 24 a0 00 	movsd  0xa0(%rsp),%xmm3
    b031:	00 00 
    b033:	66 0f 28 f3          	movapd %xmm3,%xmm6
    b037:	f2 0f 5c f2          	subsd  %xmm2,%xmm6
    b03b:	66 0f 2f c6          	comisd %xmm6,%xmm0
    b03f:	76 07                	jbe    b048 <read_table+0xb58>
    b041:	f2 0f 58 ce          	addsd  %xmm6,%xmm1
    b045:	83 c0 01             	add    $0x1,%eax
    b048:	f2 0f 10 94 24 a8 00 	movsd  0xa8(%rsp),%xmm2
    b04f:	00 00 
    b051:	66 0f 28 fa          	movapd %xmm2,%xmm7
    b055:	f2 0f 5c fb          	subsd  %xmm3,%xmm7
    b059:	66 0f 2f c7          	comisd %xmm7,%xmm0
    b05d:	76 07                	jbe    b066 <read_table+0xb76>
    b05f:	f2 0f 58 cf          	addsd  %xmm7,%xmm1
    b063:	83 c0 01             	add    $0x1,%eax
    b066:	83 f9 09             	cmp    $0x9,%ecx
    b069:	0f 86 5a 04 00 00    	jbe    b4c9 <read_table+0xfd9>
    b06f:	f2 0f 10 9c 24 b0 00 	movsd  0xb0(%rsp),%xmm3
    b076:	00 00 
    b078:	66 0f 28 eb          	movapd %xmm3,%xmm5
    b07c:	f2 0f 5c ea          	subsd  %xmm2,%xmm5
    b080:	66 0f 2f c5          	comisd %xmm5,%xmm0
    b084:	76 07                	jbe    b08d <read_table+0xb9d>
    b086:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    b08a:	83 c0 01             	add    $0x1,%eax
    b08d:	f2 0f 10 94 24 b8 00 	movsd  0xb8(%rsp),%xmm2
    b094:	00 00 
    b096:	66 0f 28 f2          	movapd %xmm2,%xmm6
    b09a:	f2 0f 5c f3          	subsd  %xmm3,%xmm6
    b09e:	66 0f 2f c6          	comisd %xmm6,%xmm0
    b0a2:	76 07                	jbe    b0ab <read_table+0xbbb>
    b0a4:	f2 0f 58 ce          	addsd  %xmm6,%xmm1
    b0a8:	83 c0 01             	add    $0x1,%eax
    b0ab:	83 f9 0b             	cmp    $0xb,%ecx
    b0ae:	0f 86 8a 04 00 00    	jbe    b53e <read_table+0x104e>
    b0b4:	f2 0f 10 9c 24 c0 00 	movsd  0xc0(%rsp),%xmm3
    b0bb:	00 00 
    b0bd:	66 0f 28 fb          	movapd %xmm3,%xmm7
    b0c1:	f2 0f 5c fa          	subsd  %xmm2,%xmm7
    b0c5:	66 0f 2f c7          	comisd %xmm7,%xmm0
    b0c9:	76 07                	jbe    b0d2 <read_table+0xbe2>
    b0cb:	f2 0f 58 cf          	addsd  %xmm7,%xmm1
    b0cf:	83 c0 01             	add    $0x1,%eax
    b0d2:	f2 0f 10 94 24 c8 00 	movsd  0xc8(%rsp),%xmm2
    b0d9:	00 00 
    b0db:	66 0f 28 ea          	movapd %xmm2,%xmm5
    b0df:	f2 0f 5c eb          	subsd  %xmm3,%xmm5
    b0e3:	66 0f 2f c5          	comisd %xmm5,%xmm0
    b0e7:	76 07                	jbe    b0f0 <read_table+0xc00>
    b0e9:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    b0ed:	83 c0 01             	add    $0x1,%eax
    b0f0:	83 f9 0d             	cmp    $0xd,%ecx
    b0f3:	0f 86 3b 04 00 00    	jbe    b534 <read_table+0x1044>
    b0f9:	f2 0f 10 9c 24 d0 00 	movsd  0xd0(%rsp),%xmm3
    b100:	00 00 
    b102:	66 0f 28 f3          	movapd %xmm3,%xmm6
    b106:	f2 0f 5c f2          	subsd  %xmm2,%xmm6
    b10a:	66 0f 2f c6          	comisd %xmm6,%xmm0
    b10e:	76 07                	jbe    b117 <read_table+0xc27>
    b110:	f2 0f 58 ce          	addsd  %xmm6,%xmm1
    b114:	83 c0 01             	add    $0x1,%eax
    b117:	f2 0f 10 94 24 d8 00 	movsd  0xd8(%rsp),%xmm2
    b11e:	00 00 
    b120:	66 0f 28 fa          	movapd %xmm2,%xmm7
    b124:	f2 0f 5c fb          	subsd  %xmm3,%xmm7
    b128:	66 0f 2f c7          	comisd %xmm7,%xmm0
    b12c:	76 07                	jbe    b135 <read_table+0xc45>
    b12e:	f2 0f 58 cf          	addsd  %xmm7,%xmm1
    b132:	83 c0 01             	add    $0x1,%eax
    b135:	83 f9 0f             	cmp    $0xf,%ecx
    b138:	0f 86 ec 03 00 00    	jbe    b52a <read_table+0x103a>
    b13e:	f2 0f 10 9c 24 e0 00 	movsd  0xe0(%rsp),%xmm3
    b145:	00 00 
    b147:	66 0f 28 eb          	movapd %xmm3,%xmm5
    b14b:	f2 0f 5c ea          	subsd  %xmm2,%xmm5
    b14f:	66 0f 2f c5          	comisd %xmm5,%xmm0
    b153:	76 07                	jbe    b15c <read_table+0xc6c>
    b155:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    b159:	83 c0 01             	add    $0x1,%eax
    b15c:	f2 0f 10 94 24 e8 00 	movsd  0xe8(%rsp),%xmm2
    b163:	00 00 
    b165:	66 0f 28 f2          	movapd %xmm2,%xmm6
    b169:	f2 0f 5c f3          	subsd  %xmm3,%xmm6
    b16d:	66 0f 2f c6          	comisd %xmm6,%xmm0
    b171:	76 07                	jbe    b17a <read_table+0xc8a>
    b173:	f2 0f 58 ce          	addsd  %xmm6,%xmm1
    b177:	83 c0 01             	add    $0x1,%eax
    b17a:	83 f9 11             	cmp    $0x11,%ecx
    b17d:	0f 86 9d 03 00 00    	jbe    b520 <read_table+0x1030>
    b183:	f2 0f 10 9c 24 f0 00 	movsd  0xf0(%rsp),%xmm3
    b18a:	00 00 
    b18c:	66 0f 28 fb          	movapd %xmm3,%xmm7
    b190:	f2 0f 5c fa          	subsd  %xmm2,%xmm7
    b194:	66 0f 2f c7          	comisd %xmm7,%xmm0
    b198:	76 07                	jbe    b1a1 <read_table+0xcb1>
    b19a:	f2 0f 58 cf          	addsd  %xmm7,%xmm1
    b19e:	83 c0 01             	add    $0x1,%eax
    b1a1:	f2 0f 10 94 24 f8 00 	movsd  0xf8(%rsp),%xmm2
    b1a8:	00 00 
    b1aa:	66 0f 28 ea          	movapd %xmm2,%xmm5
    b1ae:	f2 0f 5c eb          	subsd  %xmm3,%xmm5
    b1b2:	66 0f 2f c5          	comisd %xmm5,%xmm0
    b1b6:	76 07                	jbe    b1bf <read_table+0xccf>
    b1b8:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    b1bc:	83 c0 01             	add    $0x1,%eax
    b1bf:	83 f9 13             	cmp    $0x13,%ecx
    b1c2:	0f 86 b2 03 00 00    	jbe    b57a <read_table+0x108a>
    b1c8:	f2 0f 10 9c 24 00 01 	movsd  0x100(%rsp),%xmm3
    b1cf:	00 00 
    b1d1:	66 0f 28 f3          	movapd %xmm3,%xmm6
    b1d5:	f2 0f 5c f2          	subsd  %xmm2,%xmm6
    b1d9:	66 0f 2f c6          	comisd %xmm6,%xmm0
    b1dd:	76 07                	jbe    b1e6 <read_table+0xcf6>
    b1df:	f2 0f 58 ce          	addsd  %xmm6,%xmm1
    b1e3:	83 c0 01             	add    $0x1,%eax
    b1e6:	f2 0f 10 94 24 08 01 	movsd  0x108(%rsp),%xmm2
    b1ed:	00 00 
    b1ef:	66 0f 28 fa          	movapd %xmm2,%xmm7
    b1f3:	f2 0f 5c fb          	subsd  %xmm3,%xmm7
    b1f7:	66 0f 2f c7          	comisd %xmm7,%xmm0
    b1fb:	76 07                	jbe    b204 <read_table+0xd14>
    b1fd:	f2 0f 58 cf          	addsd  %xmm7,%xmm1
    b201:	83 c0 01             	add    $0x1,%eax
    b204:	83 f9 15             	cmp    $0x15,%ecx
    b207:	0f 86 63 03 00 00    	jbe    b570 <read_table+0x1080>
    b20d:	f2 0f 10 9c 24 10 01 	movsd  0x110(%rsp),%xmm3
    b214:	00 00 
    b216:	66 0f 28 eb          	movapd %xmm3,%xmm5
    b21a:	f2 0f 5c ea          	subsd  %xmm2,%xmm5
    b21e:	66 0f 2f c5          	comisd %xmm5,%xmm0
    b222:	76 07                	jbe    b22b <read_table+0xd3b>
    b224:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    b228:	83 c0 01             	add    $0x1,%eax
    b22b:	f2 0f 10 94 24 18 01 	movsd  0x118(%rsp),%xmm2
    b232:	00 00 
    b234:	66 0f 28 f2          	movapd %xmm2,%xmm6
    b238:	f2 0f 5c f3          	subsd  %xmm3,%xmm6
    b23c:	66 0f 2f c6          	comisd %xmm6,%xmm0
    b240:	76 07                	jbe    b249 <read_table+0xd59>
    b242:	f2 0f 58 ce          	addsd  %xmm6,%xmm1
    b246:	83 c0 01             	add    $0x1,%eax
    b249:	83 f9 17             	cmp    $0x17,%ecx
    b24c:	0f 86 63 02 00 00    	jbe    b4b5 <read_table+0xfc5>
    b252:	f2 0f 10 9c 24 20 01 	movsd  0x120(%rsp),%xmm3
    b259:	00 00 
    b25b:	66 0f 28 fb          	movapd %xmm3,%xmm7
    b25f:	f2 0f 5c fa          	subsd  %xmm2,%xmm7
    b263:	66 0f 2f c7          	comisd %xmm7,%xmm0
    b267:	76 07                	jbe    b270 <read_table+0xd80>
    b269:	f2 0f 58 cf          	addsd  %xmm7,%xmm1
    b26d:	83 c0 01             	add    $0x1,%eax
    b270:	f2 0f 10 94 24 28 01 	movsd  0x128(%rsp),%xmm2
    b277:	00 00 
    b279:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
    b27d:	66 0f 2f c2          	comisd %xmm2,%xmm0
    b281:	76 07                	jbe    b28a <read_table+0xd9a>
    b283:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    b287:	83 c0 01             	add    $0x1,%eax
    b28a:	ba 18 00 00 00       	mov    $0x18,%edx
    b28f:	89 d7                	mov    %edx,%edi
    b291:	8d 72 ff             	lea    -0x1(%rdx),%esi
    b294:	f2 0f 10 54 fc 70    	movsd  0x70(%rsp,%rdi,8),%xmm2
    b29a:	f2 0f 5c 54 f4 70    	subsd  0x70(%rsp,%rsi,8),%xmm2
    b2a0:	66 0f 2f c2          	comisd %xmm2,%xmm0
    b2a4:	76 07                	jbe    b2ad <read_table+0xdbd>
    b2a6:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    b2aa:	83 c0 01             	add    $0x1,%eax
    b2ad:	83 c2 01             	add    $0x1,%edx
    b2b0:	39 d1                	cmp    %edx,%ecx
    b2b2:	73 db                	jae    b28f <read_table+0xd9f>
    b2b4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b2b8:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    b2bc:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    b2c0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b2c4:	66 0f ef f6          	pxor   %xmm6,%xmm6
    b2c8:	f2 49 0f 2a c7       	cvtsi2sd %r15,%xmm0
    b2cd:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    b2d1:	66 0f 2f f1          	comisd %xmm1,%xmm6
    b2d5:	73 41                	jae    b318 <read_table+0xe28>
    b2d7:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
    b2db:	7a 3b                	jp     b318 <read_table+0xe28>
    b2dd:	66 48 0f 7e ca       	movq   %xmm1,%rdx
    b2e2:	f2 0f 10 44 24 40    	movsd  0x40(%rsp),%xmm0
    b2e8:	66 48 0f 7e c0       	movq   %xmm0,%rax
    b2ed:	f0 49 0f b1 55 08    	lock cmpxchg %rdx,0x8(%r13)
    b2f3:	0f 85 e9 f2 ff ff    	jne    a5e2 <read_table+0xf2>
    b2f9:	41 8b 55 10          	mov    0x10(%r13),%edx
    b2fd:	bf 01 00 00 00       	mov    $0x1,%edi
    b302:	b8 02 00 00 00       	mov    $0x2,%eax
    b307:	48 8d 35 a2 b5 00 00 	lea    0xb5a2(%rip),%rsi        # 168b0 <__PRETTY_FUNCTION__.6556+0xaf0>
    b30e:	e8 5d 66 ff ff       	callq  1970 <__printf_chk@plt>
    b313:	e9 ca f2 ff ff       	jmpq   a5e2 <read_table+0xf2>
    b318:	f2 0f 10 0d a0 9c 00 	movsd  0x9ca0(%rip),%xmm1        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    b31f:	00 
    b320:	48 ba 00 00 00 00 00 	movabs $0x3ff0000000000000,%rdx
    b327:	00 f0 3f 
    b32a:	eb b6                	jmp    b2e2 <read_table+0xdf2>
    b32c:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    b331:	48 89 ef             	mov    %rbp,%rdi
    b334:	e8 e7 66 ff ff       	callq  1a20 <drand48_r@plt>
    b339:	e9 7b f4 ff ff       	jmpq   a7b9 <read_table+0x2c9>
    b33e:	d1 e8                	shr    %eax
    b340:	e9 f1 f7 ff ff       	jmpq   ab36 <read_table+0x646>
    b345:	66 0f 28 c2          	movapd %xmm2,%xmm0
    b349:	f2 0f 5c c5          	subsd  %xmm5,%xmm0
    b34d:	f2 4c 0f 2c c8       	cvttsd2si %xmm0,%r9
    b352:	4d 31 f1             	xor    %r14,%r9
    b355:	e9 a0 f9 ff ff       	jmpq   acfa <read_table+0x80a>
    b35a:	4c 89 c8             	mov    %r9,%rax
    b35d:	4c 89 ca             	mov    %r9,%rdx
    b360:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b364:	48 d1 e8             	shr    %rax
    b367:	83 e2 01             	and    $0x1,%edx
    b36a:	48 09 d0             	or     %rdx,%rax
    b36d:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    b372:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    b376:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    b37a:	66 0f 2f c4          	comisd %xmm4,%xmm0
    b37e:	0f 86 a4 f9 ff ff    	jbe    ad28 <read_table+0x838>
    b384:	49 83 e9 01          	sub    $0x1,%r9
    b388:	e9 bd f9 ff ff       	jmpq   ad4a <read_table+0x85a>
    b38d:	48 89 c2             	mov    %rax,%rdx
    b390:	49 89 c0             	mov    %rax,%r8
    b393:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b397:	48 d1 ea             	shr    %rdx
    b39a:	41 83 e0 01          	and    $0x1,%r8d
    b39e:	4c 09 c2             	or     %r8,%rdx
    b3a1:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    b3a6:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    b3aa:	e9 8f f9 ff ff       	jmpq   ad3e <read_table+0x84e>
    b3af:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
    b3b4:	48 8b 05 15 9c 00 00 	mov    0x9c15(%rip),%rax        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    b3bb:	44 89 e6             	mov    %r12d,%esi
    b3be:	49 89 45 08          	mov    %rax,0x8(%r13)
    b3c2:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
    b3c9:	ff ff ff 
    b3cc:	49 c7 45 18 00 00 00 	movq   $0x0,0x18(%r13)
    b3d3:	00 
    b3d4:	45 89 65 10          	mov    %r12d,0x10(%r13)
    b3d8:	41 c7 45 40 00 00 00 	movl   $0x0,0x40(%r13)
    b3df:	00 
    b3e0:	49 89 85 80 00 00 00 	mov    %rax,0x80(%r13)
    b3e7:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    b3ee:	00 00 
    b3f0:	48 8d b8 08 49 ff ff 	lea    -0xb6f8(%rax),%rdi
    b3f7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    b3fc:	e8 3f 8f 00 00       	callq  14340 <alloc_array_nodes>
    b401:	48 89 c1             	mov    %rax,%rcx
    b404:	48 85 c0             	test   %rax,%rax
    b407:	0f 84 d0 00 00 00    	je     b4dd <read_table+0xfed>
    b40d:	48 89 c2             	mov    %rax,%rdx
    b410:	89 e8                	mov    %ebp,%eax
    b412:	48 83 c0 01          	add    $0x1,%rax
    b416:	48 c1 e0 06          	shl    $0x6,%rax
    b41a:	48 01 c8             	add    %rcx,%rax
    b41d:	48 89 1a             	mov    %rbx,(%rdx)
    b420:	48 83 c2 40          	add    $0x40,%rdx
    b424:	c7 42 e8 00 00 00 00 	movl   $0x0,-0x18(%rdx)
    b42b:	48 c7 42 e0 00 00 00 	movq   $0x0,-0x20(%rdx)
    b432:	00 
    b433:	48 c7 42 c8 00 00 00 	movq   $0x0,-0x38(%rdx)
    b43a:	00 
    b43b:	48 39 c2             	cmp    %rax,%rdx
    b43e:	75 dd                	jne    b41d <read_table+0xf2d>
    b440:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    b445:	31 c0                	xor    %eax,%eax
    b447:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    b44b:	f0 4c 0f b1 6e 18    	lock cmpxchg %r13,0x18(%rsi)
    b451:	0f 84 27 f1 ff ff    	je     a57e <read_table+0x8e>
    b457:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    b45c:	49 8b 75 00          	mov    0x0(%r13),%rsi
    b460:	48 81 c7 08 49 ff ff 	add    $0xffffffffffff4908,%rdi
    b467:	e8 24 8f 00 00       	callq  14390 <free_array_nodes>
    b46c:	4c 89 ef             	mov    %r13,%rdi
    b46f:	e8 0c 62 ff ff       	callq  1680 <free@plt>
    b474:	e9 05 f1 ff ff       	jmpq   a57e <read_table+0x8e>
    b479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b480:	89 d6                	mov    %edx,%esi
    b482:	83 e6 fe             	and    $0xfffffffe,%esi
    b485:	8d 46 02             	lea    0x2(%rsi),%eax
    b488:	39 d6                	cmp    %edx,%esi
    b48a:	0f 84 e0 fa ff ff    	je     af70 <read_table+0xa80>
    b490:	89 c6                	mov    %eax,%esi
    b492:	83 e8 01             	sub    $0x1,%eax
    b495:	f2 0f 10 4c f4 70    	movsd  0x70(%rsp,%rsi,8),%xmm1
    b49b:	f2 0f 5c 4c c4 70    	subsd  0x70(%rsp,%rax,8),%xmm1
    b4a1:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    b4a5:	e9 c6 fa ff ff       	jmpq   af70 <read_table+0xa80>
    b4aa:	31 c0                	xor    %eax,%eax
    b4ac:	66 0f ef c9          	pxor   %xmm1,%xmm1
    b4b0:	e9 09 fb ff ff       	jmpq   afbe <read_table+0xace>
    b4b5:	ba 16 00 00 00       	mov    $0x16,%edx
    b4ba:	e9 d0 fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b4bf:	ba 04 00 00 00       	mov    $0x4,%edx
    b4c4:	e9 c6 fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b4c9:	ba 08 00 00 00       	mov    $0x8,%edx
    b4ce:	e9 bc fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b4d3:	ba 06 00 00 00       	mov    $0x6,%edx
    b4d8:	e9 b2 fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b4dd:	4c 89 ef             	mov    %r13,%rdi
    b4e0:	e8 9b 61 ff ff       	callq  1680 <free@plt>
    b4e5:	44 89 e6             	mov    %r12d,%esi
    b4e8:	48 8d 3d 89 b3 00 00 	lea    0xb389(%rip),%rdi        # 16878 <__PRETTY_FUNCTION__.6556+0xab8>
    b4ef:	31 c0                	xor    %eax,%eax
    b4f1:	e8 ea e6 ff ff       	callq  9be0 <error>
    b4f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b4fd:	00 00 00 
    b500:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b504:	66 0f 28 c8          	movapd %xmm0,%xmm1
    b508:	e9 af fd ff ff       	jmpq   b2bc <read_table+0xdcc>
    b50d:	b8 02 00 00 00       	mov    $0x2,%eax
    b512:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b516:	e9 75 ff ff ff       	jmpq   b490 <read_table+0xfa0>
    b51b:	e8 80 62 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    b520:	ba 10 00 00 00       	mov    $0x10,%edx
    b525:	e9 65 fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b52a:	ba 0e 00 00 00       	mov    $0xe,%edx
    b52f:	e9 5b fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b534:	ba 0c 00 00 00       	mov    $0xc,%edx
    b539:	e9 51 fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b53e:	ba 0a 00 00 00       	mov    $0xa,%edx
    b543:	e9 47 fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b548:	0f 85 95 f7 ff ff    	jne    ace3 <read_table+0x7f3>
    b54e:	e9 ff f7 ff ff       	jmpq   ad52 <read_table+0x862>
    b553:	66 0f 28 c4          	movapd %xmm4,%xmm0
    b557:	f2 0f 10 1d f9 da 00 	movsd  0xdaf9(%rip),%xmm3        # 19058 <__PRETTY_FUNCTION__.6556+0x3298>
    b55e:	00 
    b55f:	b8 04 00 00 00       	mov    $0x4,%eax
    b564:	48 8d 3d bd b2 00 00 	lea    0xb2bd(%rip),%rdi        # 16828 <__PRETTY_FUNCTION__.6556+0xa68>
    b56b:	e8 70 e6 ff ff       	callq  9be0 <error>
    b570:	ba 14 00 00 00       	mov    $0x14,%edx
    b575:	e9 15 fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b57a:	ba 12 00 00 00       	mov    $0x12,%edx
    b57f:	e9 0b fd ff ff       	jmpq   b28f <read_table+0xd9f>
    b584:	66 90                	xchg   %ax,%ax
    b586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b58d:	00 00 00 

000000000000b590 <hash>:
    b590:	66 0f 28 d0          	movapd %xmm0,%xmm2
    b594:	f2 0f 10 1d 0c 9e 00 	movsd  0x9e0c(%rip),%xmm3        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    b59b:	00 
    b59c:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
    b5a0:	66 0f 2f d3          	comisd %xmm3,%xmm2
    b5a4:	73 5a                	jae    b600 <hash+0x70>
    b5a6:	f2 48 0f 2c c2       	cvttsd2si %xmm2,%rax
    b5ab:	66 0f 2f 15 9d da 00 	comisd 0xda9d(%rip),%xmm2        # 19050 <__PRETTY_FUNCTION__.6556+0x3290>
    b5b2:	00 
    b5b3:	0f 87 be 00 00 00    	ja     b677 <safe+0x37>
    b5b9:	48 85 c0             	test   %rax,%rax
    b5bc:	0f 88 86 00 00 00    	js     b648 <safe+0x8>
    b5c2:	66 0f ef d2          	pxor   %xmm2,%xmm2
    b5c6:	f2 48 0f 2a d0       	cvtsi2sd %rax,%xmm2
    b5cb:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    b5cf:	66 0f 2f d0          	comisd %xmm0,%xmm2
    b5d3:	0f 87 99 00 00 00    	ja     b672 <safe+0x32>
    b5d9:	48 89 c1             	mov    %rax,%rcx
    b5dc:	48 83 c1 01          	add    $0x1,%rcx
    b5e0:	78 36                	js     b618 <hash+0x88>
    b5e2:	66 0f ef d2          	pxor   %xmm2,%xmm2
    b5e6:	f2 48 0f 2a d1       	cvtsi2sd %rcx,%xmm2
    b5eb:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    b5ef:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    b5f3:	48 0f 43 c1          	cmovae %rcx,%rax
    b5f7:	c3                   	retq   
    b5f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b5ff:	00 
    b600:	66 0f 28 e2          	movapd %xmm2,%xmm4
    b604:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    b608:	f2 48 0f 2c c4       	cvttsd2si %xmm4,%rax
    b60d:	48 0f ba f8 3f       	btc    $0x3f,%rax
    b612:	eb 97                	jmp    b5ab <hash+0x1b>
    b614:	0f 1f 40 00          	nopl   0x0(%rax)
    b618:	48 89 ca             	mov    %rcx,%rdx
    b61b:	48 89 ce             	mov    %rcx,%rsi
    b61e:	66 0f ef d2          	pxor   %xmm2,%xmm2
    b622:	83 e6 01             	and    $0x1,%esi
    b625:	48 d1 ea             	shr    %rdx
    b628:	48 09 f2             	or     %rsi,%rdx
    b62b:	f2 48 0f 2a d2       	cvtsi2sd %rdx,%xmm2
    b630:	f2 0f 58 d2          	addsd  %xmm2,%xmm2
    b634:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    b638:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    b63c:	48 0f 43 c1          	cmovae %rcx,%rax
    b640:	c3                   	retq   
    b641:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b648:	48 89 c2             	mov    %rax,%rdx
    b64b:	48 89 c1             	mov    %rax,%rcx
    b64e:	66 0f ef d2          	pxor   %xmm2,%xmm2
    b652:	48 d1 ea             	shr    %rdx
    b655:	83 e1 01             	and    $0x1,%ecx
    b658:	48 09 ca             	or     %rcx,%rdx
    b65b:	f2 48 0f 2a d2       	cvtsi2sd %rdx,%xmm2
    b660:	f2 0f 58 d2          	addsd  %xmm2,%xmm2
    b664:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    b668:	66 0f 2f d0          	comisd %xmm0,%xmm2
    b66c:	0f 86 67 ff ff ff    	jbe    b5d9 <hash+0x49>
    b672:	48 83 e8 01          	sub    $0x1,%rax
    b676:	c3                   	retq   
    b677:	50                   	push   %rax
    b678:	f2 0f 10 1d d8 d9 00 	movsd  0xd9d8(%rip),%xmm3        # 19058 <__PRETTY_FUNCTION__.6556+0x3298>
    b67f:	00 
    b680:	48 8d 3d a1 b1 00 00 	lea    0xb1a1(%rip),%rdi        # 16828 <__PRETTY_FUNCTION__.6556+0xa68>
    b687:	b8 04 00 00 00       	mov    $0x4,%eax
    b68c:	e8 4f e5 ff ff       	callq  9be0 <error>
    b691:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b69d:	00 00 00 

000000000000b6a0 <nb_calqueue_init>:
    b6a0:	41 54                	push   %r12
    b6a2:	55                   	push   %rbp
    b6a3:	89 fd                	mov    %edi,%ebp
    b6a5:	53                   	push   %rbx
    b6a6:	89 f3                	mov    %esi,%ebx
    b6a8:	be 04 00 00 00       	mov    $0x4,%esi
    b6ad:	48 83 ec 10          	sub    $0x10,%rsp
    b6b1:	89 3d 69 1a 31 00    	mov    %edi,0x311a69(%rip)        # 31d120 <threads>
    b6b7:	0f af ff             	imul   %edi,%edi
    b6ba:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    b6c0:	e8 eb 61 ff ff       	callq  18b0 <calloc@plt>
    b6c5:	be 48 00 00 00       	mov    $0x48,%esi
    b6ca:	bf 01 00 00 00       	mov    $0x1,%edi
    b6cf:	48 89 05 52 1a 31 00 	mov    %rax,0x311a52(%rip)        # 31d128 <prune_array>
    b6d6:	e8 d5 61 ff ff       	callq  18b0 <calloc@plt>
    b6db:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    b6e1:	48 85 c0             	test   %rax,%rax
    b6e4:	0f 84 7e 01 00 00    	je     b868 <ind+0x174>
    b6ea:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b6ee:	89 28                	mov    %ebp,(%rax)
    b6f0:	48 8d 78 40          	lea    0x40(%rax),%rdi
    b6f4:	ba c0 00 00 00       	mov    $0xc0,%edx
    b6f9:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    b6fe:	89 58 04             	mov    %ebx,0x4(%rax)
    b701:	be 40 00 00 00       	mov    $0x40,%esi
    b706:	49 89 c4             	mov    %rax,%r12
    b709:	f2 0f 11 48 08       	movsd  %xmm1,0x8(%rax)
    b70e:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    b712:	f2 0f 11 40 10       	movsd  %xmm0,0x10(%rax)
    b717:	e8 54 63 ff ff       	callq  1a70 <posix_memalign@plt>
    b71c:	85 c0                	test   %eax,%eax
    b71e:	0f 85 3c 01 00 00    	jne    b860 <ind+0x16c>
    b724:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    b729:	48 8b 0d 90 98 00 00 	mov    0x9890(%rip),%rcx        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    b730:	be 01 00 00 00       	mov    $0x1,%esi
    b735:	48 89 48 08          	mov    %rcx,0x8(%rax)
    b739:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    b73e:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    b745:	00 
    b746:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    b74b:	49 8b 5c 24 40       	mov    0x40(%r12),%rbx
    b750:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%rax)
    b757:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    b75e:	00 00 
    b760:	48 8d a8 08 49 ff ff 	lea    -0xb6f8(%rax),%rbp
    b767:	48 89 ef             	mov    %rbp,%rdi
    b76a:	e8 d1 8b 00 00       	callq  14340 <alloc_array_nodes>
    b76f:	48 89 03             	mov    %rax,(%rbx)
    b772:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    b777:	48 83 38 00          	cmpq   $0x0,(%rax)
    b77b:	0f 84 d5 00 00 00    	je     b856 <ind+0x162>
    b781:	48 89 ef             	mov    %rbp,%rdi
    b784:	e8 57 8c 00 00       	callq  143e0 <mm_node_malloc>
    b789:	a8 03                	test   $0x3,%al
    b78b:	0f 85 af 00 00 00    	jne    b840 <ind+0x14c>
    b791:	48 85 c0             	test   %rax,%rax
    b794:	0f 84 a6 00 00 00    	je     b840 <ind+0x14c>
    b79a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b7a1:	48 8b 0d 40 98 00 00 	mov    0x9840(%rip),%rcx        # 14fe8 <__PRETTY_FUNCTION__.5886+0x808>
    b7a8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b7af:	00 
    b7b0:	48 89 05 b1 da 33 00 	mov    %rax,0x33dab1(%rip)        # 349268 <g_tail>
    b7b7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b7be:	49 8b 54 24 40       	mov    0x40(%r12),%rdx
    b7c3:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
    b7ca:	48 8b 12             	mov    (%rdx),%rdx
    b7cd:	48 89 48 18          	mov    %rcx,0x18(%rax)
    b7d1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b7d8:	00 
    b7d9:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    b7e0:	00 
    b7e1:	c7 40 2c ff ff ff ff 	movl   $0xffffffff,0x2c(%rax)
    b7e8:	c6 40 30 00          	movb   $0x0,0x30(%rax)
    b7ec:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
    b7f3:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    b7fa:	00 
    b7fb:	48 89 02             	mov    %rax,(%rdx)
    b7fe:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    b803:	48 8b 00             	mov    (%rax),%rax
    b806:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    b80d:	00 
    b80e:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    b813:	48 8b 00             	mov    (%rax),%rax
    b816:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
    b81d:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    b822:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
    b829:	00 00 00 00 
    b82d:	48 83 c4 10          	add    $0x10,%rsp
    b831:	4c 89 e0             	mov    %r12,%rax
    b834:	5b                   	pop    %rbx
    b835:	5d                   	pop    %rbp
    b836:	41 5c                	pop    %r12
    b838:	c3                   	retq   
    b839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b840:	e8 4b 61 ff ff       	callq  1990 <pthread_self@plt>
    b845:	48 8d 3d b4 af 00 00 	lea    0xafb4(%rip),%rdi        # 16800 <__PRETTY_FUNCTION__.6556+0xa40>
    b84c:	48 89 c6             	mov    %rax,%rsi
    b84f:	31 c0                	xor    %eax,%eax
    b851:	e8 8a e3 ff ff       	callq  9be0 <error>
    b856:	49 8b 7c 24 40       	mov    0x40(%r12),%rdi
    b85b:	e8 20 5e ff ff       	callq  1680 <free@plt>
    b860:	4c 89 e7             	mov    %r12,%rdi
    b863:	e8 18 5e ff ff       	callq  1680 <free@plt>
    b868:	48 8d 3d c1 b0 00 00 	lea    0xb0c1(%rip),%rdi        # 16930 <__PRETTY_FUNCTION__.6556+0xb70>
    b86f:	31 c0                	xor    %eax,%eax
    b871:	e8 6a e3 ff ff       	callq  9be0 <error>
    b876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b87d:	00 00 00 

000000000000b880 <nbc_enqueue>:
    b880:	41 56                	push   %r14
    b882:	41 55                	push   %r13
    b884:	41 89 d5             	mov    %edx,%r13d
    b887:	41 54                	push   %r12
    b889:	49 89 fc             	mov    %rdi,%r12
    b88c:	55                   	push   %rbp
    b88d:	53                   	push   %rbx
    b88e:	48 89 f3             	mov    %rsi,%rbx
    b891:	48 83 ec 30          	sub    $0x30,%rsp
    b895:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    b89b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b8a2:	00 00 
    b8a4:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    b8a9:	31 c0                	xor    %eax,%eax
    b8ab:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    b8b2:	00 00 
    b8b4:	48 8d b8 08 49 ff ff 	lea    -0xb6f8(%rax),%rdi
    b8bb:	e8 20 8b 00 00       	callq  143e0 <mm_node_malloc>
    b8c0:	a8 03                	test   $0x3,%al
    b8c2:	0f 85 60 02 00 00    	jne    bb28 <nbc_enqueue+0x2a8>
    b8c8:	48 89 c5             	mov    %rax,%rbp
    b8cb:	48 85 c0             	test   %rax,%rax
    b8ce:	0f 84 54 02 00 00    	je     bb28 <nbc_enqueue+0x2a8>
    b8d4:	f2 0f 10 74 24 08    	movsd  0x8(%rsp),%xmm6
    b8da:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b8e1:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
    b8e8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b8ef:	00 
    b8f0:	48 89 58 10          	mov    %rbx,0x10(%rax)
    b8f4:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    b8fb:	00 
    b8fc:	c6 40 30 00          	movb   $0x0,0x30(%rax)
    b900:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
    b907:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    b90e:	00 
    b90f:	f2 0f 11 70 18       	movsd  %xmm6,0x18(%rax)
    b914:	48 85 db             	test   %rbx,%rbx
    b917:	74 0b                	je     b924 <nbc_enqueue+0xa4>
    b919:	48 c7 83 d0 00 00 00 	movq   $0xbadc0de,0xd0(%rbx)
    b920:	de c0 ad 0b 
    b924:	44 89 6d 2c          	mov    %r13d,0x2c(%rbp)
    b928:	45 31 f6             	xor    %r14d,%r14d
    b92b:	49 bd 00 00 00 00 00 	movabs $0x8000000000000000,%r13
    b932:	00 00 80 
    b935:	4c 89 e7             	mov    %r12,%rdi
    b938:	e8 b3 eb ff ff       	callq  a4f0 <read_table>
    b93d:	48 89 c3             	mov    %rax,%rbx
    b940:	49 39 c6             	cmp    %rax,%r14
    b943:	74 08                	je     b94d <nbc_enqueue+0xcd>
    b945:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
    b94c:	00 
    b94d:	f2 0f 10 65 18       	movsd  0x18(%rbp),%xmm4
    b952:	f2 0f 10 6b 08       	movsd  0x8(%rbx),%xmm5
    b957:	8b 75 28             	mov    0x28(%rbp),%esi
    b95a:	66 0f 28 d4          	movapd %xmm4,%xmm2
    b95e:	f2 0f 5e d5          	divsd  %xmm5,%xmm2
    b962:	66 0f 2f 15 3e 9a 00 	comisd 0x9a3e(%rip),%xmm2        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    b969:	00 
    b96a:	0f 83 20 01 00 00    	jae    ba90 <nbc_enqueue+0x210>
    b970:	f2 48 0f 2c c2       	cvttsd2si %xmm2,%rax
    b975:	66 0f 2f 15 d3 d6 00 	comisd 0xd6d3(%rip),%xmm2        # 19050 <__PRETTY_FUNCTION__.6556+0x3290>
    b97c:	00 
    b97d:	0f 87 bb 01 00 00    	ja     bb3e <nbc_enqueue+0x2be>
    b983:	48 85 c0             	test   %rax,%rax
    b986:	0f 88 24 01 00 00    	js     bab0 <nbc_enqueue+0x230>
    b98c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b990:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    b995:	f2 0f 59 c5          	mulsd  %xmm5,%xmm0
    b999:	66 0f 2f c4          	comisd %xmm4,%xmm0
    b99d:	0f 87 37 01 00 00    	ja     bada <nbc_enqueue+0x25a>
    b9a3:	48 89 c1             	mov    %rax,%rcx
    b9a6:	48 83 c1 01          	add    $0x1,%rcx
    b9aa:	0f 88 50 01 00 00    	js     bb00 <nbc_enqueue+0x280>
    b9b0:	66 0f ef c9          	pxor   %xmm1,%xmm1
    b9b4:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
    b9b9:	f2 0f 59 cd          	mulsd  %xmm5,%xmm1
    b9bd:	66 0f 2e e1          	ucomisd %xmm1,%xmm4
    b9c1:	48 0f 43 c1          	cmovae %rcx,%rax
    b9c5:	8b 7b 10             	mov    0x10(%rbx),%edi
    b9c8:	31 d2                	xor    %edx,%edx
    b9ca:	4c 8d 4c 24 18       	lea    0x18(%rsp),%r9
    b9cf:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b9d5:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    b9da:	66 0f 28 c4          	movapd %xmm4,%xmm0
    b9de:	f2 0f 11 64 24 08    	movsd  %xmm4,0x8(%rsp)
    b9e4:	48 f7 f7             	div    %rdi
    b9e7:	48 89 d0             	mov    %rdx,%rax
    b9ea:	4c 89 ca             	mov    %r9,%rdx
    b9ed:	48 c1 e0 06          	shl    $0x6,%rax
    b9f1:	48 03 03             	add    (%rbx),%rax
    b9f4:	48 89 c7             	mov    %rax,%rdi
    b9f7:	e8 e4 e2 ff ff       	callq  9ce0 <search>
    b9fc:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    ba01:	48 89 c2             	mov    %rax,%rdx
    ba04:	83 e2 03             	and    $0x3,%edx
    ba07:	48 83 fa 03          	cmp    $0x3,%rdx
    ba0b:	0f 84 df 00 00 00    	je     baf0 <nbc_enqueue+0x270>
    ba11:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    ba16:	31 d2                	xor    %edx,%edx
    ba18:	be 00 00 00 00       	mov    $0x0,%esi
    ba1d:	48 89 45 00          	mov    %rax,0x0(%rbp)
    ba21:	f2 0f 10 64 24 08    	movsd  0x8(%rsp),%xmm4
    ba27:	66 0f 2e 61 18       	ucomisd 0x18(%rcx),%xmm4
    ba2c:	0f 9b c2             	setnp  %dl
    ba2f:	0f 45 d6             	cmovne %esi,%edx
    ba32:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    ba36:	f7 da                	neg    %edx
    ba38:	23 51 28             	and    0x28(%rcx),%edx
    ba3b:	83 c2 01             	add    $0x1,%edx
    ba3e:	89 55 28             	mov    %edx,0x28(%rbp)
    ba41:	66 89 56 10          	mov    %dx,0x10(%rsi)
    ba45:	f0 48 0f b1 29       	lock cmpxchg %rbp,(%rcx)
    ba4a:	0f 85 93 00 00 00    	jne    bae3 <nbc_enqueue+0x263>
    ba50:	0f 31                	rdtsc  
    ba52:	89 c0                	mov    %eax,%eax
    ba54:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
    ba58:	48 c1 e2 20          	shl    $0x20,%rdx
    ba5c:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    ba60:	48 09 c2             	or     %rax,%rdx
    ba63:	48 89 91 e8 00 00 00 	mov    %rdx,0xe8(%rcx)
    ba6a:	e8 41 06 00 00       	callq  c0b0 <atomic_inc_x86>
    ba6f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    ba74:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ba7b:	00 00 
    ba7d:	0f 85 dc 00 00 00    	jne    bb5f <nbc_enqueue+0x2df>
    ba83:	48 83 c4 30          	add    $0x30,%rsp
    ba87:	5b                   	pop    %rbx
    ba88:	5d                   	pop    %rbp
    ba89:	41 5c                	pop    %r12
    ba8b:	41 5d                	pop    %r13
    ba8d:	41 5e                	pop    %r14
    ba8f:	c3                   	retq   
    ba90:	66 0f 28 c2          	movapd %xmm2,%xmm0
    ba94:	f2 0f 5c 05 0c 99 00 	subsd  0x990c(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
    ba9b:	00 
    ba9c:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    baa1:	4c 31 e8             	xor    %r13,%rax
    baa4:	e9 cc fe ff ff       	jmpq   b975 <nbc_enqueue+0xf5>
    baa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bab0:	48 89 c2             	mov    %rax,%rdx
    bab3:	48 89 c1             	mov    %rax,%rcx
    bab6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    baba:	48 d1 ea             	shr    %rdx
    babd:	83 e1 01             	and    $0x1,%ecx
    bac0:	48 09 ca             	or     %rcx,%rdx
    bac3:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    bac8:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    bacc:	f2 0f 59 c5          	mulsd  %xmm5,%xmm0
    bad0:	66 0f 2f c4          	comisd %xmm4,%xmm0
    bad4:	0f 86 c9 fe ff ff    	jbe    b9a3 <nbc_enqueue+0x123>
    bada:	48 83 e8 01          	sub    $0x1,%rax
    bade:	e9 e2 fe ff ff       	jmpq   b9c5 <nbc_enqueue+0x145>
    bae3:	c7 45 28 00 00 00 00 	movl   $0x0,0x28(%rbp)
    baea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    baf0:	49 89 de             	mov    %rbx,%r14
    baf3:	e9 3d fe ff ff       	jmpq   b935 <nbc_enqueue+0xb5>
    baf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    baff:	00 
    bb00:	48 89 ca             	mov    %rcx,%rdx
    bb03:	48 89 cf             	mov    %rcx,%rdi
    bb06:	66 0f ef c9          	pxor   %xmm1,%xmm1
    bb0a:	48 d1 ea             	shr    %rdx
    bb0d:	83 e7 01             	and    $0x1,%edi
    bb10:	48 09 fa             	or     %rdi,%rdx
    bb13:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    bb18:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
    bb1c:	e9 98 fe ff ff       	jmpq   b9b9 <nbc_enqueue+0x139>
    bb21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bb28:	e8 63 5e ff ff       	callq  1990 <pthread_self@plt>
    bb2d:	48 8d 3d cc ac 00 00 	lea    0xaccc(%rip),%rdi        # 16800 <__PRETTY_FUNCTION__.6556+0xa40>
    bb34:	48 89 c6             	mov    %rax,%rsi
    bb37:	31 c0                	xor    %eax,%eax
    bb39:	e8 a2 e0 ff ff       	callq  9be0 <error>
    bb3e:	f2 0f 10 1d 12 d5 00 	movsd  0xd512(%rip),%xmm3        # 19058 <__PRETTY_FUNCTION__.6556+0x3298>
    bb45:	00 
    bb46:	66 0f 28 cd          	movapd %xmm5,%xmm1
    bb4a:	66 0f 28 c4          	movapd %xmm4,%xmm0
    bb4e:	48 8d 3d d3 ac 00 00 	lea    0xacd3(%rip),%rdi        # 16828 <__PRETTY_FUNCTION__.6556+0xa68>
    bb55:	b8 04 00 00 00       	mov    $0x4,%eax
    bb5a:	e8 81 e0 ff ff       	callq  9be0 <error>
    bb5f:	e8 3c 5c ff ff       	callq  17a0 <__stack_chk_fail@plt>
    bb64:	66 90                	xchg   %ax,%ax
    bb66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bb6d:	00 00 00 

000000000000bb70 <nbc_prune>:
    bb70:	41 56                	push   %r14
    bb72:	41 55                	push   %r13
    bb74:	41 54                	push   %r12
    bb76:	55                   	push   %rbp
    bb77:	53                   	push   %rbx
    bb78:	48 83 ec 10          	sub    $0x10,%rsp
    bb7c:	49 c7 c5 90 5e ff ff 	mov    $0xffffffffffff5e90,%r13
    bb83:	8b 35 97 15 31 00    	mov    0x311597(%rip),%esi        # 31d120 <threads>
    bb89:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bb90:	00 00 
    bb92:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bb97:	31 c0                	xor    %eax,%eax
    bb99:	48 8b 3d 88 15 31 00 	mov    0x311588(%rip),%rdi        # 31d128 <prune_array>
    bba0:	64 41 8b 55 00       	mov    %fs:0x0(%r13),%edx
    bba5:	e8 96 89 00 00       	callq  14540 <mm_safe>
    bbaa:	84 c0                	test   %al,%al
    bbac:	0f 84 4c 01 00 00    	je     bcfe <nbc_prune+0x18e>
    bbb2:	64 4c 8b 24 25 00 00 	mov    %fs:0x0,%r12
    bbb9:	00 00 
    bbbb:	64 48 8b 2c 25 b0 5e 	mov    %fs:0xffffffffffff5eb0,%rbp
    bbc2:	ff ff 
    bbc4:	49 8d 9c 24 08 49 ff 	lea    -0xb6f8(%r12),%rbx
    bbcb:	ff 
    bbcc:	48 85 ed             	test   %rbp,%rbp
    bbcf:	74 44                	je     bc15 <nbc_prune+0xa5>
    bbd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bbd8:	48 8b 45 00          	mov    0x0(%rbp),%rax
    bbdc:	48 89 df             	mov    %rbx,%rdi
    bbdf:	64 48 89 04 25 b0 5e 	mov    %rax,%fs:0xffffffffffff5eb0
    bbe6:	ff ff 
    bbe8:	4c 8b 75 10          	mov    0x10(%rbp),%r14
    bbec:	49 8b 36             	mov    (%r14),%rsi
    bbef:	e8 9c 87 00 00       	callq  14390 <free_array_nodes>
    bbf4:	4c 89 f7             	mov    %r14,%rdi
    bbf7:	e8 84 5a ff ff       	callq  1680 <free@plt>
    bbfc:	48 89 ee             	mov    %rbp,%rsi
    bbff:	48 89 df             	mov    %rbx,%rdi
    bc02:	e8 99 88 00 00       	callq  144a0 <mm_node_free>
    bc07:	64 48 8b 2c 25 b0 5e 	mov    %fs:0xffffffffffff5eb0,%rbp
    bc0e:	ff ff 
    bc10:	48 85 ed             	test   %rbp,%rbp
    bc13:	75 c3                	jne    bbd8 <nbc_prune+0x68>
    bc15:	48 8d 6c 24 04       	lea    0x4(%rsp),%rbp
    bc1a:	49 8d 9c 24 08 49 ff 	lea    -0xb6f8(%r12),%rbx
    bc21:	ff 
    bc22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bc28:	48 89 ee             	mov    %rbp,%rsi
    bc2b:	48 89 df             	mov    %rbx,%rdi
    bc2e:	e8 ad 88 00 00       	callq  144e0 <mm_node_collect>
    bc33:	48 89 c6             	mov    %rax,%rsi
    bc36:	48 85 c0             	test   %rax,%rax
    bc39:	74 28                	je     bc63 <nbc_prune+0xf3>
    bc3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bc40:	8b 44 24 04          	mov    0x4(%rsp),%eax
    bc44:	8d 50 ff             	lea    -0x1(%rax),%edx
    bc47:	89 54 24 04          	mov    %edx,0x4(%rsp)
    bc4b:	85 c0                	test   %eax,%eax
    bc4d:	74 d9                	je     bc28 <nbc_prune+0xb8>
    bc4f:	4c 8b 36             	mov    (%rsi),%r14
    bc52:	48 89 df             	mov    %rbx,%rdi
    bc55:	e8 46 88 00 00       	callq  144a0 <mm_node_free>
    bc5a:	4c 89 f6             	mov    %r14,%rsi
    bc5d:	48 83 e6 fc          	and    $0xfffffffffffffffc,%rsi
    bc61:	75 dd                	jne    bc40 <nbc_prune+0xd0>
    bc63:	64 48 8b 04 25 a8 5e 	mov    %fs:0xffffffffffff5ea8,%rax
    bc6a:	ff ff 
    bc6c:	64 48 c7 04 25 a8 5e 	movq   $0x0,%fs:0xffffffffffff5ea8
    bc73:	ff ff 00 00 00 00 
    bc79:	64 48 89 04 25 b0 5e 	mov    %rax,%fs:0xffffffffffff5eb0
    bc80:	ff ff 
    bc82:	48 c7 c0 80 5e ff ff 	mov    $0xffffffffffff5e80,%rax
    bc89:	64 f2 0f 10 00       	movsd  %fs:(%rax),%xmm0
    bc8e:	e8 bd 25 00 00       	callq  e250 <prune_local_queue_with_ts>
    bc93:	48 c7 c0 d0 5e ff ff 	mov    $0xffffffffffff5ed0,%rax
    bc9a:	64 48 8b 00          	mov    %fs:(%rax),%rax
    bc9e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    bca2:	48 85 d2             	test   %rdx,%rdx
    bca5:	74 38                	je     bcdf <nbc_prune+0x16f>
    bca7:	48 c7 c1 c8 5e ff ff 	mov    $0xffffffffffff5ec8,%rcx
    bcae:	48 8b 78 10          	mov    0x10(%rax),%rdi
    bcb2:	64 48 8b 09          	mov    %fs:(%rcx),%rcx
    bcb6:	48 8b 71 10          	mov    0x10(%rcx),%rsi
    bcba:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    bcbe:	48 85 f6             	test   %rsi,%rsi
    bcc1:	74 58                	je     bd1b <nbc_prune+0x1ab>
    bcc3:	48 89 16             	mov    %rdx,(%rsi)
    bcc6:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    bcca:	48 8b 10             	mov    (%rax),%rdx
    bccd:	48 01 11             	add    %rdx,(%rcx)
    bcd0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    bcd4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    bcdb:	0f 11 40 08          	movups %xmm0,0x8(%rax)
    bcdf:	48 8b 35 42 14 31 00 	mov    0x311442(%rip),%rsi        # 31d128 <prune_array>
    bce6:	64 41 8b 4d 00       	mov    %fs:0x0(%r13),%ecx
    bceb:	49 8d bc 24 08 49 ff 	lea    -0xb6f8(%r12),%rdi
    bcf2:	ff 
    bcf3:	8b 15 27 14 31 00    	mov    0x311427(%rip),%edx        # 31d120 <threads>
    bcf9:	e8 02 88 00 00       	callq  14500 <mm_new_era>
    bcfe:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    bd03:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    bd0a:	00 00 
    bd0c:	75 13                	jne    bd21 <nbc_prune+0x1b1>
    bd0e:	48 83 c4 10          	add    $0x10,%rsp
    bd12:	5b                   	pop    %rbx
    bd13:	5d                   	pop    %rbp
    bd14:	41 5c                	pop    %r12
    bd16:	41 5d                	pop    %r13
    bd18:	41 5e                	pop    %r14
    bd1a:	c3                   	retq   
    bd1b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    bd1f:	eb a9                	jmp    bcca <nbc_prune+0x15a>
    bd21:	e8 7a 5a ff ff       	callq  17a0 <__stack_chk_fail@plt>
    bd26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bd2d:	00 00 00 

000000000000bd30 <getMin>:
    bd30:	41 57                	push   %r15
    bd32:	41 56                	push   %r14
    bd34:	41 55                	push   %r13
    bd36:	49 bd 00 00 00 00 01 	movabs $0x100000000,%r13
    bd3d:	00 00 00 
    bd40:	41 54                	push   %r12
    bd42:	49 89 fc             	mov    %rdi,%r12
    bd45:	55                   	push   %rbp
    bd46:	53                   	push   %rbx
    bd47:	48 83 ec 28          	sub    $0x28,%rsp
    bd4b:	4c 8b 35 16 d5 33 00 	mov    0x33d516(%rip),%r14        # 349268 <g_tail>
    bd52:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    bd57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bd5e:	00 00 
    bd60:	4c 89 e7             	mov    %r12,%rdi
    bd63:	e8 88 e7 ff ff       	callq  a4f0 <read_table>
    bd68:	4c 8b b8 80 00 00 00 	mov    0x80(%rax),%r15
    bd6f:	8b 48 10             	mov    0x10(%rax),%ecx
    bd72:	48 89 c3             	mov    %rax,%rbx
    bd75:	4c 8b 10             	mov    (%rax),%r10
    bd78:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
    bd7d:	4c 89 f8             	mov    %r15,%rax
    bd80:	48 c1 e8 20          	shr    $0x20,%rax
    bd84:	48 8d 68 01          	lea    0x1(%rax),%rbp
    bd88:	4c 39 ed             	cmp    %r13,%rbp
    bd8b:	0f 84 af 00 00 00    	je     be40 <getMin+0x110>
    bd91:	89 ce                	mov    %ecx,%esi
    bd93:	31 d2                	xor    %edx,%edx
    bd95:	48 f7 f6             	div    %rsi
    bd98:	48 89 d0             	mov    %rdx,%rax
    bd9b:	48 c1 e0 06          	shl    $0x6,%rax
    bd9f:	49 8d 3c 02          	lea    (%r10,%rax,1),%rdi
    bda3:	4c 8b 07             	mov    (%rdi),%r8
    bda6:	4c 89 c0             	mov    %r8,%rax
    bda9:	4c 89 c6             	mov    %r8,%rsi
    bdac:	83 e0 03             	and    $0x3,%eax
    bdaf:	48 83 f8 03          	cmp    $0x3,%rax
    bdb3:	74 ab                	je     bd60 <getMin+0x30>
    bdb5:	45 89 fa             	mov    %r15d,%r10d
    bdb8:	4d 3b 50 20          	cmp    0x20(%r8),%r10
    bdbc:	72 a2                	jb     bd60 <getMin+0x30>
    bdbe:	45 31 c9             	xor    %r9d,%r9d
    bdc1:	eb 1c                	jmp    bddf <getMin+0xaf>
    bdc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bdc8:	48 83 fa 03          	cmp    $0x3,%rdx
    bdcc:	74 92                	je     bd60 <getMin+0x30>
    bdce:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    bdd2:	41 83 c1 01          	add    $0x1,%r9d
    bdd6:	49 89 c0             	mov    %rax,%r8
    bdd9:	4c 39 50 20          	cmp    %r10,0x20(%rax)
    bddd:	77 81                	ja     bd60 <getMin+0x30>
    bddf:	49 8b 00             	mov    (%r8),%rax
    bde2:	48 89 c2             	mov    %rax,%rdx
    bde5:	83 e2 03             	and    $0x3,%edx
    bde8:	75 de                	jne    bdc8 <getMin+0x98>
    bdea:	66 0f ef c9          	pxor   %xmm1,%xmm1
    bdee:	f2 48 0f 2a cd       	cvtsi2sd %rbp,%xmm1
    bdf3:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    bdf7:	66 41 0f 2f 40 18    	comisd 0x18(%r8),%xmm0
    bdfd:	0f 87 f4 00 00 00    	ja     bef7 <getMin+0x1c7>
    be03:	4d 39 c6             	cmp    %r8,%r14
    be06:	75 15                	jne    be1d <getMin+0xed>
    be08:	83 f9 01             	cmp    $0x1,%ecx
    be0b:	75 10                	jne    be1d <getMin+0xed>
    be0d:	48 8b 07             	mov    (%rdi),%rax
    be10:	83 e0 03             	and    $0x3,%eax
    be13:	48 83 f8 03          	cmp    $0x3,%rax
    be17:	0f 85 fd 00 00 00    	jne    bf1a <getMin+0x1ea>
    be1d:	45 85 c9             	test   %r9d,%r9d
    be20:	0f 85 9a 00 00 00    	jne    bec0 <getMin+0x190>
    be26:	48 c1 e5 20          	shl    $0x20,%rbp
    be2a:	4c 89 f8             	mov    %r15,%rax
    be2d:	49 09 ea             	or     %rbp,%r10
    be30:	f0 4c 0f b1 93 80 00 	lock cmpxchg %r10,0x80(%rbx)
    be37:	00 00 
    be39:	e9 22 ff ff ff       	jmpq   bd60 <getMin+0x30>
    be3e:	66 90                	xchg   %ax,%ax
    be40:	8b 43 40             	mov    0x40(%rbx),%eax
    be43:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    be48:	48 83 ec 08          	sub    $0x8,%rsp
    be4c:	49 89 d9             	mov    %rbx,%r9
    be4f:	4d 89 f0             	mov    %r14,%r8
    be52:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    be57:	bf 01 00 00 00       	mov    $0x1,%edi
    be5c:	50                   	push   %rax
    be5d:	48 8d 35 f4 aa 00 00 	lea    0xaaf4(%rip),%rsi        # 16958 <__PRETTY_FUNCTION__.6556+0xb98>
    be64:	b8 01 00 00 00       	mov    $0x1,%eax
    be69:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
    be6d:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    be73:	e8 f8 5a ff ff       	callq  1970 <__printf_chk@plt>
    be78:	cc                   	int3   
    be79:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    be7d:	58                   	pop    %rax
    be7e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    be83:	5a                   	pop    %rdx
    be84:	31 d2                	xor    %edx,%edx
    be86:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    be8b:	48 f7 f6             	div    %rsi
    be8e:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    be93:	48 89 f1             	mov    %rsi,%rcx
    be96:	48 c1 e2 06          	shl    $0x6,%rdx
    be9a:	49 8d 3c 12          	lea    (%r10,%rdx,1),%rdi
    be9e:	4c 8b 07             	mov    (%rdi),%r8
    bea1:	4c 89 c0             	mov    %r8,%rax
    bea4:	4c 89 c6             	mov    %r8,%rsi
    bea7:	83 e0 03             	and    $0x3,%eax
    beaa:	48 83 f8 03          	cmp    $0x3,%rax
    beae:	0f 85 01 ff ff ff    	jne    bdb5 <getMin+0x85>
    beb4:	e9 a7 fe ff ff       	jmpq   bd60 <getMin+0x30>
    beb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bec0:	48 89 f0             	mov    %rsi,%rax
    bec3:	f0 4c 0f b1 07       	lock cmpxchg %r8,(%rdi)
    bec8:	0f 85 58 ff ff ff    	jne    be26 <getMin+0xf6>
    bece:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    bed5:	00 00 
    bed7:	48 83 e6 fc          	and    $0xfffffffffffffffc,%rsi
    bedb:	44 89 ca             	mov    %r9d,%edx
    bede:	4c 89 14 24          	mov    %r10,(%rsp)
    bee2:	48 8d b8 08 49 ff ff 	lea    -0xb6f8(%rax),%rdi
    bee9:	e8 d2 85 00 00       	callq  144c0 <mm_node_trash>
    beee:	4c 8b 14 24          	mov    (%rsp),%r10
    bef2:	e9 2f ff ff ff       	jmpq   be26 <getMin+0xf6>
    bef7:	4c 39 05 6a d3 33 00 	cmp    %r8,0x33d36a(%rip)        # 349268 <g_tail>
    befe:	74 1f                	je     bf1f <getMin+0x1ef>
    bf00:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    bf05:	48 89 18             	mov    %rbx,(%rax)
    bf08:	48 83 c4 28          	add    $0x28,%rsp
    bf0c:	4c 89 c0             	mov    %r8,%rax
    bf0f:	5b                   	pop    %rbx
    bf10:	5d                   	pop    %rbp
    bf11:	41 5c                	pop    %r12
    bf13:	41 5d                	pop    %r13
    bf15:	41 5e                	pop    %r14
    bf17:	41 5f                	pop    %r15
    bf19:	c3                   	retq   
    bf1a:	45 31 c0             	xor    %r8d,%r8d
    bf1d:	eb e9                	jmp    bf08 <getMin+0x1d8>
    bf1f:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
    bf26:	4c 89 04 24          	mov    %r8,(%rsp)
    bf2a:	bf 01 00 00 00       	mov    $0x1,%edi
    bf2f:	48 8d 35 6a aa 00 00 	lea    0xaa6a(%rip),%rsi        # 169a0 <__PRETTY_FUNCTION__.6556+0xbe0>
    bf36:	64 8b 10             	mov    %fs:(%rax),%edx
    bf39:	31 c0                	xor    %eax,%eax
    bf3b:	e8 30 5a ff ff       	callq  1970 <__printf_chk@plt>
    bf40:	4c 8b 04 24          	mov    (%rsp),%r8
    bf44:	eb ba                	jmp    bf00 <getMin+0x1d0>
    bf46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bf4d:	00 00 00 

000000000000bf50 <delete>:
    bf50:	48 83 fe 01          	cmp    $0x1,%rsi
    bf54:	77 0a                	ja     bf60 <delete+0x10>
    bf56:	31 c0                	xor    %eax,%eax
    bf58:	c3                   	retq   
    bf59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bf60:	41 54                	push   %r12
    bf62:	49 89 f4             	mov    %rsi,%r12
    bf65:	55                   	push   %rbp
    bf66:	48 89 fd             	mov    %rdi,%rbp
    bf69:	53                   	push   %rbx
    bf6a:	48 83 ec 10          	sub    $0x10,%rsp
    bf6e:	e8 7d e5 ff ff       	callq  a4f0 <read_table>
    bf73:	48 89 c7             	mov    %rax,%rdi
    bf76:	49 8b 04 24          	mov    (%r12),%rax
    bf7a:	48 89 c1             	mov    %rax,%rcx
    bf7d:	48 89 c2             	mov    %rax,%rdx
    bf80:	48 83 c9 01          	or     $0x1,%rcx
    bf84:	f0 49 0f b1 0c 24    	lock cmpxchg %rcx,(%r12)
    bf8a:	75 ee                	jne    bf7a <delete+0x2a>
    bf8c:	4c 89 e3             	mov    %r12,%rbx
    bf8f:	eb 2a                	jmp    bfbb <delete+0x6b>
    bf91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bf98:	48 89 ef             	mov    %rbp,%rdi
    bf9b:	e8 50 e5 ff ff       	callq  a4f0 <read_table>
    bfa0:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
    bfa4:	48 89 c7             	mov    %rax,%rdi
    bfa7:	48 8b 03             	mov    (%rbx),%rax
    bfaa:	48 89 c1             	mov    %rax,%rcx
    bfad:	48 89 c2             	mov    %rax,%rdx
    bfb0:	48 83 c9 01          	or     $0x1,%rcx
    bfb4:	f0 48 0f b1 0b       	lock cmpxchg %rcx,(%rbx)
    bfb9:	75 ef                	jne    bfaa <delete+0x5a>
    bfbb:	48 8b 43 08          	mov    0x8(%rbx),%rax
    bfbf:	48 85 c0             	test   %rax,%rax
    bfc2:	75 d4                	jne    bf98 <delete+0x48>
    bfc4:	83 e2 03             	and    $0x3,%edx
    bfc7:	48 83 fa 03          	cmp    $0x3,%rdx
    bfcb:	74 cb                	je     bf98 <delete+0x48>
    bfcd:	48 85 d2             	test   %rdx,%rdx
    bfd0:	74 16                	je     bfe8 <delete+0x98>
    bfd2:	83 43 38 01          	addl   $0x1,0x38(%rbx)
    bfd6:	48 85 d2             	test   %rdx,%rdx
    bfd9:	0f 94 c0             	sete   %al
    bfdc:	48 83 c4 10          	add    $0x10,%rsp
    bfe0:	5b                   	pop    %rbx
    bfe1:	5d                   	pop    %rbp
    bfe2:	41 5c                	pop    %r12
    bfe4:	c3                   	retq   
    bfe5:	0f 1f 00             	nopl   (%rax)
    bfe8:	48 83 c7 40          	add    $0x40,%rdi
    bfec:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    bff1:	e8 ca 00 00 00       	callq  c0c0 <atomic_dec_x86>
    bff6:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    bffb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c000:	4c 89 a0 e0 00 00 00 	mov    %r12,0xe0(%rax)
    c007:	eb c9                	jmp    bfd2 <delete+0x82>
    c009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c010 <unmarked>:
    c010:	48 89 f8             	mov    %rdi,%rax
    c013:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    c017:	c3                   	retq   
    c018:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c01f:	00 

000000000000c020 <CAS_x86>:
    c020:	48 89 f0             	mov    %rsi,%rax
    c023:	31 c9                	xor    %ecx,%ecx
    c025:	f0 48 0f b1 17       	lock cmpxchg %rdx,(%rdi)
    c02a:	9f                   	lahf   
    c02b:	66 0f ba e0 0e       	bt     $0xe,%ax
    c030:	48 11 c9             	adc    %rcx,%rcx
    c033:	48 85 c9             	test   %rcx,%rcx
    c036:	0f 95 c0             	setne  %al
    c039:	c3                   	retq   
    c03a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000c040 <iCAS_x86>:
    c040:	89 f0                	mov    %esi,%eax
    c042:	31 c9                	xor    %ecx,%ecx
    c044:	f0 0f b1 17          	lock cmpxchg %edx,(%rdi)
    c048:	9f                   	lahf   
    c049:	66 0f ba e0 0e       	bt     $0xe,%ax
    c04e:	48 11 c9             	adc    %rcx,%rcx
    c051:	48 85 c9             	test   %rcx,%rcx
    c054:	0f 95 c0             	setne  %al
    c057:	c3                   	retq   
    c058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c05f:	00 

000000000000c060 <atomic_test_and_set_x86>:
    c060:	31 c0                	xor    %eax,%eax
    c062:	f0 0f ba 2f 00       	lock btsl $0x0,(%rdi)
    c067:	11 c0                	adc    %eax,%eax
    c069:	85 c0                	test   %eax,%eax
    c06b:	0f 94 c0             	sete   %al
    c06e:	0f b6 c0             	movzbl %al,%eax
    c071:	c3                   	retq   
    c072:	0f 1f 40 00          	nopl   0x0(%rax)
    c076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c07d:	00 00 00 

000000000000c080 <atomic_test_and_reset_x86>:
    c080:	31 c0                	xor    %eax,%eax
    c082:	f0 0f ba 37 00       	lock btrl $0x0,(%rdi)
    c087:	11 c0                	adc    %eax,%eax
    c089:	c3                   	retq   
    c08a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000c090 <atomic_add_x86>:
    c090:	f0 01 37             	lock add %esi,(%rdi)
    c093:	c3                   	retq   
    c094:	66 90                	xchg   %ax,%ax
    c096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c09d:	00 00 00 

000000000000c0a0 <atomic_sub_x86>:
    c0a0:	f0 29 37             	lock sub %esi,(%rdi)
    c0a3:	c3                   	retq   
    c0a4:	66 90                	xchg   %ax,%ax
    c0a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c0ad:	00 00 00 

000000000000c0b0 <atomic_inc_x86>:
    c0b0:	f0 ff 07             	lock incl (%rdi)
    c0b3:	c3                   	retq   
    c0b4:	66 90                	xchg   %ax,%ax
    c0b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c0bd:	00 00 00 

000000000000c0c0 <atomic_dec_x86>:
    c0c0:	f0 ff 0f             	lock decl (%rdi)
    c0c3:	c3                   	retq   
    c0c4:	66 90                	xchg   %ax,%ax
    c0c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c0cd:	00 00 00 

000000000000c0d0 <atomic_inc_and_test_x86>:
    c0d0:	f0 ff 07             	lock incl (%rdi)
    c0d3:	0f 94 c0             	sete   %al
    c0d6:	84 c0                	test   %al,%al
    c0d8:	0f 95 c0             	setne  %al
    c0db:	0f b6 c0             	movzbl %al,%eax
    c0de:	c3                   	retq   
    c0df:	90                   	nop

000000000000c0e0 <spin_lock_x86>:
    c0e0:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    c0e5:	b8 01 00 00 00       	mov    $0x1,%eax
    c0ea:	f0 87 07             	lock xchg %eax,(%rdi)
    c0ed:	83 c1 01             	add    $0x1,%ecx
    c0f0:	85 c0                	test   %eax,%eax
    c0f2:	75 f1                	jne    c0e5 <spin_lock_x86+0x5>
    c0f4:	89 c8                	mov    %ecx,%eax
    c0f6:	c3                   	retq   
    c0f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c0fe:	00 00 

000000000000c100 <spin_trylock_x86>:
    c100:	31 c0                	xor    %eax,%eax
    c102:	f0 0f ba 2f 00       	lock btsl $0x0,(%rdi)
    c107:	11 c0                	adc    %eax,%eax
    c109:	85 c0                	test   %eax,%eax
    c10b:	0f 94 c0             	sete   %al
    c10e:	c3                   	retq   
    c10f:	90                   	nop

000000000000c110 <spin_unlock_x86>:
    c110:	b8 00 00 00 00       	mov    $0x0,%eax
    c115:	f0 87 07             	lock xchg %eax,(%rdi)
    c118:	c3                   	retq   
    c119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c120 <FindReceiver>:
    c120:	41 57                	push   %r15
    c122:	8d 87 18 fc ff ff    	lea    -0x3e8(%rdi),%eax
    c128:	41 56                	push   %r14
    c12a:	41 55                	push   %r13
    c12c:	41 54                	push   %r12
    c12e:	55                   	push   %rbp
    c12f:	53                   	push   %rbx
    c130:	48 83 ec 28          	sub    $0x28,%rsp
    c134:	83 f8 05             	cmp    $0x5,%eax
    c137:	0f 87 b1 02 00 00    	ja     c3ee <FindReceiver+0x2ce>
    c13d:	48 8d 15 6c 92 00 00 	lea    0x926c(%rip),%rdx        # 153b0 <__PRETTY_FUNCTION__.6351+0x320>
    c144:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    c148:	48 01 d0             	add    %rdx,%rax
    c14b:	ff e0                	jmpq   *%rax
    c14d:	0f 1f 00             	nopl   (%rax)
    c150:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    c157:	64 8b 18             	mov    %fs:(%rax),%ebx
    c15a:	8d 43 01             	lea    0x1(%rbx),%eax
    c15d:	3b 05 4d d0 33 00    	cmp    0x33d04d(%rip),%eax        # 3491b0 <n_prc_tot>
    c163:	74 4a                	je     c1af <FindReceiver+0x8f>
    c165:	48 83 c4 28          	add    $0x28,%rsp
    c169:	5b                   	pop    %rbx
    c16a:	5d                   	pop    %rbp
    c16b:	41 5c                	pop    %r12
    c16d:	41 5d                	pop    %r13
    c16f:	41 5e                	pop    %r14
    c171:	41 5f                	pop    %r15
    c173:	c3                   	retq   
    c174:	0f 1f 40 00          	nopl   0x0(%rax)
    c178:	e8 b3 26 00 00       	callq  e830 <Random>
    c17d:	f2 0f 10 0d 13 92 00 	movsd  0x9213(%rip),%xmm1        # 15398 <__PRETTY_FUNCTION__.6351+0x308>
    c184:	00 
    c185:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    c18c:	66 0f 2f c8          	comisd %xmm0,%xmm1
    c190:	64 8b 18             	mov    %fs:(%rax),%ebx
    c193:	0f 86 97 02 00 00    	jbe    c430 <FindReceiver+0x310>
    c199:	8d 43 ff             	lea    -0x1(%rbx),%eax
    c19c:	8b 15 0e d0 33 00    	mov    0x33d00e(%rip),%edx        # 3491b0 <n_prc_tot>
    c1a2:	83 f8 ff             	cmp    $0xffffffff,%eax
    c1a5:	8d 4a ff             	lea    -0x1(%rdx),%ecx
    c1a8:	0f 44 c1             	cmove  %ecx,%eax
    c1ab:	39 c2                	cmp    %eax,%edx
    c1ad:	75 b6                	jne    c165 <FindReceiver+0x45>
    c1af:	31 c0                	xor    %eax,%eax
    c1b1:	48 83 c4 28          	add    $0x28,%rsp
    c1b5:	5b                   	pop    %rbx
    c1b6:	5d                   	pop    %rbp
    c1b7:	41 5c                	pop    %r12
    c1b9:	41 5d                	pop    %r13
    c1bb:	41 5e                	pop    %r14
    c1bd:	41 5f                	pop    %r15
    c1bf:	c3                   	retq   
    c1c0:	8b 05 ea cf 33 00    	mov    0x33cfea(%rip),%eax        # 3491b0 <n_prc_tot>
    c1c6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c1ca:	66 0f ef d2          	pxor   %xmm2,%xmm2
    c1ce:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    c1d3:	48 89 c2             	mov    %rax,%rdx
    c1d6:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
    c1da:	66 0f 28 c8          	movapd %xmm0,%xmm1
    c1de:	f2 0f 51 c9          	sqrtsd %xmm1,%xmm1
    c1e2:	0f 87 d5 03 00 00    	ja     c5bd <FindReceiver+0x49d>
    c1e8:	f2 4c 0f 2c f1       	cvttsd2si %xmm1,%r14
    c1ed:	44 89 f0             	mov    %r14d,%eax
    c1f0:	41 0f af c6          	imul   %r14d,%eax
    c1f4:	39 d0                	cmp    %edx,%eax
    c1f6:	0f 85 2c 03 00 00    	jne    c528 <FindReceiver+0x408>
    c1fc:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    c203:	64 8b 00             	mov    %fs:(%rax),%eax
    c206:	83 fa 01             	cmp    $0x1,%edx
    c209:	0f 84 56 ff ff ff    	je     c165 <FindReceiver+0x45>
    c20f:	31 d2                	xor    %edx,%edx
    c211:	44 89 34 24          	mov    %r14d,(%rsp)
    c215:	41 f7 f6             	div    %r14d
    c218:	41 89 d5             	mov    %edx,%r13d
    c21b:	89 c3                	mov    %eax,%ebx
    c21d:	e8 0e 26 00 00       	callq  e830 <Random>
    c222:	45 8d 5d 01          	lea    0x1(%r13),%r11d
    c226:	89 d8                	mov    %ebx,%eax
    c228:	41 8d 75 ff          	lea    -0x1(%r13),%esi
    c22c:	83 e0 01             	and    $0x1,%eax
    c22f:	45 89 da             	mov    %r11d,%r10d
    c232:	44 8b 04 24          	mov    (%rsp),%r8d
    c236:	89 74 24 10          	mov    %esi,0x10(%rsp)
    c23a:	45 0f 44 d5          	cmove  %r13d,%r10d
    c23e:	46 8d 4c 28 ff       	lea    -0x1(%rax,%r13,1),%r9d
    c243:	89 d8                	mov    %ebx,%eax
    c245:	44 89 5c 24 14       	mov    %r11d,0x14(%rsp)
    c24a:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    c24f:	44 89 c3             	mov    %r8d,%ebx
    c252:	4c 8d 2d 6f 91 00 00 	lea    0x916f(%rip),%r13        # 153c8 <__PRETTY_FUNCTION__.6351+0x338>
    c259:	45 89 cb             	mov    %r9d,%r11d
    c25c:	f2 0f 59 05 fc cd 00 	mulsd  0xcdfc(%rip),%xmm0        # 19060 <__PRETTY_FUNCTION__.6556+0x32a0>
    c263:	00 
    c264:	45 89 d6             	mov    %r10d,%r14d
    c267:	41 89 c0             	mov    %eax,%r8d
    c26a:	f2 0f 2c e8          	cvttsd2si %xmm0,%ebp
    c26e:	66 90                	xchg   %ax,%ax
    c270:	83 fd 05             	cmp    $0x5,%ebp
    c273:	0f 87 73 02 00 00    	ja     c4ec <FindReceiver+0x3cc>
    c279:	89 e8                	mov    %ebp,%eax
    c27b:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
    c280:	4c 01 e8             	add    %r13,%rax
    c283:	ff e0                	jmpq   *%rax
    c285:	0f 1f 00             	nopl   (%rax)
    c288:	8b 05 22 cf 33 00    	mov    0x33cf22(%rip),%eax        # 3491b0 <n_prc_tot>
    c28e:	66 0f ef db          	pxor   %xmm3,%xmm3
    c292:	f2 48 0f 2a d8       	cvtsi2sd %rax,%xmm3
    c297:	f2 0f 11 1c 24       	movsd  %xmm3,(%rsp)
    c29c:	e8 8f 25 00 00       	callq  e830 <Random>
    c2a1:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    c2a6:	48 83 c4 28          	add    $0x28,%rsp
    c2aa:	5b                   	pop    %rbx
    c2ab:	5d                   	pop    %rbp
    c2ac:	41 5c                	pop    %r12
    c2ae:	41 5d                	pop    %r13
    c2b0:	41 5e                	pop    %r14
    c2b2:	41 5f                	pop    %r15
    c2b4:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
    c2b8:	c3                   	retq   
    c2b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c2c0:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    c2c7:	64 8b 00             	mov    %fs:(%rax),%eax
    c2ca:	85 c0                	test   %eax,%eax
    c2cc:	0f 85 dd fe ff ff    	jne    c1af <FindReceiver+0x8f>
    c2d2:	8b 05 d8 ce 33 00    	mov    0x33ced8(%rip),%eax        # 3491b0 <n_prc_tot>
    c2d8:	66 0f ef e4          	pxor   %xmm4,%xmm4
    c2dc:	f2 48 0f 2a e0       	cvtsi2sd %rax,%xmm4
    c2e1:	f2 0f 11 24 24       	movsd  %xmm4,(%rsp)
    c2e6:	e8 45 25 00 00       	callq  e830 <Random>
    c2eb:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    c2f0:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
    c2f4:	e9 6c fe ff ff       	jmpq   c165 <FindReceiver+0x45>
    c2f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c300:	8b 05 aa ce 33 00    	mov    0x33ceaa(%rip),%eax        # 3491b0 <n_prc_tot>
    c306:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c30a:	66 0f ef d2          	pxor   %xmm2,%xmm2
    c30e:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    c313:	48 89 c2             	mov    %rax,%rdx
    c316:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
    c31a:	66 0f 28 c8          	movapd %xmm0,%xmm1
    c31e:	f2 0f 51 c9          	sqrtsd %xmm1,%xmm1
    c322:	0f 87 7b 02 00 00    	ja     c5a3 <FindReceiver+0x483>
    c328:	f2 48 0f 2c e9       	cvttsd2si %xmm1,%rbp
    c32d:	89 e8                	mov    %ebp,%eax
    c32f:	41 89 ed             	mov    %ebp,%r13d
    c332:	0f af c5             	imul   %ebp,%eax
    c335:	39 d0                	cmp    %edx,%eax
    c337:	0f 85 0b 02 00 00    	jne    c548 <FindReceiver+0x428>
    c33d:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    c344:	64 8b 00             	mov    %fs:(%rax),%eax
    c347:	83 fa 01             	cmp    $0x1,%edx
    c34a:	0f 84 15 fe ff ff    	je     c165 <FindReceiver+0x45>
    c350:	31 d2                	xor    %edx,%edx
    c352:	48 89 2c 24          	mov    %rbp,(%rsp)
    c356:	f7 f5                	div    %ebp
    c358:	89 c3                	mov    %eax,%ebx
    c35a:	8d 42 01             	lea    0x1(%rdx),%eax
    c35d:	89 d5                	mov    %edx,%ebp
    c35f:	41 89 c6             	mov    %eax,%r14d
    c362:	eb 3f                	jmp    c3a3 <FindReceiver+0x283>
    c364:	0f 1f 40 00          	nopl   0x0(%rax)
    c368:	83 f8 02             	cmp    $0x2,%eax
    c36b:	0f 84 af 00 00 00    	je     c420 <FindReceiver+0x300>
    c371:	7f 55                	jg     c3c8 <FindReceiver+0x2a8>
    c373:	85 c0                	test   %eax,%eax
    c375:	0f 84 95 00 00 00    	je     c410 <FindReceiver+0x2f0>
    c37b:	83 f8 01             	cmp    $0x1,%eax
    c37e:	75 4d                	jne    c3cd <FindReceiver+0x2ad>
    c380:	44 8d 7d ff          	lea    -0x1(%rbp),%r15d
    c384:	41 89 dc             	mov    %ebx,%r12d
    c387:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c38e:	00 00 
    c390:	45 39 e7             	cmp    %r12d,%r15d
    c393:	44 89 e0             	mov    %r12d,%eax
    c396:	41 0f 43 c7          	cmovae %r15d,%eax
    c39a:	44 39 e8             	cmp    %r13d,%eax
    c39d:	0f 82 9d 00 00 00    	jb     c440 <FindReceiver+0x320>
    c3a3:	e8 88 24 00 00       	callq  e830 <Random>
    c3a8:	f2 0f 59 05 88 cc 00 	mulsd  0xcc88(%rip),%xmm0        # 19038 <__PRETTY_FUNCTION__.6556+0x3278>
    c3af:	00 
    c3b0:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
    c3b4:	83 f8 04             	cmp    $0x4,%eax
    c3b7:	75 af                	jne    c368 <FindReceiver+0x248>
    c3b9:	45 89 f7             	mov    %r14d,%r15d
    c3bc:	41 89 dc             	mov    %ebx,%r12d
    c3bf:	eb cf                	jmp    c390 <FindReceiver+0x270>
    c3c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c3c8:	83 f8 03             	cmp    $0x3,%eax
    c3cb:	74 ec                	je     c3b9 <FindReceiver+0x299>
    c3cd:	b9 a2 00 00 00       	mov    $0xa2,%ecx
    c3d2:	48 8d 15 5a c7 00 00 	lea    0xc75a(%rip),%rdx        # 18b33 <__PRETTY_FUNCTION__.6556+0x2d73>
    c3d9:	48 8d 35 18 a6 00 00 	lea    0xa618(%rip),%rsi        # 169f8 <__PRETTY_FUNCTION__.6556+0xc38>
    c3e0:	31 c0                	xor    %eax,%eax
    c3e2:	bf 01 00 00 00       	mov    $0x1,%edi
    c3e7:	e8 24 af ff ff       	callq  7310 <rootsim_error>
    c3ec:	eb a2                	jmp    c390 <FindReceiver+0x270>
    c3ee:	89 fa                	mov    %edi,%edx
    c3f0:	31 c0                	xor    %eax,%eax
    c3f2:	48 8d 35 7f a6 00 00 	lea    0xa67f(%rip),%rsi        # 16a78 <__PRETTY_FUNCTION__.6556+0xcb8>
    c3f9:	bf 01 00 00 00       	mov    $0x1,%edi
    c3fe:	e8 0d af ff ff       	callq  7310 <rootsim_error>
    c403:	31 c0                	xor    %eax,%eax
    c405:	e9 a7 fd ff ff       	jmpq   c1b1 <FindReceiver+0x91>
    c40a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c410:	44 8d 63 ff          	lea    -0x1(%rbx),%r12d
    c414:	41 89 ef             	mov    %ebp,%r15d
    c417:	e9 74 ff ff ff       	jmpq   c390 <FindReceiver+0x270>
    c41c:	0f 1f 40 00          	nopl   0x0(%rax)
    c420:	44 8d 63 01          	lea    0x1(%rbx),%r12d
    c424:	41 89 ef             	mov    %ebp,%r15d
    c427:	e9 64 ff ff ff       	jmpq   c390 <FindReceiver+0x270>
    c42c:	0f 1f 40 00          	nopl   0x0(%rax)
    c430:	8d 43 01             	lea    0x1(%rbx),%eax
    c433:	e9 64 fd ff ff       	jmpq   c19c <FindReceiver+0x7c>
    c438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c43f:	00 
    c440:	48 8b 2c 24          	mov    (%rsp),%rbp
    c444:	44 0f af e5          	imul   %ebp,%r12d
    c448:	43 8d 04 3c          	lea    (%r12,%r15,1),%eax
    c44c:	e9 14 fd ff ff       	jmpq   c165 <FindReceiver+0x45>
    c451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c458:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
    c45d:	45 89 c4             	mov    %r8d,%r12d
    c460:	45 39 e7             	cmp    %r12d,%r15d
    c463:	44 89 e0             	mov    %r12d,%eax
    c466:	41 0f 43 c7          	cmovae %r15d,%eax
    c46a:	39 d8                	cmp    %ebx,%eax
    c46c:	0f 82 f6 00 00 00    	jb     c568 <FindReceiver+0x448>
    c472:	8d 55 01             	lea    0x1(%rbp),%edx
    c475:	48 63 ea             	movslq %edx,%rbp
    c478:	89 d0                	mov    %edx,%eax
    c47a:	48 69 ed ab aa aa 2a 	imul   $0x2aaaaaab,%rbp,%rbp
    c481:	c1 f8 1f             	sar    $0x1f,%eax
    c484:	48 c1 ed 20          	shr    $0x20,%rbp
    c488:	29 c5                	sub    %eax,%ebp
    c48a:	8d 44 6d 00          	lea    0x0(%rbp,%rbp,2),%eax
    c48e:	01 c0                	add    %eax,%eax
    c490:	29 c2                	sub    %eax,%edx
    c492:	89 d5                	mov    %edx,%ebp
    c494:	e9 d7 fd ff ff       	jmpq   c270 <FindReceiver+0x150>
    c499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c4a0:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
    c4a5:	45 89 c4             	mov    %r8d,%r12d
    c4a8:	eb b6                	jmp    c460 <FindReceiver+0x340>
    c4aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c4b0:	45 8d 60 01          	lea    0x1(%r8),%r12d
    c4b4:	45 89 f7             	mov    %r14d,%r15d
    c4b7:	eb a7                	jmp    c460 <FindReceiver+0x340>
    c4b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c4c0:	45 8d 60 01          	lea    0x1(%r8),%r12d
    c4c4:	45 89 df             	mov    %r11d,%r15d
    c4c7:	eb 97                	jmp    c460 <FindReceiver+0x340>
    c4c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c4d0:	45 8d 60 ff          	lea    -0x1(%r8),%r12d
    c4d4:	45 89 f7             	mov    %r14d,%r15d
    c4d7:	eb 87                	jmp    c460 <FindReceiver+0x340>
    c4d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c4e0:	45 8d 60 ff          	lea    -0x1(%r8),%r12d
    c4e4:	45 89 df             	mov    %r11d,%r15d
    c4e7:	e9 74 ff ff ff       	jmpq   c460 <FindReceiver+0x340>
    c4ec:	b9 53 00 00 00       	mov    $0x53,%ecx
    c4f1:	bf 01 00 00 00       	mov    $0x1,%edi
    c4f6:	31 c0                	xor    %eax,%eax
    c4f8:	44 89 1c 24          	mov    %r11d,(%rsp)
    c4fc:	48 8d 15 30 c6 00 00 	lea    0xc630(%rip),%rdx        # 18b33 <__PRETTY_FUNCTION__.6556+0x2d73>
    c503:	48 8d 35 ee a4 00 00 	lea    0xa4ee(%rip),%rsi        # 169f8 <__PRETTY_FUNCTION__.6556+0xc38>
    c50a:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    c50f:	e8 fc ad ff ff       	callq  7310 <rootsim_error>
    c514:	44 8b 1c 24          	mov    (%rsp),%r11d
    c518:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    c51d:	e9 3e ff ff ff       	jmpq   c460 <FindReceiver+0x340>
    c522:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c528:	31 c0                	xor    %eax,%eax
    c52a:	48 8d 35 9f a4 00 00 	lea    0xa49f(%rip),%rsi        # 169d0 <__PRETTY_FUNCTION__.6556+0xc10>
    c531:	bf 01 00 00 00       	mov    $0x1,%edi
    c536:	e8 d5 ad ff ff       	callq  7310 <rootsim_error>
    c53b:	31 c0                	xor    %eax,%eax
    c53d:	e9 23 fc ff ff       	jmpq   c165 <FindReceiver+0x45>
    c542:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c548:	31 c0                	xor    %eax,%eax
    c54a:	48 8d 35 07 a5 00 00 	lea    0xa507(%rip),%rsi        # 16a58 <__PRETTY_FUNCTION__.6556+0xc98>
    c551:	bf 01 00 00 00       	mov    $0x1,%edi
    c556:	e8 b5 ad ff ff       	callq  7310 <rootsim_error>
    c55b:	31 c0                	xor    %eax,%eax
    c55d:	e9 03 fc ff ff       	jmpq   c165 <FindReceiver+0x45>
    c562:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c568:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    c56d:	48 c7 c1 78 5e ff ff 	mov    $0xffffffffffff5e78,%rcx
    c574:	45 0f af e6          	imul   %r14d,%r12d
    c578:	43 8d 04 3c          	lea    (%r12,%r15,1),%eax
    c57c:	64 3b 01             	cmp    %fs:(%rcx),%eax
    c57f:	0f 85 e0 fb ff ff    	jne    c165 <FindReceiver+0x45>
    c585:	83 3d 24 cc 33 00 01 	cmpl   $0x1,0x33cc24(%rip)        # 3491b0 <n_prc_tot>
    c58c:	0f 84 d3 fb ff ff    	je     c165 <FindReceiver+0x45>
    c592:	48 8d 3d 97 a4 00 00 	lea    0xa497(%rip),%rdi        # 16a30 <__PRETTY_FUNCTION__.6556+0xc70>
    c599:	e8 a2 51 ff ff       	callq  1740 <puts@plt>
    c59e:	e8 0d 51 ff ff       	callq  16b0 <abort@plt>
    c5a3:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    c5a8:	e8 d3 54 ff ff       	callq  1a80 <sqrt@plt>
    c5ad:	8b 15 fd cb 33 00    	mov    0x33cbfd(%rip),%edx        # 3491b0 <n_prc_tot>
    c5b3:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    c5b8:	e9 6b fd ff ff       	jmpq   c328 <FindReceiver+0x208>
    c5bd:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    c5c2:	e8 b9 54 ff ff       	callq  1a80 <sqrt@plt>
    c5c7:	8b 15 e3 cb 33 00    	mov    0x33cbe3(%rip),%edx        # 3491b0 <n_prc_tot>
    c5cd:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    c5d2:	e9 11 fc ff ff       	jmpq   c1e8 <FindReceiver+0xc8>
    c5d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c5de:	00 00 

000000000000c5e0 <queue_init>:
    c5e0:	48 83 ec 08          	sub    $0x8,%rsp
    c5e4:	8b 3d 9e cb 33 00    	mov    0x33cb9e(%rip),%edi        # 349188 <n_cores>
    c5ea:	be 03 00 00 00       	mov    $0x3,%esi
    c5ef:	f2 0f 10 05 71 ca 00 	movsd  0xca71(%rip),%xmm0        # 19068 <__PRETTY_FUNCTION__.6556+0x32a8>
    c5f6:	00 
    c5f7:	e8 a4 f0 ff ff       	callq  b6a0 <nb_calqueue_init>
    c5fc:	48 89 05 5d cc 33 00 	mov    %rax,0x33cc5d(%rip)        # 349260 <nbcalqueue>
    c603:	48 83 c4 08          	add    $0x8,%rsp
    c607:	c3                   	retq   
    c608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c60f:	00 

000000000000c610 <unsafe_set_init>:
    c610:	41 55                	push   %r13
    c612:	41 54                	push   %r12
    c614:	55                   	push   %rbp
    c615:	53                   	push   %rbx
    c616:	48 83 ec 08          	sub    $0x8,%rsp
    c61a:	8b 1d 90 cb 33 00    	mov    0x33cb90(%rip),%ebx        # 3491b0 <n_prc_tot>
    c620:	89 d8                	mov    %ebx,%eax
    c622:	c1 e8 06             	shr    $0x6,%eax
    c625:	4c 8d 2c c5 08 00 00 	lea    0x8(,%rax,8),%r13
    c62c:	00 
    c62d:	4c 89 ef             	mov    %r13,%rdi
    c630:	e8 db 52 ff ff       	callq  1910 <malloc@plt>
    c635:	64 48 89 04 25 f0 5e 	mov    %rax,%fs:0xffffffffffff5ef0
    c63c:	ff ff 
    c63e:	48 85 c0             	test   %rax,%rax
    c641:	74 6c                	je     c6af <unsafe_set_init+0x9f>
    c643:	89 dd                	mov    %ebx,%ebp
    c645:	48 c1 e5 03          	shl    $0x3,%rbp
    c649:	48 89 ef             	mov    %rbp,%rdi
    c64c:	e8 bf 52 ff ff       	callq  1910 <malloc@plt>
    c651:	64 48 89 04 25 e8 5e 	mov    %rax,%fs:0xffffffffffff5ee8
    c658:	ff ff 
    c65a:	49 89 c4             	mov    %rax,%r12
    c65d:	48 85 c0             	test   %rax,%rax
    c660:	0f 84 8f 00 00 00    	je     c6f5 <unsafe_set_init+0xe5>
    c666:	48 89 ef             	mov    %rbp,%rdi
    c669:	e8 a2 52 ff ff       	callq  1910 <malloc@plt>
    c66e:	64 48 89 04 25 e0 5e 	mov    %rax,%fs:0xffffffffffff5ee0
    c675:	ff ff 
    c677:	48 89 c5             	mov    %rax,%rbp
    c67a:	48 85 c0             	test   %rax,%rax
    c67d:	74 52                	je     c6d1 <unsafe_set_init+0xc1>
    c67f:	85 db                	test   %ebx,%ebx
    c681:	74 15                	je     c698 <unsafe_set_init+0x88>
    c683:	8d 43 ff             	lea    -0x1(%rbx),%eax
    c686:	31 f6                	xor    %esi,%esi
    c688:	4c 89 e7             	mov    %r12,%rdi
    c68b:	48 8d 14 c5 08 00 00 	lea    0x8(,%rax,8),%rdx
    c692:	00 
    c693:	e8 b8 51 ff ff       	callq  1850 <memset@plt>
    c698:	48 83 c4 08          	add    $0x8,%rsp
    c69c:	4c 89 ea             	mov    %r13,%rdx
    c69f:	48 89 ef             	mov    %rbp,%rdi
    c6a2:	31 f6                	xor    %esi,%esi
    c6a4:	5b                   	pop    %rbx
    c6a5:	5d                   	pop    %rbp
    c6a6:	41 5c                	pop    %r12
    c6a8:	41 5d                	pop    %r13
    c6aa:	e9 a1 51 ff ff       	jmpq   1850 <memset@plt>
    c6af:	b9 59 00 00 00       	mov    $0x59,%ecx
    c6b4:	48 8d 15 88 c4 00 00 	lea    0xc488(%rip),%rdx        # 18b43 <__PRETTY_FUNCTION__.6556+0x2d83>
    c6bb:	bf 01 00 00 00       	mov    $0x1,%edi
    c6c0:	48 8d 35 94 c3 00 00 	lea    0xc394(%rip),%rsi        # 18a5b <__PRETTY_FUNCTION__.6556+0x2c9b>
    c6c7:	e8 a4 52 ff ff       	callq  1970 <__printf_chk@plt>
    c6cc:	e8 df 4f ff ff       	callq  16b0 <abort@plt>
    c6d1:	b9 61 00 00 00       	mov    $0x61,%ecx
    c6d6:	48 8d 15 66 c4 00 00 	lea    0xc466(%rip),%rdx        # 18b43 <__PRETTY_FUNCTION__.6556+0x2d83>
    c6dd:	48 8d 35 77 c3 00 00 	lea    0xc377(%rip),%rsi        # 18a5b <__PRETTY_FUNCTION__.6556+0x2c9b>
    c6e4:	bf 01 00 00 00       	mov    $0x1,%edi
    c6e9:	31 c0                	xor    %eax,%eax
    c6eb:	e8 80 52 ff ff       	callq  1970 <__printf_chk@plt>
    c6f0:	e8 bb 4f ff ff       	callq  16b0 <abort@plt>
    c6f5:	b9 5d 00 00 00       	mov    $0x5d,%ecx
    c6fa:	eb da                	jmp    c6d6 <unsafe_set_init+0xc6>
    c6fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c700 <queue_insert>:
    c700:	41 57                	push   %r15
    c702:	41 56                	push   %r14
    c704:	41 55                	push   %r13
    c706:	41 54                	push   %r12
    c708:	55                   	push   %rbp
    c709:	53                   	push   %rbx
    c70a:	48 83 ec 18          	sub    $0x18,%rsp
    c70e:	64 8b 04 25 00 5f ff 	mov    %fs:0xffffffffffff5f00,%eax
    c715:	ff 
    c716:	3d 80 00 00 00       	cmp    $0x80,%eax
    c71b:	0f 84 24 01 00 00    	je     c845 <queue_insert+0x145>
    c721:	41 89 cc             	mov    %ecx,%r12d
    c724:	81 f9 80 00 00 00    	cmp    $0x80,%ecx
    c72a:	0f 87 f5 00 00 00    	ja     c825 <queue_insert+0x125>
    c730:	48 89 d5             	mov    %rdx,%rbp
    c733:	89 c2                	mov    %eax,%edx
    c735:	49 c7 c5 78 5e ff ff 	mov    $0xffffffffffff5e78,%r13
    c73c:	41 89 ff             	mov    %edi,%r15d
    c73f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
    c743:	41 89 f6             	mov    %esi,%r14d
    c746:	48 c1 e2 06          	shl    $0x6,%rdx
    c74a:	64 41 8b 7d 00       	mov    %fs:0x0(%r13),%edi
    c74f:	64 48 8b 9a 68 5f ff 	mov    %fs:-0xa098(%rdx),%rbx
    c756:	ff 
    c757:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    c75d:	48 85 db             	test   %rbx,%rbx
    c760:	74 6e                	je     c7d0 <queue_insert+0xd0>
    c762:	83 c0 01             	add    $0x1,%eax
    c765:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c769:	be 59 02 00 00       	mov    $0x259,%esi
    c76e:	64 89 04 25 00 5f ff 	mov    %eax,%fs:0xffffffffffff5f00
    c775:	ff 
    c776:	0f 11 43 f0          	movups %xmm0,-0x10(%rbx)
    c77a:	f2 0f 10 05 3e 88 00 	movsd  0x883e(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    c781:	00 
    c782:	e8 39 3b 00 00       	callq  102c0 <statistics_post_lp_data>
    c787:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    c78d:	64 41 8b 45 00       	mov    %fs:0x0(%r13),%eax
    c792:	48 8d 7b 44          	lea    0x44(%rbx),%rdi
    c796:	44 88 63 13          	mov    %r12b,0x13(%rbx)
    c79a:	44 89 e1             	mov    %r12d,%ecx
    c79d:	66 44 89 7b 02       	mov    %r15w,0x2(%rbx)
    c7a2:	48 89 ee             	mov    %rbp,%rsi
    c7a5:	66 89 03             	mov    %ax,(%rbx)
    c7a8:	44 88 73 12          	mov    %r14b,0x12(%rbx)
    c7ac:	48 c7 83 38 01 00 00 	movq   $0x0,0x138(%rbx)
    c7b3:	00 00 00 00 
    c7b7:	f2 0f 11 4b 08       	movsd  %xmm1,0x8(%rbx)
    c7bc:	fc                   	cld    
    c7bd:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
    c7bf:	48 83 c4 18          	add    $0x18,%rsp
    c7c3:	5b                   	pop    %rbx
    c7c4:	5d                   	pop    %rbp
    c7c5:	41 5c                	pop    %r12
    c7c7:	41 5d                	pop    %r13
    c7c9:	41 5e                	pop    %r14
    c7cb:	41 5f                	pop    %r15
    c7cd:	c3                   	retq   
    c7ce:	66 90                	xchg   %ax,%ax
    c7d0:	64 48 8b 14 25 c0 5e 	mov    %fs:0xffffffffffff5ec0,%rdx
    c7d7:	ff ff 
    c7d9:	be 40 01 00 00       	mov    $0x140,%esi
    c7de:	e8 cd 90 ff ff       	callq  58b0 <list_allocate_node_buffer_from_list>
    c7e3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c7e7:	0f 11 40 f0          	movups %xmm0,-0x10(%rax)
    c7eb:	48 89 c3             	mov    %rax,%rbx
    c7ee:	64 8b 04 25 00 5f ff 	mov    %fs:0xffffffffffff5f00,%eax
    c7f5:	ff 
    c7f6:	8d 50 01             	lea    0x1(%rax),%edx
    c7f9:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    c7fd:	64 89 14 25 00 5f ff 	mov    %edx,%fs:0xffffffffffff5f00
    c804:	ff 
    c805:	48 c1 e0 06          	shl    $0x6,%rax
    c809:	64 48 8b 14 25 00 00 	mov    %fs:0x0,%rdx
    c810:	00 00 
    c812:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    c818:	48 89 9c 02 68 5f ff 	mov    %rbx,-0xa098(%rdx,%rax,1)
    c81f:	ff 
    c820:	e9 68 ff ff ff       	jmpq   c78d <queue_insert+0x8d>
    c825:	b9 80 00 00 00       	mov    $0x80,%ecx
    c82a:	44 89 e2             	mov    %r12d,%edx
    c82d:	bf 01 00 00 00       	mov    $0x1,%edi
    c832:	31 c0                	xor    %eax,%eax
    c834:	48 8d 35 b5 a2 00 00 	lea    0xa2b5(%rip),%rsi        # 16af0 <__PRETTY_FUNCTION__.6556+0xd30>
    c83b:	e8 30 51 ff ff       	callq  1970 <__printf_chk@plt>
    c840:	e8 6b 4e ff ff       	callq  16b0 <abort@plt>
    c845:	41 b8 80 00 00 00    	mov    $0x80,%r8d
    c84b:	48 c7 c0 88 5e ff ff 	mov    $0xffffffffffff5e88,%rax
    c852:	b9 80 00 00 00       	mov    $0x80,%ecx
    c857:	48 8d 35 4a a2 00 00 	lea    0xa24a(%rip),%rsi        # 16aa8 <__PRETTY_FUNCTION__.6556+0xce8>
    c85e:	bf 01 00 00 00       	mov    $0x1,%edi
    c863:	64 f2 0f 10 00       	movsd  %fs:(%rax),%xmm0
    c868:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
    c86f:	64 8b 10             	mov    %fs:(%rax),%edx
    c872:	b8 01 00 00 00       	mov    $0x1,%eax
    c877:	e8 f4 50 ff ff       	callq  1970 <__printf_chk@plt>
    c87c:	e8 2f 4e ff ff       	callq  16b0 <abort@plt>
    c881:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c88d:	00 00 00 

000000000000c890 <queue_clean>:
    c890:	64 c7 04 25 00 5f ff 	movl   $0x0,%fs:0xffffffffffff5f00
    c897:	ff 00 00 00 00 
    c89c:	c3                   	retq   
    c89d:	0f 1f 00             	nopl   (%rax)

000000000000c8a0 <queue_deliver_msgs>:
    c8a0:	41 57                	push   %r15
    c8a2:	41 56                	push   %r14
    c8a4:	41 55                	push   %r13
    c8a6:	41 54                	push   %r12
    c8a8:	55                   	push   %rbp
    c8a9:	53                   	push   %rbx
    c8aa:	48 83 ec 08          	sub    $0x8,%rsp
    c8ae:	49 c7 c5 78 5e ff ff 	mov    $0xffffffffffff5e78,%r13
    c8b5:	48 8b 05 cc 07 21 00 	mov    0x2107cc(%rip),%rax        # 21d088 <LPS>
    c8bc:	44 8b 3d ed c8 33 00 	mov    0x33c8ed(%rip),%r15d        # 3491b0 <n_prc_tot>
    c8c3:	64 41 8b 55 00       	mov    %fs:0x0(%r13),%edx
    c8c8:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    c8cc:	66 83 78 10 01       	cmpw   $0x1,0x10(%rax)
    c8d1:	74 0d                	je     c8e0 <queue_deliver_msgs+0x40>
    c8d3:	48 8d 3d 56 a2 00 00 	lea    0xa256(%rip),%rdi        # 16b30 <__PRETTY_FUNCTION__.6556+0xd70>
    c8da:	e8 61 4e ff ff       	callq  1740 <puts@plt>
    c8df:	cc                   	int3   
    c8e0:	64 48 83 3c 25 c0 ff 	cmpq   $0x0,%fs:0xffffffffffffffc0
    c8e7:	ff ff 00 
    c8ea:	0f 84 2b 04 00 00    	je     cd1b <queue_deliver_msgs+0x47b>
    c8f0:	64 8b 0c 25 00 5f ff 	mov    %fs:0xffffffffffff5f00,%ecx
    c8f7:	ff 
    c8f8:	85 c9                	test   %ecx,%ecx
    c8fa:	0f 84 00 04 00 00    	je     cd00 <queue_deliver_msgs+0x460>
    c900:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    c907:	00 00 
    c909:	45 31 f6             	xor    %r14d,%r14d
    c90c:	4c 8d a0 68 5f ff ff 	lea    -0xa098(%rax),%r12
    c913:	e9 1e 01 00 00       	jmpq   ca36 <queue_deliver_msgs+0x196>
    c918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c91f:	00 
    c920:	41 39 c7             	cmp    %eax,%r15d
    c923:	74 0d                	je     c932 <queue_deliver_msgs+0x92>
    c925:	48 8d 3d 5c a2 00 00 	lea    0xa25c(%rip),%rdi        # 16b88 <__PRETTY_FUNCTION__.6556+0xdc8>
    c92c:	e8 0f 4e ff ff       	callq  1740 <puts@plt>
    c931:	cc                   	int3   
    c932:	64 48 8b 04 25 c0 ff 	mov    %fs:0xffffffffffffffc0,%rax
    c939:	ff ff 
    c93b:	48 8b 15 46 07 21 00 	mov    0x210746(%rip),%rdx        # 21d088 <LPS>
    c942:	f2 0f 10 43 08       	movsd  0x8(%rbx),%xmm0
    c947:	48 89 43 28          	mov    %rax,0x28(%rbx)
    c94b:	64 41 8b 4d 00       	mov    %fs:0x0(%r13),%ecx
    c950:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
    c954:	8b 4a 48             	mov    0x48(%rdx),%ecx
    c957:	8b 52 4c             	mov    0x4c(%rdx),%edx
    c95a:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    c961:	00 
    c962:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%rbx)
    c969:	89 53 3c             	mov    %edx,0x3c(%rbx)
    c96c:	31 d2                	xor    %edx,%edx
    c96e:	66 89 53 10          	mov    %dx,0x10(%rbx)
    c972:	48 c7 c2 88 5e ff ff 	mov    $0xffffffffffff5e88,%rdx
    c979:	89 4b 38             	mov    %ecx,0x38(%rbx)
    c97c:	48 c7 43 14 00 00 00 	movq   $0x0,0x14(%rbx)
    c983:	00 
    c984:	f2 0f 11 43 30       	movsd  %xmm0,0x30(%rbx)
    c989:	64 f2 0f 10 12       	movsd  %fs:(%rdx),%xmm2
    c98e:	66 0f 2f d0          	comisd %xmm0,%xmm2
    c992:	0f 87 18 01 00 00    	ja     cab0 <queue_deliver_msgs+0x210>
    c998:	66 0f 2f 40 30       	comisd 0x30(%rax),%xmm0
    c99d:	76 05                	jbe    c9a4 <queue_deliver_msgs+0x104>
    c99f:	f2 0f 11 40 30       	movsd  %xmm0,0x30(%rax)
    c9a4:	0f 31                	rdtsc  
    c9a6:	48 c1 e2 20          	shl    $0x20,%rdx
    c9aa:	89 c0                	mov    %eax,%eax
    c9ac:	48 8b 3d ad c8 33 00 	mov    0x33c8ad(%rip),%rdi        # 349260 <nbcalqueue>
    c9b3:	48 89 de             	mov    %rbx,%rsi
    c9b6:	48 09 c2             	or     %rax,%rdx
    c9b9:	48 89 d5             	mov    %rdx,%rbp
    c9bc:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    c9c0:	e8 bb ee ff ff       	callq  b880 <nbc_enqueue>
    c9c5:	66 83 7b 10 00       	cmpw   $0x0,0x10(%rbx)
    c9ca:	0f 84 00 03 00 00    	je     ccd0 <queue_deliver_msgs+0x430>
    c9d0:	0f 31                	rdtsc  
    c9d2:	48 c1 e2 20          	shl    $0x20,%rdx
    c9d6:	89 c3                	mov    %eax,%ebx
    c9d8:	48 09 d3             	or     %rdx,%rbx
    c9db:	48 39 dd             	cmp    %rbx,%rbp
    c9de:	0f 87 84 00 00 00    	ja     ca68 <queue_deliver_msgs+0x1c8>
    c9e4:	48 29 eb             	sub    %rbp,%rbx
    c9e7:	0f 88 9e 00 00 00    	js     ca8b <queue_deliver_msgs+0x1eb>
    c9ed:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c9f1:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    c9f6:	64 41 8b 7d 00       	mov    %fs:0x0(%r13),%edi
    c9fb:	be cf 00 00 00       	mov    $0xcf,%esi
    ca00:	41 83 c6 01          	add    $0x1,%r14d
    ca04:	49 81 c4 40 01 00 00 	add    $0x140,%r12
    ca0b:	e8 b0 38 00 00       	callq  102c0 <statistics_post_lp_data>
    ca10:	64 41 8b 7d 00       	mov    %fs:0x0(%r13),%edi
    ca15:	be 6b 00 00 00       	mov    $0x6b,%esi
    ca1a:	f2 0f 10 05 9e 85 00 	movsd  0x859e(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    ca21:	00 
    ca22:	e8 99 38 00 00       	callq  102c0 <statistics_post_lp_data>
    ca27:	64 44 39 34 25 00 5f 	cmp    %r14d,%fs:0xffffffffffff5f00
    ca2e:	ff ff 
    ca30:	0f 86 ca 02 00 00    	jbe    cd00 <queue_deliver_msgs+0x460>
    ca36:	49 8b 1c 24          	mov    (%r12),%rbx
    ca3a:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    ca41:	00 
    ca42:	48 85 db             	test   %rbx,%rbx
    ca45:	0f 84 e2 02 00 00    	je     cd2d <queue_deliver_msgs+0x48d>
    ca4b:	44 39 3d 5e c7 33 00 	cmp    %r15d,0x33c75e(%rip)        # 3491b0 <n_prc_tot>
    ca52:	0f b7 03             	movzwl (%rbx),%eax
    ca55:	0f 85 c5 fe ff ff    	jne    c920 <queue_deliver_msgs+0x80>
    ca5b:	41 89 c7             	mov    %eax,%r15d
    ca5e:	e9 cf fe ff ff       	jmpq   c932 <queue_deliver_msgs+0x92>
    ca63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ca68:	48 89 d9             	mov    %rbx,%rcx
    ca6b:	48 89 ea             	mov    %rbp,%rdx
    ca6e:	48 8d 35 4b 83 00 00 	lea    0x834b(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
    ca75:	31 c0                	xor    %eax,%eax
    ca77:	bf 01 00 00 00       	mov    $0x1,%edi
    ca7c:	e8 ef 4e ff ff       	callq  1970 <__printf_chk@plt>
    ca81:	cc                   	int3   
    ca82:	48 29 eb             	sub    %rbp,%rbx
    ca85:	0f 89 62 ff ff ff    	jns    c9ed <queue_deliver_msgs+0x14d>
    ca8b:	48 89 d8             	mov    %rbx,%rax
    ca8e:	83 e3 01             	and    $0x1,%ebx
    ca91:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ca95:	48 d1 e8             	shr    %rax
    ca98:	48 09 d8             	or     %rbx,%rax
    ca9b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    caa0:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    caa4:	e9 4d ff ff ff       	jmpq   c9f6 <queue_deliver_msgs+0x156>
    caa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cab0:	66 0f 28 c8          	movapd %xmm0,%xmm1
    cab4:	48 8d 35 15 a1 00 00 	lea    0xa115(%rip),%rsi        # 16bd0 <__PRETTY_FUNCTION__.6556+0xe10>
    cabb:	bf 01 00 00 00       	mov    $0x1,%edi
    cac0:	b8 02 00 00 00       	mov    $0x2,%eax
    cac5:	66 0f 28 c2          	movapd %xmm2,%xmm0
    cac9:	e8 a2 4e ff ff       	callq  1970 <__printf_chk@plt>
    cace:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    cad2:	8b 43 40             	mov    0x40(%rbx),%eax
    cad5:	be 01 00 00 00       	mov    $0x1,%esi
    cada:	48 8b bb d0 00 00 00 	mov    0xd0(%rbx),%rdi
    cae1:	48 81 fa fe 5a 00 00 	cmp    $0x5afe,%rdx
    cae8:	74 36                	je     cb20 <queue_deliver_msgs+0x280>
    caea:	a8 02                	test   $0x2,%al
    caec:	0f 85 fe 01 00 00    	jne    ccf0 <queue_deliver_msgs+0x450>
    caf2:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
    caf6:	be 01 00 00 00       	mov    $0x1,%esi
    cafb:	48 85 c9             	test   %rcx,%rcx
    cafe:	74 20                	je     cb20 <queue_deliver_msgs+0x280>
    cb00:	31 f6                	xor    %esi,%esi
    cb02:	f6 41 40 02          	testb  $0x2,0x40(%rcx)
    cb06:	75 18                	jne    cb20 <queue_deliver_msgs+0x280>
    cb08:	8b 71 14             	mov    0x14(%rcx),%esi
    cb0b:	39 73 3c             	cmp    %esi,0x3c(%rbx)
    cb0e:	40 0f 94 c6          	sete   %sil
    cb12:	40 0f b6 f6          	movzbl %sil,%esi
    cb16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    cb1d:	00 00 00 
    cb20:	48 8d 0d 43 7e 00 00 	lea    0x7e43(%rip),%rcx        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    cb27:	83 f8 01             	cmp    $0x1,%eax
    cb2a:	74 21                	je     cb4d <queue_deliver_msgs+0x2ad>
    cb2c:	48 8d 0d 24 7e 00 00 	lea    0x7e24(%rip),%rcx        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    cb33:	83 f8 02             	cmp    $0x2,%eax
    cb36:	74 15                	je     cb4d <queue_deliver_msgs+0x2ad>
    cb38:	83 f8 03             	cmp    $0x3,%eax
    cb3b:	48 8d 0d 20 7e 00 00 	lea    0x7e20(%rip),%rcx        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    cb42:	4c 8d 15 2a 7e 00 00 	lea    0x7e2a(%rip),%r10        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    cb49:	49 0f 44 ca          	cmove  %r10,%rcx
    cb4d:	44 0f b7 5b 02       	movzwl 0x2(%rbx),%r11d
    cb52:	44 0f b7 13          	movzwl (%rbx),%r10d
    cb56:	44 8b 4b 14          	mov    0x14(%rbx),%r9d
    cb5a:	44 0f b7 43 10       	movzwl 0x10(%rbx),%r8d
    cb5f:	f2 0f 10 43 08       	movsd  0x8(%rbx),%xmm0
    cb64:	52                   	push   %rdx
    cb65:	44 89 d2             	mov    %r10d,%edx
    cb68:	57                   	push   %rdi
    cb69:	bf 01 00 00 00       	mov    $0x1,%edi
    cb6e:	53                   	push   %rbx
    cb6f:	56                   	push   %rsi
    cb70:	48 8d 35 c1 83 00 00 	lea    0x83c1(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    cb77:	51                   	push   %rcx
    cb78:	44 89 d9             	mov    %r11d,%ecx
    cb7b:	50                   	push   %rax
    cb7c:	b8 01 00 00 00       	mov    $0x1,%eax
    cb81:	e8 ea 4d ff ff       	callq  1970 <__printf_chk@plt>
    cb86:	48 83 c4 30          	add    $0x30,%rsp
    cb8a:	bf 01 00 00 00       	mov    $0x1,%edi
    cb8f:	64 48 8b 04 25 c0 ff 	mov    %fs:0xffffffffffffffc0,%rax
    cb96:	ff ff 
    cb98:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cb9c:	48 8b a8 d0 00 00 00 	mov    0xd0(%rax),%rbp
    cba3:	8b 50 40             	mov    0x40(%rax),%edx
    cba6:	48 81 f9 fe 5a 00 00 	cmp    $0x5afe,%rcx
    cbad:	74 31                	je     cbe0 <queue_deliver_msgs+0x340>
    cbaf:	f6 c2 02             	test   $0x2,%dl
    cbb2:	0f 85 30 01 00 00    	jne    cce8 <queue_deliver_msgs+0x448>
    cbb8:	48 8b 70 28          	mov    0x28(%rax),%rsi
    cbbc:	bf 01 00 00 00       	mov    $0x1,%edi
    cbc1:	48 85 f6             	test   %rsi,%rsi
    cbc4:	74 1a                	je     cbe0 <queue_deliver_msgs+0x340>
    cbc6:	31 ff                	xor    %edi,%edi
    cbc8:	f6 46 40 02          	testb  $0x2,0x40(%rsi)
    cbcc:	75 12                	jne    cbe0 <queue_deliver_msgs+0x340>
    cbce:	31 ff                	xor    %edi,%edi
    cbd0:	8b 76 14             	mov    0x14(%rsi),%esi
    cbd3:	39 70 3c             	cmp    %esi,0x3c(%rax)
    cbd6:	40 0f 94 c7          	sete   %dil
    cbda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cbe0:	48 8d 35 83 7d 00 00 	lea    0x7d83(%rip),%rsi        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    cbe7:	83 fa 01             	cmp    $0x1,%edx
    cbea:	74 21                	je     cc0d <queue_deliver_msgs+0x36d>
    cbec:	48 8d 35 64 7d 00 00 	lea    0x7d64(%rip),%rsi        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    cbf3:	83 fa 02             	cmp    $0x2,%edx
    cbf6:	74 15                	je     cc0d <queue_deliver_msgs+0x36d>
    cbf8:	83 fa 03             	cmp    $0x3,%edx
    cbfb:	48 8d 35 60 7d 00 00 	lea    0x7d60(%rip),%rsi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    cc02:	4c 8d 1d 6a 7d 00 00 	lea    0x7d6a(%rip),%r11        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    cc09:	49 0f 44 f3          	cmove  %r11,%rsi
    cc0d:	44 0f b7 58 02       	movzwl 0x2(%rax),%r11d
    cc12:	44 0f b7 10          	movzwl (%rax),%r10d
    cc16:	44 8b 48 14          	mov    0x14(%rax),%r9d
    cc1a:	44 0f b7 40 10       	movzwl 0x10(%rax),%r8d
    cc1f:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
    cc24:	51                   	push   %rcx
    cc25:	44 89 d9             	mov    %r11d,%ecx
    cc28:	55                   	push   %rbp
    cc29:	50                   	push   %rax
    cc2a:	b8 01 00 00 00       	mov    $0x1,%eax
    cc2f:	57                   	push   %rdi
    cc30:	bf 01 00 00 00       	mov    $0x1,%edi
    cc35:	56                   	push   %rsi
    cc36:	48 8d 35 fb 82 00 00 	lea    0x82fb(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    cc3d:	52                   	push   %rdx
    cc3e:	44 89 d2             	mov    %r10d,%edx
    cc41:	e8 2a 4d ff ff       	callq  1970 <__printf_chk@plt>
    cc46:	f2 0f 10 4b 08       	movsd  0x8(%rbx),%xmm1
    cc4b:	48 83 c4 30          	add    $0x30,%rsp
    cc4f:	64 48 8b 04 25 c0 ff 	mov    %fs:0xffffffffffffffc0,%rax
    cc56:	ff ff 
    cc58:	48 8d 35 a9 9f 00 00 	lea    0x9fa9(%rip),%rsi        # 16c08 <__PRETTY_FUNCTION__.6556+0xe48>
    cc5f:	bf 01 00 00 00       	mov    $0x1,%edi
    cc64:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
    cc69:	b8 02 00 00 00       	mov    $0x2,%eax
    cc6e:	e8 fd 4c ff ff       	callq  1970 <__printf_chk@plt>
    cc73:	0f b7 4b 02          	movzwl 0x2(%rbx),%ecx
    cc77:	64 41 8b 55 00       	mov    %fs:0x0(%r13),%edx
    cc7c:	31 c0                	xor    %eax,%eax
    cc7e:	48 8d 35 bb 9f 00 00 	lea    0x9fbb(%rip),%rsi        # 16c40 <__PRETTY_FUNCTION__.6556+0xe80>
    cc85:	bf 01 00 00 00       	mov    $0x1,%edi
    cc8a:	e8 e1 4c ff ff       	callq  1970 <__printf_chk@plt>
    cc8f:	0f be 4b 12          	movsbl 0x12(%rbx),%ecx
    cc93:	bf 01 00 00 00       	mov    $0x1,%edi
    cc98:	64 48 8b 04 25 c0 ff 	mov    %fs:0xffffffffffffffc0,%rax
    cc9f:	ff ff 
    cca1:	48 8d 35 c0 9f 00 00 	lea    0x9fc0(%rip),%rsi        # 16c68 <__PRETTY_FUNCTION__.6556+0xea8>
    cca8:	0f be 50 12          	movsbl 0x12(%rax),%edx
    ccac:	31 c0                	xor    %eax,%eax
    ccae:	e8 bd 4c ff ff       	callq  1970 <__printf_chk@plt>
    ccb3:	cc                   	int3   
    ccb4:	64 48 8b 04 25 c0 ff 	mov    %fs:0xffffffffffffffc0,%rax
    ccbb:	ff ff 
    ccbd:	f2 0f 10 43 08       	movsd  0x8(%rbx),%xmm0
    ccc2:	e9 d1 fc ff ff       	jmpq   c998 <queue_deliver_msgs+0xf8>
    ccc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ccce:	00 00 
    ccd0:	48 8d 3d b9 9f 00 00 	lea    0x9fb9(%rip),%rdi        # 16c90 <__PRETTY_FUNCTION__.6556+0xed0>
    ccd7:	e8 64 4a ff ff       	callq  1740 <puts@plt>
    ccdc:	e9 ef fc ff ff       	jmpq   c9d0 <queue_deliver_msgs+0x130>
    cce1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cce8:	31 ff                	xor    %edi,%edi
    ccea:	e9 fd fe ff ff       	jmpq   cbec <queue_deliver_msgs+0x34c>
    ccef:	90                   	nop
    ccf0:	31 f6                	xor    %esi,%esi
    ccf2:	e9 35 fe ff ff       	jmpq   cb2c <queue_deliver_msgs+0x28c>
    ccf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ccfe:	00 00 
    cd00:	64 c7 04 25 00 5f ff 	movl   $0x0,%fs:0xffffffffffff5f00
    cd07:	ff 00 00 00 00 
    cd0c:	48 83 c4 08          	add    $0x8,%rsp
    cd10:	5b                   	pop    %rbx
    cd11:	5d                   	pop    %rbp
    cd12:	41 5c                	pop    %r12
    cd14:	41 5d                	pop    %r13
    cd16:	41 5e                	pop    %r14
    cd18:	41 5f                	pop    %r15
    cd1a:	c3                   	retq   
    cd1b:	48 8d 3d 3e 9e 00 00 	lea    0x9e3e(%rip),%rdi        # 16b60 <__PRETTY_FUNCTION__.6556+0xda0>
    cd22:	e8 19 4a ff ff       	callq  1740 <puts@plt>
    cd27:	cc                   	int3   
    cd28:	e9 c3 fb ff ff       	jmpq   c8f0 <queue_deliver_msgs+0x50>
    cd2d:	b9 38 01 00 00       	mov    $0x138,%ecx
    cd32:	48 8d 15 0a be 00 00 	lea    0xbe0a(%rip),%rdx        # 18b43 <__PRETTY_FUNCTION__.6556+0x2d83>
    cd39:	48 8d 35 10 be 00 00 	lea    0xbe10(%rip),%rsi        # 18b50 <__PRETTY_FUNCTION__.6556+0x2d90>
    cd40:	31 c0                	xor    %eax,%eax
    cd42:	bf 01 00 00 00       	mov    $0x1,%edi
    cd47:	e8 24 4c ff ff       	callq  1970 <__printf_chk@plt>
    cd4c:	e8 5f 49 ff ff       	callq  16b0 <abort@plt>
    cd51:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cd56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    cd5d:	00 00 00 

000000000000cd60 <is_valid>:
    cd60:	48 81 7f 20 fe 5a 00 	cmpq   $0x5afe,0x20(%rdi)
    cd67:	00 
    cd68:	b8 01 00 00 00       	mov    $0x1,%eax
    cd6d:	74 27                	je     cd96 <is_valid+0x36>
    cd6f:	31 c0                	xor    %eax,%eax
    cd71:	f6 47 40 02          	testb  $0x2,0x40(%rdi)
    cd75:	75 1f                	jne    cd96 <is_valid+0x36>
    cd77:	48 8b 57 28          	mov    0x28(%rdi),%rdx
    cd7b:	b8 01 00 00 00       	mov    $0x1,%eax
    cd80:	48 85 d2             	test   %rdx,%rdx
    cd83:	74 11                	je     cd96 <is_valid+0x36>
    cd85:	31 c0                	xor    %eax,%eax
    cd87:	f6 42 40 02          	testb  $0x2,0x40(%rdx)
    cd8b:	75 09                	jne    cd96 <is_valid+0x36>
    cd8d:	8b 42 14             	mov    0x14(%rdx),%eax
    cd90:	39 47 3c             	cmp    %eax,0x3c(%rdi)
    cd93:	0f 94 c0             	sete   %al
    cd96:	c3                   	retq   
    cd97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cd9e:	00 00 

000000000000cda0 <commit_event>:
    cda0:	41 57                	push   %r15
    cda2:	41 56                	push   %r14
    cda4:	41 55                	push   %r13
    cda6:	41 54                	push   %r12
    cda8:	41 89 d4             	mov    %edx,%r12d
    cdab:	55                   	push   %rbp
    cdac:	48 89 f5             	mov    %rsi,%rbp
    cdaf:	53                   	push   %rbx
    cdb0:	48 89 fb             	mov    %rdi,%rbx
    cdb3:	48 83 ec 18          	sub    $0x18,%rsp
    cdb7:	48 8b 05 ca 02 21 00 	mov    0x2102ca(%rip),%rax        # 21d088 <LPS>
    cdbe:	4e 8b 34 e0          	mov    (%rax,%r12,8),%r14
    cdc2:	4d 8b 7e 30          	mov    0x30(%r14),%r15
    cdc6:	e8 95 ff ff ff       	callq  cd60 <is_valid>
    cdcb:	84 c0                	test   %al,%al
    cdcd:	74 61                	je     ce30 <commit_event+0x90>
    cdcf:	8b 43 18             	mov    0x18(%rbx),%eax
    cdd2:	85 c0                	test   %eax,%eax
    cdd4:	74 4a                	je     ce20 <commit_event+0x80>
    cdd6:	48 c7 43 20 fe 5a 00 	movq   $0x5afe,0x20(%rbx)
    cddd:	00 
    cdde:	48 85 ed             	test   %rbp,%rbp
    cde1:	74 23                	je     ce06 <commit_event+0x66>
    cde3:	48 81 fd de c0 ad 0b 	cmp    $0xbadc0de,%rbp
    cdea:	74 1a                	je     ce06 <commit_event+0x66>
    cdec:	48 8b 3d 6d c4 33 00 	mov    0x33c46d(%rip),%rdi        # 349260 <nbcalqueue>
    cdf3:	48 89 ee             	mov    %rbp,%rsi
    cdf6:	e8 55 f1 ff ff       	callq  bf50 <delete>
    cdfb:	41 89 c5             	mov    %eax,%r13d
    cdfe:	84 c0                	test   %al,%al
    ce00:	0f 85 d2 00 00 00    	jne    ced8 <commit_event+0x138>
    ce06:	45 31 ed             	xor    %r13d,%r13d
    ce09:	48 83 c4 18          	add    $0x18,%rsp
    ce0d:	44 89 e8             	mov    %r13d,%eax
    ce10:	5b                   	pop    %rbx
    ce11:	5d                   	pop    %rbp
    ce12:	41 5c                	pop    %r12
    ce14:	41 5d                	pop    %r13
    ce16:	41 5e                	pop    %r14
    ce18:	41 5f                	pop    %r15
    ce1a:	c3                   	retq   
    ce1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ce20:	48 8d 3d 91 9e 00 00 	lea    0x9e91(%rip),%rdi        # 16cb8 <__PRETTY_FUNCTION__.6556+0xef8>
    ce27:	e8 14 49 ff ff       	callq  1740 <puts@plt>
    ce2c:	eb a8                	jmp    cdd6 <commit_event+0x36>
    ce2e:	66 90                	xchg   %ax,%ax
    ce30:	48 8d 35 30 bd 00 00 	lea    0xbd30(%rip),%rsi        # 18b67 <__PRETTY_FUNCTION__.6556+0x2da7>
    ce37:	bf 01 00 00 00       	mov    $0x1,%edi
    ce3c:	e8 2f 4b ff ff       	callq  1970 <__printf_chk@plt>
    ce41:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    ce45:	48 89 df             	mov    %rbx,%rdi
    ce48:	4c 8b ab d0 00 00 00 	mov    0xd0(%rbx),%r13
    ce4f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    ce54:	e8 07 ff ff ff       	callq  cd60 <is_valid>
    ce59:	8b 53 40             	mov    0x40(%rbx),%edx
    ce5c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    ce61:	48 8d 0d 02 7b 00 00 	lea    0x7b02(%rip),%rcx        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    ce68:	0f b6 c0             	movzbl %al,%eax
    ce6b:	83 fa 01             	cmp    $0x1,%edx
    ce6e:	74 21                	je     ce91 <commit_event+0xf1>
    ce70:	48 8d 0d e0 7a 00 00 	lea    0x7ae0(%rip),%rcx        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    ce77:	83 fa 02             	cmp    $0x2,%edx
    ce7a:	74 15                	je     ce91 <commit_event+0xf1>
    ce7c:	83 fa 03             	cmp    $0x3,%edx
    ce7f:	48 8d 0d ed 7a 00 00 	lea    0x7aed(%rip),%rcx        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    ce86:	48 8d 3d d5 7a 00 00 	lea    0x7ad5(%rip),%rdi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    ce8d:	48 0f 45 cf          	cmovne %rdi,%rcx
    ce91:	44 0f b7 5b 02       	movzwl 0x2(%rbx),%r11d
    ce96:	44 0f b7 13          	movzwl (%rbx),%r10d
    ce9a:	56                   	push   %rsi
    ce9b:	bf 01 00 00 00       	mov    $0x1,%edi
    cea0:	41 55                	push   %r13
    cea2:	44 8b 4b 14          	mov    0x14(%rbx),%r9d
    cea6:	48 8d 35 8b 80 00 00 	lea    0x808b(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    cead:	f2 0f 10 43 08       	movsd  0x8(%rbx),%xmm0
    ceb2:	44 0f b7 43 10       	movzwl 0x10(%rbx),%r8d
    ceb7:	53                   	push   %rbx
    ceb8:	50                   	push   %rax
    ceb9:	b8 01 00 00 00       	mov    $0x1,%eax
    cebe:	51                   	push   %rcx
    cebf:	44 89 d9             	mov    %r11d,%ecx
    cec2:	52                   	push   %rdx
    cec3:	44 89 d2             	mov    %r10d,%edx
    cec6:	e8 a5 4a ff ff       	callq  1970 <__printf_chk@plt>
    cecb:	48 83 c4 30          	add    $0x30,%rsp
    cecf:	e9 fb fe ff ff       	jmpq   cdcf <commit_event+0x2f>
    ced4:	0f 1f 40 00          	nopl   0x0(%rax)
    ced8:	48 8b 05 a9 01 21 00 	mov    0x2101a9(%rip),%rax        # 21d088 <LPS>
    cedf:	f2 0f 10 45 18       	movsd  0x18(%rbp),%xmm0
    cee4:	4a 8b 04 e0          	mov    (%rax,%r12,8),%rax
    cee8:	f2 0f 10 48 60       	movsd  0x60(%rax),%xmm1
    ceed:	66 0f 2f c1          	comisd %xmm1,%xmm0
    cef1:	76 65                	jbe    cf58 <commit_event+0x1b8>
    cef3:	8b 55 28             	mov    0x28(%rbp),%edx
    cef6:	48 89 50 68          	mov    %rdx,0x68(%rax)
    cefa:	f2 0f 11 40 60       	movsd  %xmm0,0x60(%rax)
    ceff:	41 8b 46 4c          	mov    0x4c(%r14),%eax
    cf03:	66 49 0f 6e c7       	movq   %r15,%xmm0
    cf08:	66 48 0f 6e d5       	movq   %rbp,%xmm2
    cf0d:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    cf11:	89 83 c4 00 00 00    	mov    %eax,0xc4(%rbx)
    cf17:	0f 11 83 08 01 00 00 	movups %xmm0,0x108(%rbx)
    cf1e:	0f 31                	rdtsc  
    cf20:	48 c1 e2 20          	shl    $0x20,%rdx
    cf24:	89 c0                	mov    %eax,%eax
    cf26:	be 69 00 00 00       	mov    $0x69,%esi
    cf2b:	f2 0f 10 05 8d 80 00 	movsd  0x808d(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    cf32:	00 
    cf33:	48 09 c2             	or     %rax,%rdx
    cf36:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
    cf3d:	48 89 93 00 01 00 00 	mov    %rdx,0x100(%rbx)
    cf44:	64 8b 38             	mov    %fs:(%rax),%edi
    cf47:	e8 94 38 00 00       	callq  107e0 <statistics_post_th_data>
    cf4c:	e9 b8 fe ff ff       	jmpq   ce09 <commit_event+0x69>
    cf51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cf58:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    cf5c:	7a a1                	jp     ceff <commit_event+0x15f>
    cf5e:	75 9f                	jne    ceff <commit_event+0x15f>
    cf60:	8b 55 28             	mov    0x28(%rbp),%edx
    cf63:	48 39 50 68          	cmp    %rdx,0x68(%rax)
    cf67:	73 96                	jae    ceff <commit_event+0x15f>
    cf69:	eb 8b                	jmp    cef6 <commit_event+0x156>
    cf6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cf70 <check_if_event_already_handled_inside_lock>:
    cf70:	41 54                	push   %r12
    cf72:	48 8b 05 0f 01 21 00 	mov    0x21010f(%rip),%rax        # 21d088 <LPS>
    cf79:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    cf7f:	55                   	push   %rbp
    cf80:	53                   	push   %rbx
    cf81:	0f b7 57 02          	movzwl 0x2(%rdi),%edx
    cf85:	48 89 fb             	mov    %rdi,%rbx
    cf88:	f2 0f 10 4f 08       	movsd  0x8(%rdi),%xmm1
    cf8d:	0f b7 4f 10          	movzwl 0x10(%rdi),%ecx
    cf91:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    cf95:	48 8b 40 30          	mov    0x30(%rax),%rax
    cf99:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
    cf9e:	0f b7 50 10          	movzwl 0x10(%rax),%edx
    cfa2:	66 0f 2f c1          	comisd %xmm1,%xmm0
    cfa6:	77 19                	ja     cfc1 <check_if_event_already_handled_inside_lock+0x51>
    cfa8:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    cfac:	be 00 00 00 00       	mov    $0x0,%esi
    cfb1:	0f 9b c0             	setnp  %al
    cfb4:	0f 45 c6             	cmovne %esi,%eax
    cfb7:	66 39 d1             	cmp    %dx,%cx
    cfba:	41 0f 96 c4          	setbe  %r12b
    cfbe:	41 21 c4             	and    %eax,%r12d
    cfc1:	8b 6b 40             	mov    0x40(%rbx),%ebp
    cfc4:	48 89 df             	mov    %rbx,%rdi
    cfc7:	e8 94 fd ff ff       	callq  cd60 <is_valid>
    cfcc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    cfd2:	83 fd 02             	cmp    $0x2,%ebp
    cfd5:	74 12                	je     cfe9 <check_if_event_already_handled_inside_lock+0x79>
    cfd7:	83 fd 03             	cmp    $0x3,%ebp
    cfda:	74 1c                	je     cff8 <check_if_event_already_handled_inside_lock+0x88>
    cfdc:	44 21 e0             	and    %r12d,%eax
    cfdf:	83 fd 01             	cmp    $0x1,%ebp
    cfe2:	41 0f 94 c0          	sete   %r8b
    cfe6:	41 21 c0             	and    %eax,%r8d
    cfe9:	5b                   	pop    %rbx
    cfea:	44 89 c0             	mov    %r8d,%eax
    cfed:	5d                   	pop    %rbp
    cfee:	41 5c                	pop    %r12
    cff0:	c3                   	retq   
    cff1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cff8:	48 81 7b 20 4a 4a ba 	cmpq   $0xba4a4a,0x20(%rbx)
    cfff:	00 
    d000:	5b                   	pop    %rbx
    d001:	41 0f 94 c0          	sete   %r8b
    d005:	5d                   	pop    %rbp
    d006:	41 5c                	pop    %r12
    d008:	44 89 c0             	mov    %r8d,%eax
    d00b:	c3                   	retq   
    d00c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d010 <check_extracted_in_past_outside_lock>:
    d010:	41 56                	push   %r14
    d012:	48 8b 0d 87 c1 33 00 	mov    0x33c187(%rip),%rcx        # 3491a0 <lp_lock>
    d019:	41 55                	push   %r13
    d01b:	41 54                	push   %r12
    d01d:	55                   	push   %rbp
    d01e:	53                   	push   %rbx
    d01f:	0f b7 57 02          	movzwl 0x2(%rdi),%edx
    d023:	48 89 d0             	mov    %rdx,%rax
    d026:	48 c1 e0 06          	shl    $0x6,%rax
    d02a:	25 c0 ff 3f 00       	and    $0x3fffc0,%eax
    d02f:	48 01 c1             	add    %rax,%rcx
    d032:	48 89 c5             	mov    %rax,%rbp
    d035:	8b 01                	mov    (%rcx),%eax
    d037:	85 c0                	test   %eax,%eax
    d039:	74 0d                	je     d048 <check_extracted_in_past_outside_lock+0x38>
    d03b:	5b                   	pop    %rbx
    d03c:	5d                   	pop    %rbp
    d03d:	41 5c                	pop    %r12
    d03f:	41 5d                	pop    %r13
    d041:	41 5e                	pop    %r14
    d043:	c3                   	retq   
    d044:	0f 1f 40 00          	nopl   0x0(%rax)
    d048:	48 8b 35 39 00 21 00 	mov    0x210039(%rip),%rsi        # 21d088 <LPS>
    d04f:	49 c7 c4 90 5e ff ff 	mov    $0xffffffffffff5e90,%r12
    d056:	48 89 fb             	mov    %rdi,%rbx
    d059:	f2 0f 10 47 08       	movsd  0x8(%rdi),%xmm0
    d05e:	0f b7 7f 10          	movzwl 0x10(%rdi),%edi
    d062:	48 8b 34 d6          	mov    (%rsi,%rdx,8),%rsi
    d066:	64 41 8b 14 24       	mov    %fs:(%r12),%edx
    d06b:	83 c2 01             	add    $0x1,%edx
    d06e:	f0 0f b1 11          	lock cmpxchg %edx,(%rcx)
    d072:	75 c7                	jne    d03b <check_extracted_in_past_outside_lock+0x2b>
    d074:	48 8b 46 30          	mov    0x30(%rsi),%rax
    d078:	f2 0f 10 48 08       	movsd  0x8(%rax),%xmm1
    d07d:	0f b7 50 10          	movzwl 0x10(%rax),%edx
    d081:	66 0f 2f c8          	comisd %xmm0,%xmm1
    d085:	77 18                	ja     d09f <check_extracted_in_past_outside_lock+0x8f>
    d087:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    d08b:	b9 00 00 00 00       	mov    $0x0,%ecx
    d090:	0f 9b c0             	setnp  %al
    d093:	0f 45 c1             	cmovne %ecx,%eax
    d096:	84 c0                	test   %al,%al
    d098:	74 0c                	je     d0a6 <check_extracted_in_past_outside_lock+0x96>
    d09a:	66 39 d7             	cmp    %dx,%di
    d09d:	77 07                	ja     d0a6 <check_extracted_in_past_outside_lock+0x96>
    d09f:	8b 43 18             	mov    0x18(%rbx),%eax
    d0a2:	85 c0                	test   %eax,%eax
    d0a4:	74 22                	je     d0c8 <check_extracted_in_past_outside_lock+0xb8>
    d0a6:	64 41 8b 04 24       	mov    %fs:(%r12),%eax
    d0ab:	48 8b 15 ee c0 33 00 	mov    0x33c0ee(%rip),%rdx        # 3491a0 <lp_lock>
    d0b2:	31 c9                	xor    %ecx,%ecx
    d0b4:	83 c0 01             	add    $0x1,%eax
    d0b7:	f0 0f b1 0c 2a       	lock cmpxchg %ecx,(%rdx,%rbp,1)
    d0bc:	5b                   	pop    %rbx
    d0bd:	5d                   	pop    %rbp
    d0be:	41 5c                	pop    %r12
    d0c0:	41 5d                	pop    %r13
    d0c2:	41 5e                	pop    %r14
    d0c4:	c3                   	retq   
    d0c5:	0f 1f 00             	nopl   (%rax)
    d0c8:	48 8d 3d 19 9c 00 00 	lea    0x9c19(%rip),%rdi        # 16ce8 <__PRETTY_FUNCTION__.6556+0xf28>
    d0cf:	e8 6c 46 ff ff       	callq  1740 <puts@plt>
    d0d4:	48 89 df             	mov    %rbx,%rdi
    d0d7:	4c 8b 73 20          	mov    0x20(%rbx),%r14
    d0db:	4c 8b ab d0 00 00 00 	mov    0xd0(%rbx),%r13
    d0e2:	e8 79 fc ff ff       	callq  cd60 <is_valid>
    d0e7:	48 8d 0d 7c 78 00 00 	lea    0x787c(%rip),%rcx        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    d0ee:	0f b6 d0             	movzbl %al,%edx
    d0f1:	8b 43 40             	mov    0x40(%rbx),%eax
    d0f4:	83 f8 01             	cmp    $0x1,%eax
    d0f7:	74 21                	je     d11a <check_extracted_in_past_outside_lock+0x10a>
    d0f9:	48 8d 0d 57 78 00 00 	lea    0x7857(%rip),%rcx        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    d100:	83 f8 02             	cmp    $0x2,%eax
    d103:	74 15                	je     d11a <check_extracted_in_past_outside_lock+0x10a>
    d105:	83 f8 03             	cmp    $0x3,%eax
    d108:	48 8d 0d 64 78 00 00 	lea    0x7864(%rip),%rcx        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    d10f:	48 8d 35 4c 78 00 00 	lea    0x784c(%rip),%rsi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    d116:	48 0f 45 ce          	cmovne %rsi,%rcx
    d11a:	44 0f b7 5b 02       	movzwl 0x2(%rbx),%r11d
    d11f:	44 0f b7 13          	movzwl (%rbx),%r10d
    d123:	48 8d 35 0e 7e 00 00 	lea    0x7e0e(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    d12a:	bf 01 00 00 00       	mov    $0x1,%edi
    d12f:	f2 0f 10 43 08       	movsd  0x8(%rbx),%xmm0
    d134:	41 56                	push   %r14
    d136:	41 55                	push   %r13
    d138:	53                   	push   %rbx
    d139:	52                   	push   %rdx
    d13a:	44 89 d2             	mov    %r10d,%edx
    d13d:	51                   	push   %rcx
    d13e:	44 89 d9             	mov    %r11d,%ecx
    d141:	50                   	push   %rax
    d142:	44 8b 4b 14          	mov    0x14(%rbx),%r9d
    d146:	b8 01 00 00 00       	mov    $0x1,%eax
    d14b:	44 0f b7 43 10       	movzwl 0x10(%rbx),%r8d
    d150:	e8 1b 48 ff ff       	callq  1970 <__printf_chk@plt>
    d155:	cc                   	int3   
    d156:	48 83 c4 30          	add    $0x30,%rsp
    d15a:	e9 47 ff ff ff       	jmpq   d0a6 <check_extracted_in_past_outside_lock+0x96>
    d15f:	90                   	nop

000000000000d160 <fetch_internal>:
    d160:	41 57                	push   %r15
    d162:	41 56                	push   %r14
    d164:	41 55                	push   %r13
    d166:	41 54                	push   %r12
    d168:	55                   	push   %rbp
    d169:	53                   	push   %rbx
    d16a:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    d171:	48 8b 3d e8 c0 33 00 	mov    0x33c0e8(%rip),%rdi        # 349260 <nbcalqueue>
    d178:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d17f:	00 00 
    d181:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    d186:	31 c0                	xor    %eax,%eax
    d188:	48 8d 74 24 70       	lea    0x70(%rsp),%rsi
    d18d:	e8 9e eb ff ff       	callq  bd30 <getMin>
    d192:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    d197:	48 85 c0             	test   %rax,%rax
    d19a:	0f 84 f9 03 00 00    	je     d599 <fetch_internal+0x439>
    d1a0:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    d1a5:	f2 0f 10 48 08       	movsd  0x8(%rax),%xmm1
    d1aa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d1af:	f2 0f 10 40 18       	movsd  0x18(%rax),%xmm0
    d1b4:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    d1b9:	e8 d2 e3 ff ff       	callq  b590 <hash>
    d1be:	89 c5                	mov    %eax,%ebp
    d1c0:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    d1c5:	44 8b 70 10          	mov    0x10(%rax),%r14d
    d1c9:	48 c7 c0 40 ff ff ff 	mov    $0xffffffffffffff40,%rax
    d1d0:	64 c6 00 00          	movb   $0x0,%fs:(%rax)
    d1d4:	48 c7 c0 70 5e ff ff 	mov    $0xffffffffffff5e70,%rax
    d1db:	64 48 c7 00 00 00 00 	movq   $0x0,%fs:(%rax)
    d1e2:	00 
    d1e3:	8b 1d c7 bf 33 00    	mov    0x33bfc7(%rip),%ebx        # 3491b0 <n_prc_tot>
    d1e9:	85 db                	test   %ebx,%ebx
    d1eb:	0f 84 da 06 00 00    	je     d8cb <fetch_internal+0x76b>
    d1f1:	8d 43 ff             	lea    -0x1(%rbx),%eax
    d1f4:	31 f6                	xor    %esi,%esi
    d1f6:	c1 eb 06             	shr    $0x6,%ebx
    d1f9:	48 8d 14 c5 08 00 00 	lea    0x8(,%rax,8),%rdx
    d200:	00 
    d201:	48 c7 c0 e8 5e ff ff 	mov    $0xffffffffffff5ee8,%rax
    d208:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    d20c:	e8 3f 46 ff ff       	callq  1850 <memset@plt>
    d211:	8d 43 01             	lea    0x1(%rbx),%eax
    d214:	83 e8 01             	sub    $0x1,%eax
    d217:	31 f6                	xor    %esi,%esi
    d219:	48 8d 14 c5 08 00 00 	lea    0x8(,%rax,8),%rdx
    d220:	00 
    d221:	48 c7 c0 e0 5e ff ff 	mov    $0xffffffffffff5ee0,%rax
    d228:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    d22c:	e8 1f 46 ff ff       	callq  1850 <memset@plt>
    d231:	48 c7 c0 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rax
    d238:	64 48 c7 00 00 00 00 	movq   $0x0,%fs:(%rax)
    d23f:	00 
    d240:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d245:	f2 0f 10 68 18       	movsd  0x18(%rax),%xmm5
    d24a:	8b 78 28             	mov    0x28(%rax),%edi
    d24d:	48 c7 c0 80 5e ff ff 	mov    $0xffffffffffff5e80,%rax
    d254:	89 7c 24 40          	mov    %edi,0x40(%rsp)
    d258:	f2 0f 11 6c 24 18    	movsd  %xmm5,0x18(%rsp)
    d25e:	64 f2 0f 10 00       	movsd  %fs:(%rax),%xmm0
    d263:	66 0f 2f e8          	comisd %xmm0,%xmm5
    d267:	0f 87 54 03 00 00    	ja     d5c1 <fetch_internal+0x461>
    d26d:	66 0f 2f 44 24 18    	comisd 0x18(%rsp),%xmm0
    d273:	0f 87 2f 06 00 00    	ja     d8a8 <fetch_internal+0x748>
    d279:	89 7c 24 10          	mov    %edi,0x10(%rsp)
    d27d:	66 0f 28 cd          	movapd %xmm5,%xmm1
    d281:	c6 44 24 28 01       	movb   $0x1,0x28(%rsp)
    d286:	45 31 ed             	xor    %r13d,%r13d
    d289:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    d28e:	c7 44 24 44 01 00 00 	movl   $0x1,0x44(%rsp)
    d295:	00 
    d296:	45 89 ef             	mov    %r13d,%r15d
    d299:	8b 43 2c             	mov    0x2c(%rbx),%eax
    d29c:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
    d2a1:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
    d2a5:	49 89 c4             	mov    %rax,%r12
    d2a8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    d2ad:	48 8b 05 d4 fd 20 00 	mov    0x20fdd4(%rip),%rax        # 21d088 <LPS>
    d2b4:	4a 8b 04 e0          	mov    (%rax,%r12,8),%rax
    d2b8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    d2bd:	45 85 c9             	test   %r9d,%r9d
    d2c0:	0f 84 8c 03 00 00    	je     d652 <fetch_internal+0x4f2>
    d2c6:	41 0f b7 45 10       	movzwl 0x10(%r13),%eax
    d2cb:	3b 44 24 10          	cmp    0x10(%rsp),%eax
    d2cf:	0f 84 bc 00 00 00    	je     d391 <fetch_internal+0x231>
    d2d5:	48 8d 3d 8c 9a 00 00 	lea    0x9a8c(%rip),%rdi        # 16d68 <__PRETTY_FUNCTION__.6556+0xfa8>
    d2dc:	f2 0f 11 4c 24 50    	movsd  %xmm1,0x50(%rsp)
    d2e2:	e8 59 44 ff ff       	callq  1740 <puts@plt>
    d2e7:	49 8b 45 20          	mov    0x20(%r13),%rax
    d2eb:	4c 89 ef             	mov    %r13,%rdi
    d2ee:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    d2f3:	49 8b 85 d0 00 00 00 	mov    0xd0(%r13),%rax
    d2fa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    d2ff:	e8 5c fa ff ff       	callq  cd60 <is_valid>
    d304:	41 8b 55 40          	mov    0x40(%r13),%edx
    d308:	f2 0f 10 4c 24 50    	movsd  0x50(%rsp),%xmm1
    d30e:	0f b6 f8             	movzbl %al,%edi
    d311:	48 8d 05 52 76 00 00 	lea    0x7652(%rip),%rax        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    d318:	83 fa 01             	cmp    $0x1,%edx
    d31b:	74 21                	je     d33e <fetch_internal+0x1de>
    d31d:	48 8d 05 33 76 00 00 	lea    0x7633(%rip),%rax        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    d324:	83 fa 02             	cmp    $0x2,%edx
    d327:	74 15                	je     d33e <fetch_internal+0x1de>
    d329:	83 fa 03             	cmp    $0x3,%edx
    d32c:	48 8d 0d 40 76 00 00 	lea    0x7640(%rip),%rcx        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    d333:	48 8d 05 28 76 00 00 	lea    0x7628(%rip),%rax        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    d33a:	48 0f 44 c1          	cmove  %rcx,%rax
    d33e:	45 0f b7 55 00       	movzwl 0x0(%r13),%r10d
    d343:	45 8b 4d 14          	mov    0x14(%r13),%r9d
    d347:	f2 0f 11 4c 24 50    	movsd  %xmm1,0x50(%rsp)
    d34d:	48 8d 35 e4 7b 00 00 	lea    0x7be4(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    d354:	45 0f b7 45 10       	movzwl 0x10(%r13),%r8d
    d359:	f2 41 0f 10 45 08    	movsd  0x8(%r13),%xmm0
    d35f:	41 0f b7 4d 02       	movzwl 0x2(%r13),%ecx
    d364:	ff 74 24 38          	pushq  0x38(%rsp)
    d368:	ff 74 24 50          	pushq  0x50(%rsp)
    d36c:	41 55                	push   %r13
    d36e:	57                   	push   %rdi
    d36f:	bf 01 00 00 00       	mov    $0x1,%edi
    d374:	50                   	push   %rax
    d375:	b8 01 00 00 00       	mov    $0x1,%eax
    d37a:	52                   	push   %rdx
    d37b:	44 89 d2             	mov    %r10d,%edx
    d37e:	e8 ed 45 ff ff       	callq  1970 <__printf_chk@plt>
    d383:	cc                   	int3   
    d384:	f2 0f 10 8c 24 80 00 	movsd  0x80(%rsp),%xmm1
    d38b:	00 00 
    d38d:	48 83 c4 30          	add    $0x30,%rsp
    d391:	80 7c 24 28 00       	cmpb   $0x0,0x28(%rsp)
    d396:	74 17                	je     d3af <fetch_internal+0x24f>
    d398:	8b 43 28             	mov    0x28(%rbx),%eax
    d39b:	f2 0f 10 7b 18       	movsd  0x18(%rbx),%xmm7
    d3a0:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    d3a5:	89 44 24 40          	mov    %eax,0x40(%rsp)
    d3a9:	f2 0f 11 7c 24 18    	movsd  %xmm7,0x18(%rsp)
    d3af:	4c 89 ef             	mov    %r13,%rdi
    d3b2:	f2 0f 11 4c 24 38    	movsd  %xmm1,0x38(%rsp)
    d3b8:	e8 a3 f9 ff ff       	callq  cd60 <is_valid>
    d3bd:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    d3c2:	f2 0f 10 4c 24 38    	movsd  0x38(%rsp),%xmm1
    d3c8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d3ce:	48 8b 4e 30          	mov    0x30(%rsi),%rcx
    d3d2:	41 8b 75 40          	mov    0x40(%r13),%esi
    d3d6:	f2 0f 10 41 08       	movsd  0x8(%rcx),%xmm0
    d3db:	0f b7 79 10          	movzwl 0x10(%rcx),%edi
    d3df:	66 0f 2f c1          	comisd %xmm1,%xmm0
    d3e3:	77 1b                	ja     d400 <fetch_internal+0x2a0>
    d3e5:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    d3e9:	ba 00 00 00 00       	mov    $0x0,%edx
    d3ee:	41 0f 9b c0          	setnp  %r8b
    d3f2:	44 0f 45 c2          	cmovne %edx,%r8d
    d3f6:	3b 7c 24 10          	cmp    0x10(%rsp),%edi
    d3fa:	0f 93 c2             	setae  %dl
    d3fd:	41 21 d0             	and    %edx,%r8d
    d400:	f2 0f 10 74 24 18    	movsd  0x18(%rsp),%xmm6
    d406:	66 0f ef e4          	pxor   %xmm4,%xmm4
    d40a:	f2 0f 58 e6          	addsd  %xmm6,%xmm4
    d40e:	66 0f 2f e1          	comisd %xmm1,%xmm4
    d412:	f2 0f 11 64 24 50    	movsd  %xmm4,0x50(%rsp)
    d418:	0f 87 b5 01 00 00    	ja     d5d3 <fetch_internal+0x473>
    d41e:	66 0f 2e f1          	ucomisd %xmm1,%xmm6
    d422:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    d428:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
    d42d:	0f 9b c2             	setnp  %dl
    d430:	41 0f 45 d1          	cmovne %r9d,%edx
    d434:	44 39 54 24 40       	cmp    %r10d,0x40(%rsp)
    d439:	41 0f 93 c1          	setae  %r9b
    d43d:	44 20 ca             	and    %r9b,%dl
    d440:	0f 85 8d 01 00 00    	jne    d5d3 <fetch_internal+0x473>
    d446:	49 c7 c3 40 ff ff ff 	mov    $0xffffffffffffff40,%r11
    d44d:	64 41 88 13          	mov    %dl,%fs:(%r11)
    d451:	84 c0                	test   %al,%al
    d453:	0f 84 a5 01 00 00    	je     d5fe <fetch_internal+0x49e>
    d459:	83 fe 01             	cmp    $0x1,%esi
    d45c:	75 09                	jne    d467 <fetch_internal+0x307>
    d45e:	45 84 c0             	test   %r8b,%r8b
    d461:	0f 85 ac 02 00 00    	jne    d713 <fetch_internal+0x5b3>
    d467:	48 c7 c0 e0 5e ff ff 	mov    $0xffffffffffff5ee0,%rax
    d46e:	44 89 e2             	mov    %r12d,%edx
    d471:	45 89 e1             	mov    %r12d,%r9d
    d474:	c1 ea 06             	shr    $0x6,%edx
    d477:	41 83 e1 3f          	and    $0x3f,%r9d
    d47b:	64 48 8b 30          	mov    %fs:(%rax),%rsi
    d47f:	48 c1 e2 03          	shl    $0x3,%rdx
    d483:	48 01 d6             	add    %rdx,%rsi
    d486:	48 8b 06             	mov    (%rsi),%rax
    d489:	4c 0f a3 e0          	bt     %r12,%rax
    d48d:	72 22                	jb     d4b1 <fetch_internal+0x351>
    d48f:	49 c1 e4 06          	shl    $0x6,%r12
    d493:	41 83 e4 c0          	and    $0xffffffc0,%r12d
    d497:	4d 89 e0             	mov    %r12,%r8
    d49a:	4c 03 05 ff bc 33 00 	add    0x33bcff(%rip),%r8        # 3491a0 <lp_lock>
    d4a1:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
    d4a6:	41 8b 00             	mov    (%r8),%eax
    d4a9:	85 c0                	test   %eax,%eax
    d4ab:	0f 84 ff 02 00 00    	je     d7b0 <fetch_internal+0x650>
    d4b1:	48 c7 c0 e8 5e ff ff 	mov    $0xffffffffffff5ee8,%rax
    d4b8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    d4bd:	44 89 c9             	mov    %r9d,%ecx
    d4c0:	64 48 8b 00          	mov    %fs:(%rax),%rax
    d4c4:	c6 44 24 28 00       	movb   $0x0,0x28(%rsp)
    d4c9:	48 c7 04 f8 01 00 00 	movq   $0x1,(%rax,%rdi,8)
    d4d0:	00 
    d4d1:	b8 01 00 00 00       	mov    $0x1,%eax
    d4d6:	48 d3 e0             	shl    %cl,%rax
    d4d9:	48 09 06             	or     %rax,(%rsi)
    d4dc:	48 8b 03             	mov    (%rbx),%rax
    d4df:	48 89 c2             	mov    %rax,%rdx
    d4e2:	83 e2 03             	and    $0x3,%edx
    d4e5:	48 83 fa 03          	cmp    $0x3,%rdx
    d4e9:	0f 84 aa 00 00 00    	je     d599 <fetch_internal+0x439>
    d4ef:	48 8b 35 72 bd 33 00 	mov    0x33bd72(%rip),%rsi        # 349268 <g_tail>
    d4f6:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
    d4fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d500:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    d504:	48 85 d2             	test   %rdx,%rdx
    d507:	0f 85 8c 00 00 00    	jne    d599 <fetch_internal+0x439>
    d50d:	89 ea                	mov    %ebp,%edx
    d50f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d513:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    d518:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    d51d:	0f 1f 00             	nopl   (%rax)
    d520:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    d524:	48 89 c3             	mov    %rax,%rbx
    d527:	48 8b 00             	mov    (%rax),%rax
    d52a:	48 89 c2             	mov    %rax,%rdx
    d52d:	83 e2 03             	and    $0x3,%edx
    d530:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    d534:	48 83 f9 01          	cmp    $0x1,%rcx
    d538:	76 e6                	jbe    d520 <fetch_internal+0x3c0>
    d53a:	f2 0f 10 4b 18       	movsd  0x18(%rbx),%xmm1
    d53f:	66 0f 2f c1          	comisd %xmm1,%xmm0
    d543:	77 db                	ja     d520 <fetch_internal+0x3c0>
    d545:	66 0f 2f c8          	comisd %xmm0,%xmm1
    d549:	72 1b                	jb     d566 <fetch_internal+0x406>
    d54b:	8d 45 01             	lea    0x1(%rbp),%eax
    d54e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d552:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    d557:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    d55c:	66 0f 2f c1          	comisd %xmm1,%xmm0
    d560:	0f 87 f1 01 00 00    	ja     d757 <fetch_internal+0x5f7>
    d566:	48 39 de             	cmp    %rbx,%rsi
    d569:	0f 84 d1 00 00 00    	je     d640 <fetch_internal+0x4e0>
    d56f:	45 31 ff             	xor    %r15d,%r15d
    d572:	83 c5 01             	add    $0x1,%ebp
    d575:	31 d2                	xor    %edx,%edx
    d577:	48 8b 1f             	mov    (%rdi),%rbx
    d57a:	89 e8                	mov    %ebp,%eax
    d57c:	41 f7 f6             	div    %r14d
    d57f:	48 c1 e2 06          	shl    $0x6,%rdx
    d583:	48 01 d3             	add    %rdx,%rbx
    d586:	48 8b 03             	mov    (%rbx),%rax
    d589:	48 89 c2             	mov    %rax,%rdx
    d58c:	83 e2 03             	and    $0x3,%edx
    d58f:	48 83 fa 03          	cmp    $0x3,%rdx
    d593:	0f 85 67 ff ff ff    	jne    d500 <fetch_internal+0x3a0>
    d599:	31 c0                	xor    %eax,%eax
    d59b:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    d5a0:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    d5a7:	00 00 
    d5a9:	0f 85 c3 06 00 00    	jne    dc72 <fetch_internal+0xb12>
    d5af:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    d5b6:	5b                   	pop    %rbx
    d5b7:	5d                   	pop    %rbp
    d5b8:	41 5c                	pop    %r12
    d5ba:	41 5d                	pop    %r13
    d5bc:	41 5e                	pop    %r14
    d5be:	41 5f                	pop    %r15
    d5c0:	c3                   	retq   
    d5c1:	64 f2 0f 11 28       	movsd  %xmm5,%fs:(%rax)
    d5c6:	66 0f 28 cd          	movapd %xmm5,%xmm1
    d5ca:	89 7c 24 10          	mov    %edi,0x10(%rsp)
    d5ce:	e9 ae fc ff ff       	jmpq   d281 <fetch_internal+0x121>
    d5d3:	48 c7 c2 e8 5e ff ff 	mov    $0xffffffffffff5ee8,%rdx
    d5da:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    d5df:	49 c7 c3 40 ff ff ff 	mov    $0xffffffffffffff40,%r11
    d5e6:	64 48 8b 12          	mov    %fs:(%rdx),%rdx
    d5ea:	4a 83 3c d2 01       	cmpq   $0x1,(%rdx,%r10,8)
    d5ef:	0f 95 c2             	setne  %dl
    d5f2:	64 41 88 13          	mov    %dl,%fs:(%r11)
    d5f6:	84 c0                	test   %al,%al
    d5f8:	0f 85 5b fe ff ff    	jne    d459 <fetch_internal+0x2f9>
    d5fe:	40 f6 c6 02          	test   $0x2,%sil
    d602:	0f 84 8d 01 00 00    	je     d795 <fetch_internal+0x635>
    d608:	83 fe 02             	cmp    $0x2,%esi
    d60b:	0f 84 77 03 00 00    	je     d988 <fetch_internal+0x828>
    d611:	83 fe 03             	cmp    $0x3,%esi
    d614:	0f 85 4d fe ff ff    	jne    d467 <fetch_internal+0x307>
    d61a:	49 81 7d 20 4a 4a ba 	cmpq   $0xba4a4a,0x20(%r13)
    d621:	00 
    d622:	0f 85 3f fe ff ff    	jne    d467 <fetch_internal+0x307>
    d628:	48 8b 3d 31 bc 33 00 	mov    0x33bc31(%rip),%rdi        # 349260 <nbcalqueue>
    d62f:	48 89 de             	mov    %rbx,%rsi
    d632:	e8 19 e9 ff ff       	callq  bf50 <delete>
    d637:	e9 a0 fe ff ff       	jmpq   d4dc <fetch_internal+0x37c>
    d63c:	0f 1f 40 00          	nopl   0x0(%rax)
    d640:	41 83 c7 01          	add    $0x1,%r15d
    d644:	45 39 fe             	cmp    %r15d,%r14d
    d647:	0f 87 25 ff ff ff    	ja     d572 <fetch_internal+0x412>
    d64d:	e9 47 ff ff ff       	jmpq   d599 <fetch_internal+0x439>
    d652:	48 8d 3d df 96 00 00 	lea    0x96df(%rip),%rdi        # 16d38 <__PRETTY_FUNCTION__.6556+0xf78>
    d659:	f2 0f 11 4c 24 50    	movsd  %xmm1,0x50(%rsp)
    d65f:	e8 dc 40 ff ff       	callq  1740 <puts@plt>
    d664:	49 8b 45 20          	mov    0x20(%r13),%rax
    d668:	4c 89 ef             	mov    %r13,%rdi
    d66b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    d670:	49 8b 85 d0 00 00 00 	mov    0xd0(%r13),%rax
    d677:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    d67c:	e8 df f6 ff ff       	callq  cd60 <is_valid>
    d681:	41 8b 55 40          	mov    0x40(%r13),%edx
    d685:	f2 0f 10 4c 24 50    	movsd  0x50(%rsp),%xmm1
    d68b:	0f b6 f8             	movzbl %al,%edi
    d68e:	48 8d 05 d5 72 00 00 	lea    0x72d5(%rip),%rax        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    d695:	83 fa 01             	cmp    $0x1,%edx
    d698:	74 21                	je     d6bb <fetch_internal+0x55b>
    d69a:	48 8d 05 b6 72 00 00 	lea    0x72b6(%rip),%rax        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    d6a1:	83 fa 02             	cmp    $0x2,%edx
    d6a4:	74 15                	je     d6bb <fetch_internal+0x55b>
    d6a6:	83 fa 03             	cmp    $0x3,%edx
    d6a9:	48 8d 0d c3 72 00 00 	lea    0x72c3(%rip),%rcx        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    d6b0:	48 8d 05 ab 72 00 00 	lea    0x72ab(%rip),%rax        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    d6b7:	48 0f 44 c1          	cmove  %rcx,%rax
    d6bb:	45 0f b7 55 00       	movzwl 0x0(%r13),%r10d
    d6c0:	45 8b 4d 14          	mov    0x14(%r13),%r9d
    d6c4:	f2 0f 11 4c 24 50    	movsd  %xmm1,0x50(%rsp)
    d6ca:	48 8d 35 67 78 00 00 	lea    0x7867(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    d6d1:	45 0f b7 45 10       	movzwl 0x10(%r13),%r8d
    d6d6:	f2 41 0f 10 45 08    	movsd  0x8(%r13),%xmm0
    d6dc:	41 0f b7 4d 02       	movzwl 0x2(%r13),%ecx
    d6e1:	ff 74 24 38          	pushq  0x38(%rsp)
    d6e5:	ff 74 24 50          	pushq  0x50(%rsp)
    d6e9:	41 55                	push   %r13
    d6eb:	57                   	push   %rdi
    d6ec:	bf 01 00 00 00       	mov    $0x1,%edi
    d6f1:	50                   	push   %rax
    d6f2:	b8 01 00 00 00       	mov    $0x1,%eax
    d6f7:	52                   	push   %rdx
    d6f8:	44 89 d2             	mov    %r10d,%edx
    d6fb:	e8 70 42 ff ff       	callq  1970 <__printf_chk@plt>
    d700:	cc                   	int3   
    d701:	f2 0f 10 8c 24 80 00 	movsd  0x80(%rsp),%xmm1
    d708:	00 00 
    d70a:	48 83 c4 30          	add    $0x30,%rsp
    d70e:	e9 b3 fb ff ff       	jmpq   d2c6 <fetch_internal+0x166>
    d713:	4c 89 ef             	mov    %r13,%rdi
    d716:	e8 f5 f8 ff ff       	callq  d010 <check_extracted_in_past_outside_lock>
    d71b:	48 c7 c0 40 ff ff ff 	mov    $0xffffffffffffff40,%rax
    d722:	64 80 38 00          	cmpb   $0x0,%fs:(%rax)
    d726:	74 0d                	je     d735 <fetch_internal+0x5d5>
    d728:	45 8b 45 18          	mov    0x18(%r13),%r8d
    d72c:	45 85 c0             	test   %r8d,%r8d
    d72f:	0f 85 8c 02 00 00    	jne    d9c1 <fetch_internal+0x861>
    d735:	48 c7 c0 e8 5e ff ff 	mov    $0xffffffffffff5ee8,%rax
    d73c:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    d741:	64 48 8b 00          	mov    %fs:(%rax),%rax
    d745:	c6 44 24 28 00       	movb   $0x0,0x28(%rsp)
    d74a:	48 c7 04 f0 01 00 00 	movq   $0x1,(%rax,%rsi,8)
    d751:	00 
    d752:	e9 85 fd ff ff       	jmpq   d4dc <fetch_internal+0x37c>
    d757:	48 83 fa 03          	cmp    $0x3,%rdx
    d75b:	0f 84 38 fe ff ff    	je     d599 <fetch_internal+0x439>
    d761:	48 8b 43 08          	mov    0x8(%rbx),%rax
    d765:	48 85 c0             	test   %rax,%rax
    d768:	0f 85 2b fe ff ff    	jne    d599 <fetch_internal+0x439>
    d76e:	69 05 10 ba 33 00 a0 	imul   $0x186a0,0x33ba10(%rip),%eax        # 349188 <n_cores>
    d775:	86 01 00 
    d778:	83 44 24 44 01       	addl   $0x1,0x44(%rsp)
    d77d:	8b 7c 24 44          	mov    0x44(%rsp),%edi
    d781:	39 f8                	cmp    %edi,%eax
    d783:	0f 84 10 fe ff ff    	je     d599 <fetch_internal+0x439>
    d789:	8b 43 28             	mov    0x28(%rbx),%eax
    d78c:	89 44 24 10          	mov    %eax,0x10(%rsp)
    d790:	e9 04 fb ff ff       	jmpq   d299 <fetch_internal+0x139>
    d795:	41 8b 45 40          	mov    0x40(%r13),%eax
    d799:	89 c6                	mov    %eax,%esi
    d79b:	83 ce 02             	or     $0x2,%esi
    d79e:	f0 41 0f b1 75 40    	lock cmpxchg %esi,0x40(%r13)
    d7a4:	0f 84 5e fe ff ff    	je     d608 <fetch_internal+0x4a8>
    d7aa:	eb ed                	jmp    d799 <fetch_internal+0x639>
    d7ac:	0f 1f 40 00          	nopl   0x0(%rax)
    d7b0:	48 c7 c6 90 5e ff ff 	mov    $0xffffffffffff5e90,%rsi
    d7b7:	64 8b 36             	mov    %fs:(%rsi),%esi
    d7ba:	89 74 24 48          	mov    %esi,0x48(%rsp)
    d7be:	83 c6 01             	add    $0x1,%esi
    d7c1:	f0 41 0f b1 30       	lock cmpxchg %esi,(%r8)
    d7c6:	0f 85 03 04 00 00    	jne    dbcf <fetch_internal+0xa6f>
    d7cc:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    d7d1:	48 8b 40 30          	mov    0x30(%rax),%rax
    d7d5:	48 39 c8             	cmp    %rcx,%rax
    d7d8:	74 09                	je     d7e3 <fetch_internal+0x683>
    d7da:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
    d7df:	0f b7 78 10          	movzwl 0x10(%rax),%edi
    d7e3:	66 0f 2f c1          	comisd %xmm1,%xmm0
    d7e7:	c7 44 24 48 01 00 00 	movl   $0x1,0x48(%rsp)
    d7ee:	00 
    d7ef:	0f 86 54 01 00 00    	jbe    d949 <fetch_internal+0x7e9>
    d7f5:	4c 89 ef             	mov    %r13,%rdi
    d7f8:	f2 0f 11 4c 24 58    	movsd  %xmm1,0x58(%rsp)
    d7fe:	e8 5d f5 ff ff       	callq  cd60 <is_valid>
    d803:	f2 0f 10 7c 24 50    	movsd  0x50(%rsp),%xmm7
    d809:	f2 0f 10 4c 24 58    	movsd  0x58(%rsp),%xmm1
    d80f:	41 8b 55 40          	mov    0x40(%r13),%edx
    d813:	89 c1                	mov    %eax,%ecx
    d815:	66 0f 2f f9          	comisd %xmm1,%xmm7
    d819:	0f 86 fb 00 00 00    	jbe    d91a <fetch_internal+0x7ba>
    d81f:	48 c7 c0 e8 5e ff ff 	mov    $0xffffffffffff5ee8,%rax
    d826:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    d82b:	64 48 8b 00          	mov    %fs:(%rax),%rax
    d82f:	48 83 3c f8 01       	cmpq   $0x1,(%rax,%rdi,8)
    d834:	0f 95 c0             	setne  %al
    d837:	48 c7 c7 40 ff ff ff 	mov    $0xffffffffffffff40,%rdi
    d83e:	64 88 07             	mov    %al,%fs:(%rdi)
    d841:	84 c9                	test   %cl,%cl
    d843:	0f 85 cc 01 00 00    	jne    da15 <fetch_internal+0x8b5>
    d849:	f6 c2 02             	test   $0x2,%dl
    d84c:	0f 84 1a 01 00 00    	je     d96c <fetch_internal+0x80c>
    d852:	f6 c2 01             	test   $0x1,%dl
    d855:	74 7e                	je     d8d5 <fetch_internal+0x775>
    d857:	83 fa 03             	cmp    $0x3,%edx
    d85a:	0f 85 52 05 00 00    	jne    ddb2 <fetch_internal+0xc52>
    d860:	8b 44 24 48          	mov    0x48(%rsp),%eax
    d864:	85 c0                	test   %eax,%eax
    d866:	0f 85 04 03 00 00    	jne    db70 <fetch_internal+0xa10>
    d86c:	49 c7 45 20 4a 4a ba 	movq   $0xba4a4a,0x20(%r13)
    d873:	00 
    d874:	48 8b 3d e5 b9 33 00 	mov    0x33b9e5(%rip),%rdi        # 349260 <nbcalqueue>
    d87b:	48 89 de             	mov    %rbx,%rsi
    d87e:	e8 cd e6 ff ff       	callq  bf50 <delete>
    d883:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
    d88a:	48 8b 15 0f b9 33 00 	mov    0x33b90f(%rip),%rdx        # 3491a0 <lp_lock>
    d891:	31 c9                	xor    %ecx,%ecx
    d893:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    d898:	64 8b 00             	mov    %fs:(%rax),%eax
    d89b:	83 c0 01             	add    $0x1,%eax
    d89e:	f0 0f b1 0c 3a       	lock cmpxchg %ecx,(%rdx,%rdi,1)
    d8a3:	e9 34 fc ff ff       	jmpq   d4dc <fetch_internal+0x37c>
    d8a8:	48 8d 3d 61 94 00 00 	lea    0x9461(%rip),%rdi        # 16d10 <__PRETTY_FUNCTION__.6556+0xf50>
    d8af:	e8 8c 3e ff ff       	callq  1740 <puts@plt>
    d8b4:	cc                   	int3   
    d8b5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d8ba:	f2 0f 10 48 18       	movsd  0x18(%rax),%xmm1
    d8bf:	8b 40 28             	mov    0x28(%rax),%eax
    d8c2:	89 44 24 10          	mov    %eax,0x10(%rsp)
    d8c6:	e9 b6 f9 ff ff       	jmpq   d281 <fetch_internal+0x121>
    d8cb:	b8 01 00 00 00       	mov    $0x1,%eax
    d8d0:	e9 3f f9 ff ff       	jmpq   d214 <fetch_internal+0xb4>
    d8d5:	83 fa 02             	cmp    $0x2,%edx
    d8d8:	0f 85 99 03 00 00    	jne    dc77 <fetch_internal+0xb17>
    d8de:	48 8b 3d 7b b9 33 00 	mov    0x33b97b(%rip),%rdi        # 349260 <nbcalqueue>
    d8e5:	48 89 de             	mov    %rbx,%rsi
    d8e8:	e8 63 e6 ff ff       	callq  bf50 <delete>
    d8ed:	84 c0                	test   %al,%al
    d8ef:	0f 85 fe 00 00 00    	jne    d9f3 <fetch_internal+0x893>
    d8f5:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
    d8fc:	48 8b 15 9d b8 33 00 	mov    0x33b89d(%rip),%rdx        # 3491a0 <lp_lock>
    d903:	31 c9                	xor    %ecx,%ecx
    d905:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    d90a:	64 8b 00             	mov    %fs:(%rax),%eax
    d90d:	83 c0 01             	add    $0x1,%eax
    d910:	f0 0f b1 0c 32       	lock cmpxchg %ecx,(%rdx,%rsi,1)
    d915:	e9 c2 fb ff ff       	jmpq   d4dc <fetch_internal+0x37c>
    d91a:	f2 0f 10 7c 24 18    	movsd  0x18(%rsp),%xmm7
    d920:	be 00 00 00 00       	mov    $0x0,%esi
    d925:	66 0f 2e f9          	ucomisd %xmm1,%xmm7
    d929:	0f 9b c0             	setnp  %al
    d92c:	0f 45 c6             	cmovne %esi,%eax
    d92f:	8b 74 24 10          	mov    0x10(%rsp),%esi
    d933:	39 74 24 40          	cmp    %esi,0x40(%rsp)
    d937:	40 0f 93 c6          	setae  %sil
    d93b:	40 20 f0             	and    %sil,%al
    d93e:	0f 84 f3 fe ff ff    	je     d837 <fetch_internal+0x6d7>
    d944:	e9 d6 fe ff ff       	jmpq   d81f <fetch_internal+0x6bf>
    d949:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    d94d:	ba 00 00 00 00       	mov    $0x0,%edx
    d952:	0f 9b c0             	setnp  %al
    d955:	0f 45 c2             	cmovne %edx,%eax
    d958:	31 d2                	xor    %edx,%edx
    d95a:	3b 7c 24 10          	cmp    0x10(%rsp),%edi
    d95e:	0f 93 c2             	setae  %dl
    d961:	21 c2                	and    %eax,%edx
    d963:	89 54 24 48          	mov    %edx,0x48(%rsp)
    d967:	e9 89 fe ff ff       	jmpq   d7f5 <fetch_internal+0x695>
    d96c:	41 8b 45 40          	mov    0x40(%r13),%eax
    d970:	89 c2                	mov    %eax,%edx
    d972:	83 ca 02             	or     $0x2,%edx
    d975:	f0 41 0f b1 55 40    	lock cmpxchg %edx,0x40(%r13)
    d97b:	0f 84 d1 fe ff ff    	je     d852 <fetch_internal+0x6f2>
    d981:	eb ed                	jmp    d970 <fetch_internal+0x810>
    d983:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d988:	48 8b 3d d1 b8 33 00 	mov    0x33b8d1(%rip),%rdi        # 349260 <nbcalqueue>
    d98f:	48 89 de             	mov    %rbx,%rsi
    d992:	e8 b9 e5 ff ff       	callq  bf50 <delete>
    d997:	84 c0                	test   %al,%al
    d999:	0f 84 3d fb ff ff    	je     d4dc <fetch_internal+0x37c>
    d99f:	48 c7 c0 d0 5e ff ff 	mov    $0xffffffffffff5ed0,%rax
    d9a6:	66 0f ef f6          	pxor   %xmm6,%xmm6
    d9aa:	49 8d 75 f0          	lea    -0x10(%r13),%rsi
    d9ae:	41 0f 11 75 f0       	movups %xmm6,-0x10(%r13)
    d9b3:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    d9b7:	e8 74 74 ff ff       	callq  4e30 <__list_insert_tail_by_node>
    d9bc:	e9 1b fb ff ff       	jmpq   d4dc <fetch_internal+0x37c>
    d9c1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d9c6:	44 89 e2             	mov    %r12d,%edx
    d9c9:	48 89 de             	mov    %rbx,%rsi
    d9cc:	4c 89 ef             	mov    %r13,%rdi
    d9cf:	f2 0f 10 7c 24 18    	movsd  0x18(%rsp),%xmm7
    d9d5:	48 8b 40 10          	mov    0x10(%rax),%rax
    d9d9:	f2 41 0f 11 bd 20 01 	movsd  %xmm7,0x120(%r13)
    d9e0:	00 00 
    d9e2:	49 89 85 28 01 00 00 	mov    %rax,0x128(%r13)
    d9e9:	e8 b2 f3 ff ff       	callq  cda0 <commit_event>
    d9ee:	e9 e9 fa ff ff       	jmpq   d4dc <fetch_internal+0x37c>
    d9f3:	48 c7 c0 d0 5e ff ff 	mov    $0xffffffffffff5ed0,%rax
    d9fa:	66 0f ef ff          	pxor   %xmm7,%xmm7
    d9fe:	49 8d 75 f0          	lea    -0x10(%r13),%rsi
    da02:	41 0f 11 7d f0       	movups %xmm7,-0x10(%r13)
    da07:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    da0b:	e8 20 74 ff ff       	callq  4e30 <__list_insert_tail_by_node>
    da10:	e9 e0 fe ff ff       	jmpq   d8f5 <fetch_internal+0x795>
    da15:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    da1a:	48 8b 47 30          	mov    0x30(%rdi),%rax
    da1e:	4c 8b 60 f0          	mov    -0x10(%rax),%r12
    da22:	4d 85 e4             	test   %r12,%r12
    da25:	0f 84 d5 00 00 00    	je     db00 <fetch_internal+0x9a0>
    da2b:	49 83 c4 10          	add    $0x10,%r12
    da2f:	89 6c 24 30          	mov    %ebp,0x30(%rsp)
    da33:	f2 0f 11 4c 24 60    	movsd  %xmm1,0x60(%rsp)
    da39:	4c 89 e5             	mov    %r12,%rbp
    da3c:	49 89 dc             	mov    %rbx,%r12
    da3f:	48 89 fb             	mov    %rdi,%rbx
    da42:	eb 73                	jmp    dab7 <fetch_internal+0x957>
    da44:	0f 1f 40 00          	nopl   0x0(%rax)
    da48:	4c 8d 45 f0          	lea    -0x10(%rbp),%r8
    da4c:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    da50:	8b 3b                	mov    (%rbx),%edi
    da52:	4c 89 c2             	mov    %r8,%rdx
    da55:	4c 89 44 24 68       	mov    %r8,0x68(%rsp)
    da5a:	e8 61 7d ff ff       	callq  57c0 <__list_extract_given_node>
    da5f:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
    da66:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
    da6b:	66 0f ef f6          	pxor   %xmm6,%xmm6
    da6f:	64 8b 00             	mov    %fs:(%rax),%eax
    da72:	0f 11 75 f0          	movups %xmm6,-0x10(%rbp)
    da76:	4c 89 c6             	mov    %r8,%rsi
    da79:	89 44 24 58          	mov    %eax,0x58(%rsp)
    da7d:	83 c0 01             	add    $0x1,%eax
    da80:	89 45 18             	mov    %eax,0x18(%rbp)
    da83:	48 c7 c0 d0 5e ff ff 	mov    $0xffffffffffff5ed0,%rax
    da8a:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    da8e:	e8 9d 73 ff ff       	callq  4e30 <__list_insert_tail_by_node>
    da93:	48 8b 43 30          	mov    0x30(%rbx),%rax
    da97:	c7 45 40 03 00 00 00 	movl   $0x3,0x40(%rbp)
    da9e:	48 c7 45 20 4a 4a ba 	movq   $0xba4a4a,0x20(%rbp)
    daa5:	00 
    daa6:	48 8b 48 f0          	mov    -0x10(%rax),%rcx
    daaa:	48 85 c9             	test   %rcx,%rcx
    daad:	0f 84 25 03 00 00    	je     ddd8 <fetch_internal+0xc78>
    dab3:	48 8d 69 10          	lea    0x10(%rcx),%rbp
    dab7:	48 89 ef             	mov    %rbp,%rdi
    daba:	e8 a1 f2 ff ff       	callq  cd60 <is_valid>
    dabf:	84 c0                	test   %al,%al
    dac1:	74 85                	je     da48 <fetch_internal+0x8e8>
    dac3:	4c 89 e3             	mov    %r12,%rbx
    dac6:	49 89 ec             	mov    %rbp,%r12
    dac9:	f2 0f 10 4c 24 60    	movsd  0x60(%rsp),%xmm1
    dacf:	8b 6c 24 30          	mov    0x30(%rsp),%ebp
    dad3:	f2 41 0f 10 44 24 08 	movsd  0x8(%r12),%xmm0
    dada:	66 0f 2f c8          	comisd %xmm0,%xmm1
    dade:	0f 87 04 03 00 00    	ja     dde8 <fetch_internal+0xc88>
    dae4:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    dae8:	7a 12                	jp     dafc <fetch_internal+0x99c>
    daea:	75 10                	jne    dafc <fetch_internal+0x99c>
    daec:	41 0f b7 44 24 10    	movzwl 0x10(%r12),%eax
    daf2:	3b 44 24 10          	cmp    0x10(%rsp),%eax
    daf6:	0f 82 ec 02 00 00    	jb     dde8 <fetch_internal+0xc88>
    dafc:	41 8b 55 40          	mov    0x40(%r13),%edx
    db00:	85 d2                	test   %edx,%edx
    db02:	0f 85 1a 01 00 00    	jne    dc22 <fetch_internal+0xac2>
    db08:	41 8b 75 18          	mov    0x18(%r13),%esi
    db0c:	85 f6                	test   %esi,%esi
    db0e:	0f 85 fc 00 00 00    	jne    dc10 <fetch_internal+0xab0>
    db14:	41 8b 45 40          	mov    0x40(%r13),%eax
    db18:	89 c2                	mov    %eax,%edx
    db1a:	83 ca 01             	or     $0x1,%edx
    db1d:	f0 41 0f b1 55 40    	lock cmpxchg %edx,0x40(%r13)
    db23:	75 f3                	jne    db18 <fetch_internal+0x9b8>
    db25:	83 fa 01             	cmp    $0x1,%edx
    db28:	0f 84 b4 00 00 00    	je     dbe2 <fetch_internal+0xa82>
    db2e:	49 c7 45 20 4a 4a ba 	movq   $0xba4a4a,0x20(%r13)
    db35:	00 
    db36:	48 8b 3d 23 b7 33 00 	mov    0x33b723(%rip),%rdi        # 349260 <nbcalqueue>
    db3d:	48 89 de             	mov    %rbx,%rsi
    db40:	e8 0b e4 ff ff       	callq  bf50 <delete>
    db45:	84 c0                	test   %al,%al
    db47:	0f 84 36 fd ff ff    	je     d883 <fetch_internal+0x723>
    db4d:	48 c7 c0 d0 5e ff ff 	mov    $0xffffffffffff5ed0,%rax
    db54:	66 0f ef e4          	pxor   %xmm4,%xmm4
    db58:	49 8d 75 f0          	lea    -0x10(%r13),%rsi
    db5c:	41 0f 11 65 f0       	movups %xmm4,-0x10(%r13)
    db61:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    db65:	e8 c6 72 ff ff       	callq  4e30 <__list_insert_tail_by_node>
    db6a:	e9 14 fd ff ff       	jmpq   d883 <fetch_internal+0x723>
    db6f:	90                   	nop
    db70:	49 81 7d 20 4a 4a ba 	cmpq   $0xba4a4a,0x20(%r13)
    db77:	00 
    db78:	0f 84 f6 fc ff ff    	je     d874 <fetch_internal+0x714>
    db7e:	4d 89 ef             	mov    %r13,%r15
    db81:	48 81 fb fe 5a 00 00 	cmp    $0x5afe,%rbx
    db88:	0f 84 56 04 00 00    	je     dfe4 <fetch_internal+0xe84>
    db8e:	48 c7 c0 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rax
    db95:	66 0f ef c0          	pxor   %xmm0,%xmm0
    db99:	be 70 00 00 00       	mov    $0x70,%esi
    db9e:	64 4c 89 38          	mov    %r15,%fs:(%rax)
    dba2:	48 c7 c0 70 5e ff ff 	mov    $0xffffffffffff5e70,%rax
    dba9:	64 48 89 18          	mov    %rbx,%fs:(%rax)
    dbad:	8b 44 24 44          	mov    0x44(%rsp),%eax
    dbb1:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    dbb6:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
    dbbd:	64 8b 38             	mov    %fs:(%rax),%edi
    dbc0:	e8 1b 2c 00 00       	callq  107e0 <statistics_post_th_data>
    dbc5:	b8 01 00 00 00       	mov    $0x1,%eax
    dbca:	e9 cc f9 ff ff       	jmpq   d59b <fetch_internal+0x43b>
    dbcf:	48 c7 c0 e0 5e ff ff 	mov    $0xffffffffffff5ee0,%rax
    dbd6:	64 48 8b 30          	mov    %fs:(%rax),%rsi
    dbda:	48 01 d6             	add    %rdx,%rsi
    dbdd:	e9 cf f8 ff ff       	jmpq   d4b1 <fetch_internal+0x351>
    dbe2:	49 81 7d 20 4a 4a ba 	cmpq   $0xba4a4a,0x20(%r13)
    dbe9:	00 
    dbea:	4d 89 ef             	mov    %r13,%r15
    dbed:	75 92                	jne    db81 <fetch_internal+0xa21>
    dbef:	48 8d 0d 0a 78 00 00 	lea    0x780a(%rip),%rcx        # 15400 <__PRETTY_FUNCTION__.6204>
    dbf6:	ba 1c 02 00 00       	mov    $0x21c,%edx
    dbfb:	48 8d 35 d2 af 00 00 	lea    0xafd2(%rip),%rsi        # 18bd4 <__PRETTY_FUNCTION__.6556+0x2e14>
    dc02:	48 8d 3d 9f 91 00 00 	lea    0x919f(%rip),%rdi        # 16da8 <__PRETTY_FUNCTION__.6556+0xfe8>
    dc09:	e8 12 3c ff ff       	callq  1820 <__assert_fail@plt>
    dc0e:	66 90                	xchg   %ax,%ax
    dc10:	48 8d 3d a4 af 00 00 	lea    0xafa4(%rip),%rdi        # 18bbb <__PRETTY_FUNCTION__.6556+0x2dfb>
    dc17:	e8 24 3b ff ff       	callq  1740 <puts@plt>
    dc1c:	cc                   	int3   
    dc1d:	e9 f2 fe ff ff       	jmpq   db14 <fetch_internal+0x9b4>
    dc22:	83 fa 01             	cmp    $0x1,%edx
    dc25:	0f 84 99 00 00 00    	je     dcc4 <fetch_internal+0xb64>
    dc2b:	83 fa 03             	cmp    $0x3,%edx
    dc2e:	74 70                	je     dca0 <fetch_internal+0xb40>
    dc30:	83 fa 02             	cmp    $0x2,%edx
    dc33:	0f 85 a3 f8 ff ff    	jne    d4dc <fetch_internal+0x37c>
    dc39:	48 8b 3d 20 b6 33 00 	mov    0x33b620(%rip),%rdi        # 349260 <nbcalqueue>
    dc40:	48 89 de             	mov    %rbx,%rsi
    dc43:	e8 08 e3 ff ff       	callq  bf50 <delete>
    dc48:	84 c0                	test   %al,%al
    dc4a:	0f 84 33 fc ff ff    	je     d883 <fetch_internal+0x723>
    dc50:	48 c7 c0 d0 5e ff ff 	mov    $0xffffffffffff5ed0,%rax
    dc57:	66 0f ef f6          	pxor   %xmm6,%xmm6
    dc5b:	49 8d 75 f0          	lea    -0x10(%r13),%rsi
    dc5f:	41 0f 11 75 f0       	movups %xmm6,-0x10(%r13)
    dc64:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    dc68:	e8 c3 71 ff ff       	callq  4e30 <__list_insert_tail_by_node>
    dc6d:	e9 11 fc ff ff       	jmpq   d883 <fetch_internal+0x723>
    dc72:	e8 29 3b ff ff       	callq  17a0 <__stack_chk_fail@plt>
    dc77:	48 8d 0d 82 77 00 00 	lea    0x7782(%rip),%rcx        # 15400 <__PRETTY_FUNCTION__.6204>
    dc7e:	ba 6c 02 00 00       	mov    $0x26c,%edx
    dc83:	48 8d 35 4a af 00 00 	lea    0xaf4a(%rip),%rsi        # 18bd4 <__PRETTY_FUNCTION__.6556+0x2e14>
    dc8a:	48 8d 3d 50 af 00 00 	lea    0xaf50(%rip),%rdi        # 18be1 <__PRETTY_FUNCTION__.6556+0x2e21>
    dc91:	e8 8a 3b ff ff       	callq  1820 <__assert_fail@plt>
    dc96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    dc9d:	00 00 00 
    dca0:	8b 54 24 48          	mov    0x48(%rsp),%edx
    dca4:	85 d2                	test   %edx,%edx
    dca6:	75 75                	jne    dd1d <fetch_internal+0xbbd>
    dca8:	49 c7 45 20 4a 4a ba 	movq   $0xba4a4a,0x20(%r13)
    dcaf:	00 
    dcb0:	48 8b 3d a9 b5 33 00 	mov    0x33b5a9(%rip),%rdi        # 349260 <nbcalqueue>
    dcb7:	48 89 de             	mov    %rbx,%rsi
    dcba:	e8 91 e2 ff ff       	callq  bf50 <delete>
    dcbf:	e9 31 fc ff ff       	jmpq   d8f5 <fetch_internal+0x795>
    dcc4:	83 7c 24 48 00       	cmpl   $0x0,0x48(%rsp)
    dcc9:	0f 84 b3 00 00 00    	je     dd82 <fetch_internal+0xc22>
    dccf:	41 8b 4d 18          	mov    0x18(%r13),%ecx
    dcd3:	85 c9                	test   %ecx,%ecx
    dcd5:	0f 84 95 00 00 00    	je     dd70 <fetch_internal+0xc10>
    dcdb:	48 c7 c0 e8 5e ff ff 	mov    $0xffffffffffff5ee8,%rax
    dce2:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    dce7:	31 c9                	xor    %ecx,%ecx
    dce9:	48 8b 15 b0 b4 33 00 	mov    0x33b4b0(%rip),%rdx        # 3491a0 <lp_lock>
    dcf0:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    dcf5:	64 48 8b 00          	mov    %fs:(%rax),%rax
    dcf9:	48 c7 04 f0 01 00 00 	movq   $0x1,(%rax,%rsi,8)
    dd00:	00 
    dd01:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
    dd08:	64 8b 00             	mov    %fs:(%rax),%eax
    dd0b:	83 c0 01             	add    $0x1,%eax
    dd0e:	f0 0f b1 0c 3a       	lock cmpxchg %ecx,(%rdx,%rdi,1)
    dd13:	c6 44 24 28 00       	movb   $0x0,0x28(%rsp)
    dd18:	e9 bf f7 ff ff       	jmpq   d4dc <fetch_internal+0x37c>
    dd1d:	49 81 7d 20 4a 4a ba 	cmpq   $0xba4a4a,0x20(%r13)
    dd24:	00 
    dd25:	74 89                	je     dcb0 <fetch_internal+0xb50>
    dd27:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
    dd2c:	4d 89 ef             	mov    %r13,%r15
    dd2f:	0f 85 4c fe ff ff    	jne    db81 <fetch_internal+0xa21>
    dd35:	48 8d 3d f4 90 00 00 	lea    0x90f4(%rip),%rdi        # 16e30 <__PRETTY_FUNCTION__.6556+0x1070>
    dd3c:	e8 ff 39 ff ff       	callq  1740 <puts@plt>
    dd41:	cc                   	int3   
    dd42:	49 81 7d 20 4a 4a ba 	cmpq   $0xba4a4a,0x20(%r13)
    dd49:	00 
    dd4a:	0f 85 31 fe ff ff    	jne    db81 <fetch_internal+0xa21>
    dd50:	48 8d 0d a9 76 00 00 	lea    0x76a9(%rip),%rcx        # 15400 <__PRETTY_FUNCTION__.6204>
    dd57:	ba 4c 02 00 00       	mov    $0x24c,%edx
    dd5c:	48 8d 35 71 ae 00 00 	lea    0xae71(%rip),%rsi        # 18bd4 <__PRETTY_FUNCTION__.6556+0x2e14>
    dd63:	48 8d 3d 3e 90 00 00 	lea    0x903e(%rip),%rdi        # 16da8 <__PRETTY_FUNCTION__.6556+0xfe8>
    dd6a:	e8 b1 3a ff ff       	callq  1820 <__assert_fail@plt>
    dd6f:	90                   	nop
    dd70:	48 8d 3d 91 90 00 00 	lea    0x9091(%rip),%rdi        # 16e08 <__PRETTY_FUNCTION__.6556+0x1048>
    dd77:	e8 c4 39 ff ff       	callq  1740 <puts@plt>
    dd7c:	cc                   	int3   
    dd7d:	e9 59 ff ff ff       	jmpq   dcdb <fetch_internal+0xb7b>
    dd82:	49 81 7d 20 4a 4a ba 	cmpq   $0xba4a4a,0x20(%r13)
    dd89:	00 
    dd8a:	4d 89 ef             	mov    %r13,%r15
    dd8d:	0f 85 ee fd ff ff    	jne    db81 <fetch_internal+0xa21>
    dd93:	48 8d 0d 66 76 00 00 	lea    0x7666(%rip),%rcx        # 15400 <__PRETTY_FUNCTION__.6204>
    dd9a:	ba 30 02 00 00       	mov    $0x230,%edx
    dd9f:	48 8d 35 2e ae 00 00 	lea    0xae2e(%rip),%rsi        # 18bd4 <__PRETTY_FUNCTION__.6556+0x2e14>
    dda6:	48 8d 3d fb 8f 00 00 	lea    0x8ffb(%rip),%rdi        # 16da8 <__PRETTY_FUNCTION__.6556+0xfe8>
    ddad:	e8 6e 3a ff ff       	callq  1820 <__assert_fail@plt>
    ddb2:	48 8d 0d 47 76 00 00 	lea    0x7647(%rip),%rcx        # 15400 <__PRETTY_FUNCTION__.6204>
    ddb9:	ba 72 02 00 00       	mov    $0x272,%edx
    ddbe:	48 8d 35 0f ae 00 00 	lea    0xae0f(%rip),%rsi        # 18bd4 <__PRETTY_FUNCTION__.6556+0x2e14>
    ddc5:	48 8d 3d 32 ae 00 00 	lea    0xae32(%rip),%rdi        # 18bfe <__PRETTY_FUNCTION__.6556+0x2e3e>
    ddcc:	e8 4f 3a ff ff       	callq  1820 <__assert_fail@plt>
    ddd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ddd8:	8b 6c 24 30          	mov    0x30(%rsp),%ebp
    dddc:	41 8b 55 40          	mov    0x40(%r13),%edx
    dde0:	4c 89 e3             	mov    %r12,%rbx
    dde3:	e9 18 fd ff ff       	jmpq   db00 <fetch_internal+0x9a0>
    dde8:	49 81 7c 24 20 fe 5a 	cmpq   $0x5afe,0x20(%r12)
    ddef:	00 00 
    ddf1:	74 75                	je     de68 <fetch_internal+0xd08>
    ddf3:	f2 0f 10 7c 24 50    	movsd  0x50(%rsp),%xmm7
    ddf9:	41 0f b7 54 24 10    	movzwl 0x10(%r12),%edx
    ddff:	66 0f 2f f8          	comisd %xmm0,%xmm7
    de03:	77 20                	ja     de25 <fetch_internal+0xcc5>
    de05:	f2 0f 10 7c 24 18    	movsd  0x18(%rsp),%xmm7
    de0b:	b9 00 00 00 00       	mov    $0x0,%ecx
    de10:	66 0f 2e f8          	ucomisd %xmm0,%xmm7
    de14:	0f 9b c0             	setnp  %al
    de17:	0f 45 c1             	cmovne %ecx,%eax
    de1a:	39 54 24 40          	cmp    %edx,0x40(%rsp)
    de1e:	0f 93 c2             	setae  %dl
    de21:	20 d0                	and    %dl,%al
    de23:	74 18                	je     de3d <fetch_internal+0xcdd>
    de25:	48 c7 c0 e8 5e ff ff 	mov    $0xffffffffffff5ee8,%rax
    de2c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    de31:	64 48 8b 00          	mov    %fs:(%rax),%rax
    de35:	48 83 3c f8 01       	cmpq   $0x1,(%rax,%rdi,8)
    de3a:	0f 95 c0             	setne  %al
    de3d:	48 c7 c6 40 ff ff ff 	mov    $0xffffffffffffff40,%rsi
    de44:	64 88 06             	mov    %al,%fs:(%rsi)
    de47:	8b 7c 24 48          	mov    0x48(%rsp),%edi
    de4b:	85 ff                	test   %edi,%edi
    de4d:	0f 84 30 02 00 00    	je     e083 <fetch_internal+0xf23>
    de53:	48 8d 3d 76 8f 00 00 	lea    0x8f76(%rip),%rdi        # 16dd0 <__PRETTY_FUNCTION__.6556+0x1010>
    de5a:	e8 e1 38 ff ff       	callq  1740 <puts@plt>
    de5f:	cc                   	int3   
    de60:	4d 89 e5             	mov    %r12,%r13
    de63:	e9 67 fe ff ff       	jmpq   dccf <fetch_internal+0xb6f>
    de68:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
    de6f:	48 8d 35 07 ad 00 00 	lea    0xad07(%rip),%rsi        # 18b7d <__PRETTY_FUNCTION__.6556+0x2dbd>
    de76:	bf 01 00 00 00       	mov    $0x1,%edi
    de7b:	64 8b 10             	mov    %fs:(%rax),%edx
    de7e:	31 c0                	xor    %eax,%eax
    de80:	e8 eb 3a ff ff       	callq  1970 <__printf_chk@plt>
    de85:	48 8d 35 0b ad 00 00 	lea    0xad0b(%rip),%rsi        # 18b97 <__PRETTY_FUNCTION__.6556+0x2dd7>
    de8c:	bf 01 00 00 00       	mov    $0x1,%edi
    de91:	31 c0                	xor    %eax,%eax
    de93:	e8 d8 3a ff ff       	callq  1970 <__printf_chk@plt>
    de98:	49 8b 75 20          	mov    0x20(%r13),%rsi
    de9c:	49 8b 85 d0 00 00 00 	mov    0xd0(%r13),%rax
    dea3:	4c 89 ef             	mov    %r13,%rdi
    dea6:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    deab:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    deb0:	e8 ab ee ff ff       	callq  cd60 <is_valid>
    deb5:	41 8b 55 40          	mov    0x40(%r13),%edx
    deb9:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    debe:	0f b6 f8             	movzbl %al,%edi
    dec1:	48 8d 05 a2 6a 00 00 	lea    0x6aa2(%rip),%rax        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    dec8:	83 fa 01             	cmp    $0x1,%edx
    decb:	74 21                	je     deee <fetch_internal+0xd8e>
    decd:	48 8d 05 83 6a 00 00 	lea    0x6a83(%rip),%rax        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    ded4:	83 fa 02             	cmp    $0x2,%edx
    ded7:	74 15                	je     deee <fetch_internal+0xd8e>
    ded9:	83 fa 03             	cmp    $0x3,%edx
    dedc:	48 8d 0d 90 6a 00 00 	lea    0x6a90(%rip),%rcx        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    dee3:	48 8d 05 78 6a 00 00 	lea    0x6a78(%rip),%rax        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    deea:	48 0f 44 c1          	cmove  %rcx,%rax
    deee:	45 0f b7 55 00       	movzwl 0x0(%r13),%r10d
    def3:	45 8b 4d 14          	mov    0x14(%r13),%r9d
    def7:	45 0f b7 45 10       	movzwl 0x10(%r13),%r8d
    defc:	f2 41 0f 10 45 08    	movsd  0x8(%r13),%xmm0
    df02:	41 0f b7 4d 02       	movzwl 0x2(%r13),%ecx
    df07:	56                   	push   %rsi
    df08:	48 8d 35 29 70 00 00 	lea    0x7029(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    df0f:	ff 74 24 18          	pushq  0x18(%rsp)
    df13:	41 55                	push   %r13
    df15:	57                   	push   %rdi
    df16:	bf 01 00 00 00       	mov    $0x1,%edi
    df1b:	50                   	push   %rax
    df1c:	b8 01 00 00 00       	mov    $0x1,%eax
    df21:	52                   	push   %rdx
    df22:	44 89 d2             	mov    %r10d,%edx
    df25:	e8 46 3a ff ff       	callq  1970 <__printf_chk@plt>
    df2a:	48 83 c4 30          	add    $0x30,%rsp
    df2e:	bf 01 00 00 00       	mov    $0x1,%edi
    df33:	31 c0                	xor    %eax,%eax
    df35:	48 8d 35 6d ac 00 00 	lea    0xac6d(%rip),%rsi        # 18ba9 <__PRETTY_FUNCTION__.6556+0x2de9>
    df3c:	e8 2f 3a ff ff       	callq  1970 <__printf_chk@plt>
    df41:	49 8b b4 24 d0 00 00 	mov    0xd0(%r12),%rsi
    df48:	00 
    df49:	4c 89 e7             	mov    %r12,%rdi
    df4c:	4d 8b 6c 24 20       	mov    0x20(%r12),%r13
    df51:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    df56:	e8 05 ee ff ff       	callq  cd60 <is_valid>
    df5b:	41 8b 54 24 40       	mov    0x40(%r12),%edx
    df60:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    df65:	0f b6 f8             	movzbl %al,%edi
    df68:	48 8d 05 fb 69 00 00 	lea    0x69fb(%rip),%rax        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    df6f:	83 fa 01             	cmp    $0x1,%edx
    df72:	74 21                	je     df95 <fetch_internal+0xe35>
    df74:	48 8d 05 dc 69 00 00 	lea    0x69dc(%rip),%rax        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    df7b:	83 fa 02             	cmp    $0x2,%edx
    df7e:	74 15                	je     df95 <fetch_internal+0xe35>
    df80:	83 fa 03             	cmp    $0x3,%edx
    df83:	48 8d 0d e9 69 00 00 	lea    0x69e9(%rip),%rcx        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    df8a:	48 8d 05 d1 69 00 00 	lea    0x69d1(%rip),%rax        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    df91:	48 0f 44 c1          	cmove  %rcx,%rax
    df95:	45 0f b7 14 24       	movzwl (%r12),%r10d
    df9a:	45 8b 4c 24 14       	mov    0x14(%r12),%r9d
    df9f:	45 0f b7 44 24 10    	movzwl 0x10(%r12),%r8d
    dfa5:	f2 41 0f 10 44 24 08 	movsd  0x8(%r12),%xmm0
    dfac:	41 0f b7 4c 24 02    	movzwl 0x2(%r12),%ecx
    dfb2:	41 55                	push   %r13
    dfb4:	56                   	push   %rsi
    dfb5:	48 8d 35 7c 6f 00 00 	lea    0x6f7c(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    dfbc:	41 54                	push   %r12
    dfbe:	57                   	push   %rdi
    dfbf:	bf 01 00 00 00       	mov    $0x1,%edi
    dfc4:	50                   	push   %rax
    dfc5:	b8 01 00 00 00       	mov    $0x1,%eax
    dfca:	52                   	push   %rdx
    dfcb:	44 89 d2             	mov    %r10d,%edx
    dfce:	e8 9d 39 ff ff       	callq  1970 <__printf_chk@plt>
    dfd3:	cc                   	int3   
    dfd4:	f2 41 0f 10 44 24 08 	movsd  0x8(%r12),%xmm0
    dfdb:	48 83 c4 30          	add    $0x30,%rsp
    dfdf:	e9 0f fe ff ff       	jmpq   ddf3 <fetch_internal+0xc93>
    dfe4:	48 8d 35 2e ac 00 00 	lea    0xac2e(%rip),%rsi        # 18c19 <__PRETTY_FUNCTION__.6556+0x2e59>
    dfeb:	bf 01 00 00 00       	mov    $0x1,%edi
    dff0:	31 c0                	xor    %eax,%eax
    dff2:	e8 79 39 ff ff       	callq  1970 <__printf_chk@plt>
    dff7:	4c 89 ff             	mov    %r15,%rdi
    dffa:	4d 8b 67 20          	mov    0x20(%r15),%r12
    dffe:	49 8b af d0 00 00 00 	mov    0xd0(%r15),%rbp
    e005:	e8 56 ed ff ff       	callq  cd60 <is_valid>
    e00a:	41 8b 57 40          	mov    0x40(%r15),%edx
    e00e:	0f b6 c8             	movzbl %al,%ecx
    e011:	48 8d 05 52 69 00 00 	lea    0x6952(%rip),%rax        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
    e018:	83 fa 01             	cmp    $0x1,%edx
    e01b:	74 21                	je     e03e <fetch_internal+0xede>
    e01d:	48 8d 05 33 69 00 00 	lea    0x6933(%rip),%rax        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
    e024:	83 fa 02             	cmp    $0x2,%edx
    e027:	74 15                	je     e03e <fetch_internal+0xede>
    e029:	83 fa 03             	cmp    $0x3,%edx
    e02c:	48 8d 05 40 69 00 00 	lea    0x6940(%rip),%rax        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
    e033:	48 8d 35 28 69 00 00 	lea    0x6928(%rip),%rsi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
    e03a:	48 0f 45 c6          	cmovne %rsi,%rax
    e03e:	45 0f b7 6f 02       	movzwl 0x2(%r15),%r13d
    e043:	45 0f b7 1f          	movzwl (%r15),%r11d
    e047:	bf 01 00 00 00       	mov    $0x1,%edi
    e04c:	48 8d 35 e5 6e 00 00 	lea    0x6ee5(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
    e053:	45 8b 4f 14          	mov    0x14(%r15),%r9d
    e057:	45 0f b7 47 10       	movzwl 0x10(%r15),%r8d
    e05c:	f2 41 0f 10 47 08    	movsd  0x8(%r15),%xmm0
    e062:	41 54                	push   %r12
    e064:	55                   	push   %rbp
    e065:	41 57                	push   %r15
    e067:	51                   	push   %rcx
    e068:	44 89 e9             	mov    %r13d,%ecx
    e06b:	50                   	push   %rax
    e06c:	b8 01 00 00 00       	mov    $0x1,%eax
    e071:	52                   	push   %rdx
    e072:	44 89 da             	mov    %r11d,%edx
    e075:	e8 f6 38 ff ff       	callq  1970 <__printf_chk@plt>
    e07a:	48 83 c4 30          	add    $0x30,%rsp
    e07e:	e9 0b fb ff ff       	jmpq   db8e <fetch_internal+0xa2e>
    e083:	31 db                	xor    %ebx,%ebx
    e085:	4d 89 e7             	mov    %r12,%r15
    e088:	49 81 7c 24 20 4a 4a 	cmpq   $0xba4a4a,0x20(%r12)
    e08f:	ba 00 
    e091:	0f 85 f7 fa ff ff    	jne    db8e <fetch_internal+0xa2e>
    e097:	e9 f7 fc ff ff       	jmpq   dd93 <fetch_internal+0xc33>
    e09c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e0a0 <prune_local_queue_with_ts_old>:
    e0a0:	41 56                	push   %r14
    e0a2:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e0a6:	41 55                	push   %r13
    e0a8:	41 54                	push   %r12
    e0aa:	55                   	push   %rbp
    e0ab:	53                   	push   %rbx
    e0ac:	48 83 ec 10          	sub    $0x10,%rsp
    e0b0:	49 c7 c4 c8 5e ff ff 	mov    $0xffffffffffff5ec8,%r12
    e0b7:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    e0bd:	64 49 8b 04 24       	mov    %fs:(%r12),%rax
    e0c2:	48 8b 40 08          	mov    0x8(%rax),%rax
    e0c6:	48 8d 58 10          	lea    0x10(%rax),%rbx
    e0ca:	48 85 c0             	test   %rax,%rax
    e0cd:	75 23                	jne    e0f2 <prune_local_queue_with_ts_old+0x52>
    e0cf:	e9 f4 00 00 00       	jmpq   e1c8 <prune_local_queue_with_ts_old+0x128>
    e0d4:	0f 1f 40 00          	nopl   0x0(%rax)
    e0d8:	75 52                	jne    e12c <prune_local_queue_with_ts_old+0x8c>
    e0da:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
    e0e0:	66 0f 2f d0          	comisd %xmm0,%xmm2
    e0e4:	77 72                	ja     e158 <prune_local_queue_with_ts_old+0xb8>
    e0e6:	48 85 ed             	test   %rbp,%rbp
    e0e9:	0f 84 d9 00 00 00    	je     e1c8 <prune_local_queue_with_ts_old+0x128>
    e0ef:	48 89 eb             	mov    %rbp,%rbx
    e0f2:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
    e0f6:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
    e0fa:	48 85 c0             	test   %rax,%rax
    e0fd:	0f 84 d5 00 00 00    	je     e1d8 <prune_local_queue_with_ts_old+0x138>
    e103:	48 8d 68 10          	lea    0x10(%rax),%rbp
    e107:	48 81 fa dd 0d 00 00 	cmp    $0xddd,%rdx
    e10e:	0f 84 f3 00 00 00    	je     e207 <prune_local_queue_with_ts_old+0x167>
    e114:	48 3d cc 0c 00 00    	cmp    $0xccc,%rax
    e11a:	0f 84 c8 00 00 00    	je     e1e8 <prune_local_queue_with_ts_old+0x148>
    e120:	66 0f 2e 4b 08       	ucomisd 0x8(%rbx),%xmm1
    e125:	f2 0f 10 43 30       	movsd  0x30(%rbx),%xmm0
    e12a:	7b ac                	jnp    e0d8 <prune_local_queue_with_ts_old+0x38>
    e12c:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    e130:	7a a8                	jp     e0da <prune_local_queue_with_ts_old+0x3a>
    e132:	75 a6                	jne    e0da <prune_local_queue_with_ts_old+0x3a>
    e134:	48 8d 0d a5 72 00 00 	lea    0x72a5(%rip),%rcx        # 153e0 <__PRETTY_FUNCTION__.6241>
    e13b:	ba fc 02 00 00       	mov    $0x2fc,%edx
    e140:	48 8d 35 8d aa 00 00 	lea    0xaa8d(%rip),%rsi        # 18bd4 <__PRETTY_FUNCTION__.6556+0x2e14>
    e147:	48 8d 3d 7a 8d 00 00 	lea    0x8d7a(%rip),%rdi        # 16ec8 <__PRETTY_FUNCTION__.6556+0x1108>
    e14e:	e8 cd 36 ff ff       	callq  1820 <__assert_fail@plt>
    e153:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e158:	49 c7 c6 90 5e ff ff 	mov    $0xffffffffffff5e90,%r14
    e15f:	4c 8d 6b f0          	lea    -0x10(%rbx),%r13
    e163:	64 49 8b 34 24       	mov    %fs:(%r12),%rsi
    e168:	4c 89 ea             	mov    %r13,%rdx
    e16b:	64 41 8b 3e          	mov    %fs:(%r14),%edi
    e16f:	e8 4c 76 ff ff       	callq  57c0 <__list_extract_given_node>
    e174:	48 85 ed             	test   %rbp,%rbp
    e177:	74 16                	je     e18f <prune_local_queue_with_ts_old+0xef>
    e179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e17d:	48 85 c0             	test   %rax,%rax
    e180:	74 0d                	je     e18f <prune_local_queue_with_ts_old+0xef>
    e182:	48 83 c0 10          	add    $0x10,%rax
    e186:	48 39 c3             	cmp    %rax,%rbx
    e189:	0f 84 97 00 00 00    	je     e226 <prune_local_queue_with_ts_old+0x186>
    e18f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e193:	c7 43 40 ff ff ff ff 	movl   $0xffffffff,0x40(%rbx)
    e19a:	4c 89 ee             	mov    %r13,%rsi
    e19d:	0f 11 43 f0          	movups %xmm0,-0x10(%rbx)
    e1a1:	64 41 8b 06          	mov    %fs:(%r14),%eax
    e1a5:	83 c0 01             	add    $0x1,%eax
    e1a8:	88 43 13             	mov    %al,0x13(%rbx)
    e1ab:	48 c7 c0 c0 5e ff ff 	mov    $0xffffffffffff5ec0,%rax
    e1b2:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    e1b6:	e8 75 6c ff ff       	callq  4e30 <__list_insert_tail_by_node>
    e1bb:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e1bf:	48 85 ed             	test   %rbp,%rbp
    e1c2:	0f 85 27 ff ff ff    	jne    e0ef <prune_local_queue_with_ts_old+0x4f>
    e1c8:	48 83 c4 10          	add    $0x10,%rsp
    e1cc:	5b                   	pop    %rbx
    e1cd:	5d                   	pop    %rbp
    e1ce:	41 5c                	pop    %r12
    e1d0:	41 5d                	pop    %r13
    e1d2:	41 5e                	pop    %r14
    e1d4:	c3                   	retq   
    e1d5:	0f 1f 00             	nopl   (%rax)
    e1d8:	48 81 fa dd 0d 00 00 	cmp    $0xddd,%rdx
    e1df:	74 26                	je     e207 <prune_local_queue_with_ts_old+0x167>
    e1e1:	31 ed                	xor    %ebp,%ebp
    e1e3:	e9 38 ff ff ff       	jmpq   e120 <prune_local_queue_with_ts_old+0x80>
    e1e8:	48 8d 0d f1 71 00 00 	lea    0x71f1(%rip),%rcx        # 153e0 <__PRETTY_FUNCTION__.6241>
    e1ef:	ba fb 02 00 00       	mov    $0x2fb,%edx
    e1f4:	48 8d 35 d9 a9 00 00 	lea    0xa9d9(%rip),%rsi        # 18bd4 <__PRETTY_FUNCTION__.6556+0x2e14>
    e1fb:	48 8d 3d 8e 8c 00 00 	lea    0x8c8e(%rip),%rdi        # 16e90 <__PRETTY_FUNCTION__.6556+0x10d0>
    e202:	e8 19 36 ff ff       	callq  1820 <__assert_fail@plt>
    e207:	48 8d 0d d2 71 00 00 	lea    0x71d2(%rip),%rcx        # 153e0 <__PRETTY_FUNCTION__.6241>
    e20e:	ba fa 02 00 00       	mov    $0x2fa,%edx
    e213:	48 8d 35 ba a9 00 00 	lea    0xa9ba(%rip),%rsi        # 18bd4 <__PRETTY_FUNCTION__.6556+0x2e14>
    e21a:	48 8d 3d 37 8c 00 00 	lea    0x8c37(%rip),%rdi        # 16e58 <__PRETTY_FUNCTION__.6556+0x1098>
    e221:	e8 fa 35 ff ff       	callq  1820 <__assert_fail@plt>
    e226:	48 8d 0d b3 71 00 00 	lea    0x71b3(%rip),%rcx        # 153e0 <__PRETTY_FUNCTION__.6241>
    e22d:	ba 03 03 00 00       	mov    $0x303,%edx
    e232:	48 8d 35 9b a9 00 00 	lea    0xa99b(%rip),%rsi        # 18bd4 <__PRETTY_FUNCTION__.6556+0x2e14>
    e239:	48 8d 3d c0 8c 00 00 	lea    0x8cc0(%rip),%rdi        # 16f00 <__PRETTY_FUNCTION__.6556+0x1140>
    e240:	e8 db 35 ff ff       	callq  1820 <__assert_fail@plt>
    e245:	90                   	nop
    e246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e24d:	00 00 00 

000000000000e250 <prune_local_queue_with_ts>:
    e250:	55                   	push   %rbp
    e251:	53                   	push   %rbx
    e252:	48 83 ec 18          	sub    $0x18,%rsp
    e256:	48 c7 c5 c8 5e ff ff 	mov    $0xffffffffffff5ec8,%rbp
    e25d:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
    e262:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e266:	48 8d 42 10          	lea    0x10(%rdx),%rax
    e26a:	48 85 d2             	test   %rdx,%rdx
    e26d:	48 0f 45 d0          	cmovne %rax,%rdx
    e271:	eb 12                	jmp    e285 <prune_local_queue_with_ts+0x35>
    e273:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e278:	66 0f 2f c1          	comisd %xmm1,%xmm0
    e27c:	48 8d 48 10          	lea    0x10(%rax),%rcx
    e280:	77 2e                	ja     e2b0 <prune_local_queue_with_ts+0x60>
    e282:	48 89 ca             	mov    %rcx,%rdx
    e285:	48 85 d2             	test   %rdx,%rdx
    e288:	74 18                	je     e2a2 <prune_local_queue_with_ts+0x52>
    e28a:	48 8b 42 f0          	mov    -0x10(%rdx),%rax
    e28e:	f2 0f 10 4a 30       	movsd  0x30(%rdx),%xmm1
    e293:	48 85 c0             	test   %rax,%rax
    e296:	75 e0                	jne    e278 <prune_local_queue_with_ts+0x28>
    e298:	66 0f 2f c1          	comisd %xmm1,%xmm0
    e29c:	0f 87 ce 00 00 00    	ja     e370 <prune_local_queue_with_ts+0x120>
    e2a2:	48 83 c4 18          	add    $0x18,%rsp
    e2a6:	5b                   	pop    %rbx
    e2a7:	5d                   	pop    %rbp
    e2a8:	c3                   	retq   
    e2a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e2b0:	48 89 d3             	mov    %rdx,%rbx
    e2b3:	31 f6                	xor    %esi,%esi
    e2b5:	eb 1a                	jmp    e2d1 <prune_local_queue_with_ts+0x81>
    e2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e2be:	00 00 
    e2c0:	66 0f 2f 40 40       	comisd 0x40(%rax),%xmm0
    e2c5:	48 8d 48 10          	lea    0x10(%rax),%rcx
    e2c9:	76 75                	jbe    e340 <prune_local_queue_with_ts+0xf0>
    e2cb:	48 8b 00             	mov    (%rax),%rax
    e2ce:	48 89 cb             	mov    %rcx,%rbx
    e2d1:	48 83 c6 01          	add    $0x1,%rsi
    e2d5:	48 85 c0             	test   %rax,%rax
    e2d8:	75 e6                	jne    e2c0 <prune_local_queue_with_ts+0x70>
    e2da:	48 8b 7a f8          	mov    -0x8(%rdx),%rdi
    e2de:	64 4c 8b 45 00       	mov    %fs:0x0(%rbp),%r8
    e2e3:	48 8d 4b f0          	lea    -0x10(%rbx),%rcx
    e2e7:	31 c0                	xor    %eax,%eax
    e2e9:	48 85 ff             	test   %rdi,%rdi
    e2ec:	74 6a                	je     e358 <prune_local_queue_with_ts+0x108>
    e2ee:	48 89 07             	mov    %rax,(%rdi)
    e2f1:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
    e2f5:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    e2fb:	48 85 c0             	test   %rax,%rax
    e2fe:	74 67                	je     e367 <prune_local_queue_with_ts+0x117>
    e300:	48 89 78 08          	mov    %rdi,0x8(%rax)
    e304:	49 29 30             	sub    %rsi,(%r8)
    e307:	48 c7 c0 c0 5e ff ff 	mov    $0xffffffffffff5ec0,%rax
    e30e:	48 83 ea 10          	sub    $0x10,%rdx
    e312:	64 48 8b 38          	mov    %fs:(%rax),%rdi
    e316:	e8 35 77 ff ff       	callq  5a50 <__list_insert_tail_by_nodes>
    e31b:	48 8b 53 f0          	mov    -0x10(%rbx),%rdx
    e31f:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    e325:	48 85 d2             	test   %rdx,%rdx
    e328:	0f 84 74 ff ff ff    	je     e2a2 <prune_local_queue_with_ts+0x52>
    e32e:	48 83 c2 10          	add    $0x10,%rdx
    e332:	e9 4e ff ff ff       	jmpq   e285 <prune_local_queue_with_ts+0x35>
    e337:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e33e:	00 00 
    e340:	48 8b 7a f8          	mov    -0x8(%rdx),%rdi
    e344:	64 4c 8b 45 00       	mov    %fs:0x0(%rbp),%r8
    e349:	48 8d 4b f0          	lea    -0x10(%rbx),%rcx
    e34d:	48 85 ff             	test   %rdi,%rdi
    e350:	75 9c                	jne    e2ee <prune_local_queue_with_ts+0x9e>
    e352:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e358:	49 89 40 08          	mov    %rax,0x8(%r8)
    e35c:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    e362:	48 85 c0             	test   %rax,%rax
    e365:	75 99                	jne    e300 <prune_local_queue_with_ts+0xb0>
    e367:	49 89 78 10          	mov    %rdi,0x10(%r8)
    e36b:	eb 97                	jmp    e304 <prune_local_queue_with_ts+0xb4>
    e36d:	0f 1f 00             	nopl   (%rax)
    e370:	48 89 d3             	mov    %rdx,%rbx
    e373:	be 01 00 00 00       	mov    $0x1,%esi
    e378:	e9 5d ff ff ff       	jmpq   e2da <prune_local_queue_with_ts+0x8a>
    e37d:	0f 1f 00             	nopl   (%rax)

000000000000e380 <start_thread>:
    e380:	53                   	push   %rbx
    e381:	bb 01 00 00 00       	mov    $0x1,%ebx
    e386:	f0 48 0f c1 1d 91 ec 	lock xadd %rbx,0x20ec91(%rip)        # 21d020 <tid_ticket>
    e38d:	20 00 
    e38f:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    e396:	00 00 
    e398:	48 8d b0 c8 ff ff ff 	lea    -0x38(%rax),%rsi
    e39f:	8d bb fe 00 00 00    	lea    0xfe(%rbx),%edi
    e3a5:	48 63 ff             	movslq %edi,%rdi
    e3a8:	e8 d3 35 ff ff       	callq  1980 <srand48_r@plt>
    e3ad:	89 df                	mov    %ebx,%edi
    e3af:	e8 bc a4 ff ff       	callq  8870 <thread_loop>
    e3b4:	31 ff                	xor    %edi,%edi
    e3b6:	e8 45 35 ff ff       	callq  1900 <pthread_exit@plt>
    e3bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000e3c0 <start_simulation>:
    e3c0:	55                   	push   %rbp
    e3c1:	48 8d 35 60 8b 00 00 	lea    0x8b60(%rip),%rsi        # 16f28 <__PRETTY_FUNCTION__.6556+0x1168>
    e3c8:	bf 01 00 00 00       	mov    $0x1,%edi
    e3cd:	48 89 e5             	mov    %rsp,%rbp
    e3d0:	41 55                	push   %r13
    e3d2:	41 54                	push   %r12
    e3d4:	53                   	push   %rbx
    e3d5:	48 83 ec 18          	sub    $0x18,%rsp
    e3d9:	8b 15 a9 ad 33 00    	mov    0x33ada9(%rip),%edx        # 349188 <n_cores>
    e3df:	8b 0d cb ad 33 00    	mov    0x33adcb(%rip),%ecx        # 3491b0 <n_prc_tot>
    e3e5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e3ec:	00 00 
    e3ee:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    e3f2:	31 c0                	xor    %eax,%eax
    e3f4:	8d 42 ff             	lea    -0x1(%rdx),%eax
    e3f7:	48 8d 04 c5 0f 00 00 	lea    0xf(,%rax,8),%rax
    e3fe:	00 
    e3ff:	48 c1 e8 04          	shr    $0x4,%rax
    e403:	48 c1 e0 04          	shl    $0x4,%rax
    e407:	48 29 c4             	sub    %rax,%rsp
    e40a:	31 c0                	xor    %eax,%eax
    e40c:	e8 5f 35 ff ff       	callq  1970 <__printf_chk@plt>
    e411:	48 8d 3d 11 a8 00 00 	lea    0xa811(%rip),%rdi        # 18c29 <__PRETTY_FUNCTION__.6556+0x2e69>
    e418:	49 89 e4             	mov    %rsp,%r12
    e41b:	e8 20 33 ff ff       	callq  1740 <puts@plt>
    e420:	48 8d 3d 19 a8 00 00 	lea    0xa819(%rip),%rdi        # 18c40 <__PRETTY_FUNCTION__.6556+0x2e80>
    e427:	e8 14 33 ff ff       	callq  1740 <puts@plt>
    e42c:	ba 40 00 00 00       	mov    $0x40,%edx
    e431:	48 8d 35 1c a8 00 00 	lea    0xa81c(%rip),%rsi        # 18c54 <__PRETTY_FUNCTION__.6556+0x2e94>
    e438:	31 c0                	xor    %eax,%eax
    e43a:	bf 01 00 00 00       	mov    $0x1,%edi
    e43f:	e8 2c 35 ff ff       	callq  1970 <__printf_chk@plt>
    e444:	ba 32 00 00 00       	mov    $0x32,%edx
    e449:	48 8d 35 19 a8 00 00 	lea    0xa819(%rip),%rsi        # 18c69 <__PRETTY_FUNCTION__.6556+0x2ea9>
    e450:	31 c0                	xor    %eax,%eax
    e452:	bf 01 00 00 00       	mov    $0x1,%edi
    e457:	e8 14 35 ff ff       	callq  1970 <__printf_chk@plt>
    e45c:	ba e8 03 00 00       	mov    $0x3e8,%edx
    e461:	48 8d 35 f8 8a 00 00 	lea    0x8af8(%rip),%rsi        # 16f60 <__PRETTY_FUNCTION__.6556+0x11a0>
    e468:	31 c0                	xor    %eax,%eax
    e46a:	bf 01 00 00 00       	mov    $0x1,%edi
    e46f:	e8 fc 34 ff ff       	callq  1970 <__printf_chk@plt>
    e474:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    e479:	48 8d 35 02 a8 00 00 	lea    0xa802(%rip),%rsi        # 18c82 <__PRETTY_FUNCTION__.6556+0x2ec2>
    e480:	31 c0                	xor    %eax,%eax
    e482:	bf 01 00 00 00       	mov    $0x1,%edi
    e487:	e8 e4 34 ff ff       	callq  1970 <__printf_chk@plt>
    e48c:	48 8d 3d 04 a8 00 00 	lea    0xa804(%rip),%rdi        # 18c97 <__PRETTY_FUNCTION__.6556+0x2ed7>
    e493:	e8 a8 32 ff ff       	callq  1740 <puts@plt>
    e498:	48 8d 3d 12 a8 00 00 	lea    0xa812(%rip),%rdi        # 18cb1 <__PRETTY_FUNCTION__.6556+0x2ef1>
    e49f:	e8 9c 32 ff ff       	callq  1740 <puts@plt>
    e4a4:	48 8d 3d 22 a8 00 00 	lea    0xa822(%rip),%rdi        # 18ccd <__PRETTY_FUNCTION__.6556+0x2f0d>
    e4ab:	e8 90 32 ff ff       	callq  1740 <puts@plt>
    e4b0:	48 8d 3d 2b a8 00 00 	lea    0xa82b(%rip),%rdi        # 18ce2 <__PRETTY_FUNCTION__.6556+0x2f22>
    e4b7:	e8 84 32 ff ff       	callq  1740 <puts@plt>
    e4bc:	31 c0                	xor    %eax,%eax
    e4be:	bf 01 00 00 00       	mov    $0x1,%edi
    e4c3:	48 8d 35 35 a8 00 00 	lea    0xa835(%rip),%rsi        # 18cff <__PRETTY_FUNCTION__.6556+0x2f3f>
    e4ca:	e8 a1 34 ff ff       	callq  1970 <__printf_chk@plt>
    e4cf:	83 3d b2 ac 33 00 01 	cmpl   $0x1,0x33acb2(%rip)        # 349188 <n_cores>
    e4d6:	74 36                	je     e50e <start_simulation+0x14e>
    e4d8:	31 db                	xor    %ebx,%ebx
    e4da:	4c 8d 2d 9f fe ff ff 	lea    -0x161(%rip),%r13        # e380 <start_thread>
    e4e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e4e8:	89 d8                	mov    %ebx,%eax
    e4ea:	31 c9                	xor    %ecx,%ecx
    e4ec:	31 f6                	xor    %esi,%esi
    e4ee:	4c 89 ea             	mov    %r13,%rdx
    e4f1:	49 8d 3c c4          	lea    (%r12,%rax,8),%rdi
    e4f5:	e8 a6 31 ff ff       	callq  16a0 <pthread_create@plt>
    e4fa:	85 c0                	test   %eax,%eax
    e4fc:	75 59                	jne    e557 <start_simulation+0x197>
    e4fe:	8b 05 84 ac 33 00    	mov    0x33ac84(%rip),%eax        # 349188 <n_cores>
    e504:	83 c3 01             	add    $0x1,%ebx
    e507:	83 e8 01             	sub    $0x1,%eax
    e50a:	39 d8                	cmp    %ebx,%eax
    e50c:	77 da                	ja     e4e8 <start_simulation+0x128>
    e50e:	31 ff                	xor    %edi,%edi
    e510:	e8 5b a3 ff ff       	callq  8870 <thread_loop>
    e515:	83 3d 6c ac 33 00 01 	cmpl   $0x1,0x33ac6c(%rip)        # 349188 <n_cores>
    e51c:	74 1f                	je     e53d <start_simulation+0x17d>
    e51e:	31 db                	xor    %ebx,%ebx
    e520:	89 d8                	mov    %ebx,%eax
    e522:	31 f6                	xor    %esi,%esi
    e524:	83 c3 01             	add    $0x1,%ebx
    e527:	49 8b 3c c4          	mov    (%r12,%rax,8),%rdi
    e52b:	e8 e0 34 ff ff       	callq  1a10 <pthread_join@plt>
    e530:	8b 05 52 ac 33 00    	mov    0x33ac52(%rip),%eax        # 349188 <n_cores>
    e536:	83 e8 01             	sub    $0x1,%eax
    e539:	39 d8                	cmp    %ebx,%eax
    e53b:	77 e3                	ja     e520 <start_simulation+0x160>
    e53d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e541:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    e548:	00 00 
    e54a:	75 39                	jne    e585 <start_simulation+0x1c5>
    e54c:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    e550:	5b                   	pop    %rbx
    e551:	41 5c                	pop    %r12
    e553:	41 5d                	pop    %r13
    e555:	5d                   	pop    %rbp
    e556:	c3                   	retq   
    e557:	e8 64 31 ff ff       	callq  16c0 <__errno_location@plt>
    e55c:	8b 38                	mov    (%rax),%edi
    e55e:	e8 2d 35 ff ff       	callq  1a90 <strerror@plt>
    e563:	48 8b 3d f6 ea 20 00 	mov    0x20eaf6(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    e56a:	be 01 00 00 00       	mov    $0x1,%esi
    e56f:	48 8d 15 b9 a5 00 00 	lea    0xa5b9(%rip),%rdx        # 18b2f <__PRETTY_FUNCTION__.6556+0x2d6f>
    e576:	48 89 c1             	mov    %rax,%rcx
    e579:	31 c0                	xor    %eax,%eax
    e57b:	e8 e0 34 ff ff       	callq  1a60 <__fprintf_chk@plt>
    e580:	e8 2b 31 ff ff       	callq  16b0 <abort@plt>
    e585:	e8 16 32 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    e58a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000e590 <print_commit_hash_and_newline>:
    e590:	48 83 ec 08          	sub    $0x8,%rsp
    e594:	48 8d 3d 6a a7 00 00 	lea    0xa76a(%rip),%rdi        # 18d05 <__PRETTY_FUNCTION__.6556+0x2f45>
    e59b:	e8 a0 31 ff ff       	callq  1740 <puts@plt>
    e5a0:	48 8d 3d d9 89 00 00 	lea    0x89d9(%rip),%rdi        # 16f80 <__PRETTY_FUNCTION__.6556+0x11c0>
    e5a7:	48 83 c4 08          	add    $0x8,%rsp
    e5ab:	e9 10 32 ff ff       	jmpq   17c0 <system@plt>

000000000000e5b0 <load_seed>:
    e5b0:	41 55                	push   %r13
    e5b2:	48 8d 3d f5 a7 00 00 	lea    0xa7f5(%rip),%rdi        # 18dae <__PRETTY_FUNCTION__.6556+0x2fee>
    e5b9:	41 54                	push   %r12
    e5bb:	55                   	push   %rbp
    e5bc:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
    e5c3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e5ca:	00 00 
    e5cc:	48 89 84 24 18 02 00 	mov    %rax,0x218(%rsp)
    e5d3:	00 
    e5d4:	31 c0                	xor    %eax,%eax
    e5d6:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    e5db:	e8 90 30 ff ff       	callq  1670 <getenv@plt>
    e5e0:	be 01 00 00 00       	mov    $0x1,%esi
    e5e5:	4c 89 e7             	mov    %r12,%rdi
    e5e8:	48 8d 0d c4 a7 00 00 	lea    0xa7c4(%rip),%rcx        # 18db3 <__PRETTY_FUNCTION__.6556+0x2ff3>
    e5ef:	49 89 c0             	mov    %rax,%r8
    e5f2:	ba 00 02 00 00       	mov    $0x200,%edx
    e5f7:	31 c0                	xor    %eax,%eax
    e5f9:	e8 b2 34 ff ff       	callq  1ab0 <__sprintf_chk@plt>
    e5fe:	48 8d 35 c9 a7 00 00 	lea    0xa7c9(%rip),%rsi        # 18dce <__PRETTY_FUNCTION__.6556+0x300e>
    e605:	4c 89 e7             	mov    %r12,%rdi
    e608:	e8 d3 33 ff ff       	callq  19e0 <fopen@plt>
    e60d:	48 85 c0             	test   %rax,%rax
    e610:	0f 84 aa 00 00 00    	je     e6c0 <load_seed+0x110>
    e616:	48 8d 35 b1 a7 00 00 	lea    0xa7b1(%rip),%rsi        # 18dce <__PRETTY_FUNCTION__.6556+0x300e>
    e61d:	4c 89 e7             	mov    %r12,%rdi
    e620:	e8 bb 33 ff ff       	callq  19e0 <fopen@plt>
    e625:	48 89 c5             	mov    %rax,%rbp
    e628:	48 85 c0             	test   %rax,%rax
    e62b:	74 73                	je     e6a0 <load_seed+0xf0>
    e62d:	31 c0                	xor    %eax,%eax
    e62f:	48 8d 15 0a eb 30 00 	lea    0x30eb0a(%rip),%rdx        # 31d140 <master_seed>
    e636:	48 8d 35 cc a7 00 00 	lea    0xa7cc(%rip),%rsi        # 18e09 <__PRETTY_FUNCTION__.6556+0x3049>
    e63d:	48 89 ef             	mov    %rbp,%rdi
    e640:	e8 db 30 ff ff       	callq  1720 <__isoc99_fscanf@plt>
    e645:	83 f8 01             	cmp    $0x1,%eax
    e648:	74 0d                	je     e657 <load_seed+0xa7>
    e64a:	48 8d 3d bd a7 00 00 	lea    0xa7bd(%rip),%rdi        # 18e0e <__PRETTY_FUNCTION__.6556+0x304e>
    e651:	e8 ea 30 ff ff       	callq  1740 <puts@plt>
    e656:	cc                   	int3   
    e657:	48 89 ef             	mov    %rbp,%rdi
    e65a:	e8 81 31 ff ff       	callq  17e0 <rewind@plt>
    e65f:	8b 3d db ea 30 00    	mov    0x30eadb(%rip),%edi        # 31d140 <master_seed>
    e665:	e8 66 30 ff ff       	callq  16d0 <srandom@plt>
    e66a:	48 89 ef             	mov    %rbp,%rdi
    e66d:	e8 0e 31 ff ff       	callq  1780 <fclose@plt>
    e672:	48 8b 84 24 18 02 00 	mov    0x218(%rsp),%rax
    e679:	00 
    e67a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    e681:	00 00 
    e683:	0f 85 a2 01 00 00    	jne    e82b <load_seed+0x27b>
    e689:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
    e690:	5d                   	pop    %rbp
    e691:	41 5c                	pop    %r12
    e693:	41 5d                	pop    %r13
    e695:	c3                   	retq   
    e696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e69d:	00 00 00 
    e6a0:	4c 89 e2             	mov    %r12,%rdx
    e6a3:	48 8d 35 5e 8b 00 00 	lea    0x8b5e(%rip),%rsi        # 17208 <__PRETTY_FUNCTION__.6556+0x1448>
    e6aa:	bf 01 00 00 00       	mov    $0x1,%edi
    e6af:	31 c0                	xor    %eax,%eax
    e6b1:	e8 5a 8c ff ff       	callq  7310 <rootsim_error>
    e6b6:	e9 72 ff ff ff       	jmpq   e62d <load_seed+0x7d>
    e6bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e6c0:	4c 89 e2             	mov    %r12,%rdx
    e6c3:	48 8d 35 de 89 00 00 	lea    0x89de(%rip),%rsi        # 170a8 <__PRETTY_FUNCTION__.6556+0x12e8>
    e6ca:	bf 01 00 00 00       	mov    $0x1,%edi
    e6cf:	e8 9c 32 ff ff       	callq  1970 <__printf_chk@plt>
    e6d4:	48 8d 3d d3 a6 00 00 	lea    0xa6d3(%rip),%rdi        # 18dae <__PRETTY_FUNCTION__.6556+0x2fee>
    e6db:	e8 90 2f ff ff       	callq  1670 <getenv@plt>
    e6e0:	48 8d 0d ea a6 00 00 	lea    0xa6ea(%rip),%rcx        # 18dd1 <__PRETTY_FUNCTION__.6556+0x3011>
    e6e7:	ba 00 02 00 00       	mov    $0x200,%edx
    e6ec:	4c 89 e7             	mov    %r12,%rdi
    e6ef:	49 89 c0             	mov    %rax,%r8
    e6f2:	be 01 00 00 00       	mov    $0x1,%esi
    e6f7:	31 c0                	xor    %eax,%eax
    e6f9:	e8 b2 33 ff ff       	callq  1ab0 <__sprintf_chk@plt>
    e6fe:	4c 89 e7             	mov    %r12,%rdi
    e701:	e8 7a 8d ff ff       	callq  7480 <_mkdir>
    e706:	48 8d 3d a1 a6 00 00 	lea    0xa6a1(%rip),%rdi        # 18dae <__PRETTY_FUNCTION__.6556+0x2fee>
    e70d:	e8 5e 2f ff ff       	callq  1670 <getenv@plt>
    e712:	48 8d 0d 9a a6 00 00 	lea    0xa69a(%rip),%rcx        # 18db3 <__PRETTY_FUNCTION__.6556+0x2ff3>
    e719:	ba 00 02 00 00       	mov    $0x200,%edx
    e71e:	4c 89 e7             	mov    %r12,%rdi
    e721:	49 89 c0             	mov    %rax,%r8
    e724:	be 01 00 00 00       	mov    $0x1,%esi
    e729:	31 c0                	xor    %eax,%eax
    e72b:	e8 80 33 ff ff       	callq  1ab0 <__sprintf_chk@plt>
    e730:	48 8d 35 a6 a6 00 00 	lea    0xa6a6(%rip),%rsi        # 18ddd <__PRETTY_FUNCTION__.6556+0x301d>
    e737:	4c 89 e7             	mov    %r12,%rdi
    e73a:	e8 a1 32 ff ff       	callq  19e0 <fopen@plt>
    e73f:	48 89 c5             	mov    %rax,%rbp
    e742:	48 85 c0             	test   %rax,%rax
    e745:	0f 84 c5 00 00 00    	je     e810 <load_seed+0x260>
    e74b:	4c 89 e2             	mov    %r12,%rdx
    e74e:	48 8d 35 8a a6 00 00 	lea    0xa68a(%rip),%rsi        # 18ddf <__PRETTY_FUNCTION__.6556+0x301f>
    e755:	bf 01 00 00 00       	mov    $0x1,%edi
    e75a:	31 c0                	xor    %eax,%eax
    e75c:	e8 0f 32 ff ff       	callq  1970 <__printf_chk@plt>
    e761:	31 f6                	xor    %esi,%esi
    e763:	48 8d 3d 8d a6 00 00 	lea    0xa68d(%rip),%rdi        # 18df7 <__PRETTY_FUNCTION__.6556+0x3037>
    e76a:	31 c0                	xor    %eax,%eax
    e76c:	e8 3f 32 ff ff       	callq  19b0 <open@plt>
    e771:	41 89 c5             	mov    %eax,%r13d
    e774:	83 f8 ff             	cmp    $0xffffffff,%eax
    e777:	74 77                	je     e7f0 <load_seed+0x240>
    e779:	48 8d 3d f0 89 00 00 	lea    0x89f0(%rip),%rdi        # 17170 <__PRETTY_FUNCTION__.6556+0x13b0>
    e780:	e8 bb 2f ff ff       	callq  1740 <puts@plt>
    e785:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    e78a:	ba 08 00 00 00       	mov    $0x8,%edx
    e78f:	44 89 ef             	mov    %r13d,%edi
    e792:	e8 09 31 ff ff       	callq  18a0 <read@plt>
    e797:	48 83 f8 08          	cmp    $0x8,%rax
    e79b:	74 0d                	je     e7aa <load_seed+0x1fa>
    e79d:	48 8d 3d 04 8a 00 00 	lea    0x8a04(%rip),%rdi        # 171a8 <__PRETTY_FUNCTION__.6556+0x13e8>
    e7a4:	e8 97 2f ff ff       	callq  1740 <puts@plt>
    e7a9:	cc                   	int3   
    e7aa:	48 8d 3d 27 8a 00 00 	lea    0x8a27(%rip),%rdi        # 171d8 <__PRETTY_FUNCTION__.6556+0x1418>
    e7b1:	e8 8a 2f ff ff       	callq  1740 <puts@plt>
    e7b6:	44 89 ef             	mov    %r13d,%edi
    e7b9:	e8 d2 30 ff ff       	callq  1890 <close@plt>
    e7be:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e7c3:	48 89 ef             	mov    %rbp,%rdi
    e7c6:	31 c0                	xor    %eax,%eax
    e7c8:	48 8d 15 34 a6 00 00 	lea    0xa634(%rip),%rdx        # 18e03 <__PRETTY_FUNCTION__.6556+0x3043>
    e7cf:	be 01 00 00 00       	mov    $0x1,%esi
    e7d4:	e8 87 32 ff ff       	callq  1a60 <__fprintf_chk@plt>
    e7d9:	48 89 ef             	mov    %rbp,%rdi
    e7dc:	e8 9f 2f ff ff       	callq  1780 <fclose@plt>
    e7e1:	e9 30 fe ff ff       	jmpq   e616 <load_seed+0x66>
    e7e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e7ed:	00 00 00 
    e7f0:	4c 89 e2             	mov    %r12,%rdx
    e7f3:	48 8d 35 26 89 00 00 	lea    0x8926(%rip),%rsi        # 17120 <__PRETTY_FUNCTION__.6556+0x1360>
    e7fa:	bf 01 00 00 00       	mov    $0x1,%edi
    e7ff:	31 c0                	xor    %eax,%eax
    e801:	e8 0a 8b ff ff       	callq  7310 <rootsim_error>
    e806:	e9 6e ff ff ff       	jmpq   e779 <load_seed+0x1c9>
    e80b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e810:	4c 89 e2             	mov    %r12,%rdx
    e813:	48 8d 35 b6 88 00 00 	lea    0x88b6(%rip),%rsi        # 170d0 <__PRETTY_FUNCTION__.6556+0x1310>
    e81a:	bf 01 00 00 00       	mov    $0x1,%edi
    e81f:	31 c0                	xor    %eax,%eax
    e821:	e8 ea 8a ff ff       	callq  7310 <rootsim_error>
    e826:	e9 20 ff ff ff       	jmpq   e74b <load_seed+0x19b>
    e82b:	e8 70 2f ff ff       	callq  17a0 <__stack_chk_fail@plt>

000000000000e830 <Random>:
    e830:	80 3d c9 a9 33 00 00 	cmpb   $0x0,0x33a9c9(%rip)        # 349200 <rootsim_config+0x40>
    e837:	74 57                	je     e890 <Random+0x60>
    e839:	48 8d 35 04 e9 30 00 	lea    0x30e904(%rip),%rsi        # 31d144 <master_seed+0x4>
    e840:	8b 05 fa e8 30 00    	mov    0x30e8fa(%rip),%eax        # 31d140 <master_seed>
    e846:	48 8d 4e fc          	lea    -0x4(%rsi),%rcx
    e84a:	0f b7 d0             	movzwl %ax,%edx
    e84d:	c1 e8 10             	shr    $0x10,%eax
    e850:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e854:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    e85a:	01 d0                	add    %edx,%eax
    e85c:	89 01                	mov    %eax,(%rcx)
    e85e:	8b 06                	mov    (%rsi),%eax
    e860:	0f b7 d0             	movzwl %ax,%edx
    e863:	c1 e8 10             	shr    $0x10,%eax
    e866:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    e86c:	01 d0                	add    %edx,%eax
    e86e:	89 06                	mov    %eax,(%rsi)
    e870:	8b 11                	mov    (%rcx),%edx
    e872:	c1 c2 10             	rol    $0x10,%edx
    e875:	01 d0                	add    %edx,%eax
    e877:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    e87c:	f2 0f 58 05 3c 67 00 	addsd  0x673c(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    e883:	00 
    e884:	f2 0f 59 05 ec a7 00 	mulsd  0xa7ec(%rip),%xmm0        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    e88b:	00 
    e88c:	c3                   	retq   
    e88d:	0f 1f 00             	nopl   (%rax)
    e890:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    e897:	64 8b 10             	mov    %fs:(%rax),%edx
    e89a:	48 8b 05 e7 e7 20 00 	mov    0x20e7e7(%rip),%rax        # 21d088 <LPS>
    e8a1:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    e8a5:	48 8d 48 08          	lea    0x8(%rax),%rcx
    e8a9:	48 8d 70 0c          	lea    0xc(%rax),%rsi
    e8ad:	8b 40 08             	mov    0x8(%rax),%eax
    e8b0:	eb 98                	jmp    e84a <Random+0x1a>
    e8b2:	0f 1f 40 00          	nopl   0x0(%rax)
    e8b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e8bd:	00 00 00 

000000000000e8c0 <RandomRange>:
    e8c0:	80 3d 39 a9 33 00 00 	cmpb   $0x0,0x33a939(%rip)        # 349200 <rootsim_config+0x40>
    e8c7:	0f 84 c3 00 00 00    	je     e990 <RandomRange+0xd0>
    e8cd:	4c 8d 05 70 e8 30 00 	lea    0x30e870(%rip),%r8        # 31d144 <master_seed+0x4>
    e8d4:	8b 15 66 e8 30 00    	mov    0x30e866(%rip),%edx        # 31d140 <master_seed>
    e8da:	49 8d 40 fc          	lea    -0x4(%r8),%rax
    e8de:	0f b7 ca             	movzwl %dx,%ecx
    e8e1:	c1 ea 10             	shr    $0x10,%edx
    e8e4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e8e8:	29 fe                	sub    %edi,%esi
    e8ea:	69 c9 69 90 00 00    	imul   $0x9069,%ecx,%ecx
    e8f0:	f2 0f 10 25 c8 66 00 	movsd  0x66c8(%rip),%xmm4        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    e8f7:	00 
    e8f8:	83 c6 01             	add    $0x1,%esi
    e8fb:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e8ff:	f2 0f 2a ce          	cvtsi2sd %esi,%xmm1
    e903:	f2 0f 10 1d 75 6a 00 	movsd  0x6a75(%rip),%xmm3        # 15380 <__PRETTY_FUNCTION__.6351+0x2f0>
    e90a:	00 
    e90b:	f2 0f 10 2d 8d 6a 00 	movsd  0x6a8d(%rip),%xmm5        # 153a0 <__PRETTY_FUNCTION__.6351+0x310>
    e912:	00 
    e913:	01 ca                	add    %ecx,%edx
    e915:	89 10                	mov    %edx,(%rax)
    e917:	41 8b 10             	mov    (%r8),%edx
    e91a:	0f b7 ca             	movzwl %dx,%ecx
    e91d:	c1 ea 10             	shr    $0x10,%edx
    e920:	69 c9 50 46 00 00    	imul   $0x4650,%ecx,%ecx
    e926:	01 ca                	add    %ecx,%edx
    e928:	41 89 10             	mov    %edx,(%r8)
    e92b:	8b 00                	mov    (%rax),%eax
    e92d:	c1 c0 10             	rol    $0x10,%eax
    e930:	01 c2                	add    %eax,%edx
    e932:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    e937:	f2 0f 58 c4          	addsd  %xmm4,%xmm0
    e93b:	f2 0f 59 05 35 a7 00 	mulsd  0xa735(%rip),%xmm0        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    e942:	00 
    e943:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    e947:	66 0f 28 d0          	movapd %xmm0,%xmm2
    e94b:	66 0f 28 c8          	movapd %xmm0,%xmm1
    e94f:	66 0f 54 d3          	andpd  %xmm3,%xmm2
    e953:	66 0f 2e ea          	ucomisd %xmm2,%xmm5
    e957:	76 2f                	jbe    e988 <RandomRange+0xc8>
    e959:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    e95e:	66 0f ef d2          	pxor   %xmm2,%xmm2
    e962:	66 0f 55 d8          	andnpd %xmm0,%xmm3
    e966:	f2 48 0f 2a d0       	cvtsi2sd %rax,%xmm2
    e96b:	66 0f 28 f2          	movapd %xmm2,%xmm6
    e96f:	f2 0f c2 f0 06       	cmpnlesd %xmm0,%xmm6
    e974:	66 0f 28 ce          	movapd %xmm6,%xmm1
    e978:	66 0f 54 cc          	andpd  %xmm4,%xmm1
    e97c:	f2 0f 5c d1          	subsd  %xmm1,%xmm2
    e980:	66 0f 28 ca          	movapd %xmm2,%xmm1
    e984:	66 0f 56 cb          	orpd   %xmm3,%xmm1
    e988:	f2 0f 2c c1          	cvttsd2si %xmm1,%eax
    e98c:	01 f8                	add    %edi,%eax
    e98e:	c3                   	retq   
    e98f:	90                   	nop
    e990:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    e997:	64 8b 10             	mov    %fs:(%rax),%edx
    e99a:	48 8b 05 e7 e6 20 00 	mov    0x20e6e7(%rip),%rax        # 21d088 <LPS>
    e9a1:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx
    e9a5:	48 8d 42 08          	lea    0x8(%rdx),%rax
    e9a9:	4c 8d 42 0c          	lea    0xc(%rdx),%r8
    e9ad:	8b 52 08             	mov    0x8(%rdx),%edx
    e9b0:	e9 29 ff ff ff       	jmpq   e8de <RandomRange+0x1e>
    e9b5:	90                   	nop
    e9b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e9bd:	00 00 00 

000000000000e9c0 <RandomRangeNonUniform>:
    e9c0:	44 0f b6 0d 38 a8 33 	movzbl 0x33a838(%rip),%r9d        # 349200 <rootsim_config+0x40>
    e9c7:	00 
    e9c8:	41 89 f8             	mov    %edi,%r8d
    e9cb:	89 d7                	mov    %edx,%edi
    e9cd:	45 84 c9             	test   %r9b,%r9b
    e9d0:	0f 84 b2 01 00 00    	je     eb88 <RandomRangeNonUniform+0x1c8>
    e9d6:	4c 8d 15 67 e7 30 00 	lea    0x30e767(%rip),%r10        # 31d144 <master_seed+0x4>
    e9dd:	8b 05 5d e7 30 00    	mov    0x30e75d(%rip),%eax        # 31d140 <master_seed>
    e9e3:	49 8d 4a fc          	lea    -0x4(%r10),%rcx
    e9e7:	0f b7 d0             	movzwl %ax,%edx
    e9ea:	c1 e8 10             	shr    $0x10,%eax
    e9ed:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e9f1:	41 83 c0 01          	add    $0x1,%r8d
    e9f5:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    e9fb:	f2 0f 10 2d bd 65 00 	movsd  0x65bd(%rip),%xmm5        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    ea02:	00 
    ea03:	66 0f ef d2          	pxor   %xmm2,%xmm2
    ea07:	f2 44 0f 10 05 68 a6 	movsd  0xa668(%rip),%xmm8        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    ea0e:	00 00 
    ea10:	f2 41 0f 2a d0       	cvtsi2sd %r8d,%xmm2
    ea15:	f2 0f 10 3d 83 69 00 	movsd  0x6983(%rip),%xmm7        # 153a0 <__PRETTY_FUNCTION__.6351+0x310>
    ea1c:	00 
    ea1d:	01 d0                	add    %edx,%eax
    ea1f:	89 01                	mov    %eax,(%rcx)
    ea21:	41 8b 02             	mov    (%r10),%eax
    ea24:	0f b7 d0             	movzwl %ax,%edx
    ea27:	c1 e8 10             	shr    $0x10,%eax
    ea2a:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    ea30:	01 d0                	add    %edx,%eax
    ea32:	41 89 02             	mov    %eax,(%r10)
    ea35:	8b 11                	mov    (%rcx),%edx
    ea37:	c1 c2 10             	rol    $0x10,%edx
    ea3a:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    ea3d:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
    ea42:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    ea46:	f2 41 0f 59 c8       	mulsd  %xmm8,%xmm1
    ea4b:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    ea4f:	f3 0f 7e 15 29 69 00 	movq   0x6929(%rip),%xmm2        # 15380 <__PRETTY_FUNCTION__.6351+0x2f0>
    ea56:	00 
    ea57:	66 0f 28 f2          	movapd %xmm2,%xmm6
    ea5b:	66 0f 28 e1          	movapd %xmm1,%xmm4
    ea5f:	66 0f 28 d9          	movapd %xmm1,%xmm3
    ea63:	66 0f 54 e2          	andpd  %xmm2,%xmm4
    ea67:	66 0f 2e fc          	ucomisd %xmm4,%xmm7
    ea6b:	76 2b                	jbe    ea98 <RandomRangeNonUniform+0xd8>
    ea6d:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
    ea72:	66 0f ef e4          	pxor   %xmm4,%xmm4
    ea76:	66 0f 55 f1          	andnpd %xmm1,%xmm6
    ea7a:	f2 48 0f 2a e0       	cvtsi2sd %rax,%xmm4
    ea7f:	66 0f 28 c4          	movapd %xmm4,%xmm0
    ea83:	66 0f 28 dc          	movapd %xmm4,%xmm3
    ea87:	f2 0f c2 c1 06       	cmpnlesd %xmm1,%xmm0
    ea8c:	66 0f 54 c5          	andpd  %xmm5,%xmm0
    ea90:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
    ea94:	66 0f 56 de          	orpd   %xmm6,%xmm3
    ea98:	f2 0f 2c d3          	cvttsd2si %xmm3,%edx
    ea9c:	45 84 c9             	test   %r9b,%r9b
    ea9f:	0f 84 bb 00 00 00    	je     eb60 <RandomRangeNonUniform+0x1a0>
    eaa5:	4c 8d 0d 98 e6 30 00 	lea    0x30e698(%rip),%r9        # 31d144 <master_seed+0x4>
    eaac:	8b 0d 8e e6 30 00    	mov    0x30e68e(%rip),%ecx        # 31d140 <master_seed>
    eab2:	49 8d 41 fc          	lea    -0x4(%r9),%rax
    eab6:	44 0f b7 c1          	movzwl %cx,%r8d
    eaba:	c1 e9 10             	shr    $0x10,%ecx
    eabd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eac1:	29 f7                	sub    %esi,%edi
    eac3:	45 69 c0 69 90 00 00 	imul   $0x9069,%r8d,%r8d
    eaca:	83 c7 01             	add    $0x1,%edi
    eacd:	66 0f ef c9          	pxor   %xmm1,%xmm1
    ead1:	f2 0f 2a cf          	cvtsi2sd %edi,%xmm1
    ead5:	44 01 c1             	add    %r8d,%ecx
    ead8:	89 08                	mov    %ecx,(%rax)
    eada:	41 8b 09             	mov    (%r9),%ecx
    eadd:	44 0f b7 c1          	movzwl %cx,%r8d
    eae1:	c1 e9 10             	shr    $0x10,%ecx
    eae4:	45 69 c0 50 46 00 00 	imul   $0x4650,%r8d,%r8d
    eaeb:	44 01 c1             	add    %r8d,%ecx
    eaee:	41 89 09             	mov    %ecx,(%r9)
    eaf1:	8b 00                	mov    (%rax),%eax
    eaf3:	c1 c0 10             	rol    $0x10,%eax
    eaf6:	01 c1                	add    %eax,%ecx
    eaf8:	f2 48 0f 2a c1       	cvtsi2sd %rcx,%xmm0
    eafd:	f2 0f 58 c5          	addsd  %xmm5,%xmm0
    eb01:	f2 41 0f 59 c0       	mulsd  %xmm8,%xmm0
    eb06:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    eb0a:	66 0f 28 c8          	movapd %xmm0,%xmm1
    eb0e:	66 0f 28 d8          	movapd %xmm0,%xmm3
    eb12:	66 0f 54 ca          	andpd  %xmm2,%xmm1
    eb16:	66 0f 2e f9          	ucomisd %xmm1,%xmm7
    eb1a:	76 2f                	jbe    eb4b <RandomRangeNonUniform+0x18b>
    eb1c:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    eb21:	66 0f ef c9          	pxor   %xmm1,%xmm1
    eb25:	66 0f 55 d3          	andnpd %xmm3,%xmm2
    eb29:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    eb2e:	66 0f 28 f9          	movapd %xmm1,%xmm7
    eb32:	f2 0f c2 f8 06       	cmpnlesd %xmm0,%xmm7
    eb37:	66 0f 28 c7          	movapd %xmm7,%xmm0
    eb3b:	66 0f 54 c5          	andpd  %xmm5,%xmm0
    eb3f:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
    eb43:	66 0f 28 c1          	movapd %xmm1,%xmm0
    eb47:	66 0f 56 c2          	orpd   %xmm2,%xmm0
    eb4b:	f2 0f 2c c8          	cvttsd2si %xmm0,%ecx
    eb4f:	8d 04 31             	lea    (%rcx,%rsi,1),%eax
    eb52:	09 d0                	or     %edx,%eax
    eb54:	99                   	cltd   
    eb55:	f7 ff                	idiv   %edi
    eb57:	8d 04 32             	lea    (%rdx,%rsi,1),%eax
    eb5a:	c3                   	retq   
    eb5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eb60:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    eb67:	64 8b 08             	mov    %fs:(%rax),%ecx
    eb6a:	48 8b 05 17 e5 20 00 	mov    0x20e517(%rip),%rax        # 21d088 <LPS>
    eb71:	48 8b 0c c8          	mov    (%rax,%rcx,8),%rcx
    eb75:	48 8d 41 08          	lea    0x8(%rcx),%rax
    eb79:	4c 8d 49 0c          	lea    0xc(%rcx),%r9
    eb7d:	8b 49 08             	mov    0x8(%rcx),%ecx
    eb80:	e9 31 ff ff ff       	jmpq   eab6 <RandomRangeNonUniform+0xf6>
    eb85:	0f 1f 00             	nopl   (%rax)
    eb88:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    eb8f:	64 8b 10             	mov    %fs:(%rax),%edx
    eb92:	48 8b 05 ef e4 20 00 	mov    0x20e4ef(%rip),%rax        # 21d088 <LPS>
    eb99:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    eb9d:	48 8d 48 08          	lea    0x8(%rax),%rcx
    eba1:	4c 8d 50 0c          	lea    0xc(%rax),%r10
    eba5:	8b 40 08             	mov    0x8(%rax),%eax
    eba8:	e9 3a fe ff ff       	jmpq   e9e7 <RandomRangeNonUniform+0x27>
    ebad:	0f 1f 00             	nopl   (%rax)

000000000000ebb0 <Log>:
    ebb0:	80 3d 49 a6 33 00 00 	cmpb   $0x0,0x33a649(%rip)        # 349200 <rootsim_config+0x40>
    ebb7:	0f 84 c3 00 00 00    	je     ec80 <Log+0xd0>
    ebbd:	48 8d 35 80 e5 30 00 	lea    0x30e580(%rip),%rsi        # 31d144 <master_seed+0x4>
    ebc4:	8b 05 76 e5 30 00    	mov    0x30e576(%rip),%eax        # 31d140 <master_seed>
    ebca:	48 8d 4e fc          	lea    -0x4(%rsi),%rcx
    ebce:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ebd2:	66 0f ef e4          	pxor   %xmm4,%xmm4
    ebd6:	66 0f ef db          	pxor   %xmm3,%xmm3
    ebda:	0f b7 d0             	movzwl %ax,%edx
    ebdd:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    ebe3:	c1 e8 10             	shr    $0x10,%eax
    ebe6:	01 d0                	add    %edx,%eax
    ebe8:	89 01                	mov    %eax,(%rcx)
    ebea:	8b 06                	mov    (%rsi),%eax
    ebec:	0f b7 d0             	movzwl %ax,%edx
    ebef:	c1 e8 10             	shr    $0x10,%eax
    ebf2:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    ebf8:	01 d0                	add    %edx,%eax
    ebfa:	89 06                	mov    %eax,(%rsi)
    ebfc:	8b 11                	mov    (%rcx),%edx
    ebfe:	c1 c2 10             	rol    $0x10,%edx
    ec01:	01 d0                	add    %edx,%eax
    ec03:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    ec08:	f2 0f 58 05 b0 63 00 	addsd  0x63b0(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    ec0f:	00 
    ec10:	f2 0f 59 05 60 a4 00 	mulsd  0xa460(%rip),%xmm0        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    ec17:	00 
    ec18:	66 0f 28 c8          	movapd %xmm0,%xmm1
    ec1c:	66 0f 28 d0          	movapd %xmm0,%xmm2
    ec20:	66 0f 57 15 88 a4 00 	xorpd  0xa488(%rip),%xmm2        # 190b0 <__PRETTY_FUNCTION__.6556+0x32f0>
    ec27:	00 
    ec28:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    ec2c:	f2 0f 5c e0          	subsd  %xmm0,%xmm4
    ec30:	66 0f 28 c1          	movapd %xmm1,%xmm0
    ec34:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    ec38:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    ec3c:	f2 0f 5c e0          	subsd  %xmm0,%xmm4
    ec40:	66 0f 28 c1          	movapd %xmm1,%xmm0
    ec44:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    ec48:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    ec4c:	f2 0f 58 c4          	addsd  %xmm4,%xmm0
    ec50:	66 0f 28 e1          	movapd %xmm1,%xmm4
    ec54:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
    ec58:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    ec5c:	f2 0f 5c c4          	subsd  %xmm4,%xmm0
    ec60:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    ec64:	66 0f 28 e0          	movapd %xmm0,%xmm4
    ec68:	66 0f 28 c1          	movapd %xmm1,%xmm0
    ec6c:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    ec70:	f2 0f 59 d3          	mulsd  %xmm3,%xmm2
    ec74:	f2 0f 58 c4          	addsd  %xmm4,%xmm0
    ec78:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    ec7c:	c3                   	retq   
    ec7d:	0f 1f 00             	nopl   (%rax)
    ec80:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    ec87:	64 8b 10             	mov    %fs:(%rax),%edx
    ec8a:	48 8b 05 f7 e3 20 00 	mov    0x20e3f7(%rip),%rax        # 21d088 <LPS>
    ec91:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    ec95:	48 8d 48 08          	lea    0x8(%rax),%rcx
    ec99:	48 8d 70 0c          	lea    0xc(%rax),%rsi
    ec9d:	8b 40 08             	mov    0x8(%rax),%eax
    eca0:	e9 29 ff ff ff       	jmpq   ebce <Log+0x1e>
    eca5:	90                   	nop
    eca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ecad:	00 00 00 

000000000000ecb0 <Expent>:
    ecb0:	66 0f ef c9          	pxor   %xmm1,%xmm1
    ecb4:	48 83 ec 18          	sub    $0x18,%rsp
    ecb8:	66 0f 2f c8          	comisd %xmm0,%xmm1
    ecbc:	0f 87 a9 00 00 00    	ja     ed6b <Expent+0xbb>
    ecc2:	66 0f 57 05 e6 a3 00 	xorpd  0xa3e6(%rip),%xmm0        # 190b0 <__PRETTY_FUNCTION__.6556+0x32f0>
    ecc9:	00 
    ecca:	80 3d 2f a5 33 00 00 	cmpb   $0x0,0x33a52f(%rip)        # 349200 <rootsim_config+0x40>
    ecd1:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    ecd7:	75 7f                	jne    ed58 <Expent+0xa8>
    ecd9:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    ece0:	64 8b 10             	mov    %fs:(%rax),%edx
    ece3:	48 8b 05 9e e3 20 00 	mov    0x20e39e(%rip),%rax        # 21d088 <LPS>
    ecea:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    ecee:	48 8d 48 08          	lea    0x8(%rax),%rcx
    ecf2:	48 8d 70 0c          	lea    0xc(%rax),%rsi
    ecf6:	8b 40 08             	mov    0x8(%rax),%eax
    ecf9:	0f b7 d0             	movzwl %ax,%edx
    ecfc:	c1 e8 10             	shr    $0x10,%eax
    ecff:	66 0f ef c9          	pxor   %xmm1,%xmm1
    ed03:	f2 0f 10 05 b5 62 00 	movsd  0x62b5(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    ed0a:	00 
    ed0b:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    ed11:	01 d0                	add    %edx,%eax
    ed13:	89 01                	mov    %eax,(%rcx)
    ed15:	8b 06                	mov    (%rsi),%eax
    ed17:	0f b7 d0             	movzwl %ax,%edx
    ed1a:	c1 e8 10             	shr    $0x10,%eax
    ed1d:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    ed23:	01 d0                	add    %edx,%eax
    ed25:	89 06                	mov    %eax,(%rsi)
    ed27:	8b 11                	mov    (%rcx),%edx
    ed29:	c1 c2 10             	rol    $0x10,%edx
    ed2c:	01 d0                	add    %edx,%eax
    ed2e:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    ed33:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    ed37:	f2 0f 59 0d 39 a3 00 	mulsd  0xa339(%rip),%xmm1        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    ed3e:	00 
    ed3f:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    ed43:	e8 38 2b ff ff       	callq  1880 <log@plt>
    ed48:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
    ed4e:	48 83 c4 18          	add    $0x18,%rsp
    ed52:	c3                   	retq   
    ed53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ed58:	48 8d 35 e5 e3 30 00 	lea    0x30e3e5(%rip),%rsi        # 31d144 <master_seed+0x4>
    ed5f:	8b 05 db e3 30 00    	mov    0x30e3db(%rip),%eax        # 31d140 <master_seed>
    ed65:	48 8d 4e fc          	lea    -0x4(%rsi),%rcx
    ed69:	eb 8e                	jmp    ecf9 <Expent+0x49>
    ed6b:	48 8b 0d ee e2 20 00 	mov    0x20e2ee(%rip),%rcx        # 21d060 <stderr@@GLIBC_2.2.5>
    ed72:	ba 38 00 00 00       	mov    $0x38,%edx
    ed77:	be 01 00 00 00       	mov    $0x1,%esi
    ed7c:	48 8d 3d cd 84 00 00 	lea    0x84cd(%rip),%rdi        # 17250 <__PRETTY_FUNCTION__.6556+0x1490>
    ed83:	e8 c8 2c ff ff       	callq  1a50 <fwrite@plt>
    ed88:	e8 23 29 ff ff       	callq  16b0 <abort@plt>
    ed8d:	0f 1f 00             	nopl   (%rax)

000000000000ed90 <Normal>:
    ed90:	80 3d a1 e3 30 00 00 	cmpb   $0x0,0x30e3a1(%rip)        # 31d138 <iset.6847>
    ed97:	0f 85 c3 01 00 00    	jne    ef60 <Normal+0x1d0>
    ed9d:	48 83 ec 28          	sub    $0x28,%rsp
    eda1:	48 8d 0d 98 e3 30 00 	lea    0x30e398(%rip),%rcx        # 31d140 <master_seed>
    eda8:	0f b6 35 51 a4 33 00 	movzbl 0x33a451(%rip),%esi        # 349200 <rootsim_config+0x40>
    edaf:	4c 8b 05 d2 e2 20 00 	mov    0x20e2d2(%rip),%r8        # 21d088 <LPS>
    edb6:	f2 0f 10 05 02 62 00 	movsd  0x6202(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    edbd:	00 
    edbe:	f2 0f 10 25 b2 a2 00 	movsd  0xa2b2(%rip),%xmm4        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    edc5:	00 
    edc6:	48 8d 79 04          	lea    0x4(%rcx),%rdi
    edca:	f2 0f 10 35 ae a2 00 	movsd  0xa2ae(%rip),%xmm6        # 19080 <__PRETTY_FUNCTION__.6556+0x32c0>
    edd1:	00 
    edd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    edd8:	40 84 f6             	test   %sil,%sil
    eddb:	0f 84 5f 01 00 00    	je     ef40 <Normal+0x1b0>
    ede1:	8b 01                	mov    (%rcx),%eax
    ede3:	49 89 fa             	mov    %rdi,%r10
    ede6:	49 89 c9             	mov    %rcx,%r9
    ede9:	0f b7 d0             	movzwl %ax,%edx
    edec:	c1 e8 10             	shr    $0x10,%eax
    edef:	66 0f ef d2          	pxor   %xmm2,%xmm2
    edf3:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    edf9:	01 d0                	add    %edx,%eax
    edfb:	41 89 01             	mov    %eax,(%r9)
    edfe:	41 8b 02             	mov    (%r10),%eax
    ee01:	0f b7 d0             	movzwl %ax,%edx
    ee04:	c1 e8 10             	shr    $0x10,%eax
    ee07:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    ee0d:	01 d0                	add    %edx,%eax
    ee0f:	41 89 02             	mov    %eax,(%r10)
    ee12:	41 8b 11             	mov    (%r9),%edx
    ee15:	c1 c2 10             	rol    $0x10,%edx
    ee18:	01 d0                	add    %edx,%eax
    ee1a:	f2 48 0f 2a d0       	cvtsi2sd %rax,%xmm2
    ee1f:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
    ee23:	f2 0f 59 d4          	mulsd  %xmm4,%xmm2
    ee27:	f2 0f 58 d2          	addsd  %xmm2,%xmm2
    ee2b:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
    ee2f:	40 84 f6             	test   %sil,%sil
    ee32:	0f 84 e8 00 00 00    	je     ef20 <Normal+0x190>
    ee38:	8b 01                	mov    (%rcx),%eax
    ee3a:	49 89 fa             	mov    %rdi,%r10
    ee3d:	49 89 c9             	mov    %rcx,%r9
    ee40:	0f b7 d0             	movzwl %ax,%edx
    ee43:	c1 e8 10             	shr    $0x10,%eax
    ee46:	66 0f ef c9          	pxor   %xmm1,%xmm1
    ee4a:	66 0f 28 da          	movapd %xmm2,%xmm3
    ee4e:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    ee54:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    ee58:	01 d0                	add    %edx,%eax
    ee5a:	41 89 01             	mov    %eax,(%r9)
    ee5d:	41 8b 02             	mov    (%r10),%eax
    ee60:	0f b7 d0             	movzwl %ax,%edx
    ee63:	c1 e8 10             	shr    $0x10,%eax
    ee66:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    ee6c:	01 d0                	add    %edx,%eax
    ee6e:	41 89 02             	mov    %eax,(%r10)
    ee71:	41 8b 11             	mov    (%r9),%edx
    ee74:	c1 c2 10             	rol    $0x10,%edx
    ee77:	01 d0                	add    %edx,%eax
    ee79:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    ee7e:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    ee82:	f2 0f 59 cc          	mulsd  %xmm4,%xmm1
    ee86:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
    ee8a:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
    ee8e:	66 0f 28 e9          	movapd %xmm1,%xmm5
    ee92:	f2 0f 59 e9          	mulsd  %xmm1,%xmm5
    ee96:	f2 0f 58 dd          	addsd  %xmm5,%xmm3
    ee9a:	66 0f 2f d8          	comisd %xmm0,%xmm3
    ee9e:	0f 83 34 ff ff ff    	jae    edd8 <Normal+0x48>
    eea4:	66 0f 2f de          	comisd %xmm6,%xmm3
    eea8:	0f 83 2a ff ff ff    	jae    edd8 <Normal+0x48>
    eeae:	66 0f 28 c3          	movapd %xmm3,%xmm0
    eeb2:	f2 0f 11 4c 24 18    	movsd  %xmm1,0x18(%rsp)
    eeb8:	f2 0f 11 54 24 10    	movsd  %xmm2,0x10(%rsp)
    eebe:	f2 0f 11 5c 24 08    	movsd  %xmm3,0x8(%rsp)
    eec4:	e8 b7 29 ff ff       	callq  1880 <log@plt>
    eec9:	f2 0f 10 5c 24 08    	movsd  0x8(%rsp),%xmm3
    eecf:	66 0f ef e4          	pxor   %xmm4,%xmm4
    eed3:	f2 0f 10 54 24 10    	movsd  0x10(%rsp),%xmm2
    eed9:	f2 0f 59 05 a7 a1 00 	mulsd  0xa1a7(%rip),%xmm0        # 19088 <__PRETTY_FUNCTION__.6556+0x32c8>
    eee0:	00 
    eee1:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
    eee7:	f2 0f 5e c3          	divsd  %xmm3,%xmm0
    eeeb:	66 0f 2e e0          	ucomisd %xmm0,%xmm4
    eeef:	66 0f 28 d8          	movapd %xmm0,%xmm3
    eef3:	f2 0f 51 db          	sqrtsd %xmm3,%xmm3
    eef7:	77 77                	ja     ef70 <Normal+0x1e0>
    eef9:	f2 0f 59 d3          	mulsd  %xmm3,%xmm2
    eefd:	66 0f 28 c1          	movapd %xmm1,%xmm0
    ef01:	c6 05 30 e2 30 00 01 	movb   $0x1,0x30e230(%rip)        # 31d138 <iset.6847>
    ef08:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    ef0c:	f2 0f 11 15 1c e2 30 	movsd  %xmm2,0x30e21c(%rip)        # 31d130 <gset.6848>
    ef13:	00 
    ef14:	48 83 c4 28          	add    $0x28,%rsp
    ef18:	c3                   	retq   
    ef19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ef20:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    ef27:	64 8b 00             	mov    %fs:(%rax),%eax
    ef2a:	49 8b 04 c0          	mov    (%r8,%rax,8),%rax
    ef2e:	4c 8d 48 08          	lea    0x8(%rax),%r9
    ef32:	4c 8d 50 0c          	lea    0xc(%rax),%r10
    ef36:	8b 40 08             	mov    0x8(%rax),%eax
    ef39:	e9 02 ff ff ff       	jmpq   ee40 <Normal+0xb0>
    ef3e:	66 90                	xchg   %ax,%ax
    ef40:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    ef47:	64 8b 00             	mov    %fs:(%rax),%eax
    ef4a:	49 8b 04 c0          	mov    (%r8,%rax,8),%rax
    ef4e:	4c 8d 48 08          	lea    0x8(%rax),%r9
    ef52:	4c 8d 50 0c          	lea    0xc(%rax),%r10
    ef56:	8b 40 08             	mov    0x8(%rax),%eax
    ef59:	e9 8b fe ff ff       	jmpq   ede9 <Normal+0x59>
    ef5e:	66 90                	xchg   %ax,%ax
    ef60:	c6 05 d1 e1 30 00 00 	movb   $0x0,0x30e1d1(%rip)        # 31d138 <iset.6847>
    ef67:	f2 0f 10 05 c1 e1 30 	movsd  0x30e1c1(%rip),%xmm0        # 31d130 <gset.6848>
    ef6e:	00 
    ef6f:	c3                   	retq   
    ef70:	f2 0f 11 5c 24 18    	movsd  %xmm3,0x18(%rsp)
    ef76:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
    ef7c:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
    ef82:	e8 f9 2a ff ff       	callq  1a80 <sqrt@plt>
    ef87:	f2 0f 10 5c 24 18    	movsd  0x18(%rsp),%xmm3
    ef8d:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
    ef93:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
    ef99:	e9 5b ff ff ff       	jmpq   eef9 <Normal+0x169>
    ef9e:	66 90                	xchg   %ax,%ax

000000000000efa0 <Gamma>:
    efa0:	55                   	push   %rbp
    efa1:	53                   	push   %rbx
    efa2:	48 83 ec 48          	sub    $0x48,%rsp
    efa6:	85 ff                	test   %edi,%edi
    efa8:	0f 8e 54 01 00 00    	jle    f102 <Gamma+0x162>
    efae:	0f b6 0d 4b a2 33 00 	movzbl 0x33a24b(%rip),%ecx        # 349200 <rootsim_config+0x40>
    efb5:	83 ff 05             	cmp    $0x5,%edi
    efb8:	0f 8e 60 01 00 00    	jle    f11e <Gamma+0x17e>
    efbe:	83 ef 01             	sub    $0x1,%edi
    efc1:	66 0f ef ed          	pxor   %xmm5,%xmm5
    efc5:	66 0f ef e4          	pxor   %xmm4,%xmm4
    efc9:	f2 0f 10 15 ef 5f 00 	movsd  0x5fef(%rip),%xmm2        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    efd0:	00 
    efd1:	f2 0f 2a ef          	cvtsi2sd %edi,%xmm5
    efd5:	f2 0f 10 1d 9b a0 00 	movsd  0xa09b(%rip),%xmm3        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    efdc:	00 
    efdd:	48 8d 1d 5c e1 30 00 	lea    0x30e15c(%rip),%rbx        # 31d140 <master_seed>
    efe4:	66 0f 28 f5          	movapd %xmm5,%xmm6
    efe8:	f2 0f 58 f5          	addsd  %xmm5,%xmm6
    efec:	f2 0f 58 f2          	addsd  %xmm2,%xmm6
    eff0:	66 0f 28 fe          	movapd %xmm6,%xmm7
    eff4:	f2 0f 51 ff          	sqrtsd %xmm7,%xmm7
    eff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    efff:	00 
    f000:	48 8d 2d 3d e1 30 00 	lea    0x30e13d(%rip),%rbp        # 31d144 <master_seed+0x4>
    f007:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f00e:	00 00 
    f010:	48 8b 35 71 e0 20 00 	mov    0x20e071(%rip),%rsi        # 21d088 <LPS>
    f017:	e9 c0 00 00 00       	jmpq   f0dc <Gamma+0x13c>
    f01c:	0f 1f 40 00          	nopl   0x0(%rax)
    f020:	8b 03                	mov    (%rbx),%eax
    f022:	49 89 e8             	mov    %rbp,%r8
    f025:	48 89 df             	mov    %rbx,%rdi
    f028:	0f b7 d0             	movzwl %ax,%edx
    f02b:	c1 e8 10             	shr    $0x10,%eax
    f02e:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f032:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    f038:	01 d0                	add    %edx,%eax
    f03a:	89 07                	mov    %eax,(%rdi)
    f03c:	41 8b 00             	mov    (%r8),%eax
    f03f:	0f b7 d0             	movzwl %ax,%edx
    f042:	c1 e8 10             	shr    $0x10,%eax
    f045:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    f04b:	01 d0                	add    %edx,%eax
    f04d:	41 89 00             	mov    %eax,(%r8)
    f050:	8b 17                	mov    (%rdi),%edx
    f052:	c1 c2 10             	rol    $0x10,%edx
    f055:	01 d0                	add    %edx,%eax
    f057:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f05c:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    f060:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    f064:	84 c9                	test   %cl,%cl
    f066:	0f 84 0c 04 00 00    	je     f478 <Gamma+0x4d8>
    f06c:	8b 03                	mov    (%rbx),%eax
    f06e:	49 89 e8             	mov    %rbp,%r8
    f071:	48 89 df             	mov    %rbx,%rdi
    f074:	0f b7 d0             	movzwl %ax,%edx
    f077:	c1 e8 10             	shr    $0x10,%eax
    f07a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f07e:	66 44 0f 28 c1       	movapd %xmm1,%xmm8
    f083:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    f089:	f2 44 0f 59 c1       	mulsd  %xmm1,%xmm8
    f08e:	01 d0                	add    %edx,%eax
    f090:	89 07                	mov    %eax,(%rdi)
    f092:	41 8b 00             	mov    (%r8),%eax
    f095:	0f b7 d0             	movzwl %ax,%edx
    f098:	c1 e8 10             	shr    $0x10,%eax
    f09b:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    f0a1:	01 d0                	add    %edx,%eax
    f0a3:	41 89 00             	mov    %eax,(%r8)
    f0a6:	8b 17                	mov    (%rdi),%edx
    f0a8:	c1 c2 10             	rol    $0x10,%edx
    f0ab:	01 d0                	add    %edx,%eax
    f0ad:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    f0b2:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    f0b6:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    f0ba:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    f0be:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    f0c2:	66 44 0f 28 c8       	movapd %xmm0,%xmm9
    f0c7:	f2 44 0f 59 c8       	mulsd  %xmm0,%xmm9
    f0cc:	f2 45 0f 58 c1       	addsd  %xmm9,%xmm8
    f0d1:	66 44 0f 2f c2       	comisd %xmm2,%xmm8
    f0d6:	0f 86 c4 03 00 00    	jbe    f4a0 <Gamma+0x500>
    f0dc:	84 c9                	test   %cl,%cl
    f0de:	0f 85 3c ff ff ff    	jne    f020 <Gamma+0x80>
    f0e4:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    f0eb:	64 8b 00             	mov    %fs:(%rax),%eax
    f0ee:	48 8b 04 c6          	mov    (%rsi,%rax,8),%rax
    f0f2:	48 8d 78 08          	lea    0x8(%rax),%rdi
    f0f6:	4c 8d 40 0c          	lea    0xc(%rax),%r8
    f0fa:	8b 40 08             	mov    0x8(%rax),%eax
    f0fd:	e9 26 ff ff ff       	jmpq   f028 <Gamma+0x88>
    f102:	31 ff                	xor    %edi,%edi
    f104:	48 8d 35 85 81 00 00 	lea    0x8185(%rip),%rsi        # 17290 <__PRETTY_FUNCTION__.6556+0x14d0>
    f10b:	31 c0                	xor    %eax,%eax
    f10d:	e8 fe 81 ff ff       	callq  7310 <rootsim_error>
    f112:	0f b6 0d e7 a0 33 00 	movzbl 0x33a0e7(%rip),%ecx        # 349200 <rootsim_config+0x40>
    f119:	bf 01 00 00 00       	mov    $0x1,%edi
    f11e:	48 8b 15 63 df 20 00 	mov    0x20df63(%rip),%rdx        # 21d088 <LPS>
    f125:	84 c9                	test   %cl,%cl
    f127:	0f 85 ce 01 00 00    	jne    f2fb <Gamma+0x35b>
    f12d:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    f134:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f138:	f2 0f 10 15 80 5e 00 	movsd  0x5e80(%rip),%xmm2        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    f13f:	00 
    f140:	f2 0f 10 1d 30 9f 00 	movsd  0x9f30(%rip),%xmm3        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    f147:	00 
    f148:	64 8b 08             	mov    %fs:(%rax),%ecx
    f14b:	4c 8b 04 ca          	mov    (%rdx,%rcx,8),%r8
    f14f:	41 8b 70 08          	mov    0x8(%r8),%esi
    f153:	45 8b 48 0c          	mov    0xc(%r8),%r9d
    f157:	0f b7 c6             	movzwl %si,%eax
    f15a:	c1 ee 10             	shr    $0x10,%esi
    f15d:	69 c0 69 90 00 00    	imul   $0x9069,%eax,%eax
    f163:	01 f0                	add    %esi,%eax
    f165:	41 0f b7 f1          	movzwl %r9w,%esi
    f169:	41 c1 e9 10          	shr    $0x10,%r9d
    f16d:	69 f6 50 46 00 00    	imul   $0x4650,%esi,%esi
    f173:	41 89 40 08          	mov    %eax,0x8(%r8)
    f177:	c1 c0 10             	rol    $0x10,%eax
    f17a:	44 01 ce             	add    %r9d,%esi
    f17d:	01 f0                	add    %esi,%eax
    f17f:	41 89 70 0c          	mov    %esi,0xc(%r8)
    f183:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    f188:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    f18c:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    f190:	83 ff 01             	cmp    $0x1,%edi
    f193:	0f 84 44 01 00 00    	je     f2dd <Gamma+0x33d>
    f199:	4c 8b 04 ca          	mov    (%rdx,%rcx,8),%r8
    f19d:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f1a1:	41 8b 70 08          	mov    0x8(%r8),%esi
    f1a5:	45 8b 48 0c          	mov    0xc(%r8),%r9d
    f1a9:	0f b7 c6             	movzwl %si,%eax
    f1ac:	c1 ee 10             	shr    $0x10,%esi
    f1af:	69 c0 69 90 00 00    	imul   $0x9069,%eax,%eax
    f1b5:	01 f0                	add    %esi,%eax
    f1b7:	41 0f b7 f1          	movzwl %r9w,%esi
    f1bb:	41 c1 e9 10          	shr    $0x10,%r9d
    f1bf:	69 f6 50 46 00 00    	imul   $0x4650,%esi,%esi
    f1c5:	41 89 40 08          	mov    %eax,0x8(%r8)
    f1c9:	c1 c0 10             	rol    $0x10,%eax
    f1cc:	44 01 ce             	add    %r9d,%esi
    f1cf:	01 f0                	add    %esi,%eax
    f1d1:	41 89 70 0c          	mov    %esi,0xc(%r8)
    f1d5:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f1da:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    f1de:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    f1e2:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    f1e6:	83 ff 02             	cmp    $0x2,%edi
    f1e9:	0f 84 ee 00 00 00    	je     f2dd <Gamma+0x33d>
    f1ef:	4c 8b 04 ca          	mov    (%rdx,%rcx,8),%r8
    f1f3:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f1f7:	41 8b 70 08          	mov    0x8(%r8),%esi
    f1fb:	45 8b 48 0c          	mov    0xc(%r8),%r9d
    f1ff:	0f b7 c6             	movzwl %si,%eax
    f202:	c1 ee 10             	shr    $0x10,%esi
    f205:	69 c0 69 90 00 00    	imul   $0x9069,%eax,%eax
    f20b:	01 f0                	add    %esi,%eax
    f20d:	41 0f b7 f1          	movzwl %r9w,%esi
    f211:	41 c1 e9 10          	shr    $0x10,%r9d
    f215:	69 f6 50 46 00 00    	imul   $0x4650,%esi,%esi
    f21b:	41 89 40 08          	mov    %eax,0x8(%r8)
    f21f:	c1 c0 10             	rol    $0x10,%eax
    f222:	44 01 ce             	add    %r9d,%esi
    f225:	01 f0                	add    %esi,%eax
    f227:	41 89 70 0c          	mov    %esi,0xc(%r8)
    f22b:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f230:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    f234:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    f238:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    f23c:	83 ff 03             	cmp    $0x3,%edi
    f23f:	0f 84 98 00 00 00    	je     f2dd <Gamma+0x33d>
    f245:	4c 8b 04 ca          	mov    (%rdx,%rcx,8),%r8
    f249:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f24d:	41 8b 70 08          	mov    0x8(%r8),%esi
    f251:	45 8b 48 0c          	mov    0xc(%r8),%r9d
    f255:	0f b7 c6             	movzwl %si,%eax
    f258:	c1 ee 10             	shr    $0x10,%esi
    f25b:	69 c0 69 90 00 00    	imul   $0x9069,%eax,%eax
    f261:	01 f0                	add    %esi,%eax
    f263:	41 0f b7 f1          	movzwl %r9w,%esi
    f267:	41 c1 e9 10          	shr    $0x10,%r9d
    f26b:	69 f6 50 46 00 00    	imul   $0x4650,%esi,%esi
    f271:	41 89 40 08          	mov    %eax,0x8(%r8)
    f275:	c1 c0 10             	rol    $0x10,%eax
    f278:	44 01 ce             	add    %r9d,%esi
    f27b:	01 f0                	add    %esi,%eax
    f27d:	41 89 70 0c          	mov    %esi,0xc(%r8)
    f281:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f286:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    f28a:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    f28e:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    f292:	83 ff 05             	cmp    $0x5,%edi
    f295:	75 46                	jne    f2dd <Gamma+0x33d>
    f297:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
    f29b:	8b 51 08             	mov    0x8(%rcx),%edx
    f29e:	8b 71 0c             	mov    0xc(%rcx),%esi
    f2a1:	0f b7 c2             	movzwl %dx,%eax
    f2a4:	c1 ea 10             	shr    $0x10,%edx
    f2a7:	69 c0 69 90 00 00    	imul   $0x9069,%eax,%eax
    f2ad:	01 d0                	add    %edx,%eax
    f2af:	0f b7 d6             	movzwl %si,%edx
    f2b2:	c1 ee 10             	shr    $0x10,%esi
    f2b5:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    f2bb:	89 41 08             	mov    %eax,0x8(%rcx)
    f2be:	c1 c0 10             	rol    $0x10,%eax
    f2c1:	01 f2                	add    %esi,%edx
    f2c3:	89 51 0c             	mov    %edx,0xc(%rcx)
    f2c6:	01 d0                	add    %edx,%eax
    f2c8:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f2cc:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f2d1:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    f2d5:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    f2d9:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    f2dd:	e8 9e 25 ff ff       	callq  1880 <log@plt>
    f2e2:	66 0f 57 05 c6 9d 00 	xorpd  0x9dc6(%rip),%xmm0        # 190b0 <__PRETTY_FUNCTION__.6556+0x32f0>
    f2e9:	00 
    f2ea:	48 83 c4 48          	add    $0x48,%rsp
    f2ee:	5b                   	pop    %rbx
    f2ef:	5d                   	pop    %rbp
    f2f0:	66 44 0f 28 c0       	movapd %xmm0,%xmm8
    f2f5:	66 41 0f 28 c0       	movapd %xmm8,%xmm0
    f2fa:	c3                   	retq   
    f2fb:	8b 05 3f de 30 00    	mov    0x30de3f(%rip),%eax        # 31d140 <master_seed>
    f301:	8b 0d 3d de 30 00    	mov    0x30de3d(%rip),%ecx        # 31d144 <master_seed+0x4>
    f307:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f30b:	f2 0f 10 15 ad 5c 00 	movsd  0x5cad(%rip),%xmm2        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    f312:	00 
    f313:	f2 0f 10 1d 5d 9d 00 	movsd  0x9d5d(%rip),%xmm3        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    f31a:	00 
    f31b:	0f b7 d0             	movzwl %ax,%edx
    f31e:	c1 e8 10             	shr    $0x10,%eax
    f321:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    f327:	01 c2                	add    %eax,%edx
    f329:	0f b7 c1             	movzwl %cx,%eax
    f32c:	c1 e9 10             	shr    $0x10,%ecx
    f32f:	69 c0 50 46 00 00    	imul   $0x4650,%eax,%eax
    f335:	89 15 05 de 30 00    	mov    %edx,0x30de05(%rip)        # 31d140 <master_seed>
    f33b:	01 c8                	add    %ecx,%eax
    f33d:	89 d1                	mov    %edx,%ecx
    f33f:	c1 c1 10             	rol    $0x10,%ecx
    f342:	89 05 fc dd 30 00    	mov    %eax,0x30ddfc(%rip)        # 31d144 <master_seed+0x4>
    f348:	01 c1                	add    %eax,%ecx
    f34a:	f2 48 0f 2a c1       	cvtsi2sd %rcx,%xmm0
    f34f:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    f353:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    f357:	83 ff 01             	cmp    $0x1,%edi
    f35a:	74 81                	je     f2dd <Gamma+0x33d>
    f35c:	0f b7 ca             	movzwl %dx,%ecx
    f35f:	c1 ea 10             	shr    $0x10,%edx
    f362:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f366:	69 c9 69 90 00 00    	imul   $0x9069,%ecx,%ecx
    f36c:	01 d1                	add    %edx,%ecx
    f36e:	0f b7 d0             	movzwl %ax,%edx
    f371:	c1 e8 10             	shr    $0x10,%eax
    f374:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    f37a:	89 0d c0 dd 30 00    	mov    %ecx,0x30ddc0(%rip)        # 31d140 <master_seed>
    f380:	01 c2                	add    %eax,%edx
    f382:	89 c8                	mov    %ecx,%eax
    f384:	c1 c0 10             	rol    $0x10,%eax
    f387:	89 15 b7 dd 30 00    	mov    %edx,0x30ddb7(%rip)        # 31d144 <master_seed+0x4>
    f38d:	01 d0                	add    %edx,%eax
    f38f:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f394:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    f398:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    f39c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    f3a0:	83 ff 02             	cmp    $0x2,%edi
    f3a3:	0f 84 34 ff ff ff    	je     f2dd <Gamma+0x33d>
    f3a9:	0f b7 c1             	movzwl %cx,%eax
    f3ac:	c1 e9 10             	shr    $0x10,%ecx
    f3af:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f3b3:	69 c0 69 90 00 00    	imul   $0x9069,%eax,%eax
    f3b9:	01 c8                	add    %ecx,%eax
    f3bb:	0f b7 ca             	movzwl %dx,%ecx
    f3be:	c1 ea 10             	shr    $0x10,%edx
    f3c1:	69 c9 50 46 00 00    	imul   $0x4650,%ecx,%ecx
    f3c7:	89 05 73 dd 30 00    	mov    %eax,0x30dd73(%rip)        # 31d140 <master_seed>
    f3cd:	01 d1                	add    %edx,%ecx
    f3cf:	89 c2                	mov    %eax,%edx
    f3d1:	c1 c2 10             	rol    $0x10,%edx
    f3d4:	89 0d 6a dd 30 00    	mov    %ecx,0x30dd6a(%rip)        # 31d144 <master_seed+0x4>
    f3da:	01 ca                	add    %ecx,%edx
    f3dc:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    f3e1:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    f3e5:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    f3e9:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    f3ed:	83 ff 03             	cmp    $0x3,%edi
    f3f0:	0f 84 e7 fe ff ff    	je     f2dd <Gamma+0x33d>
    f3f6:	0f b7 d0             	movzwl %ax,%edx
    f3f9:	c1 e8 10             	shr    $0x10,%eax
    f3fc:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f400:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    f406:	01 c2                	add    %eax,%edx
    f408:	0f b7 c1             	movzwl %cx,%eax
    f40b:	c1 e9 10             	shr    $0x10,%ecx
    f40e:	69 c0 50 46 00 00    	imul   $0x4650,%eax,%eax
    f414:	89 15 26 dd 30 00    	mov    %edx,0x30dd26(%rip)        # 31d140 <master_seed>
    f41a:	01 c8                	add    %ecx,%eax
    f41c:	89 d1                	mov    %edx,%ecx
    f41e:	c1 c1 10             	rol    $0x10,%ecx
    f421:	89 05 1d dd 30 00    	mov    %eax,0x30dd1d(%rip)        # 31d144 <master_seed+0x4>
    f427:	01 c1                	add    %eax,%ecx
    f429:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
    f42e:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    f432:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    f436:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    f43a:	83 ff 05             	cmp    $0x5,%edi
    f43d:	0f 85 9a fe ff ff    	jne    f2dd <Gamma+0x33d>
    f443:	0f b7 ca             	movzwl %dx,%ecx
    f446:	c1 ea 10             	shr    $0x10,%edx
    f449:	69 c9 69 90 00 00    	imul   $0x9069,%ecx,%ecx
    f44f:	01 ca                	add    %ecx,%edx
    f451:	0f b7 c8             	movzwl %ax,%ecx
    f454:	c1 e8 10             	shr    $0x10,%eax
    f457:	69 c9 50 46 00 00    	imul   $0x4650,%ecx,%ecx
    f45d:	89 15 dd dc 30 00    	mov    %edx,0x30dcdd(%rip)        # 31d140 <master_seed>
    f463:	c1 c2 10             	rol    $0x10,%edx
    f466:	01 c8                	add    %ecx,%eax
    f468:	89 05 d6 dc 30 00    	mov    %eax,0x30dcd6(%rip)        # 31d144 <master_seed+0x4>
    f46e:	e9 53 fe ff ff       	jmpq   f2c6 <Gamma+0x326>
    f473:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f478:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    f47f:	64 8b 00             	mov    %fs:(%rax),%eax
    f482:	48 8b 04 c6          	mov    (%rsi,%rax,8),%rax
    f486:	48 8d 78 08          	lea    0x8(%rax),%rdi
    f48a:	4c 8d 40 0c          	lea    0xc(%rax),%r8
    f48e:	8b 40 08             	mov    0x8(%rax),%eax
    f491:	e9 de fb ff ff       	jmpq   f074 <Gamma+0xd4>
    f496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f49d:	00 00 00 
    f4a0:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    f4a4:	66 0f 2e e6          	ucomisd %xmm6,%xmm4
    f4a8:	66 0f 28 c8          	movapd %xmm0,%xmm1
    f4ac:	0f 87 54 01 00 00    	ja     f606 <Gamma+0x666>
    f4b2:	66 44 0f 28 c9       	movapd %xmm1,%xmm9
    f4b7:	f2 44 0f 59 cf       	mulsd  %xmm7,%xmm9
    f4bc:	66 45 0f 28 c1       	movapd %xmm9,%xmm8
    f4c1:	f2 44 0f 58 c5       	addsd  %xmm5,%xmm8
    f4c6:	66 41 0f 2f e0       	comisd %xmm8,%xmm4
    f4cb:	76 13                	jbe    f4e0 <Gamma+0x540>
    f4cd:	0f b6 0d 2c 9d 33 00 	movzbl 0x339d2c(%rip),%ecx        # 349200 <rootsim_config+0x40>
    f4d4:	e9 37 fb ff ff       	jmpq   f010 <Gamma+0x70>
    f4d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f4e0:	66 41 0f 28 c0       	movapd %xmm8,%xmm0
    f4e5:	f2 0f 11 7c 24 38    	movsd  %xmm7,0x38(%rsp)
    f4eb:	f2 0f 5e c5          	divsd  %xmm5,%xmm0
    f4ef:	f2 0f 11 5c 24 30    	movsd  %xmm3,0x30(%rsp)
    f4f5:	f2 0f 11 54 24 28    	movsd  %xmm2,0x28(%rsp)
    f4fb:	f2 0f 11 74 24 20    	movsd  %xmm6,0x20(%rsp)
    f501:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
    f507:	f2 44 0f 11 44 24 08 	movsd  %xmm8,0x8(%rsp)
    f50e:	f2 44 0f 11 4c 24 18 	movsd  %xmm9,0x18(%rsp)
    f515:	f2 0f 11 2c 24       	movsd  %xmm5,(%rsp)
    f51a:	e8 61 23 ff ff       	callq  1880 <log@plt>
    f51f:	f2 0f 10 2c 24       	movsd  (%rsp),%xmm5
    f524:	f2 44 0f 10 4c 24 18 	movsd  0x18(%rsp),%xmm9
    f52b:	f2 0f 59 c5          	mulsd  %xmm5,%xmm0
    f52f:	f2 41 0f 5c c1       	subsd  %xmm9,%xmm0
    f534:	e8 37 22 ff ff       	callq  1770 <exp@plt>
    f539:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
    f53f:	f2 0f 10 54 24 28    	movsd  0x28(%rsp),%xmm2
    f545:	66 0f ef e4          	pxor   %xmm4,%xmm4
    f549:	66 44 0f 28 c8       	movapd %xmm0,%xmm9
    f54e:	0f b6 0d ab 9c 33 00 	movzbl 0x339cab(%rip),%ecx        # 349200 <rootsim_config+0x40>
    f555:	f2 0f 10 2c 24       	movsd  (%rsp),%xmm5
    f55a:	f2 0f 59 c9          	mulsd  %xmm1,%xmm1
    f55e:	f2 44 0f 10 44 24 08 	movsd  0x8(%rsp),%xmm8
    f565:	f2 0f 10 74 24 20    	movsd  0x20(%rsp),%xmm6
    f56b:	84 c9                	test   %cl,%cl
    f56d:	f2 0f 10 5c 24 30    	movsd  0x30(%rsp),%xmm3
    f573:	f2 0f 10 7c 24 38    	movsd  0x38(%rsp),%xmm7
    f579:	66 0f 28 c1          	movapd %xmm1,%xmm0
    f57d:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    f581:	f2 41 0f 59 c1       	mulsd  %xmm9,%xmm0
    f586:	74 5c                	je     f5e4 <Gamma+0x644>
    f588:	8b 03                	mov    (%rbx),%eax
    f58a:	48 8d 3d b3 db 30 00 	lea    0x30dbb3(%rip),%rdi        # 31d144 <master_seed+0x4>
    f591:	48 89 de             	mov    %rbx,%rsi
    f594:	0f b7 d0             	movzwl %ax,%edx
    f597:	c1 e8 10             	shr    $0x10,%eax
    f59a:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f59e:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    f5a4:	01 d0                	add    %edx,%eax
    f5a6:	89 06                	mov    %eax,(%rsi)
    f5a8:	8b 07                	mov    (%rdi),%eax
    f5aa:	0f b7 d0             	movzwl %ax,%edx
    f5ad:	c1 e8 10             	shr    $0x10,%eax
    f5b0:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    f5b6:	01 d0                	add    %edx,%eax
    f5b8:	89 07                	mov    %eax,(%rdi)
    f5ba:	8b 16                	mov    (%rsi),%edx
    f5bc:	c1 c2 10             	rol    $0x10,%edx
    f5bf:	01 d0                	add    %edx,%eax
    f5c1:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f5c6:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    f5ca:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    f5ce:	66 0f 2f c8          	comisd %xmm0,%xmm1
    f5d2:	0f 87 28 fa ff ff    	ja     f000 <Gamma+0x60>
    f5d8:	48 83 c4 48          	add    $0x48,%rsp
    f5dc:	66 41 0f 28 c0       	movapd %xmm8,%xmm0
    f5e1:	5b                   	pop    %rbx
    f5e2:	5d                   	pop    %rbp
    f5e3:	c3                   	retq   
    f5e4:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    f5eb:	64 8b 10             	mov    %fs:(%rax),%edx
    f5ee:	48 8b 05 93 da 20 00 	mov    0x20da93(%rip),%rax        # 21d088 <LPS>
    f5f5:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    f5f9:	48 8d 70 08          	lea    0x8(%rax),%rsi
    f5fd:	48 8d 78 0c          	lea    0xc(%rax),%rdi
    f601:	8b 40 08             	mov    0x8(%rax),%eax
    f604:	eb 8e                	jmp    f594 <Gamma+0x5f4>
    f606:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    f60c:	66 0f 28 c6          	movapd %xmm6,%xmm0
    f610:	f2 0f 11 7c 24 28    	movsd  %xmm7,0x28(%rsp)
    f616:	f2 0f 11 5c 24 20    	movsd  %xmm3,0x20(%rsp)
    f61c:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
    f622:	f2 0f 11 6c 24 10    	movsd  %xmm5,0x10(%rsp)
    f628:	f2 0f 11 34 24       	movsd  %xmm6,(%rsp)
    f62d:	e8 4e 24 ff ff       	callq  1a80 <sqrt@plt>
    f632:	f2 0f 10 7c 24 28    	movsd  0x28(%rsp),%xmm7
    f638:	f2 0f 10 34 24       	movsd  (%rsp),%xmm6
    f63d:	66 0f ef e4          	pxor   %xmm4,%xmm4
    f641:	f2 0f 10 5c 24 20    	movsd  0x20(%rsp),%xmm3
    f647:	f2 0f 10 54 24 18    	movsd  0x18(%rsp),%xmm2
    f64d:	f2 0f 10 6c 24 10    	movsd  0x10(%rsp),%xmm5
    f653:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    f659:	e9 54 fe ff ff       	jmpq   f4b2 <Gamma+0x512>
    f65e:	66 90                	xchg   %ax,%ax

000000000000f660 <Poisson>:
    f660:	48 83 ec 08          	sub    $0x8,%rsp
    f664:	80 3d 95 9b 33 00 00 	cmpb   $0x0,0x339b95(%rip)        # 349200 <rootsim_config+0x40>
    f66b:	74 6b                	je     f6d8 <Poisson+0x78>
    f66d:	48 8d 35 d0 da 30 00 	lea    0x30dad0(%rip),%rsi        # 31d144 <master_seed+0x4>
    f674:	8b 05 c6 da 30 00    	mov    0x30dac6(%rip),%eax        # 31d140 <master_seed>
    f67a:	48 8d 4e fc          	lea    -0x4(%rsi),%rcx
    f67e:	0f b7 d0             	movzwl %ax,%edx
    f681:	c1 e8 10             	shr    $0x10,%eax
    f684:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f688:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    f68e:	01 d0                	add    %edx,%eax
    f690:	89 01                	mov    %eax,(%rcx)
    f692:	8b 06                	mov    (%rsi),%eax
    f694:	0f b7 d0             	movzwl %ax,%edx
    f697:	c1 e8 10             	shr    $0x10,%eax
    f69a:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    f6a0:	01 d0                	add    %edx,%eax
    f6a2:	89 06                	mov    %eax,(%rsi)
    f6a4:	8b 11                	mov    (%rcx),%edx
    f6a6:	c1 c2 10             	rol    $0x10,%edx
    f6a9:	01 d0                	add    %edx,%eax
    f6ab:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    f6b0:	f2 0f 58 05 08 59 00 	addsd  0x5908(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    f6b7:	00 
    f6b8:	f2 0f 59 05 b8 99 00 	mulsd  0x99b8(%rip),%xmm0        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    f6bf:	00 
    f6c0:	e8 bb 21 ff ff       	callq  1880 <log@plt>
    f6c5:	66 0f 57 05 e3 99 00 	xorpd  0x99e3(%rip),%xmm0        # 190b0 <__PRETTY_FUNCTION__.6556+0x32f0>
    f6cc:	00 
    f6cd:	48 83 c4 08          	add    $0x8,%rsp
    f6d1:	c3                   	retq   
    f6d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f6d8:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    f6df:	64 8b 10             	mov    %fs:(%rax),%edx
    f6e2:	48 8b 05 9f d9 20 00 	mov    0x20d99f(%rip),%rax        # 21d088 <LPS>
    f6e9:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    f6ed:	48 8d 48 08          	lea    0x8(%rax),%rcx
    f6f1:	48 8d 70 0c          	lea    0xc(%rax),%rsi
    f6f5:	8b 40 08             	mov    0x8(%rax),%eax
    f6f8:	eb 84                	jmp    f67e <Poisson+0x1e>
    f6fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000f700 <Zipf>:
    f700:	55                   	push   %rbp
    f701:	66 0f 28 f8          	movapd %xmm0,%xmm7
    f705:	53                   	push   %rbx
    f706:	89 fb                	mov    %edi,%ebx
    f708:	48 83 ec 38          	sub    $0x38,%rsp
    f70c:	f2 0f 10 1d ac 58 00 	movsd  0x58ac(%rip),%xmm3        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    f713:	00 
    f714:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    f719:	f2 0f 10 05 6f 99 00 	movsd  0x996f(%rip),%xmm0        # 19090 <__PRETTY_FUNCTION__.6556+0x32d0>
    f720:	00 
    f721:	f2 0f 5c fb          	subsd  %xmm3,%xmm7
    f725:	66 0f 28 cf          	movapd %xmm7,%xmm1
    f729:	f2 0f 11 7c 24 10    	movsd  %xmm7,0x10(%rsp)
    f72f:	e8 2c 21 ff ff       	callq  1860 <pow@plt>
    f734:	f2 0f 10 14 24       	movsd  (%rsp),%xmm2
    f739:	48 8b 05 80 58 00 00 	mov    0x5880(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    f740:	66 0f ef ff          	pxor   %xmm7,%xmm7
    f744:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
    f74a:	f2 0f 10 05 7e 58 00 	movsd  0x587e(%rip),%xmm0        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    f751:	00 
    f752:	f2 0f 2a fb          	cvtsi2sd %ebx,%xmm7
    f756:	48 8d 1d e3 d9 30 00 	lea    0x30d9e3(%rip),%rbx        # 31d140 <master_seed>
    f75d:	66 48 0f 6e d8       	movq   %rax,%xmm3
    f762:	48 8d 6b 04          	lea    0x4(%rbx),%rbp
    f766:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    f76a:	f2 0f 11 7c 24 28    	movsd  %xmm7,0x28(%rsp)
    f770:	f2 0f 5c c3          	subsd  %xmm3,%xmm0
    f774:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    f77a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f780:	0f b6 0d 79 9a 33 00 	movzbl 0x339a79(%rip),%ecx        # 349200 <rootsim_config+0x40>
    f787:	84 c9                	test   %cl,%cl
    f789:	0f 84 a9 01 00 00    	je     f938 <Zipf+0x238>
    f78f:	8b 03                	mov    (%rbx),%eax
    f791:	48 89 ef             	mov    %rbp,%rdi
    f794:	48 89 de             	mov    %rbx,%rsi
    f797:	0f b7 d0             	movzwl %ax,%edx
    f79a:	c1 e8 10             	shr    $0x10,%eax
    f79d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f7a1:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    f7a7:	01 d0                	add    %edx,%eax
    f7a9:	89 06                	mov    %eax,(%rsi)
    f7ab:	8b 07                	mov    (%rdi),%eax
    f7ad:	0f b7 d0             	movzwl %ax,%edx
    f7b0:	c1 e8 10             	shr    $0x10,%eax
    f7b3:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    f7b9:	01 d0                	add    %edx,%eax
    f7bb:	89 07                	mov    %eax,(%rdi)
    f7bd:	8b 16                	mov    (%rsi),%edx
    f7bf:	c1 c2 10             	rol    $0x10,%edx
    f7c2:	01 d0                	add    %edx,%eax
    f7c4:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    f7c9:	f2 0f 58 c3          	addsd  %xmm3,%xmm0
    f7cd:	f2 0f 59 05 a3 98 00 	mulsd  0x98a3(%rip),%xmm0        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    f7d4:	00 
    f7d5:	84 c9                	test   %cl,%cl
    f7d7:	0f 84 33 01 00 00    	je     f910 <Zipf+0x210>
    f7dd:	8b 03                	mov    (%rbx),%eax
    f7df:	48 89 ee             	mov    %rbp,%rsi
    f7e2:	48 89 d9             	mov    %rbx,%rcx
    f7e5:	0f b7 d0             	movzwl %ax,%edx
    f7e8:	c1 e8 10             	shr    $0x10,%eax
    f7eb:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f7ef:	69 d2 69 90 00 00    	imul   $0x9069,%edx,%edx
    f7f5:	01 d0                	add    %edx,%eax
    f7f7:	89 01                	mov    %eax,(%rcx)
    f7f9:	8b 06                	mov    (%rsi),%eax
    f7fb:	0f b7 d0             	movzwl %ax,%edx
    f7fe:	c1 e8 10             	shr    $0x10,%eax
    f801:	69 d2 50 46 00 00    	imul   $0x4650,%edx,%edx
    f807:	01 d0                	add    %edx,%eax
    f809:	89 06                	mov    %eax,(%rsi)
    f80b:	8b 11                	mov    (%rcx),%edx
    f80d:	c1 c2 10             	rol    $0x10,%edx
    f810:	01 d0                	add    %edx,%eax
    f812:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f817:	f2 0f 58 cb          	addsd  %xmm3,%xmm1
    f81b:	f2 0f 59 0d 55 98 00 	mulsd  0x9855(%rip),%xmm1        # 19078 <__PRETTY_FUNCTION__.6556+0x32b8>
    f822:	00 
    f823:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    f828:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
    f82e:	e8 2d 20 ff ff       	callq  1860 <pow@plt>
    f833:	f2 0f 10 35 65 5b 00 	movsd  0x5b65(%rip),%xmm6        # 153a0 <__PRETTY_FUNCTION__.6351+0x310>
    f83a:	00 
    f83b:	48 8b 05 7e 57 00 00 	mov    0x577e(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    f842:	66 0f 28 d0          	movapd %xmm0,%xmm2
    f846:	66 0f 28 e0          	movapd %xmm0,%xmm4
    f84a:	f2 0f 10 05 46 98 00 	movsd  0x9846(%rip),%xmm0        # 19098 <__PRETTY_FUNCTION__.6556+0x32d8>
    f851:	00 
    f852:	66 48 0f 6e d8       	movq   %rax,%xmm3
    f857:	66 0f 54 c2          	andpd  %xmm2,%xmm0
    f85b:	66 0f 2e f0          	ucomisd %xmm0,%xmm6
    f85f:	76 33                	jbe    f894 <Zipf+0x194>
    f861:	f2 48 0f 2c c2       	cvttsd2si %xmm2,%rax
    f866:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f86a:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    f86f:	66 0f 28 c8          	movapd %xmm0,%xmm1
    f873:	f2 0f c2 ca 06       	cmpnlesd %xmm2,%xmm1
    f878:	66 0f 28 d0          	movapd %xmm0,%xmm2
    f87c:	f2 0f 10 05 14 98 00 	movsd  0x9814(%rip),%xmm0        # 19098 <__PRETTY_FUNCTION__.6556+0x32d8>
    f883:	00 
    f884:	66 0f 55 c4          	andnpd %xmm4,%xmm0
    f888:	66 0f 54 cb          	andpd  %xmm3,%xmm1
    f88c:	f2 0f 5c d1          	subsd  %xmm1,%xmm2
    f890:	66 0f 56 d0          	orpd   %xmm0,%xmm2
    f894:	66 0f 28 c3          	movapd %xmm3,%xmm0
    f898:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
    f89e:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
    f8a4:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    f8a8:	f2 0f 58 c3          	addsd  %xmm3,%xmm0
    f8ac:	e8 af 1f ff ff       	callq  1860 <pow@plt>
    f8b1:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    f8b6:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
    f8bc:	48 8b 05 fd 56 00 00 	mov    0x56fd(%rip),%rax        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    f8c3:	66 0f 28 e0          	movapd %xmm0,%xmm4
    f8c7:	f2 0f 10 6c 24 20    	movsd  0x20(%rsp),%xmm5
    f8cd:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    f8d1:	f2 0f 5e c5          	divsd  %xmm5,%xmm0
    f8d5:	66 48 0f 6e d8       	movq   %rax,%xmm3
    f8da:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    f8de:	f2 0f 59 cc          	mulsd  %xmm4,%xmm1
    f8e2:	66 0f 28 e5          	movapd %xmm5,%xmm4
    f8e6:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    f8ea:	f2 0f 5e cc          	divsd  %xmm4,%xmm1
    f8ee:	66 0f 2f c8          	comisd %xmm0,%xmm1
    f8f2:	0f 87 88 fe ff ff    	ja     f780 <Zipf+0x80>
    f8f8:	66 0f 2f 54 24 28    	comisd 0x28(%rsp),%xmm2
    f8fe:	0f 87 7c fe ff ff    	ja     f780 <Zipf+0x80>
    f904:	48 83 c4 38          	add    $0x38,%rsp
    f908:	f2 0f 2c c2          	cvttsd2si %xmm2,%eax
    f90c:	5b                   	pop    %rbx
    f90d:	5d                   	pop    %rbp
    f90e:	c3                   	retq   
    f90f:	90                   	nop
    f910:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    f917:	64 8b 10             	mov    %fs:(%rax),%edx
    f91a:	48 8b 05 67 d7 20 00 	mov    0x20d767(%rip),%rax        # 21d088 <LPS>
    f921:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    f925:	48 8d 48 08          	lea    0x8(%rax),%rcx
    f929:	48 8d 70 0c          	lea    0xc(%rax),%rsi
    f92d:	8b 40 08             	mov    0x8(%rax),%eax
    f930:	e9 b0 fe ff ff       	jmpq   f7e5 <Zipf+0xe5>
    f935:	0f 1f 00             	nopl   (%rax)
    f938:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
    f93f:	64 8b 10             	mov    %fs:(%rax),%edx
    f942:	48 8b 05 3f d7 20 00 	mov    0x20d73f(%rip),%rax        # 21d088 <LPS>
    f949:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    f94d:	48 8d 70 08          	lea    0x8(%rax),%rsi
    f951:	48 8d 78 0c          	lea    0xc(%rax),%rdi
    f955:	8b 40 08             	mov    0x8(%rax),%eax
    f958:	e9 3a fe ff ff       	jmpq   f797 <Zipf+0x97>
    f95d:	0f 1f 00             	nopl   (%rax)

000000000000f960 <sanitize_seed>:
    f960:	48 83 ec 08          	sub    $0x8,%rsp
    f964:	8d 87 01 00 97 6f    	lea    0x6f970001(%rdi),%eax
    f96a:	81 ff fe ff 68 90    	cmp    $0x9068fffe,%edi
    f970:	0f 46 c7             	cmovbe %edi,%eax
    f973:	48 89 3c 24          	mov    %rdi,(%rsp)
    f977:	85 c0                	test   %eax,%eax
    f979:	75 12                	jne    f98d <sanitize_seed+0x2d>
    f97b:	89 f8                	mov    %edi,%eax
    f97d:	f7 d0                	not    %eax
    f97f:	8d 90 01 00 97 6f    	lea    0x6f970001(%rax),%edx
    f985:	3d fe ff 68 90       	cmp    $0x9068fffe,%eax
    f98a:	0f 47 c2             	cmova  %edx,%eax
    f98d:	8b 54 24 04          	mov    0x4(%rsp),%edx
    f991:	89 04 24             	mov    %eax,(%rsp)
    f994:	89 d0                	mov    %edx,%eax
    f996:	81 fa fe ff 4f 46    	cmp    $0x464ffffe,%edx
    f99c:	76 21                	jbe    f9bf <sanitize_seed+0x5f>
    f99e:	8d 82 01 00 b0 b9    	lea    -0x464fffff(%rdx),%eax
    f9a4:	3d fe ff 4f 46       	cmp    $0x464ffffe,%eax
    f9a9:	76 14                	jbe    f9bf <sanitize_seed+0x5f>
    f9ab:	8d 82 02 00 60 73    	lea    0x73600002(%rdx),%eax
    f9b1:	8d 8a 03 00 10 2d    	lea    0x2d100003(%rdx),%ecx
    f9b7:	3d fe ff 4f 46       	cmp    $0x464ffffe,%eax
    f9bc:	0f 47 c1             	cmova  %ecx,%eax
    f9bf:	85 c0                	test   %eax,%eax
    f9c1:	75 2d                	jne    f9f0 <sanitize_seed+0x90>
    f9c3:	89 d0                	mov    %edx,%eax
    f9c5:	f7 d0                	not    %eax
    f9c7:	3d fe ff 4f 46       	cmp    $0x464ffffe,%eax
    f9cc:	76 22                	jbe    f9f0 <sanitize_seed+0x90>
    f9ce:	8d 90 01 00 b0 b9    	lea    -0x464fffff(%rax),%edx
    f9d4:	81 fa fe ff 4f 46    	cmp    $0x464ffffe,%edx
    f9da:	76 24                	jbe    fa00 <sanitize_seed+0xa0>
    f9dc:	8d 90 02 00 60 73    	lea    0x73600002(%rax),%edx
    f9e2:	05 03 00 10 2d       	add    $0x2d100003,%eax
    f9e7:	81 fa fe ff 4f 46    	cmp    $0x464ffffe,%edx
    f9ed:	0f 46 c2             	cmovbe %edx,%eax
    f9f0:	89 44 24 04          	mov    %eax,0x4(%rsp)
    f9f4:	48 8b 04 24          	mov    (%rsp),%rax
    f9f8:	48 83 c4 08          	add    $0x8,%rsp
    f9fc:	c3                   	retq   
    f9fd:	0f 1f 00             	nopl   (%rax)
    fa00:	89 d0                	mov    %edx,%eax
    fa02:	eb ec                	jmp    f9f0 <sanitize_seed+0x90>
    fa04:	66 90                	xchg   %ax,%ax
    fa06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fa0d:	00 00 00 

000000000000fa10 <numerical_init>:
    fa10:	48 83 ec 18          	sub    $0x18,%rsp
    fa14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fa1b:	00 00 
    fa1d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    fa22:	31 c0                	xor    %eax,%eax
    fa24:	e8 87 eb ff ff       	callq  e5b0 <load_seed>
    fa29:	48 8b 05 10 d7 30 00 	mov    0x30d710(%rip),%rax        # 31d140 <master_seed>
    fa30:	8d 90 01 00 97 6f    	lea    0x6f970001(%rax),%edx
    fa36:	3d fe ff 68 90       	cmp    $0x9068fffe,%eax
    fa3b:	0f 46 d0             	cmovbe %eax,%edx
    fa3e:	85 d2                	test   %edx,%edx
    fa40:	75 13                	jne    fa55 <numerical_init+0x45>
    fa42:	89 c2                	mov    %eax,%edx
    fa44:	f7 d2                	not    %edx
    fa46:	8d 8a 01 00 97 6f    	lea    0x6f970001(%rdx),%ecx
    fa4c:	81 fa fe ff 68 90    	cmp    $0x9068fffe,%edx
    fa52:	0f 47 d1             	cmova  %ecx,%edx
    fa55:	48 c1 e8 20          	shr    $0x20,%rax
    fa59:	89 14 24             	mov    %edx,(%rsp)
    fa5c:	89 c2                	mov    %eax,%edx
    fa5e:	3d fe ff 4f 46       	cmp    $0x464ffffe,%eax
    fa63:	76 23                	jbe    fa88 <numerical_init+0x78>
    fa65:	8d 90 01 00 b0 b9    	lea    -0x464fffff(%rax),%edx
    fa6b:	81 fa fe ff 4f 46    	cmp    $0x464ffffe,%edx
    fa71:	76 15                	jbe    fa88 <numerical_init+0x78>
    fa73:	8d 90 02 00 60 73    	lea    0x73600002(%rax),%edx
    fa79:	8d 88 03 00 10 2d    	lea    0x2d100003(%rax),%ecx
    fa7f:	81 fa fe ff 4f 46    	cmp    $0x464ffffe,%edx
    fa85:	0f 47 d1             	cmova  %ecx,%edx
    fa88:	85 d2                	test   %edx,%edx
    fa8a:	75 2d                	jne    fab9 <numerical_init+0xa9>
    fa8c:	89 c2                	mov    %eax,%edx
    fa8e:	f7 d2                	not    %edx
    fa90:	81 fa fe ff 4f 46    	cmp    $0x464ffffe,%edx
    fa96:	76 21                	jbe    fab9 <numerical_init+0xa9>
    fa98:	8d 82 01 00 b0 b9    	lea    -0x464fffff(%rdx),%eax
    fa9e:	3d fe ff 4f 46       	cmp    $0x464ffffe,%eax
    faa3:	76 4b                	jbe    faf0 <numerical_init+0xe0>
    faa5:	8d 82 02 00 60 73    	lea    0x73600002(%rdx),%eax
    faab:	81 c2 03 00 10 2d    	add    $0x2d100003,%edx
    fab1:	3d fe ff 4f 46       	cmp    $0x464ffffe,%eax
    fab6:	0f 46 d0             	cmovbe %eax,%edx
    fab9:	89 54 24 04          	mov    %edx,0x4(%rsp)
    fabd:	48 8b 14 24          	mov    (%rsp),%rdx
    fac1:	48 89 15 78 d6 30 00 	mov    %rdx,0x30d678(%rip)        # 31d140 <master_seed>
    fac8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    facd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fad4:	00 00 
    fad6:	75 1c                	jne    faf4 <numerical_init+0xe4>
    fad8:	48 8d 35 4c 93 00 00 	lea    0x934c(%rip),%rsi        # 18e2b <__PRETTY_FUNCTION__.6556+0x306b>
    fadf:	bf 01 00 00 00       	mov    $0x1,%edi
    fae4:	31 c0                	xor    %eax,%eax
    fae6:	48 83 c4 18          	add    $0x18,%rsp
    faea:	e9 81 1e ff ff       	jmpq   1970 <__printf_chk@plt>
    faef:	90                   	nop
    faf0:	89 c2                	mov    %eax,%edx
    faf2:	eb c5                	jmp    fab9 <numerical_init+0xa9>
    faf4:	e8 a7 1c ff ff       	callq  17a0 <__stack_chk_fail@plt>
    faf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000fb00 <numerical_fini>:
    fb00:	c3                   	retq   
    fb01:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fb08:	00 00 00 
    fb0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb10 <uniform_rand>:
    fb10:	48 83 ec 28          	sub    $0x28,%rsp
    fb14:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    fb1a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    fb1f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fb26:	00 00 
    fb28:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fb2d:	31 c0                	xor    %eax,%eax
    fb2f:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fb36:	00 00 
    fb38:	e8 e3 1e ff ff       	callq  1a20 <drand48_r@plt>
    fb3d:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    fb43:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fb48:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fb4f:	00 00 
    fb51:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    fb55:	f2 0f 59 44 24 10    	mulsd  0x10(%rsp),%xmm0
    fb5b:	75 05                	jne    fb62 <uniform_rand+0x52>
    fb5d:	48 83 c4 28          	add    $0x28,%rsp
    fb61:	c3                   	retq   
    fb62:	e8 39 1c ff ff       	callq  17a0 <__stack_chk_fail@plt>
    fb67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fb6e:	00 00 

000000000000fb70 <neg_triangular_rand>:
    fb70:	48 83 ec 28          	sub    $0x28,%rsp
    fb74:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    fb79:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    fb7e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fb85:	00 00 
    fb87:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fb8c:	31 c0                	xor    %eax,%eax
    fb8e:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fb95:	00 00 
    fb97:	e8 84 1e ff ff       	callq  1a20 <drand48_r@plt>
    fb9c:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    fba2:	66 0f ef c9          	pxor   %xmm1,%xmm1
    fba6:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    fbaa:	66 0f 28 d0          	movapd %xmm0,%xmm2
    fbae:	f2 0f 51 d2          	sqrtsd %xmm2,%xmm2
    fbb2:	77 3a                	ja     fbee <neg_triangular_rand+0x7e>
    fbb4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fbb9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fbc0:	00 00 
    fbc2:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    fbc7:	f2 0f 59 05 79 94 00 	mulsd  0x9479(%rip),%xmm0        # 19048 <__PRETTY_FUNCTION__.6556+0x3288>
    fbce:	00 
    fbcf:	f2 0f 59 05 c1 57 00 	mulsd  0x57c1(%rip),%xmm0        # 15398 <__PRETTY_FUNCTION__.6351+0x308>
    fbd6:	00 
    fbd7:	f2 0f 10 0d e1 53 00 	movsd  0x53e1(%rip),%xmm1        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
    fbde:	00 
    fbdf:	f2 0f 5c ca          	subsd  %xmm2,%xmm1
    fbe3:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    fbe7:	75 18                	jne    fc01 <neg_triangular_rand+0x91>
    fbe9:	48 83 c4 28          	add    $0x28,%rsp
    fbed:	c3                   	retq   
    fbee:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
    fbf4:	e8 87 1e ff ff       	callq  1a80 <sqrt@plt>
    fbf9:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
    fbff:	eb b3                	jmp    fbb4 <neg_triangular_rand+0x44>
    fc01:	e8 9a 1b ff ff       	callq  17a0 <__stack_chk_fail@plt>
    fc06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fc0d:	00 00 00 

000000000000fc10 <triangular_rand>:
    fc10:	48 83 ec 28          	sub    $0x28,%rsp
    fc14:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    fc19:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    fc1e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fc25:	00 00 
    fc27:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fc2c:	31 c0                	xor    %eax,%eax
    fc2e:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fc35:	00 00 
    fc37:	e8 e4 1d ff ff       	callq  1a20 <drand48_r@plt>
    fc3c:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    fc42:	66 0f ef d2          	pxor   %xmm2,%xmm2
    fc46:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
    fc4a:	66 0f 28 c8          	movapd %xmm0,%xmm1
    fc4e:	f2 0f 51 c9          	sqrtsd %xmm1,%xmm1
    fc52:	77 2e                	ja     fc82 <triangular_rand+0x72>
    fc54:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fc59:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fc60:	00 00 
    fc62:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    fc67:	f2 0f 59 05 d9 93 00 	mulsd  0x93d9(%rip),%xmm0        # 19048 <__PRETTY_FUNCTION__.6556+0x3288>
    fc6e:	00 
    fc6f:	f2 0f 59 05 21 57 00 	mulsd  0x5721(%rip),%xmm0        # 15398 <__PRETTY_FUNCTION__.6351+0x308>
    fc76:	00 
    fc77:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    fc7b:	75 18                	jne    fc95 <triangular_rand+0x85>
    fc7d:	48 83 c4 28          	add    $0x28,%rsp
    fc81:	c3                   	retq   
    fc82:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    fc88:	e8 f3 1d ff ff       	callq  1a80 <sqrt@plt>
    fc8d:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    fc93:	eb bf                	jmp    fc54 <triangular_rand+0x44>
    fc95:	e8 06 1b ff ff       	callq  17a0 <__stack_chk_fail@plt>
    fc9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000fca0 <exponential_rand>:
    fca0:	48 83 ec 28          	sub    $0x28,%rsp
    fca4:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    fcaa:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    fcaf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fcb6:	00 00 
    fcb8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fcbd:	31 c0                	xor    %eax,%eax
    fcbf:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fcc6:	00 00 
    fcc8:	e8 53 1d ff ff       	callq  1a20 <drand48_r@plt>
    fccd:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    fcd3:	e8 a8 1b ff ff       	callq  1880 <log@plt>
    fcd8:	66 0f 57 05 d0 93 00 	xorpd  0x93d0(%rip),%xmm0        # 190b0 <__PRETTY_FUNCTION__.6556+0x32f0>
    fcdf:	00 
    fce0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fce5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fcec:	00 00 
    fcee:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
    fcf4:	75 05                	jne    fcfb <exponential_rand+0x5b>
    fcf6:	48 83 c4 28          	add    $0x28,%rsp
    fcfa:	c3                   	retq   
    fcfb:	e8 a0 1a ff ff       	callq  17a0 <__stack_chk_fail@plt>

000000000000fd00 <GetParameterInt>:
    fd00:	41 55                	push   %r13
    fd02:	41 54                	push   %r12
    fd04:	49 89 f4             	mov    %rsi,%r12
    fd07:	55                   	push   %rbp
    fd08:	53                   	push   %rbx
    fd09:	48 89 fb             	mov    %rdi,%rbx
    fd0c:	48 83 ec 18          	sub    $0x18,%rsp
    fd10:	48 8b 3f             	mov    (%rdi),%rdi
    fd13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fd1a:	00 00 
    fd1c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    fd21:	31 c0                	xor    %eax,%eax
    fd23:	48 85 ff             	test   %rdi,%rdi
    fd26:	0f 84 a4 00 00 00    	je     fdd0 <GetParameterInt+0xd0>
    fd2c:	31 ed                	xor    %ebp,%ebp
    fd2e:	eb 11                	jmp    fd41 <GetParameterInt+0x41>
    fd30:	48 83 c5 01          	add    $0x1,%rbp
    fd34:	48 8b 3c eb          	mov    (%rbx,%rbp,8),%rdi
    fd38:	48 85 ff             	test   %rdi,%rdi
    fd3b:	0f 84 8f 00 00 00    	je     fdd0 <GetParameterInt+0xd0>
    fd41:	4c 89 e6             	mov    %r12,%rsi
    fd44:	4c 63 ed             	movslq %ebp,%r13
    fd47:	e8 74 1b ff ff       	callq  18c0 <strcmp@plt>
    fd4c:	85 c0                	test   %eax,%eax
    fd4e:	75 e0                	jne    fd30 <GetParameterInt+0x30>
    fd50:	4a 8d 5c eb 08       	lea    0x8(%rbx,%r13,8),%rbx
    fd55:	48 89 e6             	mov    %rsp,%rsi
    fd58:	ba 0a 00 00 00       	mov    $0xa,%edx
    fd5d:	48 8b 3b             	mov    (%rbx),%rdi
    fd60:	e8 7b 1b ff ff       	callq  18e0 <strtol@plt>
    fd65:	4c 8b 0b             	mov    (%rbx),%r9
    fd68:	41 89 c4             	mov    %eax,%r12d
    fd6b:	41 80 39 00          	cmpb   $0x0,(%r9)
    fd6f:	74 2f                	je     fda0 <GetParameterInt+0xa0>
    fd71:	48 8b 04 24          	mov    (%rsp),%rax
    fd75:	80 38 00             	cmpb   $0x0,(%rax)
    fd78:	75 26                	jne    fda0 <GetParameterInt+0xa0>
    fd7a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    fd7f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fd86:	00 00 
    fd88:	75 61                	jne    fdeb <GetParameterInt+0xeb>
    fd8a:	48 83 c4 18          	add    $0x18,%rsp
    fd8e:	44 89 e0             	mov    %r12d,%eax
    fd91:	5b                   	pop    %rbx
    fd92:	5d                   	pop    %rbp
    fd93:	41 5c                	pop    %r12
    fd95:	41 5d                	pop    %r13
    fd97:	c3                   	retq   
    fd98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fd9f:	00 
    fda0:	48 8b 3d b9 d2 20 00 	mov    0x20d2b9(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    fda7:	41 b8 46 00 00 00    	mov    $0x46,%r8d
    fdad:	31 c0                	xor    %eax,%eax
    fdaf:	48 8d 0d 89 90 00 00 	lea    0x9089(%rip),%rcx        # 18e3f <__PRETTY_FUNCTION__.6556+0x307f>
    fdb6:	48 8d 15 1b 75 00 00 	lea    0x751b(%rip),%rdx        # 172d8 <__PRETTY_FUNCTION__.6556+0x1518>
    fdbd:	be 01 00 00 00       	mov    $0x1,%esi
    fdc2:	e8 99 1c ff ff       	callq  1a60 <__fprintf_chk@plt>
    fdc7:	eb b1                	jmp    fd7a <GetParameterInt+0x7a>
    fdc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fdd0:	4c 89 e2             	mov    %r12,%rdx
    fdd3:	48 8d 35 26 75 00 00 	lea    0x7526(%rip),%rsi        # 17300 <__PRETTY_FUNCTION__.6556+0x1540>
    fdda:	31 ff                	xor    %edi,%edi
    fddc:	31 c0                	xor    %eax,%eax
    fdde:	e8 2d 75 ff ff       	callq  7310 <rootsim_error>
    fde3:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    fde9:	eb 8f                	jmp    fd7a <GetParameterInt+0x7a>
    fdeb:	e8 b0 19 ff ff       	callq  17a0 <__stack_chk_fail@plt>

000000000000fdf0 <GetParameterFloat>:
    fdf0:	41 55                	push   %r13
    fdf2:	41 54                	push   %r12
    fdf4:	49 89 f4             	mov    %rsi,%r12
    fdf7:	55                   	push   %rbp
    fdf8:	53                   	push   %rbx
    fdf9:	48 89 fb             	mov    %rdi,%rbx
    fdfc:	48 83 ec 28          	sub    $0x28,%rsp
    fe00:	48 8b 3f             	mov    (%rdi),%rdi
    fe03:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fe0a:	00 00 
    fe0c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fe11:	31 c0                	xor    %eax,%eax
    fe13:	48 85 ff             	test   %rdi,%rdi
    fe16:	0f 84 9c 00 00 00    	je     feb8 <GetParameterFloat+0xc8>
    fe1c:	31 ed                	xor    %ebp,%ebp
    fe1e:	eb 11                	jmp    fe31 <GetParameterFloat+0x41>
    fe20:	48 83 c5 01          	add    $0x1,%rbp
    fe24:	48 8b 3c eb          	mov    (%rbx,%rbp,8),%rdi
    fe28:	48 85 ff             	test   %rdi,%rdi
    fe2b:	0f 84 87 00 00 00    	je     feb8 <GetParameterFloat+0xc8>
    fe31:	4c 89 e6             	mov    %r12,%rsi
    fe34:	4c 63 ed             	movslq %ebp,%r13
    fe37:	e8 84 1a ff ff       	callq  18c0 <strcmp@plt>
    fe3c:	85 c0                	test   %eax,%eax
    fe3e:	75 e0                	jne    fe20 <GetParameterFloat+0x30>
    fe40:	4a 8d 5c eb 08       	lea    0x8(%rbx,%r13,8),%rbx
    fe45:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    fe4a:	48 8b 3b             	mov    (%rbx),%rdi
    fe4d:	e8 ee 19 ff ff       	callq  1840 <strtof@plt>
    fe52:	4c 8b 0b             	mov    (%rbx),%r9
    fe55:	41 80 39 00          	cmpb   $0x0,(%r9)
    fe59:	74 25                	je     fe80 <GetParameterFloat+0x90>
    fe5b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    fe60:	80 38 00             	cmpb   $0x0,(%rax)
    fe63:	75 1b                	jne    fe80 <GetParameterFloat+0x90>
    fe65:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fe6a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fe71:	00 00 
    fe73:	75 60                	jne    fed5 <GetParameterFloat+0xe5>
    fe75:	48 83 c4 28          	add    $0x28,%rsp
    fe79:	5b                   	pop    %rbx
    fe7a:	5d                   	pop    %rbp
    fe7b:	41 5c                	pop    %r12
    fe7d:	41 5d                	pop    %r13
    fe7f:	c3                   	retq   
    fe80:	48 8b 3d d9 d1 20 00 	mov    0x20d1d9(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    fe87:	41 b8 52 00 00 00    	mov    $0x52,%r8d
    fe8d:	31 c0                	xor    %eax,%eax
    fe8f:	48 8d 0d a9 8f 00 00 	lea    0x8fa9(%rip),%rcx        # 18e3f <__PRETTY_FUNCTION__.6556+0x307f>
    fe96:	48 8d 15 3b 74 00 00 	lea    0x743b(%rip),%rdx        # 172d8 <__PRETTY_FUNCTION__.6556+0x1518>
    fe9d:	be 01 00 00 00       	mov    $0x1,%esi
    fea2:	f3 0f 11 44 24 0c    	movss  %xmm0,0xc(%rsp)
    fea8:	e8 b3 1b ff ff       	callq  1a60 <__fprintf_chk@plt>
    fead:	f3 0f 10 44 24 0c    	movss  0xc(%rsp),%xmm0
    feb3:	eb b0                	jmp    fe65 <GetParameterFloat+0x75>
    feb5:	0f 1f 00             	nopl   (%rax)
    feb8:	4c 89 e2             	mov    %r12,%rdx
    febb:	48 8d 35 3e 74 00 00 	lea    0x743e(%rip),%rsi        # 17300 <__PRETTY_FUNCTION__.6556+0x1540>
    fec2:	31 ff                	xor    %edi,%edi
    fec4:	31 c0                	xor    %eax,%eax
    fec6:	e8 45 74 ff ff       	callq  7310 <rootsim_error>
    fecb:	f3 0f 10 05 0d 92 00 	movss  0x920d(%rip),%xmm0        # 190e0 <__PRETTY_FUNCTION__.6556+0x3320>
    fed2:	00 
    fed3:	eb 90                	jmp    fe65 <GetParameterFloat+0x75>
    fed5:	e8 c6 18 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    feda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000fee0 <GetParameterDouble>:
    fee0:	41 55                	push   %r13
    fee2:	41 54                	push   %r12
    fee4:	49 89 f4             	mov    %rsi,%r12
    fee7:	55                   	push   %rbp
    fee8:	53                   	push   %rbx
    fee9:	48 89 fb             	mov    %rdi,%rbx
    feec:	48 83 ec 28          	sub    $0x28,%rsp
    fef0:	48 8b 3f             	mov    (%rdi),%rdi
    fef3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fefa:	00 00 
    fefc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    ff01:	31 c0                	xor    %eax,%eax
    ff03:	48 85 ff             	test   %rdi,%rdi
    ff06:	0f 84 9c 00 00 00    	je     ffa8 <GetParameterDouble+0xc8>
    ff0c:	31 ed                	xor    %ebp,%ebp
    ff0e:	eb 11                	jmp    ff21 <GetParameterDouble+0x41>
    ff10:	48 83 c5 01          	add    $0x1,%rbp
    ff14:	48 8b 3c eb          	mov    (%rbx,%rbp,8),%rdi
    ff18:	48 85 ff             	test   %rdi,%rdi
    ff1b:	0f 84 87 00 00 00    	je     ffa8 <GetParameterDouble+0xc8>
    ff21:	4c 89 e6             	mov    %r12,%rsi
    ff24:	4c 63 ed             	movslq %ebp,%r13
    ff27:	e8 94 19 ff ff       	callq  18c0 <strcmp@plt>
    ff2c:	85 c0                	test   %eax,%eax
    ff2e:	75 e0                	jne    ff10 <GetParameterDouble+0x30>
    ff30:	4a 8d 5c eb 08       	lea    0x8(%rbx,%r13,8),%rbx
    ff35:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    ff3a:	48 8b 3b             	mov    (%rbx),%rdi
    ff3d:	e8 1e 18 ff ff       	callq  1760 <strtod@plt>
    ff42:	4c 8b 0b             	mov    (%rbx),%r9
    ff45:	41 80 39 00          	cmpb   $0x0,(%r9)
    ff49:	74 25                	je     ff70 <GetParameterDouble+0x90>
    ff4b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    ff50:	80 38 00             	cmpb   $0x0,(%rax)
    ff53:	75 1b                	jne    ff70 <GetParameterDouble+0x90>
    ff55:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    ff5a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ff61:	00 00 
    ff63:	75 60                	jne    ffc5 <GetParameterDouble+0xe5>
    ff65:	48 83 c4 28          	add    $0x28,%rsp
    ff69:	5b                   	pop    %rbx
    ff6a:	5d                   	pop    %rbp
    ff6b:	41 5c                	pop    %r12
    ff6d:	41 5d                	pop    %r13
    ff6f:	c3                   	retq   
    ff70:	48 8b 3d e9 d0 20 00 	mov    0x20d0e9(%rip),%rdi        # 21d060 <stderr@@GLIBC_2.2.5>
    ff77:	41 b8 5e 00 00 00    	mov    $0x5e,%r8d
    ff7d:	31 c0                	xor    %eax,%eax
    ff7f:	48 8d 0d b9 8e 00 00 	lea    0x8eb9(%rip),%rcx        # 18e3f <__PRETTY_FUNCTION__.6556+0x307f>
    ff86:	48 8d 15 4b 73 00 00 	lea    0x734b(%rip),%rdx        # 172d8 <__PRETTY_FUNCTION__.6556+0x1518>
    ff8d:	be 01 00 00 00       	mov    $0x1,%esi
    ff92:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    ff98:	e8 c3 1a ff ff       	callq  1a60 <__fprintf_chk@plt>
    ff9d:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    ffa3:	eb b0                	jmp    ff55 <GetParameterDouble+0x75>
    ffa5:	0f 1f 00             	nopl   (%rax)
    ffa8:	4c 89 e2             	mov    %r12,%rdx
    ffab:	48 8d 35 4e 73 00 00 	lea    0x734e(%rip),%rsi        # 17300 <__PRETTY_FUNCTION__.6556+0x1540>
    ffb2:	31 ff                	xor    %edi,%edi
    ffb4:	31 c0                	xor    %eax,%eax
    ffb6:	e8 55 73 ff ff       	callq  7310 <rootsim_error>
    ffbb:	f2 0f 10 05 0d 50 00 	movsd  0x500d(%rip),%xmm0        # 14fd0 <__PRETTY_FUNCTION__.5886+0x7f0>
    ffc2:	00 
    ffc3:	eb 90                	jmp    ff55 <GetParameterDouble+0x75>
    ffc5:	e8 d6 17 ff ff       	callq  17a0 <__stack_chk_fail@plt>
    ffca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000ffd0 <GetParameterBool>:
    ffd0:	41 55                	push   %r13
    ffd2:	41 54                	push   %r12
    ffd4:	49 89 f4             	mov    %rsi,%r12
    ffd7:	55                   	push   %rbp
    ffd8:	53                   	push   %rbx
    ffd9:	48 89 fb             	mov    %rdi,%rbx
    ffdc:	48 83 ec 08          	sub    $0x8,%rsp
    ffe0:	48 8b 3f             	mov    (%rdi),%rdi
    ffe3:	48 85 ff             	test   %rdi,%rdi
    ffe6:	74 50                	je     10038 <GetParameterBool+0x68>
    ffe8:	31 ed                	xor    %ebp,%ebp
    ffea:	eb 11                	jmp    fffd <GetParameterBool+0x2d>
    ffec:	0f 1f 40 00          	nopl   0x0(%rax)
    fff0:	48 83 c5 01          	add    $0x1,%rbp
    fff4:	48 8b 3c eb          	mov    (%rbx,%rbp,8),%rdi
    fff8:	48 85 ff             	test   %rdi,%rdi
    fffb:	74 3b                	je     10038 <GetParameterBool+0x68>
    fffd:	4c 89 e6             	mov    %r12,%rsi
   10000:	4c 63 ed             	movslq %ebp,%r13
   10003:	e8 b8 18 ff ff       	callq  18c0 <strcmp@plt>
   10008:	85 c0                	test   %eax,%eax
   1000a:	75 e4                	jne    fff0 <GetParameterBool+0x20>
   1000c:	4a 8b 74 eb 08       	mov    0x8(%rbx,%r13,8),%rsi
   10011:	b9 05 00 00 00       	mov    $0x5,%ecx
   10016:	48 8d 3d 34 8e 00 00 	lea    0x8e34(%rip),%rdi        # 18e51 <__PRETTY_FUNCTION__.6556+0x3091>
   1001d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1001f:	0f 97 c0             	seta   %al
   10022:	1c 00                	sbb    $0x0,%al
   10024:	84 c0                	test   %al,%al
   10026:	0f 94 c0             	sete   %al
   10029:	48 83 c4 08          	add    $0x8,%rsp
   1002d:	5b                   	pop    %rbx
   1002e:	5d                   	pop    %rbp
   1002f:	41 5c                	pop    %r12
   10031:	41 5d                	pop    %r13
   10033:	c3                   	retq   
   10034:	0f 1f 40 00          	nopl   0x0(%rax)
   10038:	4c 89 e2             	mov    %r12,%rdx
   1003b:	31 c0                	xor    %eax,%eax
   1003d:	48 8d 35 e4 72 00 00 	lea    0x72e4(%rip),%rsi        # 17328 <__PRETTY_FUNCTION__.6556+0x1568>
   10044:	31 ff                	xor    %edi,%edi
   10046:	e8 c5 72 ff ff       	callq  7310 <rootsim_error>
   1004b:	48 83 c4 08          	add    $0x8,%rsp
   1004f:	31 c0                	xor    %eax,%eax
   10051:	5b                   	pop    %rbx
   10052:	5d                   	pop    %rbp
   10053:	41 5c                	pop    %r12
   10055:	41 5d                	pop    %r13
   10057:	c3                   	retq   
   10058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1005f:	00 

0000000000010060 <GetParameterString>:
   10060:	41 55                	push   %r13
   10062:	41 54                	push   %r12
   10064:	49 89 f4             	mov    %rsi,%r12
   10067:	55                   	push   %rbp
   10068:	53                   	push   %rbx
   10069:	48 89 fb             	mov    %rdi,%rbx
   1006c:	48 83 ec 08          	sub    $0x8,%rsp
   10070:	48 8b 3f             	mov    (%rdi),%rdi
   10073:	48 85 ff             	test   %rdi,%rdi
   10076:	74 38                	je     100b0 <GetParameterString+0x50>
   10078:	31 ed                	xor    %ebp,%ebp
   1007a:	eb 11                	jmp    1008d <GetParameterString+0x2d>
   1007c:	0f 1f 40 00          	nopl   0x0(%rax)
   10080:	48 83 c5 01          	add    $0x1,%rbp
   10084:	48 8b 3c eb          	mov    (%rbx,%rbp,8),%rdi
   10088:	48 85 ff             	test   %rdi,%rdi
   1008b:	74 23                	je     100b0 <GetParameterString+0x50>
   1008d:	4c 89 e6             	mov    %r12,%rsi
   10090:	4c 63 ed             	movslq %ebp,%r13
   10093:	e8 28 18 ff ff       	callq  18c0 <strcmp@plt>
   10098:	85 c0                	test   %eax,%eax
   1009a:	75 e4                	jne    10080 <GetParameterString+0x20>
   1009c:	4a 8b 44 eb 08       	mov    0x8(%rbx,%r13,8),%rax
   100a1:	48 83 c4 08          	add    $0x8,%rsp
   100a5:	5b                   	pop    %rbx
   100a6:	5d                   	pop    %rbp
   100a7:	41 5c                	pop    %r12
   100a9:	41 5d                	pop    %r13
   100ab:	c3                   	retq   
   100ac:	0f 1f 40 00          	nopl   0x0(%rax)
   100b0:	31 c0                	xor    %eax,%eax
   100b2:	4c 89 e2             	mov    %r12,%rdx
   100b5:	48 8d 35 9c 72 00 00 	lea    0x729c(%rip),%rsi        # 17358 <__PRETTY_FUNCTION__.6556+0x1598>
   100bc:	31 ff                	xor    %edi,%edi
   100be:	e8 4d 72 ff ff       	callq  7310 <rootsim_error>
   100c3:	31 c0                	xor    %eax,%eax
   100c5:	eb da                	jmp    100a1 <GetParameterString+0x41>
   100c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   100ce:	00 00 

00000000000100d0 <IsParameterPresent>:
   100d0:	31 c0                	xor    %eax,%eax
   100d2:	c3                   	retq   
   100d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   100da:	00 00 00 
   100dd:	0f 1f 00             	nopl   (%rax)

00000000000100e0 <statistics_init>:
   100e0:	48 83 ec 28          	sub    $0x28,%rsp
   100e4:	8b 15 9e 90 33 00    	mov    0x33909e(%rip),%edx        # 349188 <n_cores>
   100ea:	be 40 00 00 00       	mov    $0x40,%esi
   100ef:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   100f6:	00 00 
   100f8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   100fd:	31 c0                	xor    %eax,%eax
   100ff:	48 89 e7             	mov    %rsp,%rdi
   10102:	48 c1 e2 09          	shl    $0x9,%rdx
   10106:	e8 65 19 ff ff       	callq  1a70 <posix_memalign@plt>
   1010b:	85 c0                	test   %eax,%eax
   1010d:	0f 85 0d 01 00 00    	jne    10220 <statistics_init+0x140>
   10113:	48 8b 04 24          	mov    (%rsp),%rax
   10117:	48 89 05 7a 90 33 00 	mov    %rax,0x33907a(%rip)        # 349198 <thread_stats>
   1011e:	48 85 c0             	test   %rax,%rax
   10121:	0f 84 4f 01 00 00    	je     10276 <statistics_init+0x196>
   10127:	8b 15 83 90 33 00    	mov    0x339083(%rip),%edx        # 3491b0 <n_prc_tot>
   1012d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   10132:	be 40 00 00 00       	mov    $0x40,%esi
   10137:	48 c1 e2 09          	shl    $0x9,%rdx
   1013b:	e8 30 19 ff ff       	callq  1a70 <posix_memalign@plt>
   10140:	85 c0                	test   %eax,%eax
   10142:	0f 84 c0 00 00 00    	je     10208 <statistics_init+0x128>
   10148:	79 0c                	jns    10156 <statistics_init+0x76>
   1014a:	48 8d 3d 05 8d 00 00 	lea    0x8d05(%rip),%rdi        # 18e56 <__PRETTY_FUNCTION__.6556+0x3096>
   10151:	e8 ea 15 ff ff       	callq  1740 <puts@plt>
   10156:	48 8b 05 13 91 33 00 	mov    0x339113(%rip),%rax        # 349270 <lp_stats>
   1015d:	48 85 c0             	test   %rax,%rax
   10160:	0f 84 fa 00 00 00    	je     10260 <statistics_init+0x180>
   10166:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1016b:	ba 00 02 00 00       	mov    $0x200,%edx
   10170:	be 40 00 00 00       	mov    $0x40,%esi
   10175:	e8 f6 18 ff ff       	callq  1a70 <posix_memalign@plt>
   1017a:	85 c0                	test   %eax,%eax
   1017c:	0f 85 be 00 00 00    	jne    10240 <statistics_init+0x160>
   10182:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   10187:	48 89 05 8a 90 33 00 	mov    %rax,0x33908a(%rip)        # 349218 <system_stats>
   1018e:	8b 15 f4 8f 33 00    	mov    0x338ff4(%rip),%edx        # 349188 <n_cores>
   10194:	48 8b 3d fd 8f 33 00 	mov    0x338ffd(%rip),%rdi        # 349198 <thread_stats>
   1019b:	31 f6                	xor    %esi,%esi
   1019d:	48 c1 e2 09          	shl    $0x9,%rdx
   101a1:	e8 aa 16 ff ff       	callq  1850 <memset@plt>
   101a6:	8b 15 04 90 33 00    	mov    0x339004(%rip),%edx        # 3491b0 <n_prc_tot>
   101ac:	48 8b 3d bd 90 33 00 	mov    0x3390bd(%rip),%rdi        # 349270 <lp_stats>
   101b3:	31 f6                	xor    %esi,%esi
   101b5:	48 c1 e2 09          	shl    $0x9,%rdx
   101b9:	e8 92 16 ff ff       	callq  1850 <memset@plt>
   101be:	48 8b 0d 53 90 33 00 	mov    0x339053(%rip),%rcx        # 349218 <system_stats>
   101c5:	31 c0                	xor    %eax,%eax
   101c7:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   101cb:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
   101d2:	48 c7 81 f8 01 00 00 	movq   $0x0,0x1f8(%rcx)
   101d9:	00 00 00 00 
   101dd:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   101e1:	48 29 f9             	sub    %rdi,%rcx
   101e4:	81 c1 00 02 00 00    	add    $0x200,%ecx
   101ea:	c1 e9 03             	shr    $0x3,%ecx
   101ed:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   101f0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   101f5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   101fc:	00 00 
   101fe:	75 71                	jne    10271 <statistics_init+0x191>
   10200:	48 83 c4 28          	add    $0x28,%rsp
   10204:	c3                   	retq   
   10205:	0f 1f 00             	nopl   (%rax)
   10208:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1020d:	48 89 05 5c 90 33 00 	mov    %rax,0x33905c(%rip)        # 349270 <lp_stats>
   10214:	e9 44 ff ff ff       	jmpq   1015d <statistics_init+0x7d>
   10219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10220:	79 0c                	jns    1022e <statistics_init+0x14e>
   10222:	48 8d 3d 2d 8c 00 00 	lea    0x8c2d(%rip),%rdi        # 18e56 <__PRETTY_FUNCTION__.6556+0x3096>
   10229:	e8 12 15 ff ff       	callq  1740 <puts@plt>
   1022e:	48 8b 05 63 8f 33 00 	mov    0x338f63(%rip),%rax        # 349198 <thread_stats>
   10235:	e9 e4 fe ff ff       	jmpq   1011e <statistics_init+0x3e>
   1023a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10240:	0f 89 48 ff ff ff    	jns    1018e <statistics_init+0xae>
   10246:	48 8d 3d 09 8c 00 00 	lea    0x8c09(%rip),%rdi        # 18e56 <__PRETTY_FUNCTION__.6556+0x3096>
   1024d:	e8 ee 14 ff ff       	callq  1740 <puts@plt>
   10252:	48 83 3d 16 90 33 00 	cmpq   $0x0,0x339016(%rip)        # 349270 <lp_stats>
   10259:	00 
   1025a:	0f 85 2e ff ff ff    	jne    1018e <statistics_init+0xae>
   10260:	48 8d 3d 51 71 00 00 	lea    0x7151(%rip),%rdi        # 173b8 <__PRETTY_FUNCTION__.6556+0x15f8>
   10267:	e8 d4 14 ff ff       	callq  1740 <puts@plt>
   1026c:	e8 3f 14 ff ff       	callq  16b0 <abort@plt>
   10271:	e8 2a 15 ff ff       	callq  17a0 <__stack_chk_fail@plt>
   10276:	48 8d 3d 0b 71 00 00 	lea    0x710b(%rip),%rdi        # 17388 <__PRETTY_FUNCTION__.6556+0x15c8>
   1027d:	e8 be 14 ff ff       	callq  1740 <puts@plt>
   10282:	e8 29 14 ff ff       	callq  16b0 <abort@plt>
   10287:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1028e:	00 00 

0000000000010290 <statistics_fini>:
   10290:	48 83 ec 08          	sub    $0x8,%rsp
   10294:	48 8b 3d fd 8e 33 00 	mov    0x338efd(%rip),%rdi        # 349198 <thread_stats>
   1029b:	e8 e0 13 ff ff       	callq  1680 <free@plt>
   102a0:	48 8b 3d c9 8f 33 00 	mov    0x338fc9(%rip),%rdi        # 349270 <lp_stats>
   102a7:	e8 d4 13 ff ff       	callq  1680 <free@plt>
   102ac:	48 8b 3d 65 8f 33 00 	mov    0x338f65(%rip),%rdi        # 349218 <system_stats>
   102b3:	48 83 c4 08          	add    $0x8,%rsp
   102b7:	e9 c4 13 ff ff       	jmpq   1680 <free@plt>
   102bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000102c0 <statistics_post_lp_data>:
   102c0:	39 3d ea 8e 33 00    	cmp    %edi,0x338eea(%rip)        # 3491b0 <n_prc_tot>
   102c6:	0f 86 f1 04 00 00    	jbe    107bd <statistics_post_lp_data+0x4fd>
   102cc:	48 8b 15 9d 8f 33 00 	mov    0x338f9d(%rip),%rdx        # 349270 <lp_stats>
   102d3:	81 fe 91 01 00 00    	cmp    $0x191,%esi
   102d9:	7f 2d                	jg     10308 <statistics_post_lp_data+0x48>
   102db:	83 fe 63             	cmp    $0x63,%esi
   102de:	0f 8e a8 04 00 00    	jle    1078c <statistics_post_lp_data+0x4cc>
   102e4:	8d 46 9c             	lea    -0x64(%rsi),%eax
   102e7:	3d 2d 01 00 00       	cmp    $0x12d,%eax
   102ec:	0f 87 9a 04 00 00    	ja     1078c <statistics_post_lp_data+0x4cc>
   102f2:	48 8d 0d 17 51 00 00 	lea    0x5117(%rip),%rcx        # 15410 <__PRETTY_FUNCTION__.6204+0x10>
   102f9:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   102fd:	48 01 c8             	add    %rcx,%rax
   10300:	ff e0                	jmpq   *%rax
   10302:	c3                   	retq   
   10303:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10308:	81 fe 5d 02 00 00    	cmp    $0x25d,%esi
   1030e:	7f 38                	jg     10348 <statistics_post_lp_data+0x88>
   10310:	81 fe 58 02 00 00    	cmp    $0x258,%esi
   10316:	0f 8e 70 04 00 00    	jle    1078c <statistics_post_lp_data+0x4cc>
   1031c:	81 ee 5a 02 00 00    	sub    $0x25a,%esi
   10322:	83 fe 03             	cmp    $0x3,%esi
   10325:	0f 87 76 04 00 00    	ja     107a1 <statistics_post_lp_data+0x4e1>
   1032b:	48 8d 0d 96 55 00 00 	lea    0x5596(%rip),%rcx        # 158c8 <__PRETTY_FUNCTION__.6204+0x4c8>
   10332:	48 63 ff             	movslq %edi,%rdi
   10335:	48 63 04 b1          	movslq (%rcx,%rsi,4),%rax
   10339:	48 c1 e7 09          	shl    $0x9,%rdi
   1033d:	48 01 c8             	add    %rcx,%rax
   10340:	ff e0                	jmpq   *%rax
   10342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10348:	81 fe 84 03 00 00    	cmp    $0x384,%esi
   1034e:	0f 85 38 04 00 00    	jne    1078c <statistics_post_lp_data+0x4cc>
   10354:	48 63 ff             	movslq %edi,%rdi
   10357:	48 c1 e7 09          	shl    $0x9,%rdi
   1035b:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   1035f:	f2 0f 58 80 78 01 00 	addsd  0x178(%rax),%xmm0
   10366:	00 
   10367:	f2 0f 11 80 78 01 00 	movsd  %xmm0,0x178(%rax)
   1036e:	00 
   1036f:	c3                   	retq   
   10370:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   10374:	f2 0f 58 80 d0 01 00 	addsd  0x1d0(%rax),%xmm0
   1037b:	00 
   1037c:	f2 0f 11 80 d0 01 00 	movsd  %xmm0,0x1d0(%rax)
   10383:	00 
   10384:	c3                   	retq   
   10385:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   10389:	f2 0f 58 80 c8 01 00 	addsd  0x1c8(%rax),%xmm0
   10390:	00 
   10391:	f2 0f 11 80 c8 01 00 	movsd  %xmm0,0x1c8(%rax)
   10398:	00 
   10399:	c3                   	retq   
   1039a:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   1039e:	f2 0f 58 80 98 01 00 	addsd  0x198(%rax),%xmm0
   103a5:	00 
   103a6:	f2 0f 11 80 98 01 00 	movsd  %xmm0,0x198(%rax)
   103ad:	00 
   103ae:	c3                   	retq   
   103af:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   103b3:	f2 0f 58 80 a0 01 00 	addsd  0x1a0(%rax),%xmm0
   103ba:	00 
   103bb:	f2 0f 11 80 a0 01 00 	movsd  %xmm0,0x1a0(%rax)
   103c2:	00 
   103c3:	c3                   	retq   
   103c4:	48 63 c7             	movslq %edi,%rax
   103c7:	f2 0f 10 05 f1 4b 00 	movsd  0x4bf1(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
   103ce:	00 
   103cf:	48 c1 e0 09          	shl    $0x9,%rax
   103d3:	48 01 d0             	add    %rdx,%rax
   103d6:	f2 0f 58 80 98 00 00 	addsd  0x98(%rax),%xmm0
   103dd:	00 
   103de:	f2 0f 11 80 98 00 00 	movsd  %xmm0,0x98(%rax)
   103e5:	00 
   103e6:	c3                   	retq   
   103e7:	48 63 c7             	movslq %edi,%rax
   103ea:	f2 0f 10 05 ce 4b 00 	movsd  0x4bce(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
   103f1:	00 
   103f2:	48 c1 e0 09          	shl    $0x9,%rax
   103f6:	48 01 d0             	add    %rdx,%rax
   103f9:	f2 0f 58 80 90 00 00 	addsd  0x90(%rax),%xmm0
   10400:	00 
   10401:	f2 0f 11 80 90 00 00 	movsd  %xmm0,0x90(%rax)
   10408:	00 
   10409:	c3                   	retq   
   1040a:	48 63 c7             	movslq %edi,%rax
   1040d:	48 c1 e0 09          	shl    $0x9,%rax
   10411:	48 01 d0             	add    %rdx,%rax
   10414:	f2 0f 58 80 a8 00 00 	addsd  0xa8(%rax),%xmm0
   1041b:	00 
   1041c:	f2 0f 11 80 a8 00 00 	movsd  %xmm0,0xa8(%rax)
   10423:	00 
   10424:	c3                   	retq   
   10425:	48 63 ff             	movslq %edi,%rdi
   10428:	48 c1 e7 09          	shl    $0x9,%rdi
   1042c:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   10430:	f2 0f 10 88 48 01 00 	movsd  0x148(%rax),%xmm1
   10437:	00 
   10438:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1043c:	f2 0f 5e 80 a0 00 00 	divsd  0xa0(%rax),%xmm0
   10443:	00 
   10444:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   10448:	f2 0f 11 80 48 01 00 	movsd  %xmm0,0x148(%rax)
   1044f:	00 
   10450:	c3                   	retq   
   10451:	48 63 c7             	movslq %edi,%rax
   10454:	48 c1 e0 09          	shl    $0x9,%rax
   10458:	48 01 d0             	add    %rdx,%rax
   1045b:	f2 0f 58 80 a0 00 00 	addsd  0xa0(%rax),%xmm0
   10462:	00 
   10463:	f2 0f 11 80 a0 00 00 	movsd  %xmm0,0xa0(%rax)
   1046a:	00 
   1046b:	c3                   	retq   
   1046c:	48 63 c7             	movslq %edi,%rax
   1046f:	48 c1 e0 09          	shl    $0x9,%rax
   10473:	48 01 d0             	add    %rdx,%rax
   10476:	f2 0f 58 40 78       	addsd  0x78(%rax),%xmm0
   1047b:	f2 0f 11 40 78       	movsd  %xmm0,0x78(%rax)
   10480:	c3                   	retq   
   10481:	48 63 c7             	movslq %edi,%rax
   10484:	48 c1 e0 09          	shl    $0x9,%rax
   10488:	48 01 d0             	add    %rdx,%rax
   1048b:	f2 0f 58 40 70       	addsd  0x70(%rax),%xmm0
   10490:	f2 0f 11 40 70       	movsd  %xmm0,0x70(%rax)
   10495:	c3                   	retq   
   10496:	48 63 c7             	movslq %edi,%rax
   10499:	48 c1 e0 09          	shl    $0x9,%rax
   1049d:	48 01 d0             	add    %rdx,%rax
   104a0:	f2 0f 58 80 28 01 00 	addsd  0x128(%rax),%xmm0
   104a7:	00 
   104a8:	f2 0f 11 80 28 01 00 	movsd  %xmm0,0x128(%rax)
   104af:	00 
   104b0:	c3                   	retq   
   104b1:	48 63 c7             	movslq %edi,%rax
   104b4:	48 c1 e0 09          	shl    $0x9,%rax
   104b8:	48 01 d0             	add    %rdx,%rax
   104bb:	f2 0f 58 80 80 00 00 	addsd  0x80(%rax),%xmm0
   104c2:	00 
   104c3:	f2 0f 11 80 80 00 00 	movsd  %xmm0,0x80(%rax)
   104ca:	00 
   104cb:	c3                   	retq   
   104cc:	48 63 c7             	movslq %edi,%rax
   104cf:	48 c1 e0 09          	shl    $0x9,%rax
   104d3:	48 01 d0             	add    %rdx,%rax
   104d6:	f2 0f 58 80 40 01 00 	addsd  0x140(%rax),%xmm0
   104dd:	00 
   104de:	f2 0f 11 80 40 01 00 	movsd  %xmm0,0x140(%rax)
   104e5:	00 
   104e6:	c3                   	retq   
   104e7:	48 63 c7             	movslq %edi,%rax
   104ea:	48 c1 e0 09          	shl    $0x9,%rax
   104ee:	48 01 d0             	add    %rdx,%rax
   104f1:	f2 0f 58 80 30 01 00 	addsd  0x130(%rax),%xmm0
   104f8:	00 
   104f9:	f2 0f 11 80 30 01 00 	movsd  %xmm0,0x130(%rax)
   10500:	00 
   10501:	c3                   	retq   
   10502:	48 63 c7             	movslq %edi,%rax
   10505:	48 c1 e0 09          	shl    $0x9,%rax
   10509:	48 01 d0             	add    %rdx,%rax
   1050c:	f2 0f 58 80 88 00 00 	addsd  0x88(%rax),%xmm0
   10513:	00 
   10514:	f2 0f 11 80 88 00 00 	movsd  %xmm0,0x88(%rax)
   1051b:	00 
   1051c:	c3                   	retq   
   1051d:	48 63 ff             	movslq %edi,%rdi
   10520:	48 c1 e7 09          	shl    $0x9,%rdi
   10524:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   10528:	f2 0f 58 80 c8 00 00 	addsd  0xc8(%rax),%xmm0
   1052f:	00 
   10530:	f2 0f 11 80 c8 00 00 	movsd  %xmm0,0xc8(%rax)
   10537:	00 
   10538:	c3                   	retq   
   10539:	48 63 c7             	movslq %edi,%rax
   1053c:	48 c1 e0 09          	shl    $0x9,%rax
   10540:	48 01 d0             	add    %rdx,%rax
   10543:	f2 0f 58 80 c0 00 00 	addsd  0xc0(%rax),%xmm0
   1054a:	00 
   1054b:	f2 0f 11 80 c0 00 00 	movsd  %xmm0,0xc0(%rax)
   10552:	00 
   10553:	c3                   	retq   
   10554:	48 63 c7             	movslq %edi,%rax
   10557:	48 c1 e0 09          	shl    $0x9,%rax
   1055b:	48 01 d0             	add    %rdx,%rax
   1055e:	f2 0f 58 80 10 01 00 	addsd  0x110(%rax),%xmm0
   10565:	00 
   10566:	f2 0f 11 80 10 01 00 	movsd  %xmm0,0x110(%rax)
   1056d:	00 
   1056e:	c3                   	retq   
   1056f:	48 63 c7             	movslq %edi,%rax
   10572:	48 c1 e0 09          	shl    $0x9,%rax
   10576:	48 01 d0             	add    %rdx,%rax
   10579:	f2 0f 58 80 08 01 00 	addsd  0x108(%rax),%xmm0
   10580:	00 
   10581:	f2 0f 11 80 08 01 00 	movsd  %xmm0,0x108(%rax)
   10588:	00 
   10589:	c3                   	retq   
   1058a:	48 63 c7             	movslq %edi,%rax
   1058d:	48 c1 e0 09          	shl    $0x9,%rax
   10591:	48 01 d0             	add    %rdx,%rax
   10594:	f2 0f 58 80 00 01 00 	addsd  0x100(%rax),%xmm0
   1059b:	00 
   1059c:	f2 0f 11 80 00 01 00 	movsd  %xmm0,0x100(%rax)
   105a3:	00 
   105a4:	c3                   	retq   
   105a5:	48 63 c7             	movslq %edi,%rax
   105a8:	48 c1 e0 09          	shl    $0x9,%rax
   105ac:	48 01 d0             	add    %rdx,%rax
   105af:	f2 0f 58 80 f0 00 00 	addsd  0xf0(%rax),%xmm0
   105b6:	00 
   105b7:	f2 0f 11 80 f0 00 00 	movsd  %xmm0,0xf0(%rax)
   105be:	00 
   105bf:	c3                   	retq   
   105c0:	48 63 c7             	movslq %edi,%rax
   105c3:	48 c1 e0 09          	shl    $0x9,%rax
   105c7:	48 01 d0             	add    %rdx,%rax
   105ca:	f2 0f 58 80 e8 00 00 	addsd  0xe8(%rax),%xmm0
   105d1:	00 
   105d2:	f2 0f 11 80 e8 00 00 	movsd  %xmm0,0xe8(%rax)
   105d9:	00 
   105da:	c3                   	retq   
   105db:	48 63 c7             	movslq %edi,%rax
   105de:	48 c1 e0 09          	shl    $0x9,%rax
   105e2:	48 01 d0             	add    %rdx,%rax
   105e5:	f2 0f 58 80 f8 00 00 	addsd  0xf8(%rax),%xmm0
   105ec:	00 
   105ed:	f2 0f 11 80 f8 00 00 	movsd  %xmm0,0xf8(%rax)
   105f4:	00 
   105f5:	c3                   	retq   
   105f6:	48 63 c7             	movslq %edi,%rax
   105f9:	48 c1 e0 09          	shl    $0x9,%rax
   105fd:	48 01 d0             	add    %rdx,%rax
   10600:	f2 0f 58 80 e0 00 00 	addsd  0xe0(%rax),%xmm0
   10607:	00 
   10608:	f2 0f 11 80 e0 00 00 	movsd  %xmm0,0xe0(%rax)
   1060f:	00 
   10610:	c3                   	retq   
   10611:	48 63 c7             	movslq %edi,%rax
   10614:	48 c1 e0 09          	shl    $0x9,%rax
   10618:	48 01 d0             	add    %rdx,%rax
   1061b:	f2 0f 58 80 d8 00 00 	addsd  0xd8(%rax),%xmm0
   10622:	00 
   10623:	f2 0f 11 80 d8 00 00 	movsd  %xmm0,0xd8(%rax)
   1062a:	00 
   1062b:	c3                   	retq   
   1062c:	48 63 c7             	movslq %edi,%rax
   1062f:	48 c1 e0 09          	shl    $0x9,%rax
   10633:	48 01 d0             	add    %rdx,%rax
   10636:	f2 0f 58 80 18 01 00 	addsd  0x118(%rax),%xmm0
   1063d:	00 
   1063e:	f2 0f 11 80 18 01 00 	movsd  %xmm0,0x118(%rax)
   10645:	00 
   10646:	c3                   	retq   
   10647:	48 63 c7             	movslq %edi,%rax
   1064a:	48 c1 e0 09          	shl    $0x9,%rax
   1064e:	48 01 d0             	add    %rdx,%rax
   10651:	f2 0f 58 80 38 01 00 	addsd  0x138(%rax),%xmm0
   10658:	00 
   10659:	f2 0f 11 80 38 01 00 	movsd  %xmm0,0x138(%rax)
   10660:	00 
   10661:	c3                   	retq   
   10662:	48 63 c7             	movslq %edi,%rax
   10665:	48 c1 e0 09          	shl    $0x9,%rax
   10669:	48 01 d0             	add    %rdx,%rax
   1066c:	f2 0f 58 80 b0 00 00 	addsd  0xb0(%rax),%xmm0
   10673:	00 
   10674:	f2 0f 11 80 b0 00 00 	movsd  %xmm0,0xb0(%rax)
   1067b:	00 
   1067c:	c3                   	retq   
   1067d:	48 63 c7             	movslq %edi,%rax
   10680:	48 c1 e0 09          	shl    $0x9,%rax
   10684:	48 01 d0             	add    %rdx,%rax
   10687:	f2 0f 58 40 50       	addsd  0x50(%rax),%xmm0
   1068c:	f2 0f 11 40 50       	movsd  %xmm0,0x50(%rax)
   10691:	c3                   	retq   
   10692:	48 63 c7             	movslq %edi,%rax
   10695:	48 c1 e0 09          	shl    $0x9,%rax
   10699:	48 01 d0             	add    %rdx,%rax
   1069c:	f2 0f 58 40 68       	addsd  0x68(%rax),%xmm0
   106a1:	f2 0f 11 40 68       	movsd  %xmm0,0x68(%rax)
   106a6:	c3                   	retq   
   106a7:	48 63 c7             	movslq %edi,%rax
   106aa:	48 c1 e0 09          	shl    $0x9,%rax
   106ae:	48 01 d0             	add    %rdx,%rax
   106b1:	f2 0f 58 40 38       	addsd  0x38(%rax),%xmm0
   106b6:	f2 0f 11 40 38       	movsd  %xmm0,0x38(%rax)
   106bb:	c3                   	retq   
   106bc:	48 63 c7             	movslq %edi,%rax
   106bf:	48 c1 e0 09          	shl    $0x9,%rax
   106c3:	48 01 d0             	add    %rdx,%rax
   106c6:	f2 0f 58 40 30       	addsd  0x30(%rax),%xmm0
   106cb:	f2 0f 11 40 30       	movsd  %xmm0,0x30(%rax)
   106d0:	c3                   	retq   
   106d1:	48 63 c7             	movslq %edi,%rax
   106d4:	48 c1 e0 09          	shl    $0x9,%rax
   106d8:	48 01 d0             	add    %rdx,%rax
   106db:	f2 0f 58 40 60       	addsd  0x60(%rax),%xmm0
   106e0:	f2 0f 11 40 60       	movsd  %xmm0,0x60(%rax)
   106e5:	c3                   	retq   
   106e6:	48 63 c7             	movslq %edi,%rax
   106e9:	48 c1 e0 09          	shl    $0x9,%rax
   106ed:	48 01 d0             	add    %rdx,%rax
   106f0:	f2 0f 58 40 58       	addsd  0x58(%rax),%xmm0
   106f5:	f2 0f 11 40 58       	movsd  %xmm0,0x58(%rax)
   106fa:	c3                   	retq   
   106fb:	48 63 c7             	movslq %edi,%rax
   106fe:	48 c1 e0 09          	shl    $0x9,%rax
   10702:	48 01 d0             	add    %rdx,%rax
   10705:	f2 0f 58 40 40       	addsd  0x40(%rax),%xmm0
   1070a:	f2 0f 11 40 40       	movsd  %xmm0,0x40(%rax)
   1070f:	c3                   	retq   
   10710:	48 63 c7             	movslq %edi,%rax
   10713:	48 c1 e0 09          	shl    $0x9,%rax
   10717:	48 01 d0             	add    %rdx,%rax
   1071a:	f2 0f 58 40 28       	addsd  0x28(%rax),%xmm0
   1071f:	f2 0f 11 40 28       	movsd  %xmm0,0x28(%rax)
   10724:	c3                   	retq   
   10725:	48 63 c7             	movslq %edi,%rax
   10728:	48 c1 e0 09          	shl    $0x9,%rax
   1072c:	48 01 d0             	add    %rdx,%rax
   1072f:	f2 0f 58 40 10       	addsd  0x10(%rax),%xmm0
   10734:	f2 0f 11 40 10       	movsd  %xmm0,0x10(%rax)
   10739:	c3                   	retq   
   1073a:	48 63 c7             	movslq %edi,%rax
   1073d:	48 c1 e0 09          	shl    $0x9,%rax
   10741:	48 01 d0             	add    %rdx,%rax
   10744:	f2 0f 58 40 48       	addsd  0x48(%rax),%xmm0
   10749:	f2 0f 11 40 48       	movsd  %xmm0,0x48(%rax)
   1074e:	c3                   	retq   
   1074f:	48 63 c7             	movslq %edi,%rax
   10752:	48 c1 e0 09          	shl    $0x9,%rax
   10756:	48 01 d0             	add    %rdx,%rax
   10759:	f2 0f 58 40 20       	addsd  0x20(%rax),%xmm0
   1075e:	f2 0f 11 40 20       	movsd  %xmm0,0x20(%rax)
   10763:	c3                   	retq   
   10764:	48 63 c7             	movslq %edi,%rax
   10767:	48 c1 e0 09          	shl    $0x9,%rax
   1076b:	48 01 d0             	add    %rdx,%rax
   1076e:	f2 0f 58 40 08       	addsd  0x8(%rax),%xmm0
   10773:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
   10778:	c3                   	retq   
   10779:	48 63 c7             	movslq %edi,%rax
   1077c:	48 c1 e0 09          	shl    $0x9,%rax
   10780:	48 01 d0             	add    %rdx,%rax
   10783:	f2 0f 58 00          	addsd  (%rax),%xmm0
   10787:	f2 0f 11 00          	movsd  %xmm0,(%rax)
   1078b:	c3                   	retq   
   1078c:	89 f2                	mov    %esi,%edx
   1078e:	bf 01 00 00 00       	mov    $0x1,%edi
   10793:	48 8d 35 f7 86 00 00 	lea    0x86f7(%rip),%rsi        # 18e91 <__PRETTY_FUNCTION__.6556+0x30d1>
   1079a:	31 c0                	xor    %eax,%eax
   1079c:	e9 cf 11 ff ff       	jmpq   1970 <__printf_chk@plt>
   107a1:	48 63 ff             	movslq %edi,%rdi
   107a4:	48 c1 e7 09          	shl    $0x9,%rdi
   107a8:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   107ac:	f2 0f 58 80 88 01 00 	addsd  0x188(%rax),%xmm0
   107b3:	00 
   107b4:	f2 0f 11 80 88 01 00 	movsd  %xmm0,0x188(%rax)
   107bb:	00 
   107bc:	c3                   	retq   
   107bd:	50                   	push   %rax
   107be:	48 8d 0d fb 55 00 00 	lea    0x55fb(%rip),%rcx        # 15dc0 <__PRETTY_FUNCTION__.6556>
   107c5:	ba 79 01 00 00       	mov    $0x179,%edx
   107ca:	48 8d 35 95 86 00 00 	lea    0x8695(%rip),%rsi        # 18e66 <__PRETTY_FUNCTION__.6556+0x30a6>
   107d1:	48 8d 3d a6 86 00 00 	lea    0x86a6(%rip),%rdi        # 18e7e <__PRETTY_FUNCTION__.6556+0x30be>
   107d8:	e8 43 10 ff ff       	callq  1820 <__assert_fail@plt>
   107dd:	0f 1f 00             	nopl   (%rax)

00000000000107e0 <statistics_post_th_data>:
   107e0:	39 3d a2 89 33 00    	cmp    %edi,0x3389a2(%rip)        # 349188 <n_cores>
   107e6:	0f 86 f1 04 00 00    	jbe    10cdd <statistics_post_th_data+0x4fd>
   107ec:	48 8b 15 a5 89 33 00 	mov    0x3389a5(%rip),%rdx        # 349198 <thread_stats>
   107f3:	81 fe 91 01 00 00    	cmp    $0x191,%esi
   107f9:	7f 2d                	jg     10828 <statistics_post_th_data+0x48>
   107fb:	83 fe 63             	cmp    $0x63,%esi
   107fe:	0f 8e a8 04 00 00    	jle    10cac <statistics_post_th_data+0x4cc>
   10804:	8d 46 9c             	lea    -0x64(%rsi),%eax
   10807:	3d 2d 01 00 00       	cmp    $0x12d,%eax
   1080c:	0f 87 9a 04 00 00    	ja     10cac <statistics_post_th_data+0x4cc>
   10812:	48 8d 0d bf 50 00 00 	lea    0x50bf(%rip),%rcx        # 158d8 <__PRETTY_FUNCTION__.6204+0x4d8>
   10819:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   1081d:	48 01 c8             	add    %rcx,%rax
   10820:	ff e0                	jmpq   *%rax
   10822:	c3                   	retq   
   10823:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10828:	81 fe 5d 02 00 00    	cmp    $0x25d,%esi
   1082e:	7f 38                	jg     10868 <statistics_post_th_data+0x88>
   10830:	81 fe 58 02 00 00    	cmp    $0x258,%esi
   10836:	0f 8e 70 04 00 00    	jle    10cac <statistics_post_th_data+0x4cc>
   1083c:	81 ee 5a 02 00 00    	sub    $0x25a,%esi
   10842:	83 fe 03             	cmp    $0x3,%esi
   10845:	0f 87 76 04 00 00    	ja     10cc1 <statistics_post_th_data+0x4e1>
   1084b:	48 8d 0d 3e 55 00 00 	lea    0x553e(%rip),%rcx        # 15d90 <__PRETTY_FUNCTION__.6204+0x990>
   10852:	48 63 ff             	movslq %edi,%rdi
   10855:	48 63 04 b1          	movslq (%rcx,%rsi,4),%rax
   10859:	48 c1 e7 09          	shl    $0x9,%rdi
   1085d:	48 01 c8             	add    %rcx,%rax
   10860:	ff e0                	jmpq   *%rax
   10862:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10868:	81 fe 84 03 00 00    	cmp    $0x384,%esi
   1086e:	0f 85 38 04 00 00    	jne    10cac <statistics_post_th_data+0x4cc>
   10874:	48 63 ff             	movslq %edi,%rdi
   10877:	48 c1 e7 09          	shl    $0x9,%rdi
   1087b:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   1087f:	f2 0f 58 80 78 01 00 	addsd  0x178(%rax),%xmm0
   10886:	00 
   10887:	f2 0f 11 80 78 01 00 	movsd  %xmm0,0x178(%rax)
   1088e:	00 
   1088f:	c3                   	retq   
   10890:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   10894:	f2 0f 58 80 d0 01 00 	addsd  0x1d0(%rax),%xmm0
   1089b:	00 
   1089c:	f2 0f 11 80 d0 01 00 	movsd  %xmm0,0x1d0(%rax)
   108a3:	00 
   108a4:	c3                   	retq   
   108a5:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   108a9:	f2 0f 58 80 c8 01 00 	addsd  0x1c8(%rax),%xmm0
   108b0:	00 
   108b1:	f2 0f 11 80 c8 01 00 	movsd  %xmm0,0x1c8(%rax)
   108b8:	00 
   108b9:	c3                   	retq   
   108ba:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   108be:	f2 0f 58 80 98 01 00 	addsd  0x198(%rax),%xmm0
   108c5:	00 
   108c6:	f2 0f 11 80 98 01 00 	movsd  %xmm0,0x198(%rax)
   108cd:	00 
   108ce:	c3                   	retq   
   108cf:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   108d3:	f2 0f 58 80 a0 01 00 	addsd  0x1a0(%rax),%xmm0
   108da:	00 
   108db:	f2 0f 11 80 a0 01 00 	movsd  %xmm0,0x1a0(%rax)
   108e2:	00 
   108e3:	c3                   	retq   
   108e4:	48 63 c7             	movslq %edi,%rax
   108e7:	f2 0f 10 05 d1 46 00 	movsd  0x46d1(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
   108ee:	00 
   108ef:	48 c1 e0 09          	shl    $0x9,%rax
   108f3:	48 01 d0             	add    %rdx,%rax
   108f6:	f2 0f 58 80 98 00 00 	addsd  0x98(%rax),%xmm0
   108fd:	00 
   108fe:	f2 0f 11 80 98 00 00 	movsd  %xmm0,0x98(%rax)
   10905:	00 
   10906:	c3                   	retq   
   10907:	48 63 c7             	movslq %edi,%rax
   1090a:	f2 0f 10 05 ae 46 00 	movsd  0x46ae(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
   10911:	00 
   10912:	48 c1 e0 09          	shl    $0x9,%rax
   10916:	48 01 d0             	add    %rdx,%rax
   10919:	f2 0f 58 80 90 00 00 	addsd  0x90(%rax),%xmm0
   10920:	00 
   10921:	f2 0f 11 80 90 00 00 	movsd  %xmm0,0x90(%rax)
   10928:	00 
   10929:	c3                   	retq   
   1092a:	48 63 c7             	movslq %edi,%rax
   1092d:	48 c1 e0 09          	shl    $0x9,%rax
   10931:	48 01 d0             	add    %rdx,%rax
   10934:	f2 0f 58 80 a8 00 00 	addsd  0xa8(%rax),%xmm0
   1093b:	00 
   1093c:	f2 0f 11 80 a8 00 00 	movsd  %xmm0,0xa8(%rax)
   10943:	00 
   10944:	c3                   	retq   
   10945:	48 63 ff             	movslq %edi,%rdi
   10948:	48 c1 e7 09          	shl    $0x9,%rdi
   1094c:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   10950:	f2 0f 10 88 48 01 00 	movsd  0x148(%rax),%xmm1
   10957:	00 
   10958:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1095c:	f2 0f 5e 80 a0 00 00 	divsd  0xa0(%rax),%xmm0
   10963:	00 
   10964:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   10968:	f2 0f 11 80 48 01 00 	movsd  %xmm0,0x148(%rax)
   1096f:	00 
   10970:	c3                   	retq   
   10971:	48 63 c7             	movslq %edi,%rax
   10974:	48 c1 e0 09          	shl    $0x9,%rax
   10978:	48 01 d0             	add    %rdx,%rax
   1097b:	f2 0f 58 80 a0 00 00 	addsd  0xa0(%rax),%xmm0
   10982:	00 
   10983:	f2 0f 11 80 a0 00 00 	movsd  %xmm0,0xa0(%rax)
   1098a:	00 
   1098b:	c3                   	retq   
   1098c:	48 63 c7             	movslq %edi,%rax
   1098f:	48 c1 e0 09          	shl    $0x9,%rax
   10993:	48 01 d0             	add    %rdx,%rax
   10996:	f2 0f 58 40 78       	addsd  0x78(%rax),%xmm0
   1099b:	f2 0f 11 40 78       	movsd  %xmm0,0x78(%rax)
   109a0:	c3                   	retq   
   109a1:	48 63 c7             	movslq %edi,%rax
   109a4:	48 c1 e0 09          	shl    $0x9,%rax
   109a8:	48 01 d0             	add    %rdx,%rax
   109ab:	f2 0f 58 40 70       	addsd  0x70(%rax),%xmm0
   109b0:	f2 0f 11 40 70       	movsd  %xmm0,0x70(%rax)
   109b5:	c3                   	retq   
   109b6:	48 63 c7             	movslq %edi,%rax
   109b9:	48 c1 e0 09          	shl    $0x9,%rax
   109bd:	48 01 d0             	add    %rdx,%rax
   109c0:	f2 0f 58 80 28 01 00 	addsd  0x128(%rax),%xmm0
   109c7:	00 
   109c8:	f2 0f 11 80 28 01 00 	movsd  %xmm0,0x128(%rax)
   109cf:	00 
   109d0:	c3                   	retq   
   109d1:	48 63 c7             	movslq %edi,%rax
   109d4:	48 c1 e0 09          	shl    $0x9,%rax
   109d8:	48 01 d0             	add    %rdx,%rax
   109db:	f2 0f 58 80 80 00 00 	addsd  0x80(%rax),%xmm0
   109e2:	00 
   109e3:	f2 0f 11 80 80 00 00 	movsd  %xmm0,0x80(%rax)
   109ea:	00 
   109eb:	c3                   	retq   
   109ec:	48 63 c7             	movslq %edi,%rax
   109ef:	48 c1 e0 09          	shl    $0x9,%rax
   109f3:	48 01 d0             	add    %rdx,%rax
   109f6:	f2 0f 58 80 40 01 00 	addsd  0x140(%rax),%xmm0
   109fd:	00 
   109fe:	f2 0f 11 80 40 01 00 	movsd  %xmm0,0x140(%rax)
   10a05:	00 
   10a06:	c3                   	retq   
   10a07:	48 63 c7             	movslq %edi,%rax
   10a0a:	48 c1 e0 09          	shl    $0x9,%rax
   10a0e:	48 01 d0             	add    %rdx,%rax
   10a11:	f2 0f 58 80 30 01 00 	addsd  0x130(%rax),%xmm0
   10a18:	00 
   10a19:	f2 0f 11 80 30 01 00 	movsd  %xmm0,0x130(%rax)
   10a20:	00 
   10a21:	c3                   	retq   
   10a22:	48 63 c7             	movslq %edi,%rax
   10a25:	48 c1 e0 09          	shl    $0x9,%rax
   10a29:	48 01 d0             	add    %rdx,%rax
   10a2c:	f2 0f 58 80 88 00 00 	addsd  0x88(%rax),%xmm0
   10a33:	00 
   10a34:	f2 0f 11 80 88 00 00 	movsd  %xmm0,0x88(%rax)
   10a3b:	00 
   10a3c:	c3                   	retq   
   10a3d:	48 63 ff             	movslq %edi,%rdi
   10a40:	48 c1 e7 09          	shl    $0x9,%rdi
   10a44:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   10a48:	f2 0f 58 80 c8 00 00 	addsd  0xc8(%rax),%xmm0
   10a4f:	00 
   10a50:	f2 0f 11 80 c8 00 00 	movsd  %xmm0,0xc8(%rax)
   10a57:	00 
   10a58:	c3                   	retq   
   10a59:	48 63 c7             	movslq %edi,%rax
   10a5c:	48 c1 e0 09          	shl    $0x9,%rax
   10a60:	48 01 d0             	add    %rdx,%rax
   10a63:	f2 0f 58 80 c0 00 00 	addsd  0xc0(%rax),%xmm0
   10a6a:	00 
   10a6b:	f2 0f 11 80 c0 00 00 	movsd  %xmm0,0xc0(%rax)
   10a72:	00 
   10a73:	c3                   	retq   
   10a74:	48 63 c7             	movslq %edi,%rax
   10a77:	48 c1 e0 09          	shl    $0x9,%rax
   10a7b:	48 01 d0             	add    %rdx,%rax
   10a7e:	f2 0f 58 80 10 01 00 	addsd  0x110(%rax),%xmm0
   10a85:	00 
   10a86:	f2 0f 11 80 10 01 00 	movsd  %xmm0,0x110(%rax)
   10a8d:	00 
   10a8e:	c3                   	retq   
   10a8f:	48 63 c7             	movslq %edi,%rax
   10a92:	48 c1 e0 09          	shl    $0x9,%rax
   10a96:	48 01 d0             	add    %rdx,%rax
   10a99:	f2 0f 58 80 08 01 00 	addsd  0x108(%rax),%xmm0
   10aa0:	00 
   10aa1:	f2 0f 11 80 08 01 00 	movsd  %xmm0,0x108(%rax)
   10aa8:	00 
   10aa9:	c3                   	retq   
   10aaa:	48 63 c7             	movslq %edi,%rax
   10aad:	48 c1 e0 09          	shl    $0x9,%rax
   10ab1:	48 01 d0             	add    %rdx,%rax
   10ab4:	f2 0f 58 80 00 01 00 	addsd  0x100(%rax),%xmm0
   10abb:	00 
   10abc:	f2 0f 11 80 00 01 00 	movsd  %xmm0,0x100(%rax)
   10ac3:	00 
   10ac4:	c3                   	retq   
   10ac5:	48 63 c7             	movslq %edi,%rax
   10ac8:	48 c1 e0 09          	shl    $0x9,%rax
   10acc:	48 01 d0             	add    %rdx,%rax
   10acf:	f2 0f 58 80 f0 00 00 	addsd  0xf0(%rax),%xmm0
   10ad6:	00 
   10ad7:	f2 0f 11 80 f0 00 00 	movsd  %xmm0,0xf0(%rax)
   10ade:	00 
   10adf:	c3                   	retq   
   10ae0:	48 63 c7             	movslq %edi,%rax
   10ae3:	48 c1 e0 09          	shl    $0x9,%rax
   10ae7:	48 01 d0             	add    %rdx,%rax
   10aea:	f2 0f 58 80 e8 00 00 	addsd  0xe8(%rax),%xmm0
   10af1:	00 
   10af2:	f2 0f 11 80 e8 00 00 	movsd  %xmm0,0xe8(%rax)
   10af9:	00 
   10afa:	c3                   	retq   
   10afb:	48 63 c7             	movslq %edi,%rax
   10afe:	48 c1 e0 09          	shl    $0x9,%rax
   10b02:	48 01 d0             	add    %rdx,%rax
   10b05:	f2 0f 58 80 f8 00 00 	addsd  0xf8(%rax),%xmm0
   10b0c:	00 
   10b0d:	f2 0f 11 80 f8 00 00 	movsd  %xmm0,0xf8(%rax)
   10b14:	00 
   10b15:	c3                   	retq   
   10b16:	48 63 c7             	movslq %edi,%rax
   10b19:	48 c1 e0 09          	shl    $0x9,%rax
   10b1d:	48 01 d0             	add    %rdx,%rax
   10b20:	f2 0f 58 80 e0 00 00 	addsd  0xe0(%rax),%xmm0
   10b27:	00 
   10b28:	f2 0f 11 80 e0 00 00 	movsd  %xmm0,0xe0(%rax)
   10b2f:	00 
   10b30:	c3                   	retq   
   10b31:	48 63 c7             	movslq %edi,%rax
   10b34:	48 c1 e0 09          	shl    $0x9,%rax
   10b38:	48 01 d0             	add    %rdx,%rax
   10b3b:	f2 0f 58 80 d8 00 00 	addsd  0xd8(%rax),%xmm0
   10b42:	00 
   10b43:	f2 0f 11 80 d8 00 00 	movsd  %xmm0,0xd8(%rax)
   10b4a:	00 
   10b4b:	c3                   	retq   
   10b4c:	48 63 c7             	movslq %edi,%rax
   10b4f:	48 c1 e0 09          	shl    $0x9,%rax
   10b53:	48 01 d0             	add    %rdx,%rax
   10b56:	f2 0f 58 80 18 01 00 	addsd  0x118(%rax),%xmm0
   10b5d:	00 
   10b5e:	f2 0f 11 80 18 01 00 	movsd  %xmm0,0x118(%rax)
   10b65:	00 
   10b66:	c3                   	retq   
   10b67:	48 63 c7             	movslq %edi,%rax
   10b6a:	48 c1 e0 09          	shl    $0x9,%rax
   10b6e:	48 01 d0             	add    %rdx,%rax
   10b71:	f2 0f 58 80 38 01 00 	addsd  0x138(%rax),%xmm0
   10b78:	00 
   10b79:	f2 0f 11 80 38 01 00 	movsd  %xmm0,0x138(%rax)
   10b80:	00 
   10b81:	c3                   	retq   
   10b82:	48 63 c7             	movslq %edi,%rax
   10b85:	48 c1 e0 09          	shl    $0x9,%rax
   10b89:	48 01 d0             	add    %rdx,%rax
   10b8c:	f2 0f 58 80 b0 00 00 	addsd  0xb0(%rax),%xmm0
   10b93:	00 
   10b94:	f2 0f 11 80 b0 00 00 	movsd  %xmm0,0xb0(%rax)
   10b9b:	00 
   10b9c:	c3                   	retq   
   10b9d:	48 63 c7             	movslq %edi,%rax
   10ba0:	48 c1 e0 09          	shl    $0x9,%rax
   10ba4:	48 01 d0             	add    %rdx,%rax
   10ba7:	f2 0f 58 40 50       	addsd  0x50(%rax),%xmm0
   10bac:	f2 0f 11 40 50       	movsd  %xmm0,0x50(%rax)
   10bb1:	c3                   	retq   
   10bb2:	48 63 c7             	movslq %edi,%rax
   10bb5:	48 c1 e0 09          	shl    $0x9,%rax
   10bb9:	48 01 d0             	add    %rdx,%rax
   10bbc:	f2 0f 58 40 68       	addsd  0x68(%rax),%xmm0
   10bc1:	f2 0f 11 40 68       	movsd  %xmm0,0x68(%rax)
   10bc6:	c3                   	retq   
   10bc7:	48 63 c7             	movslq %edi,%rax
   10bca:	48 c1 e0 09          	shl    $0x9,%rax
   10bce:	48 01 d0             	add    %rdx,%rax
   10bd1:	f2 0f 58 40 38       	addsd  0x38(%rax),%xmm0
   10bd6:	f2 0f 11 40 38       	movsd  %xmm0,0x38(%rax)
   10bdb:	c3                   	retq   
   10bdc:	48 63 c7             	movslq %edi,%rax
   10bdf:	48 c1 e0 09          	shl    $0x9,%rax
   10be3:	48 01 d0             	add    %rdx,%rax
   10be6:	f2 0f 58 40 30       	addsd  0x30(%rax),%xmm0
   10beb:	f2 0f 11 40 30       	movsd  %xmm0,0x30(%rax)
   10bf0:	c3                   	retq   
   10bf1:	48 63 c7             	movslq %edi,%rax
   10bf4:	48 c1 e0 09          	shl    $0x9,%rax
   10bf8:	48 01 d0             	add    %rdx,%rax
   10bfb:	f2 0f 58 40 60       	addsd  0x60(%rax),%xmm0
   10c00:	f2 0f 11 40 60       	movsd  %xmm0,0x60(%rax)
   10c05:	c3                   	retq   
   10c06:	48 63 c7             	movslq %edi,%rax
   10c09:	48 c1 e0 09          	shl    $0x9,%rax
   10c0d:	48 01 d0             	add    %rdx,%rax
   10c10:	f2 0f 58 40 58       	addsd  0x58(%rax),%xmm0
   10c15:	f2 0f 11 40 58       	movsd  %xmm0,0x58(%rax)
   10c1a:	c3                   	retq   
   10c1b:	48 63 c7             	movslq %edi,%rax
   10c1e:	48 c1 e0 09          	shl    $0x9,%rax
   10c22:	48 01 d0             	add    %rdx,%rax
   10c25:	f2 0f 58 40 40       	addsd  0x40(%rax),%xmm0
   10c2a:	f2 0f 11 40 40       	movsd  %xmm0,0x40(%rax)
   10c2f:	c3                   	retq   
   10c30:	48 63 c7             	movslq %edi,%rax
   10c33:	48 c1 e0 09          	shl    $0x9,%rax
   10c37:	48 01 d0             	add    %rdx,%rax
   10c3a:	f2 0f 58 40 28       	addsd  0x28(%rax),%xmm0
   10c3f:	f2 0f 11 40 28       	movsd  %xmm0,0x28(%rax)
   10c44:	c3                   	retq   
   10c45:	48 63 c7             	movslq %edi,%rax
   10c48:	48 c1 e0 09          	shl    $0x9,%rax
   10c4c:	48 01 d0             	add    %rdx,%rax
   10c4f:	f2 0f 58 40 10       	addsd  0x10(%rax),%xmm0
   10c54:	f2 0f 11 40 10       	movsd  %xmm0,0x10(%rax)
   10c59:	c3                   	retq   
   10c5a:	48 63 c7             	movslq %edi,%rax
   10c5d:	48 c1 e0 09          	shl    $0x9,%rax
   10c61:	48 01 d0             	add    %rdx,%rax
   10c64:	f2 0f 58 40 48       	addsd  0x48(%rax),%xmm0
   10c69:	f2 0f 11 40 48       	movsd  %xmm0,0x48(%rax)
   10c6e:	c3                   	retq   
   10c6f:	48 63 c7             	movslq %edi,%rax
   10c72:	48 c1 e0 09          	shl    $0x9,%rax
   10c76:	48 01 d0             	add    %rdx,%rax
   10c79:	f2 0f 58 40 20       	addsd  0x20(%rax),%xmm0
   10c7e:	f2 0f 11 40 20       	movsd  %xmm0,0x20(%rax)
   10c83:	c3                   	retq   
   10c84:	48 63 c7             	movslq %edi,%rax
   10c87:	48 c1 e0 09          	shl    $0x9,%rax
   10c8b:	48 01 d0             	add    %rdx,%rax
   10c8e:	f2 0f 58 40 08       	addsd  0x8(%rax),%xmm0
   10c93:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
   10c98:	c3                   	retq   
   10c99:	48 63 c7             	movslq %edi,%rax
   10c9c:	48 c1 e0 09          	shl    $0x9,%rax
   10ca0:	48 01 d0             	add    %rdx,%rax
   10ca3:	f2 0f 58 00          	addsd  (%rax),%xmm0
   10ca7:	f2 0f 11 00          	movsd  %xmm0,(%rax)
   10cab:	c3                   	retq   
   10cac:	89 f2                	mov    %esi,%edx
   10cae:	bf 01 00 00 00       	mov    $0x1,%edi
   10cb3:	48 8d 35 d7 81 00 00 	lea    0x81d7(%rip),%rsi        # 18e91 <__PRETTY_FUNCTION__.6556+0x30d1>
   10cba:	31 c0                	xor    %eax,%eax
   10cbc:	e9 af 0c ff ff       	jmpq   1970 <__printf_chk@plt>
   10cc1:	48 63 ff             	movslq %edi,%rdi
   10cc4:	48 c1 e7 09          	shl    $0x9,%rdi
   10cc8:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
   10ccc:	f2 0f 58 80 88 01 00 	addsd  0x188(%rax),%xmm0
   10cd3:	00 
   10cd4:	f2 0f 11 80 88 01 00 	movsd  %xmm0,0x188(%rax)
   10cdb:	00 
   10cdc:	c3                   	retq   
   10cdd:	50                   	push   %rax
   10cde:	48 8d 0d bb 50 00 00 	lea    0x50bb(%rip),%rcx        # 15da0 <__PRETTY_FUNCTION__.6562>
   10ce5:	ba 7e 01 00 00       	mov    $0x17e,%edx
   10cea:	48 8d 35 75 81 00 00 	lea    0x8175(%rip),%rsi        # 18e66 <__PRETTY_FUNCTION__.6556+0x30a6>
   10cf1:	48 8d 3d b6 81 00 00 	lea    0x81b6(%rip),%rdi        # 18eae <__PRETTY_FUNCTION__.6556+0x30ee>
   10cf8:	e8 23 0b ff ff       	callq  1820 <__assert_fail@plt>
   10cfd:	0f 1f 00             	nopl   (%rax)

0000000000010d00 <gather_statistics>:
   10d00:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
   10d07:	48 8b 05 0a 85 33 00 	mov    0x33850a(%rip),%rax        # 349218 <system_stats>
   10d0e:	8b 35 74 84 33 00    	mov    0x338474(%rip),%esi        # 349188 <n_cores>
   10d14:	f2 0f 10 70 68       	movsd  0x68(%rax),%xmm6
   10d19:	f2 0f 10 88 90 00 00 	movsd  0x90(%rax),%xmm1
   10d20:	00 
   10d21:	f2 0f 10 80 08 01 00 	movsd  0x108(%rax),%xmm0
   10d28:	00 
   10d29:	f2 0f 10 90 f8 00 00 	movsd  0xf8(%rax),%xmm2
   10d30:	00 
   10d31:	f2 44 0f 10 58 38    	movsd  0x38(%rax),%xmm11
   10d37:	f2 0f 10 a8 c8 00 00 	movsd  0xc8(%rax),%xmm5
   10d3e:	00 
   10d3f:	f2 0f 11 b4 24 e0 00 	movsd  %xmm6,0xe0(%rsp)
   10d46:	00 00 
   10d48:	85 f6                	test   %esi,%esi
   10d4a:	0f 84 a0 09 00 00    	je     116f0 <gather_statistics+0x9f0>
   10d50:	48 8b 3d 41 84 33 00 	mov    0x338441(%rip),%rdi        # 349198 <thread_stats>
   10d57:	8d 4e ff             	lea    -0x1(%rsi),%ecx
   10d5a:	f2 0f 10 60 10       	movsd  0x10(%rax),%xmm4
   10d5f:	48 c1 e1 09          	shl    $0x9,%rcx
   10d63:	f2 0f 10 58 28       	movsd  0x28(%rax),%xmm3
   10d68:	48 8d 57 10          	lea    0x10(%rdi),%rdx
   10d6c:	48 8d 8c 0f 10 02 00 	lea    0x210(%rdi,%rcx,1),%rcx
   10d73:	00 
   10d74:	0f 1f 40 00          	nopl   0x0(%rax)
   10d78:	f2 0f 58 22          	addsd  (%rdx),%xmm4
   10d7c:	48 81 c2 00 02 00 00 	add    $0x200,%rdx
   10d83:	f2 0f 11 60 10       	movsd  %xmm4,0x10(%rax)
   10d88:	f2 0f 58 8a 80 fe ff 	addsd  -0x180(%rdx),%xmm1
   10d8f:	ff 
   10d90:	f2 0f 11 88 90 00 00 	movsd  %xmm1,0x90(%rax)
   10d97:	00 
   10d98:	f2 0f 58 82 f8 fe ff 	addsd  -0x108(%rdx),%xmm0
   10d9f:	ff 
   10da0:	f2 0f 11 80 08 01 00 	movsd  %xmm0,0x108(%rax)
   10da7:	00 
   10da8:	f2 0f 58 92 e8 fe ff 	addsd  -0x118(%rdx),%xmm2
   10daf:	ff 
   10db0:	f2 0f 11 90 f8 00 00 	movsd  %xmm2,0xf8(%rax)
   10db7:	00 
   10db8:	f2 0f 58 9a 18 fe ff 	addsd  -0x1e8(%rdx),%xmm3
   10dbf:	ff 
   10dc0:	f2 0f 11 58 28       	movsd  %xmm3,0x28(%rax)
   10dc5:	f2 44 0f 58 9a 28 fe 	addsd  -0x1d8(%rdx),%xmm11
   10dcc:	ff ff 
   10dce:	f2 44 0f 11 58 38    	movsd  %xmm11,0x38(%rax)
   10dd4:	f2 0f 58 aa b8 fe ff 	addsd  -0x148(%rdx),%xmm5
   10ddb:	ff 
   10ddc:	f2 0f 11 a8 c8 00 00 	movsd  %xmm5,0xc8(%rax)
   10de3:	00 
   10de4:	f2 0f 58 b2 58 fe ff 	addsd  -0x1a8(%rdx),%xmm6
   10deb:	ff 
   10dec:	f2 0f 11 70 68       	movsd  %xmm6,0x68(%rax)
   10df1:	48 39 d1             	cmp    %rdx,%rcx
   10df4:	75 82                	jne    10d78 <gather_statistics+0x78>
   10df6:	f2 0f 11 b4 24 e0 00 	movsd  %xmm6,0xe0(%rsp)
   10dfd:	00 00 
   10dff:	66 0f ef db          	pxor   %xmm3,%xmm3
   10e03:	f2 48 0f 2a de       	cvtsi2sd %rsi,%xmm3
   10e08:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   10e0c:	f2 0f 10 60 48       	movsd  0x48(%rax),%xmm4
   10e11:	f2 0f 11 90 58 01 00 	movsd  %xmm2,0x158(%rax)
   10e18:	00 
   10e19:	f2 0f 10 b8 50 01 00 	movsd  0x150(%rax),%xmm7
   10e20:	00 
   10e21:	44 8b 0d 88 83 33 00 	mov    0x338388(%rip),%r9d        # 3491b0 <n_prc_tot>
   10e28:	f2 44 0f 10 38       	movsd  (%rax),%xmm15
   10e2d:	f2 0f 11 3c 24       	movsd  %xmm7,(%rsp)
   10e32:	f2 0f 10 78 30       	movsd  0x30(%rax),%xmm7
   10e37:	f2 44 0f 10 80 b0 00 	movsd  0xb0(%rax),%xmm8
   10e3e:	00 00 
   10e40:	f2 0f 11 a4 24 d0 00 	movsd  %xmm4,0xd0(%rsp)
   10e47:	00 00 
   10e49:	f2 0f 10 a0 80 00 00 	movsd  0x80(%rax),%xmm4
   10e50:	00 
   10e51:	f2 0f 10 b0 18 01 00 	movsd  0x118(%rax),%xmm6
   10e58:	00 
   10e59:	f2 44 0f 10 90 c0 00 	movsd  0xc0(%rax),%xmm10
   10e60:	00 00 
   10e62:	f2 0f 11 7c 24 10    	movsd  %xmm7,0x10(%rsp)
   10e68:	f2 0f 10 b8 d8 00 00 	movsd  0xd8(%rax),%xmm7
   10e6f:	00 
   10e70:	f2 44 0f 10 b0 88 00 	movsd  0x88(%rax),%xmm14
   10e77:	00 00 
   10e79:	f2 0f 11 7c 24 40    	movsd  %xmm7,0x40(%rsp)
   10e7f:	f2 0f 10 78 58       	movsd  0x58(%rax),%xmm7
   10e84:	f2 0f 11 7c 24 08    	movsd  %xmm7,0x8(%rsp)
   10e8a:	f2 0f 10 b8 10 01 00 	movsd  0x110(%rax),%xmm7
   10e91:	00 
   10e92:	f2 0f 11 7c 24 50    	movsd  %xmm7,0x50(%rsp)
   10e98:	f2 0f 10 b8 98 00 00 	movsd  0x98(%rax),%xmm7
   10e9f:	00 
   10ea0:	f2 0f 11 7c 24 38    	movsd  %xmm7,0x38(%rsp)
   10ea6:	f2 0f 10 b8 38 01 00 	movsd  0x138(%rax),%xmm7
   10ead:	00 
   10eae:	f2 0f 11 7c 24 68    	movsd  %xmm7,0x68(%rsp)
   10eb4:	f2 0f 10 78 70       	movsd  0x70(%rax),%xmm7
   10eb9:	f2 0f 11 7c 24 28    	movsd  %xmm7,0x28(%rsp)
   10ebf:	f2 0f 10 b8 30 01 00 	movsd  0x130(%rax),%xmm7
   10ec6:	00 
   10ec7:	f2 0f 11 7c 24 60    	movsd  %xmm7,0x60(%rsp)
   10ecd:	f2 0f 10 b8 28 01 00 	movsd  0x128(%rax),%xmm7
   10ed4:	00 
   10ed5:	f2 0f 5e d3          	divsd  %xmm3,%xmm2
   10ed9:	f2 0f 11 7c 24 58    	movsd  %xmm7,0x58(%rsp)
   10edf:	f2 0f 11 80 08 01 00 	movsd  %xmm0,0x108(%rax)
   10ee6:	00 
   10ee7:	f2 0f 11 90 f8 00 00 	movsd  %xmm2,0xf8(%rax)
   10eee:	00 
   10eef:	66 44 0f 28 e2       	movapd %xmm2,%xmm12
   10ef4:	f2 0f 11 64 24 20    	movsd  %xmm4,0x20(%rsp)
   10efa:	f2 0f 10 b8 e0 00 00 	movsd  0xe0(%rax),%xmm7
   10f01:	00 
   10f02:	f2 0f 10 58 40       	movsd  0x40(%rax),%xmm3
   10f07:	f2 44 0f 10 a8 c8 01 	movsd  0x1c8(%rax),%xmm13
   10f0e:	00 00 
   10f10:	f2 0f 10 a0 a0 00 00 	movsd  0xa0(%rax),%xmm4
   10f17:	00 
   10f18:	f2 44 0f 10 88 98 01 	movsd  0x198(%rax),%xmm9
   10f1f:	00 00 
   10f21:	f2 0f 11 7c 24 48    	movsd  %xmm7,0x48(%rsp)
   10f27:	f2 0f 10 b8 40 01 00 	movsd  0x140(%rax),%xmm7
   10f2e:	00 
   10f2f:	f2 0f 11 5c 24 18    	movsd  %xmm3,0x18(%rsp)
   10f35:	f2 0f 10 98 48 01 00 	movsd  0x148(%rax),%xmm3
   10f3c:	00 
   10f3d:	f2 44 0f 11 ac 24 88 	movsd  %xmm13,0x88(%rsp)
   10f44:	00 00 00 
   10f47:	f2 44 0f 10 a8 d0 01 	movsd  0x1d0(%rax),%xmm13
   10f4e:	00 00 
   10f50:	f2 0f 11 64 24 30    	movsd  %xmm4,0x30(%rsp)
   10f56:	f2 0f 10 a0 78 01 00 	movsd  0x178(%rax),%xmm4
   10f5d:	00 
   10f5e:	f2 0f 11 7c 24 70    	movsd  %xmm7,0x70(%rsp)
   10f64:	f2 0f 10 b8 a0 01 00 	movsd  0x1a0(%rax),%xmm7
   10f6b:	00 
   10f6c:	f2 0f 11 5c 24 78    	movsd  %xmm3,0x78(%rsp)
   10f72:	f2 0f 10 98 88 01 00 	movsd  0x188(%rax),%xmm3
   10f79:	00 
   10f7a:	f2 44 0f 11 ac 24 80 	movsd  %xmm13,0x80(%rsp)
   10f81:	00 00 00 
   10f84:	45 85 c9             	test   %r9d,%r9d
   10f87:	0f 84 73 07 00 00    	je     11700 <gather_statistics+0xa00>
   10f8d:	f2 44 0f 10 68 08    	movsd  0x8(%rax),%xmm13
   10f93:	48 8b 15 d6 82 33 00 	mov    0x3382d6(%rip),%rdx        # 349270 <lp_stats>
   10f9a:	45 8d 41 ff          	lea    -0x1(%r9),%r8d
   10f9e:	f2 44 0f 11 9c 24 f0 	movsd  %xmm11,0xf0(%rsp)
   10fa5:	00 00 00 
   10fa8:	49 c1 e0 09          	shl    $0x9,%r8
   10fac:	f2 0f 10 90 00 01 00 	movsd  0x100(%rax),%xmm2
   10fb3:	00 
   10fb4:	f2 0f 11 ac 24 f8 00 	movsd  %xmm5,0xf8(%rsp)
   10fbb:	00 00 
   10fbd:	66 45 0f 28 de       	movapd %xmm14,%xmm11
   10fc2:	48 8d 8a 00 02 00 00 	lea    0x200(%rdx),%rcx
   10fc9:	48 8b 35 b8 c0 20 00 	mov    0x20c0b8(%rip),%rsi        # 21d088 <LPS>
   10fd0:	f2 44 0f 11 ac 24 90 	movsd  %xmm13,0x90(%rsp)
   10fd7:	00 00 00 
   10fda:	f2 44 0f 10 68 10    	movsd  0x10(%rax),%xmm13
   10fe0:	f2 0f 10 ac 24 d0 00 	movsd  0xd0(%rsp),%xmm5
   10fe7:	00 00 
   10fe9:	49 01 c8             	add    %rcx,%r8
   10fec:	f2 0f 11 94 24 c8 00 	movsd  %xmm2,0xc8(%rsp)
   10ff3:	00 00 
   10ff5:	66 41 0f 28 d7       	movapd %xmm15,%xmm2
   10ffa:	f2 44 0f 11 ac 24 98 	movsd  %xmm13,0x98(%rsp)
   11001:	00 00 00 
   11004:	f2 44 0f 10 68 18    	movsd  0x18(%rax),%xmm13
   1100a:	f2 0f 11 84 24 d0 00 	movsd  %xmm0,0xd0(%rsp)
   11011:	00 00 
   11013:	f2 44 0f 11 ac 24 d8 	movsd  %xmm13,0xd8(%rsp)
   1101a:	00 00 00 
   1101d:	f2 44 0f 10 68 20    	movsd  0x20(%rax),%xmm13
   11023:	f2 44 0f 10 b4 24 d8 	movsd  0xd8(%rsp),%xmm14
   1102a:	00 00 00 
   1102d:	f2 44 0f 11 ac 24 e8 	movsd  %xmm13,0xe8(%rsp)
   11034:	00 00 00 
   11037:	f2 44 0f 10 68 50    	movsd  0x50(%rax),%xmm13
   1103d:	f2 44 0f 10 bc 24 e8 	movsd  0xe8(%rsp),%xmm15
   11044:	00 00 00 
   11047:	f2 44 0f 11 ac 24 a0 	movsd  %xmm13,0xa0(%rsp)
   1104e:	00 00 00 
   11051:	f2 44 0f 10 68 60    	movsd  0x60(%rax),%xmm13
   11057:	f2 44 0f 11 ac 24 a8 	movsd  %xmm13,0xa8(%rsp)
   1105e:	00 00 00 
   11061:	f2 44 0f 10 68 78    	movsd  0x78(%rax),%xmm13
   11067:	f2 44 0f 11 ac 24 b0 	movsd  %xmm13,0xb0(%rsp)
   1106e:	00 00 00 
   11071:	f2 44 0f 10 a8 a8 00 	movsd  0xa8(%rax),%xmm13
   11078:	00 00 
   1107a:	f2 44 0f 11 ac 24 b8 	movsd  %xmm13,0xb8(%rsp)
   11081:	00 00 00 
   11084:	f2 44 0f 10 a8 e8 00 	movsd  0xe8(%rax),%xmm13
   1108b:	00 00 
   1108d:	f2 44 0f 11 ac 24 c0 	movsd  %xmm13,0xc0(%rsp)
   11094:	00 00 00 
   11097:	f2 44 0f 10 a8 f0 00 	movsd  0xf0(%rax),%xmm13
   1109e:	00 00 
   110a0:	eb 0d                	jmp    110af <gather_statistics+0x3af>
   110a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   110a8:	48 81 c1 00 02 00 00 	add    $0x200,%rcx
   110af:	f2 0f 58 12          	addsd  (%rdx),%xmm2
   110b3:	48 83 c6 08          	add    $0x8,%rsi
   110b7:	f2 0f 10 84 24 90 00 	movsd  0x90(%rsp),%xmm0
   110be:	00 00 
   110c0:	f2 0f 11 10          	movsd  %xmm2,(%rax)
   110c4:	f2 0f 58 42 08       	addsd  0x8(%rdx),%xmm0
   110c9:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
   110ce:	f2 0f 11 84 24 90 00 	movsd  %xmm0,0x90(%rsp)
   110d5:	00 00 
   110d7:	f2 0f 10 84 24 98 00 	movsd  0x98(%rsp),%xmm0
   110de:	00 00 
   110e0:	f2 0f 58 42 10       	addsd  0x10(%rdx),%xmm0
   110e5:	f2 0f 11 40 10       	movsd  %xmm0,0x10(%rax)
   110ea:	f2 44 0f 58 72 18    	addsd  0x18(%rdx),%xmm14
   110f0:	f2 0f 11 84 24 98 00 	movsd  %xmm0,0x98(%rsp)
   110f7:	00 00 
   110f9:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   110ff:	f2 44 0f 11 70 18    	movsd  %xmm14,0x18(%rax)
   11105:	f2 0f 58 42 58       	addsd  0x58(%rdx),%xmm0
   1110a:	f2 0f 11 40 58       	movsd  %xmm0,0x58(%rax)
   1110f:	f2 44 0f 58 7a 20    	addsd  0x20(%rdx),%xmm15
   11115:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   1111b:	f2 0f 10 84 24 a0 00 	movsd  0xa0(%rsp),%xmm0
   11122:	00 00 
   11124:	f2 44 0f 11 78 20    	movsd  %xmm15,0x20(%rax)
   1112a:	f2 0f 58 6a 48       	addsd  0x48(%rdx),%xmm5
   1112f:	f2 0f 11 68 48       	movsd  %xmm5,0x48(%rax)
   11134:	f2 0f 58 42 50       	addsd  0x50(%rdx),%xmm0
   11139:	f2 0f 11 40 50       	movsd  %xmm0,0x50(%rax)
   1113e:	f2 0f 11 84 24 a0 00 	movsd  %xmm0,0xa0(%rsp)
   11145:	00 00 
   11147:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
   1114d:	f2 0f 58 42 30       	addsd  0x30(%rdx),%xmm0
   11152:	f2 0f 11 40 30       	movsd  %xmm0,0x30(%rax)
   11157:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
   1115d:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
   11163:	f2 0f 58 42 40       	addsd  0x40(%rdx),%xmm0
   11168:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
   1116e:	f2 0f 11 40 40       	movsd  %xmm0,0x40(%rax)
   11173:	f2 0f 10 84 24 a8 00 	movsd  0xa8(%rsp),%xmm0
   1117a:	00 00 
   1117c:	f2 0f 58 42 60       	addsd  0x60(%rdx),%xmm0
   11181:	f2 0f 11 40 60       	movsd  %xmm0,0x60(%rax)
   11186:	f2 44 0f 58 9a 88 00 	addsd  0x88(%rdx),%xmm11
   1118d:	00 00 
   1118f:	f2 0f 11 84 24 a8 00 	movsd  %xmm0,0xa8(%rsp)
   11196:	00 00 
   11198:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
   1119e:	f2 44 0f 11 98 88 00 	movsd  %xmm11,0x88(%rax)
   111a5:	00 00 
   111a7:	f2 0f 58 82 80 00 00 	addsd  0x80(%rdx),%xmm0
   111ae:	00 
   111af:	f2 0f 11 80 80 00 00 	movsd  %xmm0,0x80(%rax)
   111b6:	00 
   111b7:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
   111bd:	f2 0f 10 44 24 28    	movsd  0x28(%rsp),%xmm0
   111c3:	f2 0f 58 42 70       	addsd  0x70(%rdx),%xmm0
   111c8:	f2 0f 11 40 70       	movsd  %xmm0,0x70(%rax)
   111cd:	f2 0f 11 44 24 28    	movsd  %xmm0,0x28(%rsp)
   111d3:	f2 0f 10 84 24 b0 00 	movsd  0xb0(%rsp),%xmm0
   111da:	00 00 
   111dc:	f2 0f 58 42 78       	addsd  0x78(%rdx),%xmm0
   111e1:	f2 0f 11 40 78       	movsd  %xmm0,0x78(%rax)
   111e6:	f2 0f 58 8a 90 00 00 	addsd  0x90(%rdx),%xmm1
   111ed:	00 
   111ee:	f2 0f 11 84 24 b0 00 	movsd  %xmm0,0xb0(%rsp)
   111f5:	00 00 
   111f7:	f2 0f 10 44 24 30    	movsd  0x30(%rsp),%xmm0
   111fd:	f2 0f 11 88 90 00 00 	movsd  %xmm1,0x90(%rax)
   11204:	00 
   11205:	f2 0f 58 82 a0 00 00 	addsd  0xa0(%rdx),%xmm0
   1120c:	00 
   1120d:	f2 0f 11 80 a0 00 00 	movsd  %xmm0,0xa0(%rax)
   11214:	00 
   11215:	f2 0f 11 44 24 30    	movsd  %xmm0,0x30(%rsp)
   1121b:	f2 0f 10 44 24 38    	movsd  0x38(%rsp),%xmm0
   11221:	f2 0f 58 82 98 00 00 	addsd  0x98(%rdx),%xmm0
   11228:	00 
   11229:	f2 0f 11 80 98 00 00 	movsd  %xmm0,0x98(%rax)
   11230:	00 
   11231:	f2 0f 11 44 24 38    	movsd  %xmm0,0x38(%rsp)
   11237:	f2 0f 10 84 24 b8 00 	movsd  0xb8(%rsp),%xmm0
   1123e:	00 00 
   11240:	f2 0f 58 82 a8 00 00 	addsd  0xa8(%rdx),%xmm0
   11247:	00 
   11248:	f2 0f 11 84 24 b8 00 	movsd  %xmm0,0xb8(%rsp)
   1124f:	00 00 
   11251:	f2 0f 11 80 a8 00 00 	movsd  %xmm0,0xa8(%rax)
   11258:	00 
   11259:	f2 44 0f 58 82 b0 00 	addsd  0xb0(%rdx),%xmm8
   11260:	00 00 
   11262:	f2 0f 10 44 24 40    	movsd  0x40(%rsp),%xmm0
   11268:	f2 44 0f 11 80 b0 00 	movsd  %xmm8,0xb0(%rax)
   1126f:	00 00 
   11271:	f2 44 0f 58 92 c0 00 	addsd  0xc0(%rdx),%xmm10
   11278:	00 00 
   1127a:	f2 44 0f 11 90 c0 00 	movsd  %xmm10,0xc0(%rax)
   11281:	00 00 
   11283:	f2 0f 58 82 d8 00 00 	addsd  0xd8(%rdx),%xmm0
   1128a:	00 
   1128b:	f2 0f 11 80 d8 00 00 	movsd  %xmm0,0xd8(%rax)
   11292:	00 
   11293:	f2 0f 11 44 24 40    	movsd  %xmm0,0x40(%rsp)
   11299:	f2 0f 10 44 24 48    	movsd  0x48(%rsp),%xmm0
   1129f:	f2 0f 58 82 e0 00 00 	addsd  0xe0(%rdx),%xmm0
   112a6:	00 
   112a7:	f2 0f 11 80 e0 00 00 	movsd  %xmm0,0xe0(%rax)
   112ae:	00 
   112af:	f2 0f 11 44 24 48    	movsd  %xmm0,0x48(%rsp)
   112b5:	f2 0f 10 84 24 c0 00 	movsd  0xc0(%rsp),%xmm0
   112bc:	00 00 
   112be:	f2 0f 58 82 e8 00 00 	addsd  0xe8(%rdx),%xmm0
   112c5:	00 
   112c6:	f2 0f 11 80 e8 00 00 	movsd  %xmm0,0xe8(%rax)
   112cd:	00 
   112ce:	f2 44 0f 58 aa f0 00 	addsd  0xf0(%rdx),%xmm13
   112d5:	00 00 
   112d7:	f2 0f 11 84 24 c0 00 	movsd  %xmm0,0xc0(%rsp)
   112de:	00 00 
   112e0:	f2 0f 10 84 24 c8 00 	movsd  0xc8(%rsp),%xmm0
   112e7:	00 00 
   112e9:	f2 44 0f 11 a8 f0 00 	movsd  %xmm13,0xf0(%rax)
   112f0:	00 00 
   112f2:	f2 44 0f 58 a2 f8 00 	addsd  0xf8(%rdx),%xmm12
   112f9:	00 00 
   112fb:	f2 44 0f 11 a0 f8 00 	movsd  %xmm12,0xf8(%rax)
   11302:	00 00 
   11304:	f2 0f 58 82 00 01 00 	addsd  0x100(%rdx),%xmm0
   1130b:	00 
   1130c:	f2 0f 11 80 00 01 00 	movsd  %xmm0,0x100(%rax)
   11313:	00 
   11314:	f2 0f 11 84 24 c8 00 	movsd  %xmm0,0xc8(%rsp)
   1131b:	00 00 
   1131d:	f2 0f 10 84 24 d0 00 	movsd  0xd0(%rsp),%xmm0
   11324:	00 00 
   11326:	f2 0f 58 82 08 01 00 	addsd  0x108(%rdx),%xmm0
   1132d:	00 
   1132e:	f2 0f 11 80 08 01 00 	movsd  %xmm0,0x108(%rax)
   11335:	00 
   11336:	f2 0f 11 84 24 d0 00 	movsd  %xmm0,0xd0(%rsp)
   1133d:	00 00 
   1133f:	f2 0f 10 44 24 50    	movsd  0x50(%rsp),%xmm0
   11345:	f2 0f 58 82 10 01 00 	addsd  0x110(%rdx),%xmm0
   1134c:	00 
   1134d:	f2 0f 11 44 24 50    	movsd  %xmm0,0x50(%rsp)
   11353:	f2 0f 11 80 10 01 00 	movsd  %xmm0,0x110(%rax)
   1135a:	00 
   1135b:	f2 0f 58 b2 18 01 00 	addsd  0x118(%rdx),%xmm6
   11362:	00 
   11363:	f2 0f 10 44 24 58    	movsd  0x58(%rsp),%xmm0
   11369:	48 8b 7e f8          	mov    -0x8(%rsi),%rdi
   1136d:	f2 0f 11 b0 18 01 00 	movsd  %xmm6,0x118(%rax)
   11374:	00 
   11375:	f2 0f 58 82 28 01 00 	addsd  0x128(%rdx),%xmm0
   1137c:	00 
   1137d:	8b 7f 48             	mov    0x48(%rdi),%edi
   11380:	f2 0f 11 80 28 01 00 	movsd  %xmm0,0x128(%rax)
   11387:	00 
   11388:	f2 0f 11 44 24 58    	movsd  %xmm0,0x58(%rsp)
   1138e:	f2 0f 10 44 24 60    	movsd  0x60(%rsp),%xmm0
   11394:	f2 0f 58 82 30 01 00 	addsd  0x130(%rdx),%xmm0
   1139b:	00 
   1139c:	f2 0f 11 80 30 01 00 	movsd  %xmm0,0x130(%rax)
   113a3:	00 
   113a4:	f2 0f 11 44 24 60    	movsd  %xmm0,0x60(%rsp)
   113aa:	f2 0f 10 44 24 68    	movsd  0x68(%rsp),%xmm0
   113b0:	f2 0f 58 82 38 01 00 	addsd  0x138(%rdx),%xmm0
   113b7:	00 
   113b8:	f2 0f 11 80 38 01 00 	movsd  %xmm0,0x138(%rax)
   113bf:	00 
   113c0:	f2 0f 11 44 24 68    	movsd  %xmm0,0x68(%rsp)
   113c6:	f2 0f 10 44 24 70    	movsd  0x70(%rsp),%xmm0
   113cc:	f2 0f 58 82 40 01 00 	addsd  0x140(%rdx),%xmm0
   113d3:	00 
   113d4:	f2 0f 11 80 40 01 00 	movsd  %xmm0,0x140(%rax)
   113db:	00 
   113dc:	f2 0f 11 44 24 70    	movsd  %xmm0,0x70(%rsp)
   113e2:	f2 0f 10 44 24 78    	movsd  0x78(%rsp),%xmm0
   113e8:	f2 0f 58 82 48 01 00 	addsd  0x148(%rdx),%xmm0
   113ef:	00 
   113f0:	f2 0f 11 80 48 01 00 	movsd  %xmm0,0x148(%rax)
   113f7:	00 
   113f8:	f2 0f 58 a2 78 01 00 	addsd  0x178(%rdx),%xmm4
   113ff:	00 
   11400:	f2 0f 11 44 24 78    	movsd  %xmm0,0x78(%rsp)
   11406:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1140a:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
   1140f:	f2 0f 11 a0 78 01 00 	movsd  %xmm4,0x178(%rax)
   11416:	00 
   11417:	f2 0f 58 9a 88 01 00 	addsd  0x188(%rdx),%xmm3
   1141e:	00 
   1141f:	f2 0f 11 84 24 d8 00 	movsd  %xmm0,0xd8(%rsp)
   11426:	00 00 
   11428:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
   1142d:	f2 0f 58 84 24 d8 00 	addsd  0xd8(%rsp),%xmm0
   11434:	00 00 
   11436:	f2 0f 11 98 88 01 00 	movsd  %xmm3,0x188(%rax)
   1143d:	00 
   1143e:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
   11443:	f2 0f 10 84 24 80 00 	movsd  0x80(%rsp),%xmm0
   1144a:	00 00 
   1144c:	f2 0f 58 82 d0 01 00 	addsd  0x1d0(%rdx),%xmm0
   11453:	00 
   11454:	f2 0f 11 80 d0 01 00 	movsd  %xmm0,0x1d0(%rax)
   1145b:	00 
   1145c:	f2 0f 11 84 24 80 00 	movsd  %xmm0,0x80(%rsp)
   11463:	00 00 
   11465:	f2 0f 10 84 24 88 00 	movsd  0x88(%rsp),%xmm0
   1146c:	00 00 
   1146e:	f2 0f 58 82 c8 01 00 	addsd  0x1c8(%rdx),%xmm0
   11475:	00 
   11476:	f2 0f 11 80 c8 01 00 	movsd  %xmm0,0x1c8(%rax)
   1147d:	00 
   1147e:	f2 0f 58 ba a0 01 00 	addsd  0x1a0(%rdx),%xmm7
   11485:	00 
   11486:	f2 0f 11 84 24 88 00 	movsd  %xmm0,0x88(%rsp)
   1148d:	00 00 
   1148f:	f2 0f 11 b8 a0 01 00 	movsd  %xmm7,0x1a0(%rax)
   11496:	00 
   11497:	f2 44 0f 58 8a 98 01 	addsd  0x198(%rdx),%xmm9
   1149e:	00 00 
   114a0:	48 89 ca             	mov    %rcx,%rdx
   114a3:	f2 44 0f 11 88 98 01 	movsd  %xmm9,0x198(%rax)
   114aa:	00 00 
   114ac:	4c 39 c1             	cmp    %r8,%rcx
   114af:	0f 85 f3 fb ff ff    	jne    110a8 <gather_statistics+0x3a8>
   114b5:	66 0f ef c0          	pxor   %xmm0,%xmm0
   114b9:	66 44 0f 28 fa       	movapd %xmm2,%xmm15
   114be:	f2 0f 10 14 24       	movsd  (%rsp),%xmm2
   114c3:	f2 0f 11 ac 24 d0 00 	movsd  %xmm5,0xd0(%rsp)
   114ca:	00 00 
   114cc:	f2 49 0f 2a c1       	cvtsi2sd %r9,%xmm0
   114d1:	66 45 0f 28 f3       	movapd %xmm11,%xmm14
   114d6:	f2 0f 10 ac 24 f8 00 	movsd  0xf8(%rsp),%xmm5
   114dd:	00 00 
   114df:	f2 44 0f 10 9c 24 f0 	movsd  0xf0(%rsp),%xmm11
   114e6:	00 00 00 
   114e9:	f2 0f 11 90 50 01 00 	movsd  %xmm2,0x150(%rax)
   114f0:	00 
   114f1:	66 41 0f 28 c8       	movapd %xmm8,%xmm1
   114f6:	f2 0f 10 54 24 10    	movsd  0x10(%rsp),%xmm2
   114fc:	66 45 0f 28 e8       	movapd %xmm8,%xmm13
   11501:	f2 44 0f 11 80 60 01 	movsd  %xmm8,0x160(%rax)
   11508:	00 00 
   1150a:	f2 41 0f 5e cf       	divsd  %xmm15,%xmm1
   1150f:	f2 44 0f 5c ee       	subsd  %xmm6,%xmm13
   11514:	66 44 0f 28 e2       	movapd %xmm2,%xmm12
   11519:	f2 45 0f 58 e3       	addsd  %xmm11,%xmm12
   1151e:	f2 44 0f 11 a8 68 01 	movsd  %xmm13,0x168(%rax)
   11525:	00 00 
   11527:	f2 44 0f 11 60 28    	movsd  %xmm12,0x28(%rax)
   1152d:	f2 0f 11 88 b0 00 00 	movsd  %xmm1,0xb0(%rax)
   11534:	00 
   11535:	66 0f 28 cd          	movapd %xmm5,%xmm1
   11539:	f2 41 0f 58 ca       	addsd  %xmm10,%xmm1
   1153e:	f2 41 0f 5e eb       	divsd  %xmm11,%xmm5
   11543:	f2 41 0f 5e cc       	divsd  %xmm12,%xmm1
   11548:	f2 0f 11 a8 c8 00 00 	movsd  %xmm5,0xc8(%rax)
   1154f:	00 
   11550:	f2 0f 10 6c 24 38    	movsd  0x38(%rsp),%xmm5
   11556:	f2 0f 11 88 b8 00 00 	movsd  %xmm1,0xb8(%rax)
   1155d:	00 
   1155e:	66 41 0f 28 ca       	movapd %xmm10,%xmm1
   11563:	f2 44 0f 10 94 24 e0 	movsd  0xe0(%rsp),%xmm10
   1156a:	00 00 00 
   1156d:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   11571:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
   11577:	66 0f 16 54 24 18    	movhpd 0x18(%rsp),%xmm2
   1157d:	f2 45 0f 5e d4       	divsd  %xmm12,%xmm10
   11582:	f2 0f 11 88 c0 00 00 	movsd  %xmm1,0xc0(%rax)
   11589:	00 
   1158a:	f2 0f 10 4c 24 50    	movsd  0x50(%rsp),%xmm1
   11590:	66 0f 14 ce          	unpcklpd %xmm6,%xmm1
   11594:	f2 0f 10 b4 24 d0 00 	movsd  0xd0(%rsp),%xmm6
   1159b:	00 00 
   1159d:	66 0f 14 ee          	unpcklpd %xmm6,%xmm5
   115a1:	66 0f 5e cd          	divpd  %xmm5,%xmm1
   115a5:	f2 44 0f 11 50 68    	movsd  %xmm10,0x68(%rax)
   115ab:	0f 29 88 10 01 00 00 	movaps %xmm1,0x110(%rax)
   115b2:	f2 0f 10 4c 24 68    	movsd  0x68(%rsp),%xmm1
   115b8:	f2 0f 5e 4c 24 28    	divsd  0x28(%rsp),%xmm1
   115be:	f2 0f 11 88 38 01 00 	movsd  %xmm1,0x138(%rax)
   115c5:	00 
   115c6:	f2 0f 10 4c 24 60    	movsd  0x60(%rsp),%xmm1
   115cc:	f2 41 0f 5e ce       	divsd  %xmm14,%xmm1
   115d1:	f2 0f 11 88 30 01 00 	movsd  %xmm1,0x130(%rax)
   115d8:	00 
   115d9:	f2 0f 10 4c 24 58    	movsd  0x58(%rsp),%xmm1
   115df:	f2 0f 5e 4c 24 20    	divsd  0x20(%rsp),%xmm1
   115e5:	f2 0f 11 88 28 01 00 	movsd  %xmm1,0x128(%rax)
   115ec:	00 
   115ed:	66 41 0f 28 cf       	movapd %xmm15,%xmm1
   115f2:	f2 0f 5c ce          	subsd  %xmm6,%xmm1
   115f6:	66 0f 28 f7          	movapd %xmm7,%xmm6
   115fa:	f2 0f 5e f0          	divsd  %xmm0,%xmm6
   115fe:	f2 44 0f 5e e9       	divsd  %xmm1,%xmm13
   11603:	66 0f 10 4c 24 40    	movupd 0x40(%rsp),%xmm1
   11609:	66 0f 5e ca          	divpd  %xmm2,%xmm1
   1160d:	f2 44 0f 11 a8 20 01 	movsd  %xmm13,0x120(%rax)
   11614:	00 00 
   11616:	f2 44 0f 59 2c 24    	mulsd  (%rsp),%xmm13
   1161c:	f2 44 0f 11 a8 70 01 	movsd  %xmm13,0x170(%rax)
   11623:	00 00 
   11625:	0f 11 88 d8 00 00 00 	movups %xmm1,0xd8(%rax)
   1162c:	f2 0f 10 4c 24 30    	movsd  0x30(%rsp),%xmm1
   11632:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
   11636:	f2 0f 11 88 a0 00 00 	movsd  %xmm1,0xa0(%rax)
   1163d:	00 
   1163e:	f2 0f 10 4c 24 70    	movsd  0x70(%rsp),%xmm1
   11644:	f2 41 0f 5e ce       	divsd  %xmm14,%xmm1
   11649:	f2 0f 11 88 40 01 00 	movsd  %xmm1,0x140(%rax)
   11650:	00 
   11651:	f2 0f 10 4c 24 78    	movsd  0x78(%rsp),%xmm1
   11657:	f2 44 0f 10 84 24 88 	movsd  0x88(%rsp),%xmm8
   1165e:	00 00 00 
   11661:	f2 0f 11 b0 a0 01 00 	movsd  %xmm6,0x1a0(%rax)
   11668:	00 
   11669:	f2 0f 10 b4 24 80 00 	movsd  0x80(%rsp),%xmm6
   11670:	00 00 
   11672:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
   11676:	f2 0f 11 a0 80 01 00 	movsd  %xmm4,0x180(%rax)
   1167d:	00 
   1167e:	f2 0f 11 98 90 01 00 	movsd  %xmm3,0x190(%rax)
   11685:	00 
   11686:	f2 44 0f 11 88 a8 01 	movsd  %xmm9,0x1a8(%rax)
   1168d:	00 00 
   1168f:	f2 0f 11 b8 b0 01 00 	movsd  %xmm7,0x1b0(%rax)
   11696:	00 
   11697:	f2 0f 5e e0          	divsd  %xmm0,%xmm4
   1169b:	f2 0f 11 88 48 01 00 	movsd  %xmm1,0x148(%rax)
   116a2:	00 
   116a3:	66 41 0f 28 c9       	movapd %xmm9,%xmm1
   116a8:	f2 0f 5e d8          	divsd  %xmm0,%xmm3
   116ac:	f2 0f 11 a0 78 01 00 	movsd  %xmm4,0x178(%rax)
   116b3:	00 
   116b4:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
   116b8:	f2 0f 11 98 88 01 00 	movsd  %xmm3,0x188(%rax)
   116bf:	00 
   116c0:	f2 45 0f 5e c1       	divsd  %xmm9,%xmm8
   116c5:	f2 0f 11 88 98 01 00 	movsd  %xmm1,0x198(%rax)
   116cc:	00 
   116cd:	f2 0f 5e f7          	divsd  %xmm7,%xmm6
   116d1:	f2 44 0f 11 80 b8 01 	movsd  %xmm8,0x1b8(%rax)
   116d8:	00 00 
   116da:	f2 0f 11 b0 c0 01 00 	movsd  %xmm6,0x1c0(%rax)
   116e1:	00 
   116e2:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
   116e9:	c3                   	retq   
   116ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   116f0:	66 0f ef db          	pxor   %xmm3,%xmm3
   116f4:	e9 0f f7 ff ff       	jmpq   10e08 <gather_statistics+0x108>
   116f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11700:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11704:	e9 e8 fd ff ff       	jmpq   114f1 <gather_statistics+0x7f1>
   11709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011710 <print_statistics>:
   11710:	53                   	push   %rbx
   11711:	31 c0                	xor    %eax,%eax
   11713:	e8 e8 f5 ff ff       	callq  10d00 <gather_statistics>
   11718:	48 8d 3d 9d 77 00 00 	lea    0x779d(%rip),%rdi        # 18ebc <__PRETTY_FUNCTION__.6556+0x30fc>
   1171f:	e8 1c 00 ff ff       	callq  1740 <puts@plt>
   11724:	8b 0d 86 7a 33 00    	mov    0x337a86(%rip),%ecx        # 3491b0 <n_prc_tot>
   1172a:	8b 15 58 7a 33 00    	mov    0x337a58(%rip),%edx        # 349188 <n_cores>
   11730:	31 c0                	xor    %eax,%eax
   11732:	48 8d 35 9c 77 00 00 	lea    0x779c(%rip),%rsi        # 18ed5 <__PRETTY_FUNCTION__.6556+0x3115>
   11739:	bf 01 00 00 00       	mov    $0x1,%edi
   1173e:	e8 2d 02 ff ff       	callq  1970 <__printf_chk@plt>
   11743:	bf 0a 00 00 00       	mov    $0xa,%edi
   11748:	e8 43 ff fe ff       	callq  1690 <putchar@plt>
   1174d:	48 8d 3d 8c 5c 00 00 	lea    0x5c8c(%rip),%rdi        # 173e0 <__PRETTY_FUNCTION__.6556+0x1620>
   11754:	e8 e7 ff fe ff       	callq  1740 <puts@plt>
   11759:	48 8b 1d b8 7a 33 00 	mov    0x337ab8(%rip),%rbx        # 349218 <system_stats>
   11760:	31 c0                	xor    %eax,%eax
   11762:	48 8d 35 7f 77 00 00 	lea    0x777f(%rip),%rsi        # 18ee8 <__PRETTY_FUNCTION__.6556+0x3128>
   11769:	bf 01 00 00 00       	mov    $0x1,%edi
   1176e:	e8 fd 01 ff ff       	callq  1970 <__printf_chk@plt>
   11773:	f2 0f 10 03          	movsd  (%rbx),%xmm0
   11777:	66 0f 2f 05 29 3c 00 	comisd 0x3c29(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   1177e:	00 
   1177f:	0f 83 db 07 00 00    	jae    11f60 <print_statistics+0x850>
   11785:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   1178a:	31 c0                	xor    %eax,%eax
   1178c:	48 8d 35 75 5c 00 00 	lea    0x5c75(%rip),%rsi        # 17408 <__PRETTY_FUNCTION__.6556+0x1648>
   11793:	bf 01 00 00 00       	mov    $0x1,%edi
   11798:	e8 d3 01 ff ff       	callq  1970 <__printf_chk@plt>
   1179d:	f2 0f 10 4b 10       	movsd  0x10(%rbx),%xmm1
   117a2:	66 0f 2f 0d fe 3b 00 	comisd 0x3bfe(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   117a9:	00 
   117aa:	66 0f 28 c1          	movapd %xmm1,%xmm0
   117ae:	f2 0f 5e 03          	divsd  (%rbx),%xmm0
   117b2:	f2 0f 59 05 e6 78 00 	mulsd  0x78e6(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   117b9:	00 
   117ba:	0f 83 90 0a 00 00    	jae    12250 <print_statistics+0xb40>
   117c0:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   117c5:	48 8d 35 7c 5c 00 00 	lea    0x5c7c(%rip),%rsi        # 17448 <__PRETTY_FUNCTION__.6556+0x1688>
   117cc:	bf 01 00 00 00       	mov    $0x1,%edi
   117d1:	b8 01 00 00 00       	mov    $0x1,%eax
   117d6:	e8 95 01 ff ff       	callq  1970 <__printf_chk@plt>
   117db:	f2 0f 10 83 80 01 00 	movsd  0x180(%rbx),%xmm0
   117e2:	00 
   117e3:	66 0f 2f 05 bd 3b 00 	comisd 0x3bbd(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   117ea:	00 
   117eb:	0f 83 3f 0a 00 00    	jae    12230 <print_statistics+0xb20>
   117f1:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   117f6:	31 c0                	xor    %eax,%eax
   117f8:	48 8d 35 91 5c 00 00 	lea    0x5c91(%rip),%rsi        # 17490 <__PRETTY_FUNCTION__.6556+0x16d0>
   117ff:	bf 01 00 00 00       	mov    $0x1,%edi
   11804:	e8 67 01 ff ff       	callq  1970 <__printf_chk@plt>
   11809:	f2 0f 10 4b 08       	movsd  0x8(%rbx),%xmm1
   1180e:	66 0f 2f 0d 92 3b 00 	comisd 0x3b92(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11815:	00 
   11816:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1181a:	f2 0f 5e 03          	divsd  (%rbx),%xmm0
   1181e:	f2 0f 59 05 7a 78 00 	mulsd  0x787a(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11825:	00 
   11826:	0f 83 e4 09 00 00    	jae    12210 <print_statistics+0xb00>
   1182c:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11831:	48 8d 35 98 5c 00 00 	lea    0x5c98(%rip),%rsi        # 174d0 <__PRETTY_FUNCTION__.6556+0x1710>
   11838:	bf 01 00 00 00       	mov    $0x1,%edi
   1183d:	b8 01 00 00 00       	mov    $0x1,%eax
   11842:	e8 29 01 ff ff       	callq  1970 <__printf_chk@plt>
   11847:	f2 0f 10 4b 60       	movsd  0x60(%rbx),%xmm1
   1184c:	66 0f 2f 0d 54 3b 00 	comisd 0x3b54(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11853:	00 
   11854:	66 0f 28 c1          	movapd %xmm1,%xmm0
   11858:	f2 0f 5e 03          	divsd  (%rbx),%xmm0
   1185c:	f2 0f 59 05 3c 78 00 	mulsd  0x783c(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11863:	00 
   11864:	0f 83 86 09 00 00    	jae    121f0 <print_statistics+0xae0>
   1186a:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1186f:	48 8d 35 a2 5c 00 00 	lea    0x5ca2(%rip),%rsi        # 17518 <__PRETTY_FUNCTION__.6556+0x1758>
   11876:	bf 01 00 00 00       	mov    $0x1,%edi
   1187b:	b8 01 00 00 00       	mov    $0x1,%eax
   11880:	e8 eb 00 ff ff       	callq  1970 <__printf_chk@plt>
   11885:	8b 05 25 79 33 00    	mov    0x337925(%rip),%eax        # 3491b0 <n_prc_tot>
   1188b:	f2 0f 10 13          	movsd  (%rbx),%xmm2
   1188f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11893:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   11898:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1189c:	f2 0f 5c 4b 48       	subsd  0x48(%rbx),%xmm1
   118a1:	f2 0f 5c 8b 50 01 00 	subsd  0x150(%rbx),%xmm1
   118a8:	00 
   118a9:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   118ad:	66 0f 2f 0d f3 3a 00 	comisd 0x3af3(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   118b4:	00 
   118b5:	66 0f 28 c1          	movapd %xmm1,%xmm0
   118b9:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   118bd:	f2 0f 59 05 db 77 00 	mulsd  0x77db(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   118c4:	00 
   118c5:	0f 83 05 09 00 00    	jae    121d0 <print_statistics+0xac0>
   118cb:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   118d0:	48 8d 35 89 5c 00 00 	lea    0x5c89(%rip),%rsi        # 17560 <__PRETTY_FUNCTION__.6556+0x17a0>
   118d7:	bf 01 00 00 00       	mov    $0x1,%edi
   118dc:	b8 01 00 00 00       	mov    $0x1,%eax
   118e1:	e8 8a 00 ff ff       	callq  1970 <__printf_chk@plt>
   118e6:	f2 0f 10 4b 48       	movsd  0x48(%rbx),%xmm1
   118eb:	66 0f 2f 0d b5 3a 00 	comisd 0x3ab5(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   118f2:	00 
   118f3:	66 0f 28 c1          	movapd %xmm1,%xmm0
   118f7:	f2 0f 5e 03          	divsd  (%rbx),%xmm0
   118fb:	f2 0f 59 05 9d 77 00 	mulsd  0x779d(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11902:	00 
   11903:	0f 83 a7 08 00 00    	jae    121b0 <print_statistics+0xaa0>
   11909:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1190e:	48 8d 35 93 5c 00 00 	lea    0x5c93(%rip),%rsi        # 175a8 <__PRETTY_FUNCTION__.6556+0x17e8>
   11915:	bf 01 00 00 00       	mov    $0x1,%edi
   1191a:	b8 01 00 00 00       	mov    $0x1,%eax
   1191f:	e8 4c 00 ff ff       	callq  1970 <__printf_chk@plt>
   11924:	f2 0f 10 4b 50       	movsd  0x50(%rbx),%xmm1
   11929:	66 0f 2f 0d 77 3a 00 	comisd 0x3a77(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11930:	00 
   11931:	66 0f 28 c1          	movapd %xmm1,%xmm0
   11935:	f2 0f 5e 43 48       	divsd  0x48(%rbx),%xmm0
   1193a:	f2 0f 59 05 5e 77 00 	mulsd  0x775e(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11941:	00 
   11942:	0f 83 48 08 00 00    	jae    12190 <print_statistics+0xa80>
   11948:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1194d:	48 8d 35 9c 5c 00 00 	lea    0x5c9c(%rip),%rsi        # 175f0 <__PRETTY_FUNCTION__.6556+0x1830>
   11954:	bf 01 00 00 00       	mov    $0x1,%edi
   11959:	b8 01 00 00 00       	mov    $0x1,%eax
   1195e:	e8 0d 00 ff ff       	callq  1970 <__printf_chk@plt>
   11963:	bf 0a 00 00 00       	mov    $0xa,%edi
   11968:	e8 23 fd fe ff       	callq  1690 <putchar@plt>
   1196d:	f2 0f 10 4b 40       	movsd  0x40(%rbx),%xmm1
   11972:	66 0f 2f 0d 2e 3a 00 	comisd 0x3a2e(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11979:	00 
   1197a:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1197e:	f2 0f 5e 03          	divsd  (%rbx),%xmm0
   11982:	f2 0f 59 05 16 77 00 	mulsd  0x7716(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11989:	00 
   1198a:	0f 83 e0 07 00 00    	jae    12170 <print_statistics+0xa60>
   11990:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11995:	48 8d 35 9c 5c 00 00 	lea    0x5c9c(%rip),%rsi        # 17638 <__PRETTY_FUNCTION__.6556+0x1878>
   1199c:	bf 01 00 00 00       	mov    $0x1,%edi
   119a1:	b8 01 00 00 00       	mov    $0x1,%eax
   119a6:	e8 c5 ff fe ff       	callq  1970 <__printf_chk@plt>
   119ab:	f2 0f 10 4b 28       	movsd  0x28(%rbx),%xmm1
   119b0:	f2 0f 10 43 30       	movsd  0x30(%rbx),%xmm0
   119b5:	f2 0f 5e 03          	divsd  (%rbx),%xmm0
   119b9:	f2 0f 59 05 df 76 00 	mulsd  0x76df(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   119c0:	00 
   119c1:	66 0f 2f 0d df 39 00 	comisd 0x39df(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   119c8:	00 
   119c9:	0f 83 81 07 00 00    	jae    12150 <print_statistics+0xa40>
   119cf:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   119d4:	48 8d 35 a5 5c 00 00 	lea    0x5ca5(%rip),%rsi        # 17680 <__PRETTY_FUNCTION__.6556+0x18c0>
   119db:	bf 01 00 00 00       	mov    $0x1,%edi
   119e0:	b8 01 00 00 00       	mov    $0x1,%eax
   119e5:	e8 86 ff fe ff       	callq  1970 <__printf_chk@plt>
   119ea:	f2 0f 10 4b 30       	movsd  0x30(%rbx),%xmm1
   119ef:	66 0f 2f 0d b1 39 00 	comisd 0x39b1(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   119f6:	00 
   119f7:	66 0f 28 c1          	movapd %xmm1,%xmm0
   119fb:	f2 0f 5e 43 28       	divsd  0x28(%rbx),%xmm0
   11a00:	f2 0f 59 05 98 76 00 	mulsd  0x7698(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11a07:	00 
   11a08:	0f 83 22 07 00 00    	jae    12130 <print_statistics+0xa20>
   11a0e:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11a13:	48 8d 35 ae 5c 00 00 	lea    0x5cae(%rip),%rsi        # 176c8 <__PRETTY_FUNCTION__.6556+0x1908>
   11a1a:	bf 01 00 00 00       	mov    $0x1,%edi
   11a1f:	b8 01 00 00 00       	mov    $0x1,%eax
   11a24:	e8 47 ff fe ff       	callq  1970 <__printf_chk@plt>
   11a29:	f2 0f 10 4b 38       	movsd  0x38(%rbx),%xmm1
   11a2e:	66 0f 2f 0d 72 39 00 	comisd 0x3972(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11a35:	00 
   11a36:	66 0f 28 c1          	movapd %xmm1,%xmm0
   11a3a:	f2 0f 5e 43 28       	divsd  0x28(%rbx),%xmm0
   11a3f:	f2 0f 59 05 59 76 00 	mulsd  0x7659(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11a46:	00 
   11a47:	0f 83 c3 06 00 00    	jae    12110 <print_statistics+0xa00>
   11a4d:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11a52:	48 8d 35 b7 5c 00 00 	lea    0x5cb7(%rip),%rsi        # 17710 <__PRETTY_FUNCTION__.6556+0x1950>
   11a59:	bf 01 00 00 00       	mov    $0x1,%edi
   11a5e:	b8 01 00 00 00       	mov    $0x1,%eax
   11a63:	e8 08 ff fe ff       	callq  1970 <__printf_chk@plt>
   11a68:	f2 0f 10 43 68       	movsd  0x68(%rbx),%xmm0
   11a6d:	bf 01 00 00 00       	mov    $0x1,%edi
   11a72:	48 8d 35 df 5c 00 00 	lea    0x5cdf(%rip),%rsi        # 17758 <__PRETTY_FUNCTION__.6556+0x1998>
   11a79:	b8 01 00 00 00       	mov    $0x1,%eax
   11a7e:	e8 ed fe fe ff       	callq  1970 <__printf_chk@plt>
   11a83:	bf 0a 00 00 00       	mov    $0xa,%edi
   11a88:	e8 03 fc fe ff       	callq  1690 <putchar@plt>
   11a8d:	bf 01 00 00 00       	mov    $0x1,%edi
   11a92:	b8 01 00 00 00       	mov    $0x1,%eax
   11a97:	f2 0f 10 83 b0 00 00 	movsd  0xb0(%rbx),%xmm0
   11a9e:	00 
   11a9f:	48 8d 35 f2 5c 00 00 	lea    0x5cf2(%rip),%rsi        # 17798 <__PRETTY_FUNCTION__.6556+0x19d8>
   11aa6:	e8 c5 fe fe ff       	callq  1970 <__printf_chk@plt>
   11aab:	bf 01 00 00 00       	mov    $0x1,%edi
   11ab0:	b8 01 00 00 00       	mov    $0x1,%eax
   11ab5:	f2 0f 10 83 20 01 00 	movsd  0x120(%rbx),%xmm0
   11abc:	00 
   11abd:	48 8d 35 1c 5d 00 00 	lea    0x5d1c(%rip),%rsi        # 177e0 <__PRETTY_FUNCTION__.6556+0x1a20>
   11ac4:	e8 a7 fe fe ff       	callq  1970 <__printf_chk@plt>
   11ac9:	66 0f ef c9          	pxor   %xmm1,%xmm1
   11acd:	bf 01 00 00 00       	mov    $0x1,%edi
   11ad2:	f2 0f 10 83 18 01 00 	movsd  0x118(%rbx),%xmm0
   11ad9:	00 
   11ada:	48 8d 35 47 5d 00 00 	lea    0x5d47(%rip),%rsi        # 17828 <__PRETTY_FUNCTION__.6556+0x1a68>
   11ae1:	b8 02 00 00 00       	mov    $0x2,%eax
   11ae6:	e8 85 fe fe ff       	callq  1970 <__printf_chk@plt>
   11aeb:	66 0f ef c9          	pxor   %xmm1,%xmm1
   11aef:	bf 01 00 00 00       	mov    $0x1,%edi
   11af4:	f2 0f 10 83 b8 00 00 	movsd  0xb8(%rbx),%xmm0
   11afb:	00 
   11afc:	48 8d 35 75 5d 00 00 	lea    0x5d75(%rip),%rsi        # 17878 <__PRETTY_FUNCTION__.6556+0x1ab8>
   11b03:	b8 02 00 00 00       	mov    $0x2,%eax
   11b08:	e8 63 fe fe ff       	callq  1970 <__printf_chk@plt>
   11b0d:	66 0f ef c9          	pxor   %xmm1,%xmm1
   11b11:	bf 01 00 00 00       	mov    $0x1,%edi
   11b16:	f2 0f 10 83 c0 00 00 	movsd  0xc0(%rbx),%xmm0
   11b1d:	00 
   11b1e:	48 8d 35 a3 5d 00 00 	lea    0x5da3(%rip),%rsi        # 178c8 <__PRETTY_FUNCTION__.6556+0x1b08>
   11b25:	b8 02 00 00 00       	mov    $0x2,%eax
   11b2a:	e8 41 fe fe ff       	callq  1970 <__printf_chk@plt>
   11b2f:	66 0f ef c9          	pxor   %xmm1,%xmm1
   11b33:	bf 01 00 00 00       	mov    $0x1,%edi
   11b38:	f2 0f 10 83 c8 00 00 	movsd  0xc8(%rbx),%xmm0
   11b3f:	00 
   11b40:	48 8d 35 d1 5d 00 00 	lea    0x5dd1(%rip),%rsi        # 17918 <__PRETTY_FUNCTION__.6556+0x1b58>
   11b47:	b8 02 00 00 00       	mov    $0x2,%eax
   11b4c:	e8 1f fe fe ff       	callq  1970 <__printf_chk@plt>
   11b51:	66 0f ef c9          	pxor   %xmm1,%xmm1
   11b55:	bf 01 00 00 00       	mov    $0x1,%edi
   11b5a:	f2 0f 10 83 e0 00 00 	movsd  0xe0(%rbx),%xmm0
   11b61:	00 
   11b62:	48 8d 35 ff 5d 00 00 	lea    0x5dff(%rip),%rsi        # 17968 <__PRETTY_FUNCTION__.6556+0x1ba8>
   11b69:	b8 02 00 00 00       	mov    $0x2,%eax
   11b6e:	e8 fd fd fe ff       	callq  1970 <__printf_chk@plt>
   11b73:	bf 0a 00 00 00       	mov    $0xa,%edi
   11b78:	e8 13 fb fe ff       	callq  1690 <putchar@plt>
   11b7d:	f2 0f 10 83 88 00 00 	movsd  0x88(%rbx),%xmm0
   11b84:	00 
   11b85:	66 0f 2f 05 1b 38 00 	comisd 0x381b(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11b8c:	00 
   11b8d:	0f 83 5d 05 00 00    	jae    120f0 <print_statistics+0x9e0>
   11b93:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11b98:	31 c0                	xor    %eax,%eax
   11b9a:	48 8d 35 17 5e 00 00 	lea    0x5e17(%rip),%rsi        # 179b8 <__PRETTY_FUNCTION__.6556+0x1bf8>
   11ba1:	bf 01 00 00 00       	mov    $0x1,%edi
   11ba6:	e8 c5 fd fe ff       	callq  1970 <__printf_chk@plt>
   11bab:	f2 0f 10 83 80 00 00 	movsd  0x80(%rbx),%xmm0
   11bb2:	00 
   11bb3:	66 0f 2f 05 ed 37 00 	comisd 0x37ed(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11bba:	00 
   11bbb:	0f 83 0f 05 00 00    	jae    120d0 <print_statistics+0x9c0>
   11bc1:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11bc6:	31 c0                	xor    %eax,%eax
   11bc8:	48 8d 35 29 5e 00 00 	lea    0x5e29(%rip),%rsi        # 179f8 <__PRETTY_FUNCTION__.6556+0x1c38>
   11bcf:	bf 01 00 00 00       	mov    $0x1,%edi
   11bd4:	e8 97 fd fe ff       	callq  1970 <__printf_chk@plt>
   11bd9:	f2 0f 10 43 70       	movsd  0x70(%rbx),%xmm0
   11bde:	66 0f 2f 05 c2 37 00 	comisd 0x37c2(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11be5:	00 
   11be6:	0f 83 c4 04 00 00    	jae    120b0 <print_statistics+0x9a0>
   11bec:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11bf1:	48 8d 35 40 5e 00 00 	lea    0x5e40(%rip),%rsi        # 17a38 <__PRETTY_FUNCTION__.6556+0x1c78>
   11bf8:	bf 01 00 00 00       	mov    $0x1,%edi
   11bfd:	31 c0                	xor    %eax,%eax
   11bff:	e8 6c fd fe ff       	callq  1970 <__printf_chk@plt>
   11c04:	bf 01 00 00 00       	mov    $0x1,%edi
   11c09:	b8 01 00 00 00       	mov    $0x1,%eax
   11c0e:	48 8d 35 63 5e 00 00 	lea    0x5e63(%rip),%rsi        # 17a78 <__PRETTY_FUNCTION__.6556+0x1cb8>
   11c15:	f2 0f 10 43 78       	movsd  0x78(%rbx),%xmm0
   11c1a:	f2 0f 5e 43 70       	divsd  0x70(%rbx),%xmm0
   11c1f:	e8 4c fd fe ff       	callq  1970 <__printf_chk@plt>
   11c24:	bf 01 00 00 00       	mov    $0x1,%edi
   11c29:	b8 01 00 00 00       	mov    $0x1,%eax
   11c2e:	48 8d 35 83 5e 00 00 	lea    0x5e83(%rip),%rsi        # 17ab8 <__PRETTY_FUNCTION__.6556+0x1cf8>
   11c35:	f2 0f 10 43 48       	movsd  0x48(%rbx),%xmm0
   11c3a:	f2 0f 5e 43 70       	divsd  0x70(%rbx),%xmm0
   11c3f:	e8 2c fd fe ff       	callq  1970 <__printf_chk@plt>
   11c44:	f2 0f 10 83 a8 00 00 	movsd  0xa8(%rbx),%xmm0
   11c4b:	00 
   11c4c:	66 0f 2f 05 54 37 00 	comisd 0x3754(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11c53:	00 
   11c54:	0f 83 36 04 00 00    	jae    12090 <print_statistics+0x980>
   11c5a:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11c5f:	48 8d 35 92 5e 00 00 	lea    0x5e92(%rip),%rsi        # 17af8 <__PRETTY_FUNCTION__.6556+0x1d38>
   11c66:	bf 01 00 00 00       	mov    $0x1,%edi
   11c6b:	31 c0                	xor    %eax,%eax
   11c6d:	e8 fe fc fe ff       	callq  1970 <__printf_chk@plt>
   11c72:	bf 0a 00 00 00       	mov    $0xa,%edi
   11c77:	e8 14 fa fe ff       	callq  1690 <putchar@plt>
   11c7c:	bf 01 00 00 00       	mov    $0x1,%edi
   11c81:	b8 02 00 00 00       	mov    $0x2,%eax
   11c86:	f2 0f 10 83 30 01 00 	movsd  0x130(%rbx),%xmm0
   11c8d:	00 
   11c8e:	48 8d 35 a3 5e 00 00 	lea    0x5ea3(%rip),%rsi        # 17b38 <__PRETTY_FUNCTION__.6556+0x1d78>
   11c95:	66 0f 28 c8          	movapd %xmm0,%xmm1
   11c99:	f2 0f 5e 8b 38 01 00 	divsd  0x138(%rbx),%xmm1
   11ca0:	00 
   11ca1:	f2 0f 59 0d f7 73 00 	mulsd  0x73f7(%rip),%xmm1        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11ca8:	00 
   11ca9:	e8 c2 fc fe ff       	callq  1970 <__printf_chk@plt>
   11cae:	bf 01 00 00 00       	mov    $0x1,%edi
   11cb3:	b8 02 00 00 00       	mov    $0x2,%eax
   11cb8:	f2 0f 10 83 28 01 00 	movsd  0x128(%rbx),%xmm0
   11cbf:	00 
   11cc0:	48 8d 35 c1 5e 00 00 	lea    0x5ec1(%rip),%rsi        # 17b88 <__PRETTY_FUNCTION__.6556+0x1dc8>
   11cc7:	66 0f 28 c8          	movapd %xmm0,%xmm1
   11ccb:	f2 0f 5e 8b 38 01 00 	divsd  0x138(%rbx),%xmm1
   11cd2:	00 
   11cd3:	f2 0f 59 0d c5 73 00 	mulsd  0x73c5(%rip),%xmm1        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11cda:	00 
   11cdb:	e8 90 fc fe ff       	callq  1970 <__printf_chk@plt>
   11ce0:	bf 01 00 00 00       	mov    $0x1,%edi
   11ce5:	b8 01 00 00 00       	mov    $0x1,%eax
   11cea:	f2 0f 10 83 38 01 00 	movsd  0x138(%rbx),%xmm0
   11cf1:	00 
   11cf2:	48 8d 35 df 5e 00 00 	lea    0x5edf(%rip),%rsi        # 17bd8 <__PRETTY_FUNCTION__.6556+0x1e18>
   11cf9:	e8 72 fc fe ff       	callq  1970 <__printf_chk@plt>
   11cfe:	31 c0                	xor    %eax,%eax
   11d00:	bf 01 00 00 00       	mov    $0x1,%edi
   11d05:	48 8d 35 14 5f 00 00 	lea    0x5f14(%rip),%rsi        # 17c20 <__PRETTY_FUNCTION__.6556+0x1e60>
   11d0c:	f2 48 0f 2c 93 40 01 	cvttsd2si 0x140(%rbx),%rdx
   11d13:	00 00 
   11d15:	e8 56 fc fe ff       	callq  1970 <__printf_chk@plt>
   11d1a:	f2 0f 10 83 a0 00 00 	movsd  0xa0(%rbx),%xmm0
   11d21:	00 
   11d22:	66 0f 2f 05 7e 36 00 	comisd 0x367e(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11d29:	00 
   11d2a:	0f 83 40 03 00 00    	jae    12070 <print_statistics+0x960>
   11d30:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11d35:	31 c0                	xor    %eax,%eax
   11d37:	48 8d 35 22 5f 00 00 	lea    0x5f22(%rip),%rsi        # 17c60 <__PRETTY_FUNCTION__.6556+0x1ea0>
   11d3e:	bf 01 00 00 00       	mov    $0x1,%edi
   11d43:	e8 28 fc fe ff       	callq  1970 <__printf_chk@plt>
   11d48:	f2 0f 10 83 48 01 00 	movsd  0x148(%rbx),%xmm0
   11d4f:	00 
   11d50:	66 0f 2f 05 50 36 00 	comisd 0x3650(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11d57:	00 
   11d58:	0f 83 f2 02 00 00    	jae    12050 <print_statistics+0x940>
   11d5e:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11d63:	48 8d 35 36 5f 00 00 	lea    0x5f36(%rip),%rsi        # 17ca0 <__PRETTY_FUNCTION__.6556+0x1ee0>
   11d6a:	bf 01 00 00 00       	mov    $0x1,%edi
   11d6f:	31 c0                	xor    %eax,%eax
   11d71:	e8 fa fb fe ff       	callq  1970 <__printf_chk@plt>
   11d76:	bf 0a 00 00 00       	mov    $0xa,%edi
   11d7b:	e8 10 f9 fe ff       	callq  1690 <putchar@plt>
   11d80:	f2 0f 10 83 90 01 00 	movsd  0x190(%rbx),%xmm0
   11d87:	00 
   11d88:	66 0f 2f 05 18 36 00 	comisd 0x3618(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11d8f:	00 
   11d90:	0f 83 9a 02 00 00    	jae    12030 <print_statistics+0x920>
   11d96:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11d9b:	31 c0                	xor    %eax,%eax
   11d9d:	48 8d 35 3c 5f 00 00 	lea    0x5f3c(%rip),%rsi        # 17ce0 <__PRETTY_FUNCTION__.6556+0x1f20>
   11da4:	bf 01 00 00 00       	mov    $0x1,%edi
   11da9:	e8 c2 fb fe ff       	callq  1970 <__printf_chk@plt>
   11dae:	f2 0f 10 83 c8 01 00 	movsd  0x1c8(%rbx),%xmm0
   11db5:	00 
   11db6:	66 0f 2f 05 ea 35 00 	comisd 0x35ea(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11dbd:	00 
   11dbe:	0f 83 4c 02 00 00    	jae    12010 <print_statistics+0x900>
   11dc4:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11dc9:	48 8d 35 50 5f 00 00 	lea    0x5f50(%rip),%rsi        # 17d20 <__PRETTY_FUNCTION__.6556+0x1f60>
   11dd0:	bf 01 00 00 00       	mov    $0x1,%edi
   11dd5:	31 c0                	xor    %eax,%eax
   11dd7:	e8 94 fb fe ff       	callq  1970 <__printf_chk@plt>
   11ddc:	bf 01 00 00 00       	mov    $0x1,%edi
   11de1:	b8 01 00 00 00       	mov    $0x1,%eax
   11de6:	f2 0f 10 83 b8 01 00 	movsd  0x1b8(%rbx),%xmm0
   11ded:	00 
   11dee:	48 8d 35 6b 5f 00 00 	lea    0x5f6b(%rip),%rsi        # 17d60 <__PRETTY_FUNCTION__.6556+0x1fa0>
   11df5:	e8 76 fb fe ff       	callq  1970 <__printf_chk@plt>
   11dfa:	f2 0f 10 83 d0 01 00 	movsd  0x1d0(%rbx),%xmm0
   11e01:	00 
   11e02:	66 0f 2f 05 9e 35 00 	comisd 0x359e(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11e09:	00 
   11e0a:	0f 83 e0 01 00 00    	jae    11ff0 <print_statistics+0x8e0>
   11e10:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11e15:	48 8d 35 8c 5f 00 00 	lea    0x5f8c(%rip),%rsi        # 17da8 <__PRETTY_FUNCTION__.6556+0x1fe8>
   11e1c:	bf 01 00 00 00       	mov    $0x1,%edi
   11e21:	31 c0                	xor    %eax,%eax
   11e23:	e8 48 fb fe ff       	callq  1970 <__printf_chk@plt>
   11e28:	bf 01 00 00 00       	mov    $0x1,%edi
   11e2d:	b8 01 00 00 00       	mov    $0x1,%eax
   11e32:	f2 0f 10 83 c0 01 00 	movsd  0x1c0(%rbx),%xmm0
   11e39:	00 
   11e3a:	48 8d 35 a7 5f 00 00 	lea    0x5fa7(%rip),%rsi        # 17de8 <__PRETTY_FUNCTION__.6556+0x2028>
   11e41:	e8 2a fb fe ff       	callq  1970 <__printf_chk@plt>
   11e46:	bf 0a 00 00 00       	mov    $0xa,%edi
   11e4b:	e8 40 f8 fe ff       	callq  1690 <putchar@plt>
   11e50:	f2 0f 10 83 58 01 00 	movsd  0x158(%rbx),%xmm0
   11e57:	00 
   11e58:	66 0f 2f 05 48 35 00 	comisd 0x3548(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11e5f:	00 
   11e60:	0f 83 6a 01 00 00    	jae    11fd0 <print_statistics+0x8c0>
   11e66:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11e6b:	31 c0                	xor    %eax,%eax
   11e6d:	48 8d 35 bc 5f 00 00 	lea    0x5fbc(%rip),%rsi        # 17e30 <__PRETTY_FUNCTION__.6556+0x2070>
   11e74:	bf 01 00 00 00       	mov    $0x1,%edi
   11e79:	e8 f2 fa fe ff       	callq  1970 <__printf_chk@plt>
   11e7e:	f2 0f 10 8b 60 01 00 	movsd  0x160(%rbx),%xmm1
   11e85:	00 
   11e86:	66 0f 2f 0d 1a 35 00 	comisd 0x351a(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11e8d:	00 
   11e8e:	66 0f 28 c1          	movapd %xmm1,%xmm0
   11e92:	f2 0f 5e 83 58 01 00 	divsd  0x158(%rbx),%xmm0
   11e99:	00 
   11e9a:	f2 0f 59 05 fe 71 00 	mulsd  0x71fe(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11ea1:	00 
   11ea2:	0f 83 08 01 00 00    	jae    11fb0 <print_statistics+0x8a0>
   11ea8:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11ead:	48 8d 35 c4 5f 00 00 	lea    0x5fc4(%rip),%rsi        # 17e78 <__PRETTY_FUNCTION__.6556+0x20b8>
   11eb4:	bf 01 00 00 00       	mov    $0x1,%edi
   11eb9:	b8 01 00 00 00       	mov    $0x1,%eax
   11ebe:	e8 ad fa fe ff       	callq  1970 <__printf_chk@plt>
   11ec3:	f2 0f 10 8b 68 01 00 	movsd  0x168(%rbx),%xmm1
   11eca:	00 
   11ecb:	66 0f 2f 0d d5 34 00 	comisd 0x34d5(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11ed2:	00 
   11ed3:	66 0f 28 c1          	movapd %xmm1,%xmm0
   11ed7:	f2 0f 5e 83 58 01 00 	divsd  0x158(%rbx),%xmm0
   11ede:	00 
   11edf:	f2 0f 59 05 b9 71 00 	mulsd  0x71b9(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11ee6:	00 
   11ee7:	0f 83 ab 00 00 00    	jae    11f98 <print_statistics+0x888>
   11eed:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11ef2:	48 8d 35 cf 5f 00 00 	lea    0x5fcf(%rip),%rsi        # 17ec8 <__PRETTY_FUNCTION__.6556+0x2108>
   11ef9:	bf 01 00 00 00       	mov    $0x1,%edi
   11efe:	b8 01 00 00 00       	mov    $0x1,%eax
   11f03:	e8 68 fa fe ff       	callq  1970 <__printf_chk@plt>
   11f08:	f2 0f 10 8b 70 01 00 	movsd  0x170(%rbx),%xmm1
   11f0f:	00 
   11f10:	66 0f 2f 0d 90 34 00 	comisd 0x3490(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11f17:	00 
   11f18:	66 0f 28 c1          	movapd %xmm1,%xmm0
   11f1c:	f2 0f 5e 83 58 01 00 	divsd  0x158(%rbx),%xmm0
   11f23:	00 
   11f24:	f2 0f 59 05 74 71 00 	mulsd  0x7174(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   11f2b:	00 
   11f2c:	73 52                	jae    11f80 <print_statistics+0x870>
   11f2e:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11f33:	bf 01 00 00 00       	mov    $0x1,%edi
   11f38:	48 8d 35 d9 5f 00 00 	lea    0x5fd9(%rip),%rsi        # 17f18 <__PRETTY_FUNCTION__.6556+0x2158>
   11f3f:	b8 01 00 00 00       	mov    $0x1,%eax
   11f44:	e8 27 fa fe ff       	callq  1970 <__printf_chk@plt>
   11f49:	48 8d 3d b0 6d 00 00 	lea    0x6db0(%rip),%rdi        # 18d00 <__PRETTY_FUNCTION__.6556+0x2f40>
   11f50:	5b                   	pop    %rbx
   11f51:	e9 ea f7 fe ff       	jmpq   1740 <puts@plt>
   11f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11f5d:	00 00 00 
   11f60:	f2 0f 5c 05 40 34 00 	subsd  0x3440(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11f67:	00 
   11f68:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11f6d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   11f72:	e9 13 f8 ff ff       	jmpq   1178a <print_statistics+0x7a>
   11f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11f7e:	00 00 
   11f80:	f2 0f 5c 0d 20 34 00 	subsd  0x3420(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11f87:	00 
   11f88:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11f8d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   11f92:	eb 9f                	jmp    11f33 <print_statistics+0x823>
   11f94:	0f 1f 40 00          	nopl   0x0(%rax)
   11f98:	f2 0f 5c 0d 08 34 00 	subsd  0x3408(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11f9f:	00 
   11fa0:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11fa5:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   11faa:	e9 43 ff ff ff       	jmpq   11ef2 <print_statistics+0x7e2>
   11faf:	90                   	nop
   11fb0:	f2 0f 5c 0d f0 33 00 	subsd  0x33f0(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11fb7:	00 
   11fb8:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   11fbd:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   11fc2:	e9 e6 fe ff ff       	jmpq   11ead <print_statistics+0x79d>
   11fc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11fce:	00 00 
   11fd0:	f2 0f 5c 05 d0 33 00 	subsd  0x33d0(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11fd7:	00 
   11fd8:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11fdd:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   11fe2:	e9 84 fe ff ff       	jmpq   11e6b <print_statistics+0x75b>
   11fe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11fee:	00 00 
   11ff0:	f2 0f 5c 05 b0 33 00 	subsd  0x33b0(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   11ff7:	00 
   11ff8:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   11ffd:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12002:	e9 0e fe ff ff       	jmpq   11e15 <print_statistics+0x705>
   12007:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1200e:	00 00 
   12010:	f2 0f 5c 05 90 33 00 	subsd  0x3390(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12017:	00 
   12018:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   1201d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12022:	e9 a2 fd ff ff       	jmpq   11dc9 <print_statistics+0x6b9>
   12027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1202e:	00 00 
   12030:	f2 0f 5c 05 70 33 00 	subsd  0x3370(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12037:	00 
   12038:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   1203d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12042:	e9 54 fd ff ff       	jmpq   11d9b <print_statistics+0x68b>
   12047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1204e:	00 00 
   12050:	f2 0f 5c 05 50 33 00 	subsd  0x3350(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12057:	00 
   12058:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   1205d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12062:	e9 fc fc ff ff       	jmpq   11d63 <print_statistics+0x653>
   12067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1206e:	00 00 
   12070:	f2 0f 5c 05 30 33 00 	subsd  0x3330(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12077:	00 
   12078:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   1207d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12082:	e9 ae fc ff ff       	jmpq   11d35 <print_statistics+0x625>
   12087:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1208e:	00 00 
   12090:	f2 0f 5c 05 10 33 00 	subsd  0x3310(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12097:	00 
   12098:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   1209d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   120a2:	e9 b8 fb ff ff       	jmpq   11c5f <print_statistics+0x54f>
   120a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   120ae:	00 00 
   120b0:	f2 0f 5c 05 f0 32 00 	subsd  0x32f0(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   120b7:	00 
   120b8:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   120bd:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   120c2:	e9 2a fb ff ff       	jmpq   11bf1 <print_statistics+0x4e1>
   120c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   120ce:	00 00 
   120d0:	f2 0f 5c 05 d0 32 00 	subsd  0x32d0(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   120d7:	00 
   120d8:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   120dd:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   120e2:	e9 df fa ff ff       	jmpq   11bc6 <print_statistics+0x4b6>
   120e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   120ee:	00 00 
   120f0:	f2 0f 5c 05 b0 32 00 	subsd  0x32b0(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   120f7:	00 
   120f8:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   120fd:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12102:	e9 91 fa ff ff       	jmpq   11b98 <print_statistics+0x488>
   12107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1210e:	00 00 
   12110:	f2 0f 5c 0d 90 32 00 	subsd  0x3290(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12117:	00 
   12118:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1211d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12122:	e9 2b f9 ff ff       	jmpq   11a52 <print_statistics+0x342>
   12127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1212e:	00 00 
   12130:	f2 0f 5c 0d 70 32 00 	subsd  0x3270(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12137:	00 
   12138:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1213d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12142:	e9 cc f8 ff ff       	jmpq   11a13 <print_statistics+0x303>
   12147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1214e:	00 00 
   12150:	f2 0f 5c 0d 50 32 00 	subsd  0x3250(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12157:	00 
   12158:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1215d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12162:	e9 6d f8 ff ff       	jmpq   119d4 <print_statistics+0x2c4>
   12167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1216e:	00 00 
   12170:	f2 0f 5c 0d 30 32 00 	subsd  0x3230(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12177:	00 
   12178:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1217d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12182:	e9 0e f8 ff ff       	jmpq   11995 <print_statistics+0x285>
   12187:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1218e:	00 00 
   12190:	f2 0f 5c 0d 10 32 00 	subsd  0x3210(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12197:	00 
   12198:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1219d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   121a2:	e9 a6 f7 ff ff       	jmpq   1194d <print_statistics+0x23d>
   121a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   121ae:	00 00 
   121b0:	f2 0f 5c 0d f0 31 00 	subsd  0x31f0(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   121b7:	00 
   121b8:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   121bd:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   121c2:	e9 47 f7 ff ff       	jmpq   1190e <print_statistics+0x1fe>
   121c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   121ce:	00 00 
   121d0:	f2 0f 5c 0d d0 31 00 	subsd  0x31d0(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   121d7:	00 
   121d8:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   121dd:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   121e2:	e9 e9 f6 ff ff       	jmpq   118d0 <print_statistics+0x1c0>
   121e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   121ee:	00 00 
   121f0:	f2 0f 5c 0d b0 31 00 	subsd  0x31b0(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   121f7:	00 
   121f8:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   121fd:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12202:	e9 68 f6 ff ff       	jmpq   1186f <print_statistics+0x15f>
   12207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1220e:	00 00 
   12210:	f2 0f 5c 0d 90 31 00 	subsd  0x3190(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12217:	00 
   12218:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1221d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12222:	e9 0a f6 ff ff       	jmpq   11831 <print_statistics+0x121>
   12227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1222e:	00 00 
   12230:	f2 0f 5c 05 70 31 00 	subsd  0x3170(%rip),%xmm0        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12237:	00 
   12238:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
   1223d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12242:	e9 af f5 ff ff       	jmpq   117f6 <print_statistics+0xe6>
   12247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1224e:	00 00 
   12250:	f2 0f 5c 0d 50 31 00 	subsd  0x3150(%rip),%xmm1        # 153a8 <__PRETTY_FUNCTION__.6351+0x318>
   12257:	00 
   12258:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
   1225d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
   12262:	e9 5e f5 ff ff       	jmpq   117c5 <print_statistics+0xb5>
   12267:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1226e:	00 00 

0000000000012270 <write_empty_cell_and_separator>:
   12270:	48 89 f1             	mov    %rsi,%rcx
   12273:	48 8d 15 74 6c 00 00 	lea    0x6c74(%rip),%rdx        # 18eee <__PRETTY_FUNCTION__.6556+0x312e>
   1227a:	be 01 00 00 00       	mov    $0x1,%esi
   1227f:	31 c0                	xor    %eax,%eax
   12281:	e9 da f7 fe ff       	jmpq   1a60 <__fprintf_chk@plt>
   12286:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1228d:	00 00 00 

0000000000012290 <write_unsigned_and_separator>:
   12290:	89 f1                	mov    %esi,%ecx
   12292:	49 89 d0             	mov    %rdx,%r8
   12295:	be 01 00 00 00       	mov    $0x1,%esi
   1229a:	31 c0                	xor    %eax,%eax
   1229c:	48 8d 15 56 6c 00 00 	lea    0x6c56(%rip),%rdx        # 18ef9 <__PRETTY_FUNCTION__.6556+0x3139>
   122a3:	e9 b8 f7 fe ff       	jmpq   1a60 <__fprintf_chk@plt>
   122a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   122af:	00 

00000000000122b0 <write_double_and_separator>:
   122b0:	48 89 f1             	mov    %rsi,%rcx
   122b3:	48 8d 15 47 6c 00 00 	lea    0x6c47(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   122ba:	be 01 00 00 00       	mov    $0x1,%esi
   122bf:	b8 01 00 00 00       	mov    $0x1,%eax
   122c4:	e9 97 f7 fe ff       	jmpq   1a60 <__fprintf_chk@plt>
   122c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000122d0 <write_string_unsigned_and_separator>:
   122d0:	41 89 f0             	mov    %esi,%r8d
   122d3:	49 89 c9             	mov    %rcx,%r9
   122d6:	be 01 00 00 00       	mov    $0x1,%esi
   122db:	48 89 d1             	mov    %rdx,%rcx
   122de:	31 c0                	xor    %eax,%eax
   122e0:	48 8d 15 0f 6c 00 00 	lea    0x6c0f(%rip),%rdx        # 18ef6 <__PRETTY_FUNCTION__.6556+0x3136>
   122e7:	e9 74 f7 fe ff       	jmpq   1a60 <__fprintf_chk@plt>
   122ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000122f0 <write_string_double_and_separator>:
   122f0:	48 89 f1             	mov    %rsi,%rcx
   122f3:	49 89 d0             	mov    %rdx,%r8
   122f6:	be 01 00 00 00       	mov    $0x1,%esi
   122fb:	b8 01 00 00 00       	mov    $0x1,%eax
   12300:	48 8d 15 f7 6b 00 00 	lea    0x6bf7(%rip),%rdx        # 18efe <__PRETTY_FUNCTION__.6556+0x313e>
   12307:	e9 54 f7 fe ff       	jmpq   1a60 <__fprintf_chk@plt>
   1230c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012310 <write_standard_statistics>:
   12310:	55                   	push   %rbp
   12311:	8b 0d 71 6e 33 00    	mov    0x336e71(%rip),%ecx        # 349188 <n_cores>
   12317:	4c 8d 05 ea 6b 00 00 	lea    0x6bea(%rip),%r8        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   1231e:	31 c0                	xor    %eax,%eax
   12320:	48 8d 15 d2 6b 00 00 	lea    0x6bd2(%rip),%rdx        # 18ef9 <__PRETTY_FUNCTION__.6556+0x3139>
   12327:	be 01 00 00 00       	mov    $0x1,%esi
   1232c:	48 89 fd             	mov    %rdi,%rbp
   1232f:	e8 2c f7 fe ff       	callq  1a60 <__fprintf_chk@plt>
   12334:	8b 0d 76 6e 33 00    	mov    0x336e76(%rip),%ecx        # 3491b0 <n_prc_tot>
   1233a:	48 89 ef             	mov    %rbp,%rdi
   1233d:	31 c0                	xor    %eax,%eax
   1233f:	4c 8d 05 c2 6b 00 00 	lea    0x6bc2(%rip),%r8        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   12346:	48 8d 15 ac 6b 00 00 	lea    0x6bac(%rip),%rdx        # 18ef9 <__PRETTY_FUNCTION__.6556+0x3139>
   1234d:	be 01 00 00 00       	mov    $0x1,%esi
   12352:	e8 09 f7 fe ff       	callq  1a60 <__fprintf_chk@plt>
   12357:	f2 0f 10 05 49 6e 33 	movsd  0x336e49(%rip),%xmm0        # 3491a8 <simduration>
   1235e:	00 
   1235f:	48 89 ef             	mov    %rbp,%rdi
   12362:	48 8d 0d 9f 6b 00 00 	lea    0x6b9f(%rip),%rcx        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   12369:	48 8d 15 91 6b 00 00 	lea    0x6b91(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   12370:	be 01 00 00 00       	mov    $0x1,%esi
   12375:	b8 01 00 00 00       	mov    $0x1,%eax
   1237a:	e8 e1 f6 fe ff       	callq  1a60 <__fprintf_chk@plt>
   1237f:	48 89 ef             	mov    %rbp,%rdi
   12382:	b9 32 00 00 00       	mov    $0x32,%ecx
   12387:	31 c0                	xor    %eax,%eax
   12389:	4c 8d 05 78 6b 00 00 	lea    0x6b78(%rip),%r8        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   12390:	48 8d 15 62 6b 00 00 	lea    0x6b62(%rip),%rdx        # 18ef9 <__PRETTY_FUNCTION__.6556+0x3139>
   12397:	be 01 00 00 00       	mov    $0x1,%esi
   1239c:	e8 bf f6 fe ff       	callq  1a60 <__fprintf_chk@plt>
   123a1:	48 8b 05 70 6e 33 00 	mov    0x336e70(%rip),%rax        # 349218 <system_stats>
   123a8:	48 89 ef             	mov    %rbp,%rdi
   123ab:	f2 0f 10 0d f5 6d 33 	movsd  0x336df5(%rip),%xmm1        # 3491a8 <simduration>
   123b2:	00 
   123b3:	48 8d 0d 4e 6b 00 00 	lea    0x6b4e(%rip),%rcx        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   123ba:	48 8d 15 40 6b 00 00 	lea    0x6b40(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   123c1:	be 01 00 00 00       	mov    $0x1,%esi
   123c6:	f2 0f 10 40 10       	movsd  0x10(%rax),%xmm0
   123cb:	8b 05 b7 6d 33 00    	mov    0x336db7(%rip),%eax        # 349188 <n_cores>
   123d1:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   123d5:	66 0f ef c9          	pxor   %xmm1,%xmm1
   123d9:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
   123de:	b8 01 00 00 00       	mov    $0x1,%eax
   123e3:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   123e7:	e8 74 f6 fe ff       	callq  1a60 <__fprintf_chk@plt>
   123ec:	48 8b 05 25 6e 33 00 	mov    0x336e25(%rip),%rax        # 349218 <system_stats>
   123f3:	48 89 ef             	mov    %rbp,%rdi
   123f6:	48 8d 0d 0b 6b 00 00 	lea    0x6b0b(%rip),%rcx        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   123fd:	48 8d 15 fd 6a 00 00 	lea    0x6afd(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   12404:	be 01 00 00 00       	mov    $0x1,%esi
   12409:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
   1240e:	f2 0f 5e 00          	divsd  (%rax),%xmm0
   12412:	b8 01 00 00 00       	mov    $0x1,%eax
   12417:	f2 0f 59 05 81 6c 00 	mulsd  0x6c81(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   1241e:	00 
   1241f:	e8 3c f6 fe ff       	callq  1a60 <__fprintf_chk@plt>
   12424:	48 8b 05 ed 6d 33 00 	mov    0x336ded(%rip),%rax        # 349218 <system_stats>
   1242b:	48 89 ef             	mov    %rbp,%rdi
   1242e:	48 8d 0d d3 6a 00 00 	lea    0x6ad3(%rip),%rcx        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   12435:	48 8d 15 c5 6a 00 00 	lea    0x6ac5(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   1243c:	be 01 00 00 00       	mov    $0x1,%esi
   12441:	f2 0f 10 40 60       	movsd  0x60(%rax),%xmm0
   12446:	f2 0f 5e 00          	divsd  (%rax),%xmm0
   1244a:	b8 01 00 00 00       	mov    $0x1,%eax
   1244f:	f2 0f 59 05 49 6c 00 	mulsd  0x6c49(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   12456:	00 
   12457:	e8 04 f6 fe ff       	callq  1a60 <__fprintf_chk@plt>
   1245c:	48 8b 05 b5 6d 33 00 	mov    0x336db5(%rip),%rax        # 349218 <system_stats>
   12463:	66 0f ef c9          	pxor   %xmm1,%xmm1
   12467:	48 89 ef             	mov    %rbp,%rdi
   1246a:	48 8d 0d 97 6a 00 00 	lea    0x6a97(%rip),%rcx        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   12471:	48 8d 15 89 6a 00 00 	lea    0x6a89(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   12478:	be 01 00 00 00       	mov    $0x1,%esi
   1247d:	f2 0f 10 10          	movsd  (%rax),%xmm2
   12481:	66 0f 28 c2          	movapd %xmm2,%xmm0
   12485:	f2 0f 5c 40 48       	subsd  0x48(%rax),%xmm0
   1248a:	f2 0f 5c 80 50 01 00 	subsd  0x150(%rax),%xmm0
   12491:	00 
   12492:	8b 05 18 6d 33 00    	mov    0x336d18(%rip),%eax        # 3491b0 <n_prc_tot>
   12498:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
   1249d:	b8 01 00 00 00       	mov    $0x1,%eax
   124a2:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   124a6:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   124aa:	f2 0f 59 05 ee 6b 00 	mulsd  0x6bee(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   124b1:	00 
   124b2:	e8 a9 f5 fe ff       	callq  1a60 <__fprintf_chk@plt>
   124b7:	48 8b 05 5a 6d 33 00 	mov    0x336d5a(%rip),%rax        # 349218 <system_stats>
   124be:	48 89 ef             	mov    %rbp,%rdi
   124c1:	48 8d 0d 40 6a 00 00 	lea    0x6a40(%rip),%rcx        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   124c8:	48 8d 15 32 6a 00 00 	lea    0x6a32(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   124cf:	be 01 00 00 00       	mov    $0x1,%esi
   124d4:	f2 0f 10 40 48       	movsd  0x48(%rax),%xmm0
   124d9:	f2 0f 5e 00          	divsd  (%rax),%xmm0
   124dd:	b8 01 00 00 00       	mov    $0x1,%eax
   124e2:	f2 0f 59 05 b6 6b 00 	mulsd  0x6bb6(%rip),%xmm0        # 190a0 <__PRETTY_FUNCTION__.6556+0x32e0>
   124e9:	00 
   124ea:	e8 71 f5 fe ff       	callq  1a60 <__fprintf_chk@plt>
   124ef:	48 8b 05 22 6d 33 00 	mov    0x336d22(%rip),%rax        # 349218 <system_stats>
   124f6:	48 89 ef             	mov    %rbp,%rdi
   124f9:	48 8d 0d 08 6a 00 00 	lea    0x6a08(%rip),%rcx        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   12500:	48 8d 15 fa 69 00 00 	lea    0x69fa(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   12507:	be 01 00 00 00       	mov    $0x1,%esi
   1250c:	f2 0f 10 80 b0 00 00 	movsd  0xb0(%rax),%xmm0
   12513:	00 
   12514:	b8 01 00 00 00       	mov    $0x1,%eax
   12519:	e8 42 f5 fe ff       	callq  1a60 <__fprintf_chk@plt>
   1251e:	48 8b 05 f3 6c 33 00 	mov    0x336cf3(%rip),%rax        # 349218 <system_stats>
   12525:	48 89 ef             	mov    %rbp,%rdi
   12528:	48 8d 0d d9 69 00 00 	lea    0x69d9(%rip),%rcx        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   1252f:	48 8d 15 cb 69 00 00 	lea    0x69cb(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   12536:	be 01 00 00 00       	mov    $0x1,%esi
   1253b:	f2 0f 10 80 20 01 00 	movsd  0x120(%rax),%xmm0
   12542:	00 
   12543:	b8 01 00 00 00       	mov    $0x1,%eax
   12548:	e8 13 f5 fe ff       	callq  1a60 <__fprintf_chk@plt>
   1254d:	48 8b 05 c4 6c 33 00 	mov    0x336cc4(%rip),%rax        # 349218 <system_stats>
   12554:	48 89 ef             	mov    %rbp,%rdi
   12557:	5d                   	pop    %rbp
   12558:	48 8d 0d a9 69 00 00 	lea    0x69a9(%rip),%rcx        # 18f08 <__PRETTY_FUNCTION__.6556+0x3148>
   1255f:	48 8d 15 9b 69 00 00 	lea    0x699b(%rip),%rdx        # 18f01 <__PRETTY_FUNCTION__.6556+0x3141>
   12566:	be 01 00 00 00       	mov    $0x1,%esi
   1256b:	f2 0f 10 80 18 01 00 	movsd  0x118(%rax),%xmm0
   12572:	00 
   12573:	b8 01 00 00 00       	mov    $0x1,%eax
   12578:	e9 e3 f4 fe ff       	jmpq   1a60 <__fprintf_chk@plt>
   1257d:	0f 1f 00             	nopl   (%rax)

0000000000012580 <write_first_line_on_csv>:
   12580:	48 8d 15 e1 59 00 00 	lea    0x59e1(%rip),%rdx        # 17f68 <__PRETTY_FUNCTION__.6556+0x21a8>
   12587:	be 01 00 00 00       	mov    $0x1,%esi
   1258c:	31 c0                	xor    %eax,%eax
   1258e:	e9 cd f4 fe ff       	jmpq   1a60 <__fprintf_chk@plt>
   12593:	0f 1f 00             	nopl   (%rax)
   12596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1259d:	00 00 00 

00000000000125a0 <write_results_on_csv>:
   125a0:	c3                   	retq   
   125a1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   125a8:	00 00 00 
   125ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000125b0 <count_element_linked_list>:
   125b0:	31 c0                	xor    %eax,%eax
   125b2:	48 85 ff             	test   %rdi,%rdi
   125b5:	74 19                	je     125d0 <count_element_linked_list+0x20>
   125b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   125be:	00 00 
   125c0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   125c4:	83 c0 01             	add    $0x1,%eax
   125c7:	48 85 ff             	test   %rdi,%rdi
   125ca:	75 f4                	jne    125c0 <count_element_linked_list+0x10>
   125cc:	c3                   	retq   
   125cd:	0f 1f 00             	nopl   (%rax)
   125d0:	c3                   	retq   
   125d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   125d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   125dd:	00 00 00 

00000000000125e0 <insert_first>:
   125e0:	48 85 ff             	test   %rdi,%rdi
   125e3:	74 0b                	je     125f0 <insert_first+0x10>
   125e5:	48 85 f6             	test   %rsi,%rsi
   125e8:	74 06                	je     125f0 <insert_first+0x10>
   125ea:	48 89 3e             	mov    %rdi,(%rsi)
   125ed:	31 c0                	xor    %eax,%eax
   125ef:	c3                   	retq   
   125f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   125f5:	c3                   	retq   
   125f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   125fd:	00 00 00 

0000000000012600 <get_new_node>:
   12600:	48 85 ff             	test   %rdi,%rdi
   12603:	74 23                	je     12628 <get_new_node+0x28>
   12605:	53                   	push   %rbx
   12606:	48 89 fb             	mov    %rdi,%rbx
   12609:	bf 10 00 00 00       	mov    $0x10,%edi
   1260e:	e8 fd f2 fe ff       	callq  1910 <malloc@plt>
   12613:	48 85 c0             	test   %rax,%rax
   12616:	74 0b                	je     12623 <get_new_node+0x23>
   12618:	48 89 18             	mov    %rbx,(%rax)
   1261b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12622:	00 
   12623:	5b                   	pop    %rbx
   12624:	c3                   	retq   
   12625:	0f 1f 00             	nopl   (%rax)
   12628:	31 c0                	xor    %eax,%eax
   1262a:	c3                   	retq   
   1262b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000012630 <insert_at_head>:
   12630:	48 85 f6             	test   %rsi,%rsi
   12633:	74 24                	je     12659 <insert_at_head+0x29>
   12635:	48 8b 06             	mov    (%rsi),%rax
   12638:	48 85 c0             	test   %rax,%rax
   1263b:	74 13                	je     12650 <insert_at_head+0x20>
   1263d:	48 89 47 08          	mov    %rax,0x8(%rdi)
   12641:	31 c0                	xor    %eax,%eax
   12643:	48 89 3e             	mov    %rdi,(%rsi)
   12646:	c3                   	retq   
   12647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1264e:	00 00 
   12650:	48 85 ff             	test   %rdi,%rdi
   12653:	74 0a                	je     1265f <insert_at_head+0x2f>
   12655:	48 89 3e             	mov    %rdi,(%rsi)
   12658:	c3                   	retq   
   12659:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1265e:	c3                   	retq   
   1265f:	31 c0                	xor    %eax,%eax
   12661:	c3                   	retq   
   12662:	0f 1f 40 00          	nopl   0x0(%rax)
   12666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1266d:	00 00 00 

0000000000012670 <free_memory_list>:
   12670:	48 85 ff             	test   %rdi,%rdi
   12673:	74 23                	je     12698 <free_memory_list+0x28>
   12675:	53                   	push   %rbx
   12676:	48 89 fb             	mov    %rdi,%rbx
   12679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12680:	48 89 df             	mov    %rbx,%rdi
   12683:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   12687:	e8 f4 ef fe ff       	callq  1680 <free@plt>
   1268c:	48 85 db             	test   %rbx,%rbx
   1268f:	75 ef                	jne    12680 <free_memory_list+0x10>
   12691:	5b                   	pop    %rbx
   12692:	c3                   	retq   
   12693:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12698:	c3                   	retq   
   12699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000126a0 <print_list>:
   126a0:	48 85 ff             	test   %rdi,%rdi
   126a3:	74 2b                	je     126d0 <print_list+0x30>
   126a5:	55                   	push   %rbp
   126a6:	48 89 f5             	mov    %rsi,%rbp
   126a9:	53                   	push   %rbx
   126aa:	48 89 fb             	mov    %rdi,%rbx
   126ad:	48 83 ec 08          	sub    $0x8,%rsp
   126b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   126b8:	48 8b 3b             	mov    (%rbx),%rdi
   126bb:	ff d5                	callq  *%rbp
   126bd:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   126c1:	48 85 db             	test   %rbx,%rbx
   126c4:	75 f2                	jne    126b8 <print_list+0x18>
   126c6:	48 83 c4 08          	add    $0x8,%rsp
   126ca:	5b                   	pop    %rbx
   126cb:	5d                   	pop    %rbp
   126cc:	c3                   	retq   
   126cd:	0f 1f 00             	nopl   (%rax)
   126d0:	48 8d 3d 33 68 00 00 	lea    0x6833(%rip),%rdi        # 18f0a <__PRETTY_FUNCTION__.6556+0x314a>
   126d7:	e9 64 f0 fe ff       	jmpq   1740 <puts@plt>
   126dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000126e0 <cmpexch_weak_relaxed>:
   126e0:	49 89 d0             	mov    %rdx,%r8
   126e3:	48 8b 06             	mov    (%rsi),%rax
   126e6:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   126ea:	53                   	push   %rbx
   126eb:	4c 89 c3             	mov    %r8,%rbx
   126ee:	f0 48 0f c7 0f       	lock cmpxchg16b (%rdi)
   126f3:	41 0f 94 c0          	sete   %r8b
   126f7:	74 07                	je     12700 <cmpexch_weak_relaxed+0x20>
   126f9:	48 89 06             	mov    %rax,(%rsi)
   126fc:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   12700:	44 89 c0             	mov    %r8d,%eax
   12703:	5b                   	pop    %rbx
   12704:	c3                   	retq   
   12705:	90                   	nop
   12706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1270d:	00 00 00 

0000000000012710 <load_relaxed>:
   12710:	31 c9                	xor    %ecx,%ecx
   12712:	53                   	push   %rbx
   12713:	31 c0                	xor    %eax,%eax
   12715:	31 d2                	xor    %edx,%edx
   12717:	89 cb                	mov    %ecx,%ebx
   12719:	f0 48 0f c7 0f       	lock cmpxchg16b (%rdi)
   1271e:	5b                   	pop    %rbx
   1271f:	c3                   	retq   

0000000000012720 <store_relaxed>:
   12720:	48 89 d1             	mov    %rdx,%rcx
   12723:	48 8b 07             	mov    (%rdi),%rax
   12726:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   1272a:	53                   	push   %rbx
   1272b:	48 89 f3             	mov    %rsi,%rbx
   1272e:	66 90                	xchg   %ax,%ax
   12730:	f0 48 0f c7 0f       	lock cmpxchg16b (%rdi)
   12735:	75 f9                	jne    12730 <store_relaxed+0x10>
   12737:	5b                   	pop    %rbx
   12738:	c3                   	retq   
   12739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000012740 <atomic_load_epoch_and_ts>:
   12740:	e9 cb ff ff ff       	jmpq   12710 <load_relaxed>
   12745:	90                   	nop
   12746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1274d:	00 00 00 

0000000000012750 <atomic_store_epoch_and_ts>:
   12750:	e9 cb ff ff ff       	jmpq   12720 <store_relaxed>
   12755:	90                   	nop
   12756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1275d:	00 00 00 

0000000000012760 <set_epoch>:
   12760:	89 77 08             	mov    %esi,0x8(%rdi)
   12763:	c3                   	retq   
   12764:	66 90                	xchg   %ax,%ax
   12766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1276d:	00 00 00 

0000000000012770 <set_timestamp>:
   12770:	f2 0f 11 07          	movsd  %xmm0,(%rdi)
   12774:	c3                   	retq   
   12775:	90                   	nop
   12776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1277d:	00 00 00 

0000000000012780 <get_epoch>:
   12780:	48 89 f0             	mov    %rsi,%rax
   12783:	c3                   	retq   
   12784:	66 90                	xchg   %ax,%ax
   12786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1278d:	00 00 00 

0000000000012790 <get_timestamp>:
   12790:	66 48 0f 6e c7       	movq   %rdi,%xmm0
   12795:	c3                   	retq   
   12796:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1279d:	00 00 00 

00000000000127a0 <check_after_rollback>:
   127a0:	53                   	push   %rbx
   127a1:	48 c7 c0 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rax
   127a8:	48 c7 c3 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbx
   127af:	64 48 8b 08          	mov    %fs:(%rax),%rcx
   127b3:	48 8b 05 ce a8 20 00 	mov    0x20a8ce(%rip),%rax        # 21d088 <LPS>
   127ba:	64 8b 13             	mov    %fs:(%rbx),%edx
   127bd:	f2 0f 10 49 08       	movsd  0x8(%rcx),%xmm1
   127c2:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   127c6:	48 89 d7             	mov    %rdx,%rdi
   127c9:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
   127d0:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
   127d5:	66 0f 2f c1          	comisd %xmm1,%xmm0
   127d9:	77 55                	ja     12830 <check_after_rollback+0x90>
   127db:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   127df:	7a 0c                	jp     127ed <check_after_rollback+0x4d>
   127e1:	75 0a                	jne    127ed <check_after_rollback+0x4d>
   127e3:	0f b7 72 10          	movzwl 0x10(%rdx),%esi
   127e7:	66 39 71 10          	cmp    %si,0x10(%rcx)
   127eb:	76 43                	jbe    12830 <check_after_rollback+0x90>
   127ed:	80 b8 98 00 00 00 00 	cmpb   $0x0,0x98(%rax)
   127f4:	74 61                	je     12857 <check_after_rollback+0xb7>
   127f6:	e8 55 14 00 00       	callq  13c50 <bound_is_corrupted>
   127fb:	84 c0                	test   %al,%al
   127fd:	74 71                	je     12870 <check_after_rollback+0xd0>
   127ff:	64 8b 13             	mov    %fs:(%rbx),%edx
   12802:	48 8b 05 7f a8 20 00 	mov    0x20a87f(%rip),%rax        # 21d088 <LPS>
   12809:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1280d:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   12814:	83 78 40 04          	cmpl   $0x4,0x40(%rax)
   12818:	74 06                	je     12820 <check_after_rollback+0x80>
   1281a:	5b                   	pop    %rbx
   1281b:	c3                   	retq   
   1281c:	0f 1f 40 00          	nopl   0x0(%rax)
   12820:	48 8d 3d e1 57 00 00 	lea    0x57e1(%rip),%rdi        # 18008 <__PRETTY_FUNCTION__.6556+0x2248>
   12827:	e8 14 ef fe ff       	callq  1740 <puts@plt>
   1282c:	cc                   	int3   
   1282d:	5b                   	pop    %rbx
   1282e:	c3                   	retq   
   1282f:	90                   	nop
   12830:	48 8d 3d de 66 00 00 	lea    0x66de(%rip),%rdi        # 18f15 <__PRETTY_FUNCTION__.6556+0x3155>
   12837:	e8 04 ef fe ff       	callq  1740 <puts@plt>
   1283c:	cc                   	int3   
   1283d:	48 8b 05 44 a8 20 00 	mov    0x20a844(%rip),%rax        # 21d088 <LPS>
   12844:	64 8b 13             	mov    %fs:(%rbx),%edx
   12847:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1284b:	48 89 d7             	mov    %rdx,%rdi
   1284e:	80 b8 98 00 00 00 00 	cmpb   $0x0,0x98(%rax)
   12855:	75 9f                	jne    127f6 <check_after_rollback+0x56>
   12857:	48 8d 3d c5 66 00 00 	lea    0x66c5(%rip),%rdi        # 18f23 <__PRETTY_FUNCTION__.6556+0x3163>
   1285e:	e8 dd ee fe ff       	callq  1740 <puts@plt>
   12863:	cc                   	int3   
   12864:	64 8b 3b             	mov    %fs:(%rbx),%edi
   12867:	e8 e4 13 00 00       	callq  13c50 <bound_is_corrupted>
   1286c:	84 c0                	test   %al,%al
   1286e:	75 8f                	jne    127ff <check_after_rollback+0x5f>
   12870:	48 8d 3d 71 57 00 00 	lea    0x5771(%rip),%rdi        # 17fe8 <__PRETTY_FUNCTION__.6556+0x2228>
   12877:	e8 c4 ee fe ff       	callq  1740 <puts@plt>
   1287c:	cc                   	int3   
   1287d:	eb 80                	jmp    127ff <check_after_rollback+0x5f>
   1287f:	90                   	nop

0000000000012880 <check_CFV_ALREADY_HANDLED>:
   12880:	41 55                	push   %r13
   12882:	41 54                	push   %r12
   12884:	55                   	push   %rbp
   12885:	53                   	push   %rbx
   12886:	48 83 ec 08          	sub    $0x8,%rsp
   1288a:	48 c7 c3 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbx
   12891:	48 8b 05 f0 a7 20 00 	mov    0x20a7f0(%rip),%rax        # 21d088 <LPS>
   12898:	64 8b 13             	mov    %fs:(%rbx),%edx
   1289b:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1289f:	66 83 78 10 01       	cmpw   $0x1,0x10(%rax)
   128a4:	74 0d                	je     128b3 <check_CFV_ALREADY_HANDLED+0x33>
   128a6:	48 8d 3d 87 66 00 00 	lea    0x6687(%rip),%rdi        # 18f34 <__PRETTY_FUNCTION__.6556+0x3174>
   128ad:	e8 8e ee fe ff       	callq  1740 <puts@plt>
   128b2:	cc                   	int3   
   128b3:	31 c0                	xor    %eax,%eax
   128b5:	e8 06 10 00 00       	callq  138c0 <get_preemption_counter>
   128ba:	48 83 f8 01          	cmp    $0x1,%rax
   128be:	74 0d                	je     128cd <check_CFV_ALREADY_HANDLED+0x4d>
   128c0:	48 8d 3d 71 57 00 00 	lea    0x5771(%rip),%rdi        # 18038 <__PRETTY_FUNCTION__.6556+0x2278>
   128c7:	e8 74 ee fe ff       	callq  1740 <puts@plt>
   128cc:	cc                   	int3   
   128cd:	64 8b 13             	mov    %fs:(%rbx),%edx
   128d0:	48 8b 05 b1 a7 20 00 	mov    0x20a7b1(%rip),%rax        # 21d088 <LPS>
   128d7:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   128db:	48 89 d7             	mov    %rdx,%rdi
   128de:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   128e5:	8b 52 40             	mov    0x40(%rdx),%edx
   128e8:	85 d2                	test   %edx,%edx
   128ea:	75 64                	jne    12950 <check_CFV_ALREADY_HANDLED+0xd0>
   128ec:	48 83 b8 90 00 00 00 	cmpq   $0x0,0x90(%rax)
   128f3:	00 
   128f4:	74 10                	je     12906 <check_CFV_ALREADY_HANDLED+0x86>
   128f6:	48 8d 3d a3 57 00 00 	lea    0x57a3(%rip),%rdi        # 180a0 <__PRETTY_FUNCTION__.6556+0x22e0>
   128fd:	e8 3e ee fe ff       	callq  1740 <puts@plt>
   12902:	cc                   	int3   
   12903:	64 8b 3b             	mov    %fs:(%rbx),%edi
   12906:	e8 e5 12 00 00       	callq  13bf0 <dummy_bound_is_corrupted>
   1290b:	84 c0                	test   %al,%al
   1290d:	0f 85 7d 00 00 00    	jne    12990 <check_CFV_ALREADY_HANDLED+0x110>
   12913:	64 8b 3b             	mov    %fs:(%rbx),%edi
   12916:	e8 35 13 00 00       	callq  13c50 <bound_is_corrupted>
   1291b:	84 c0                	test   %al,%al
   1291d:	75 59                	jne    12978 <check_CFV_ALREADY_HANDLED+0xf8>
   1291f:	64 8b 13             	mov    %fs:(%rbx),%edx
   12922:	48 8b 05 5f a7 20 00 	mov    0x20a75f(%rip),%rax        # 21d088 <LPS>
   12929:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1292d:	48 83 b8 80 00 00 00 	cmpq   $0x0,0x80(%rax)
   12934:	00 
   12935:	74 0d                	je     12944 <check_CFV_ALREADY_HANDLED+0xc4>
   12937:	48 8d 3d a2 57 00 00 	lea    0x57a2(%rip),%rdi        # 180e0 <__PRETTY_FUNCTION__.6556+0x2320>
   1293e:	e8 fd ed fe ff       	callq  1740 <puts@plt>
   12943:	cc                   	int3   
   12944:	48 83 c4 08          	add    $0x8,%rsp
   12948:	5b                   	pop    %rbx
   12949:	5d                   	pop    %rbp
   1294a:	41 5c                	pop    %r12
   1294c:	41 5d                	pop    %r13
   1294e:	c3                   	retq   
   1294f:	90                   	nop
   12950:	48 8d 3d 19 57 00 00 	lea    0x5719(%rip),%rdi        # 18070 <__PRETTY_FUNCTION__.6556+0x22b0>
   12957:	e8 e4 ed fe ff       	callq  1740 <puts@plt>
   1295c:	cc                   	int3   
   1295d:	48 8b 05 24 a7 20 00 	mov    0x20a724(%rip),%rax        # 21d088 <LPS>
   12964:	64 8b 13             	mov    %fs:(%rbx),%edx
   12967:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1296b:	48 89 d7             	mov    %rdx,%rdi
   1296e:	e9 79 ff ff ff       	jmpq   128ec <check_CFV_ALREADY_HANDLED+0x6c>
   12973:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12978:	48 8d 3d d1 65 00 00 	lea    0x65d1(%rip),%rdi        # 18f50 <__PRETTY_FUNCTION__.6556+0x3190>
   1297f:	e8 bc ed fe ff       	callq  1740 <puts@plt>
   12984:	cc                   	int3   
   12985:	eb 98                	jmp    1291f <check_CFV_ALREADY_HANDLED+0x9f>
   12987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1298e:	00 00 
   12990:	48 8d 3d b3 65 00 00 	lea    0x65b3(%rip),%rdi        # 18f4a <__PRETTY_FUNCTION__.6556+0x318a>
   12997:	e8 a4 ed fe ff       	callq  1740 <puts@plt>
   1299c:	64 8b 13             	mov    %fs:(%rbx),%edx
   1299f:	48 8b 05 e2 a6 20 00 	mov    0x20a6e2(%rip),%rax        # 21d088 <LPS>
   129a6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   129aa:	48 8b a8 88 00 00 00 	mov    0x88(%rax),%rbp
   129b1:	48 89 ef             	mov    %rbp,%rdi
   129b4:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
   129b8:	4c 8b a5 d0 00 00 00 	mov    0xd0(%rbp),%r12
   129bf:	e8 9c a3 ff ff       	callq  cd60 <is_valid>
   129c4:	64 8b 0b             	mov    %fs:(%rbx),%ecx
   129c7:	48 8b 15 ba a6 20 00 	mov    0x20a6ba(%rip),%rdx        # 21d088 <LPS>
   129ce:	48 8d 35 95 1f 00 00 	lea    0x1f95(%rip),%rsi        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
   129d5:	0f b6 c0             	movzbl %al,%eax
   129d8:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
   129dc:	48 8b 92 88 00 00 00 	mov    0x88(%rdx),%rdx
   129e3:	8b 4a 40             	mov    0x40(%rdx),%ecx
   129e6:	83 f9 01             	cmp    $0x1,%ecx
   129e9:	74 21                	je     12a0c <check_CFV_ALREADY_HANDLED+0x18c>
   129eb:	48 8d 35 65 1f 00 00 	lea    0x1f65(%rip),%rsi        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
   129f2:	83 f9 02             	cmp    $0x2,%ecx
   129f5:	74 15                	je     12a0c <check_CFV_ALREADY_HANDLED+0x18c>
   129f7:	83 f9 03             	cmp    $0x3,%ecx
   129fa:	48 8d 35 72 1f 00 00 	lea    0x1f72(%rip),%rsi        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
   12a01:	48 8d 3d 5a 1f 00 00 	lea    0x1f5a(%rip),%rdi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
   12a08:	48 0f 45 f7          	cmovne %rdi,%rsi
   12a0c:	44 0f b7 52 02       	movzwl 0x2(%rdx),%r10d
   12a11:	44 8b 4a 14          	mov    0x14(%rdx),%r9d
   12a15:	bf 01 00 00 00       	mov    $0x1,%edi
   12a1a:	44 0f b7 42 10       	movzwl 0x10(%rdx),%r8d
   12a1f:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
   12a24:	0f b7 12             	movzwl (%rdx),%edx
   12a27:	41 55                	push   %r13
   12a29:	41 54                	push   %r12
   12a2b:	55                   	push   %rbp
   12a2c:	50                   	push   %rax
   12a2d:	b8 01 00 00 00       	mov    $0x1,%eax
   12a32:	56                   	push   %rsi
   12a33:	48 8d 35 fe 24 00 00 	lea    0x24fe(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
   12a3a:	51                   	push   %rcx
   12a3b:	44 89 d1             	mov    %r10d,%ecx
   12a3e:	e8 2d ef fe ff       	callq  1970 <__printf_chk@plt>
   12a43:	cc                   	int3   
   12a44:	48 83 c4 30          	add    $0x30,%rsp
   12a48:	e9 c6 fe ff ff       	jmpq   12913 <check_CFV_ALREADY_HANDLED+0x93>
   12a4d:	0f 1f 00             	nopl   (%rax)

0000000000012a50 <check_thread_loop_before_fetch>:
   12a50:	41 54                	push   %r12
   12a52:	31 c0                	xor    %eax,%eax
   12a54:	55                   	push   %rbp
   12a55:	53                   	push   %rbx
   12a56:	e8 65 0e 00 00       	callq  138c0 <get_preemption_counter>
   12a5b:	48 83 f8 01          	cmp    $0x1,%rax
   12a5f:	74 0d                	je     12a6e <check_thread_loop_before_fetch+0x1e>
   12a61:	48 8d 3d a8 56 00 00 	lea    0x56a8(%rip),%rdi        # 18110 <__PRETTY_FUNCTION__.6556+0x2350>
   12a68:	e8 d3 ec fe ff       	callq  1740 <puts@plt>
   12a6d:	cc                   	int3   
   12a6e:	8b 3d 3c 67 33 00    	mov    0x33673c(%rip),%edi        # 3491b0 <n_prc_tot>
   12a74:	85 ff                	test   %edi,%edi
   12a76:	74 39                	je     12ab1 <check_thread_loop_before_fetch+0x61>
   12a78:	48 8b 35 21 67 33 00 	mov    0x336721(%rip),%rsi        # 3491a0 <lp_lock>
   12a7f:	48 c7 c5 90 5e ff ff 	mov    $0xffffffffffff5e90,%rbp
   12a86:	31 db                	xor    %ebx,%ebx
   12a88:	4c 8d 25 b9 56 00 00 	lea    0x56b9(%rip),%r12        # 18148 <__PRETTY_FUNCTION__.6556+0x2388>
   12a8f:	90                   	nop
   12a90:	48 89 d8             	mov    %rbx,%rax
   12a93:	64 8b 55 00          	mov    %fs:0x0(%rbp),%edx
   12a97:	48 c1 e0 06          	shl    $0x6,%rax
   12a9b:	83 e0 c0             	and    $0xffffffc0,%eax
   12a9e:	48 01 f0             	add    %rsi,%rax
   12aa1:	8b 08                	mov    (%rax),%ecx
   12aa3:	8d 42 01             	lea    0x1(%rdx),%eax
   12aa6:	39 c1                	cmp    %eax,%ecx
   12aa8:	74 16                	je     12ac0 <check_thread_loop_before_fetch+0x70>
   12aaa:	83 c3 01             	add    $0x1,%ebx
   12aad:	39 fb                	cmp    %edi,%ebx
   12aaf:	72 df                	jb     12a90 <check_thread_loop_before_fetch+0x40>
   12ab1:	5b                   	pop    %rbx
   12ab2:	5d                   	pop    %rbp
   12ab3:	41 5c                	pop    %r12
   12ab5:	c3                   	retq   
   12ab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12abd:	00 00 00 
   12ac0:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
   12ac7:	bf 01 00 00 00       	mov    $0x1,%edi
   12acc:	64 8b 08             	mov    %fs:(%rax),%ecx
   12acf:	48 89 c8             	mov    %rcx,%rax
   12ad2:	48 c1 e0 06          	shl    $0x6,%rax
   12ad6:	83 e0 c0             	and    $0xffffffc0,%eax
   12ad9:	48 01 c6             	add    %rax,%rsi
   12adc:	31 c0                	xor    %eax,%eax
   12ade:	44 8b 06             	mov    (%rsi),%r8d
   12ae1:	4c 89 e6             	mov    %r12,%rsi
   12ae4:	41 83 e8 01          	sub    $0x1,%r8d
   12ae8:	e8 83 ee fe ff       	callq  1970 <__printf_chk@plt>
   12aed:	cc                   	int3   
   12aee:	8b 3d bc 66 33 00    	mov    0x3366bc(%rip),%edi        # 3491b0 <n_prc_tot>
   12af4:	83 c3 01             	add    $0x1,%ebx
   12af7:	39 fb                	cmp    %edi,%ebx
   12af9:	73 b6                	jae    12ab1 <check_thread_loop_before_fetch+0x61>
   12afb:	48 8b 35 9e 66 33 00 	mov    0x33669e(%rip),%rsi        # 3491a0 <lp_lock>
   12b02:	eb 8c                	jmp    12a90 <check_thread_loop_before_fetch+0x40>
   12b04:	66 90                	xchg   %ax,%ax
   12b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12b0d:	00 00 00 

0000000000012b10 <check_CFV_INIT>:
   12b10:	48 83 ec 08          	sub    $0x8,%rsp
   12b14:	31 c0                	xor    %eax,%eax
   12b16:	e8 a5 0d 00 00       	callq  138c0 <get_preemption_counter>
   12b1b:	48 83 f8 01          	cmp    $0x1,%rax
   12b1f:	74 0d                	je     12b2e <check_CFV_INIT+0x1e>
   12b21:	48 8d 3d 58 56 00 00 	lea    0x5658(%rip),%rdi        # 18180 <__PRETTY_FUNCTION__.6556+0x23c0>
   12b28:	e8 13 ec fe ff       	callq  1740 <puts@plt>
   12b2d:	cc                   	int3   
   12b2e:	48 83 c4 08          	add    $0x8,%rsp
   12b32:	c3                   	retq   
   12b33:	0f 1f 00             	nopl   (%rax)
   12b36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12b3d:	00 00 00 

0000000000012b40 <check_CFV_TO_HANDLE>:
   12b40:	53                   	push   %rbx
   12b41:	48 c7 c3 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbx
   12b48:	48 c7 c2 90 5e ff ff 	mov    $0xffffffffffff5e90,%rdx
   12b4f:	64 8b 0b             	mov    %fs:(%rbx),%ecx
   12b52:	64 8b 12             	mov    %fs:(%rdx),%edx
   12b55:	48 89 c8             	mov    %rcx,%rax
   12b58:	48 c1 e0 06          	shl    $0x6,%rax
   12b5c:	8d 72 01             	lea    0x1(%rdx),%esi
   12b5f:	83 e0 c0             	and    $0xffffffc0,%eax
   12b62:	48 03 05 37 66 33 00 	add    0x336637(%rip),%rax        # 3491a0 <lp_lock>
   12b69:	8b 38                	mov    (%rax),%edi
   12b6b:	39 f7                	cmp    %esi,%edi
   12b6d:	74 1b                	je     12b8a <check_CFV_TO_HANDLE+0x4a>
   12b6f:	44 8b 00             	mov    (%rax),%r8d
   12b72:	48 8d 35 cf 55 00 00 	lea    0x55cf(%rip),%rsi        # 18148 <__PRETTY_FUNCTION__.6556+0x2388>
   12b79:	bf 01 00 00 00       	mov    $0x1,%edi
   12b7e:	31 c0                	xor    %eax,%eax
   12b80:	41 83 e8 01          	sub    $0x1,%r8d
   12b84:	e8 e7 ed fe ff       	callq  1970 <__printf_chk@plt>
   12b89:	cc                   	int3   
   12b8a:	31 c0                	xor    %eax,%eax
   12b8c:	e8 2f 0d 00 00       	callq  138c0 <get_preemption_counter>
   12b91:	48 83 f8 01          	cmp    $0x1,%rax
   12b95:	74 0d                	je     12ba4 <check_CFV_TO_HANDLE+0x64>
   12b97:	48 8d 3d 0a 56 00 00 	lea    0x560a(%rip),%rdi        # 181a8 <__PRETTY_FUNCTION__.6556+0x23e8>
   12b9e:	e8 9d eb fe ff       	callq  1740 <puts@plt>
   12ba3:	cc                   	int3   
   12ba4:	64 8b 13             	mov    %fs:(%rbx),%edx
   12ba7:	48 8b 05 da a4 20 00 	mov    0x20a4da(%rip),%rax        # 21d088 <LPS>
   12bae:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   12bb2:	48 83 b8 80 00 00 00 	cmpq   $0x0,0x80(%rax)
   12bb9:	00 
   12bba:	74 04                	je     12bc0 <check_CFV_TO_HANDLE+0x80>
   12bbc:	5b                   	pop    %rbx
   12bbd:	c3                   	retq   
   12bbe:	66 90                	xchg   %ax,%ax
   12bc0:	48 8d 3d 09 56 00 00 	lea    0x5609(%rip),%rdi        # 181d0 <__PRETTY_FUNCTION__.6556+0x2410>
   12bc7:	e8 74 eb fe ff       	callq  1740 <puts@plt>
   12bcc:	cc                   	int3   
   12bcd:	5b                   	pop    %rbx
   12bce:	c3                   	retq   
   12bcf:	90                   	nop

0000000000012bd0 <check_thread_loop_after_fetch>:
   12bd0:	41 56                	push   %r14
   12bd2:	41 55                	push   %r13
   12bd4:	41 54                	push   %r12
   12bd6:	55                   	push   %rbp
   12bd7:	48 c7 c5 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rbp
   12bde:	53                   	push   %rbx
   12bdf:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
   12be4:	66 83 78 10 00       	cmpw   $0x0,0x10(%rax)
   12be9:	0f 84 f9 02 00 00    	je     12ee8 <check_thread_loop_after_fetch+0x318>
   12bef:	48 c7 c3 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbx
   12bf6:	48 8b 05 8b a4 20 00 	mov    0x20a48b(%rip),%rax        # 21d088 <LPS>
   12bfd:	64 8b 13             	mov    %fs:(%rbx),%edx
   12c00:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   12c04:	48 89 d7             	mov    %rdx,%rdi
   12c07:	66 83 78 10 01       	cmpw   $0x1,0x10(%rax)
   12c0c:	74 1e                	je     12c2c <check_thread_loop_after_fetch+0x5c>
   12c0e:	48 8d 3d 1f 63 00 00 	lea    0x631f(%rip),%rdi        # 18f34 <__PRETTY_FUNCTION__.6556+0x3174>
   12c15:	e8 26 eb fe ff       	callq  1740 <puts@plt>
   12c1a:	cc                   	int3   
   12c1b:	48 8b 05 66 a4 20 00 	mov    0x20a466(%rip),%rax        # 21d088 <LPS>
   12c22:	64 8b 13             	mov    %fs:(%rbx),%edx
   12c25:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   12c29:	48 89 d7             	mov    %rdx,%rdi
   12c2c:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   12c33:	8b 40 40             	mov    0x40(%rax),%eax
   12c36:	85 c0                	test   %eax,%eax
   12c38:	0f 85 92 02 00 00    	jne    12ed0 <check_thread_loop_after_fetch+0x300>
   12c3e:	e8 ad 0f 00 00       	callq  13bf0 <dummy_bound_is_corrupted>
   12c43:	84 c0                	test   %al,%al
   12c45:	0f 85 c5 01 00 00    	jne    12e10 <check_thread_loop_after_fetch+0x240>
   12c4b:	64 8b 3b             	mov    %fs:(%rbx),%edi
   12c4e:	e8 fd 0f 00 00       	callq  13c50 <bound_is_corrupted>
   12c53:	84 c0                	test   %al,%al
   12c55:	0f 85 9d 01 00 00    	jne    12df8 <check_thread_loop_after_fetch+0x228>
   12c5b:	64 8b 13             	mov    %fs:(%rbx),%edx
   12c5e:	48 8b 05 23 a4 20 00 	mov    0x20a423(%rip),%rax        # 21d088 <LPS>
   12c65:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   12c69:	48 83 b8 90 00 00 00 	cmpq   $0x0,0x90(%rax)
   12c70:	00 
   12c71:	74 1b                	je     12c8e <check_thread_loop_after_fetch+0xbe>
   12c73:	48 8d 3d a6 55 00 00 	lea    0x55a6(%rip),%rdi        # 18220 <__PRETTY_FUNCTION__.6556+0x2460>
   12c7a:	e8 c1 ea fe ff       	callq  1740 <puts@plt>
   12c7f:	cc                   	int3   
   12c80:	48 8b 05 01 a4 20 00 	mov    0x20a401(%rip),%rax        # 21d088 <LPS>
   12c87:	64 8b 13             	mov    %fs:(%rbx),%edx
   12c8a:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   12c8e:	48 83 b8 80 00 00 00 	cmpq   $0x0,0x80(%rax)
   12c95:	00 
   12c96:	74 0d                	je     12ca5 <check_thread_loop_after_fetch+0xd5>
   12c98:	48 8d 3d b9 55 00 00 	lea    0x55b9(%rip),%rdi        # 18258 <__PRETTY_FUNCTION__.6556+0x2498>
   12c9f:	e8 9c ea fe ff       	callq  1740 <puts@plt>
   12ca4:	cc                   	int3   
   12ca5:	49 c7 c4 60 5e ff ff 	mov    $0xffffffffffff5e60,%r12
   12cac:	64 49 8b 14 24       	mov    %fs:(%r12),%rdx
   12cb1:	48 89 d0             	mov    %rdx,%rax
   12cb4:	48 83 e0 fd          	and    $0xfffffffffffffffd,%rax
   12cb8:	48 83 f8 01          	cmp    $0x1,%rax
   12cbc:	0f 85 16 01 00 00    	jne    12dd8 <check_thread_loop_after_fetch+0x208>
   12cc2:	64 8b 0b             	mov    %fs:(%rbx),%ecx
   12cc5:	48 c7 c2 90 5e ff ff 	mov    $0xffffffffffff5e90,%rdx
   12ccc:	48 89 c8             	mov    %rcx,%rax
   12ccf:	64 8b 12             	mov    %fs:(%rdx),%edx
   12cd2:	48 c1 e0 06          	shl    $0x6,%rax
   12cd6:	83 e0 c0             	and    $0xffffffc0,%eax
   12cd9:	48 03 05 c0 64 33 00 	add    0x3364c0(%rip),%rax        # 3491a0 <lp_lock>
   12ce0:	8d 72 01             	lea    0x1(%rdx),%esi
   12ce3:	8b 38                	mov    (%rax),%edi
   12ce5:	39 f7                	cmp    %esi,%edi
   12ce7:	74 1a                	je     12d03 <check_thread_loop_after_fetch+0x133>
   12ce9:	44 8b 00             	mov    (%rax),%r8d
   12cec:	48 8d 35 55 54 00 00 	lea    0x5455(%rip),%rsi        # 18148 <__PRETTY_FUNCTION__.6556+0x2388>
   12cf3:	bf 01 00 00 00       	mov    $0x1,%edi
   12cf8:	31 c0                	xor    %eax,%eax
   12cfa:	41 83 e8 01          	sub    $0x1,%r8d
   12cfe:	e8 6d ec fe ff       	callq  1970 <__printf_chk@plt>
   12d03:	64 49 83 3c 24 03    	cmpq   $0x3,%fs:(%r12)
   12d09:	74 0d                	je     12d18 <check_thread_loop_after_fetch+0x148>
   12d0b:	5b                   	pop    %rbx
   12d0c:	5d                   	pop    %rbp
   12d0d:	41 5c                	pop    %r12
   12d0f:	41 5d                	pop    %r13
   12d11:	41 5e                	pop    %r14
   12d13:	c3                   	retq   
   12d14:	0f 1f 40 00          	nopl   0x0(%rax)
   12d18:	48 c7 c0 58 5e ff ff 	mov    $0xffffffffffff5e58,%rax
   12d1f:	64 48 81 38 4a 4a ba 	cmpq   $0xba4a4a,%fs:(%rax)
   12d26:	00 
   12d27:	75 e2                	jne    12d0b <check_thread_loop_after_fetch+0x13b>
   12d29:	48 8d 35 50 55 00 00 	lea    0x5550(%rip),%rsi        # 18280 <__PRETTY_FUNCTION__.6556+0x24c0>
   12d30:	bf 01 00 00 00       	mov    $0x1,%edi
   12d35:	31 c0                	xor    %eax,%eax
   12d37:	e8 34 ec fe ff       	callq  1970 <__printf_chk@plt>
   12d3c:	64 48 8b 5d 00       	mov    %fs:0x0(%rbp),%rbx
   12d41:	48 89 df             	mov    %rbx,%rdi
   12d44:	4c 8b 6b 20          	mov    0x20(%rbx),%r13
   12d48:	4c 8b a3 d0 00 00 00 	mov    0xd0(%rbx),%r12
   12d4f:	e8 0c a0 ff ff       	callq  cd60 <is_valid>
   12d54:	48 8d 35 0f 1c 00 00 	lea    0x1c0f(%rip),%rsi        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
   12d5b:	0f b6 c8             	movzbl %al,%ecx
   12d5e:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
   12d63:	8b 50 40             	mov    0x40(%rax),%edx
   12d66:	83 fa 01             	cmp    $0x1,%edx
   12d69:	74 21                	je     12d8c <check_thread_loop_after_fetch+0x1bc>
   12d6b:	48 8d 35 e5 1b 00 00 	lea    0x1be5(%rip),%rsi        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
   12d72:	83 fa 02             	cmp    $0x2,%edx
   12d75:	74 15                	je     12d8c <check_thread_loop_after_fetch+0x1bc>
   12d77:	83 fa 03             	cmp    $0x3,%edx
   12d7a:	48 8d 35 f2 1b 00 00 	lea    0x1bf2(%rip),%rsi        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
   12d81:	48 8d 3d da 1b 00 00 	lea    0x1bda(%rip),%rdi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
   12d88:	48 0f 45 f7          	cmovne %rdi,%rsi
   12d8c:	44 0f b7 58 02       	movzwl 0x2(%rax),%r11d
   12d91:	44 0f b7 10          	movzwl (%rax),%r10d
   12d95:	bf 01 00 00 00       	mov    $0x1,%edi
   12d9a:	44 8b 48 14          	mov    0x14(%rax),%r9d
   12d9e:	44 0f b7 40 10       	movzwl 0x10(%rax),%r8d
   12da3:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
   12da8:	41 55                	push   %r13
   12daa:	b8 01 00 00 00       	mov    $0x1,%eax
   12daf:	41 54                	push   %r12
   12db1:	53                   	push   %rbx
   12db2:	51                   	push   %rcx
   12db3:	44 89 d9             	mov    %r11d,%ecx
   12db6:	56                   	push   %rsi
   12db7:	48 8d 35 7a 21 00 00 	lea    0x217a(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
   12dbe:	52                   	push   %rdx
   12dbf:	44 89 d2             	mov    %r10d,%edx
   12dc2:	e8 a9 eb fe ff       	callq  1970 <__printf_chk@plt>
   12dc7:	cc                   	int3   
   12dc8:	48 83 c4 30          	add    $0x30,%rsp
   12dcc:	e9 3a ff ff ff       	jmpq   12d0b <check_thread_loop_after_fetch+0x13b>
   12dd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12dd8:	48 8d 35 9f 61 00 00 	lea    0x619f(%rip),%rsi        # 18f7e <__PRETTY_FUNCTION__.6556+0x31be>
   12ddf:	bf 01 00 00 00       	mov    $0x1,%edi
   12de4:	31 c0                	xor    %eax,%eax
   12de6:	e8 85 eb fe ff       	callq  1970 <__printf_chk@plt>
   12deb:	cc                   	int3   
   12dec:	e9 d1 fe ff ff       	jmpq   12cc2 <check_thread_loop_after_fetch+0xf2>
   12df1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12df8:	48 8d 3d 51 61 00 00 	lea    0x6151(%rip),%rdi        # 18f50 <__PRETTY_FUNCTION__.6556+0x3190>
   12dff:	e8 3c e9 fe ff       	callq  1740 <puts@plt>
   12e04:	cc                   	int3   
   12e05:	e9 51 fe ff ff       	jmpq   12c5b <check_thread_loop_after_fetch+0x8b>
   12e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12e10:	48 8d 3d 33 61 00 00 	lea    0x6133(%rip),%rdi        # 18f4a <__PRETTY_FUNCTION__.6556+0x318a>
   12e17:	e8 24 e9 fe ff       	callq  1740 <puts@plt>
   12e1c:	64 8b 13             	mov    %fs:(%rbx),%edx
   12e1f:	48 8b 05 62 a2 20 00 	mov    0x20a262(%rip),%rax        # 21d088 <LPS>
   12e26:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   12e2a:	4c 8b a0 88 00 00 00 	mov    0x88(%rax),%r12
   12e31:	4c 89 e7             	mov    %r12,%rdi
   12e34:	4d 8b 74 24 20       	mov    0x20(%r12),%r14
   12e39:	4d 8b ac 24 d0 00 00 	mov    0xd0(%r12),%r13
   12e40:	00 
   12e41:	e8 1a 9f ff ff       	callq  cd60 <is_valid>
   12e46:	64 8b 0b             	mov    %fs:(%rbx),%ecx
   12e49:	48 8b 15 38 a2 20 00 	mov    0x20a238(%rip),%rdx        # 21d088 <LPS>
   12e50:	48 8d 35 13 1b 00 00 	lea    0x1b13(%rip),%rsi        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
   12e57:	0f b6 c0             	movzbl %al,%eax
   12e5a:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
   12e5e:	48 8b 92 88 00 00 00 	mov    0x88(%rdx),%rdx
   12e65:	8b 4a 40             	mov    0x40(%rdx),%ecx
   12e68:	83 f9 01             	cmp    $0x1,%ecx
   12e6b:	74 21                	je     12e8e <check_thread_loop_after_fetch+0x2be>
   12e6d:	48 8d 35 e3 1a 00 00 	lea    0x1ae3(%rip),%rsi        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
   12e74:	83 f9 02             	cmp    $0x2,%ecx
   12e77:	74 15                	je     12e8e <check_thread_loop_after_fetch+0x2be>
   12e79:	83 f9 03             	cmp    $0x3,%ecx
   12e7c:	48 8d 35 f0 1a 00 00 	lea    0x1af0(%rip),%rsi        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
   12e83:	48 8d 3d d8 1a 00 00 	lea    0x1ad8(%rip),%rdi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
   12e8a:	48 0f 45 f7          	cmovne %rdi,%rsi
   12e8e:	44 0f b7 52 02       	movzwl 0x2(%rdx),%r10d
   12e93:	44 8b 4a 14          	mov    0x14(%rdx),%r9d
   12e97:	bf 01 00 00 00       	mov    $0x1,%edi
   12e9c:	44 0f b7 42 10       	movzwl 0x10(%rdx),%r8d
   12ea1:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
   12ea6:	0f b7 12             	movzwl (%rdx),%edx
   12ea9:	41 56                	push   %r14
   12eab:	41 55                	push   %r13
   12ead:	41 54                	push   %r12
   12eaf:	50                   	push   %rax
   12eb0:	b8 01 00 00 00       	mov    $0x1,%eax
   12eb5:	56                   	push   %rsi
   12eb6:	48 8d 35 7b 20 00 00 	lea    0x207b(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
   12ebd:	51                   	push   %rcx
   12ebe:	44 89 d1             	mov    %r10d,%ecx
   12ec1:	e8 aa ea fe ff       	callq  1970 <__printf_chk@plt>
   12ec6:	cc                   	int3   
   12ec7:	48 83 c4 30          	add    $0x30,%rsp
   12ecb:	e9 7b fd ff ff       	jmpq   12c4b <check_thread_loop_after_fetch+0x7b>
   12ed0:	48 8d 3d 8c 60 00 00 	lea    0x608c(%rip),%rdi        # 18f63 <__PRETTY_FUNCTION__.6556+0x31a3>
   12ed7:	e8 64 e8 fe ff       	callq  1740 <puts@plt>
   12edc:	cc                   	int3   
   12edd:	64 8b 3b             	mov    %fs:(%rbx),%edi
   12ee0:	e9 59 fd ff ff       	jmpq   12c3e <check_thread_loop_after_fetch+0x6e>
   12ee5:	0f 1f 00             	nopl   (%rax)
   12ee8:	48 8d 3d 09 53 00 00 	lea    0x5309(%rip),%rdi        # 181f8 <__PRETTY_FUNCTION__.6556+0x2438>
   12eef:	e8 4c e8 fe ff       	callq  1740 <puts@plt>
   12ef4:	64 48 8b 5d 00       	mov    %fs:0x0(%rbp),%rbx
   12ef9:	48 89 df             	mov    %rbx,%rdi
   12efc:	4c 8b 6b 20          	mov    0x20(%rbx),%r13
   12f00:	4c 8b a3 d0 00 00 00 	mov    0xd0(%rbx),%r12
   12f07:	e8 54 9e ff ff       	callq  cd60 <is_valid>
   12f0c:	64 48 8b 55 00       	mov    %fs:0x0(%rbp),%rdx
   12f11:	48 8d 35 52 1a 00 00 	lea    0x1a52(%rip),%rsi        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
   12f18:	0f b6 c0             	movzbl %al,%eax
   12f1b:	8b 4a 40             	mov    0x40(%rdx),%ecx
   12f1e:	83 f9 01             	cmp    $0x1,%ecx
   12f21:	74 21                	je     12f44 <check_thread_loop_after_fetch+0x374>
   12f23:	48 8d 35 2d 1a 00 00 	lea    0x1a2d(%rip),%rsi        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
   12f2a:	83 f9 02             	cmp    $0x2,%ecx
   12f2d:	74 15                	je     12f44 <check_thread_loop_after_fetch+0x374>
   12f2f:	83 f9 03             	cmp    $0x3,%ecx
   12f32:	48 8d 35 3a 1a 00 00 	lea    0x1a3a(%rip),%rsi        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
   12f39:	48 8d 3d 22 1a 00 00 	lea    0x1a22(%rip),%rdi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
   12f40:	48 0f 45 f7          	cmovne %rdi,%rsi
   12f44:	44 0f b7 52 02       	movzwl 0x2(%rdx),%r10d
   12f49:	44 8b 4a 14          	mov    0x14(%rdx),%r9d
   12f4d:	bf 01 00 00 00       	mov    $0x1,%edi
   12f52:	44 0f b7 42 10       	movzwl 0x10(%rdx),%r8d
   12f57:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
   12f5c:	0f b7 12             	movzwl (%rdx),%edx
   12f5f:	41 55                	push   %r13
   12f61:	41 54                	push   %r12
   12f63:	53                   	push   %rbx
   12f64:	50                   	push   %rax
   12f65:	b8 01 00 00 00       	mov    $0x1,%eax
   12f6a:	56                   	push   %rsi
   12f6b:	48 8d 35 c6 1f 00 00 	lea    0x1fc6(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
   12f72:	51                   	push   %rcx
   12f73:	44 89 d1             	mov    %r10d,%ecx
   12f76:	e8 f5 e9 fe ff       	callq  1970 <__printf_chk@plt>
   12f7b:	cc                   	int3   
   12f7c:	48 83 c4 30          	add    $0x30,%rsp
   12f80:	e9 6a fc ff ff       	jmpq   12bef <check_thread_loop_after_fetch+0x1f>
   12f85:	90                   	nop
   12f86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12f8d:	00 00 00 

0000000000012f90 <check_tie_breaker_not_zero>:
   12f90:	85 ff                	test   %edi,%edi
   12f92:	74 04                	je     12f98 <check_tie_breaker_not_zero+0x8>
   12f94:	c3                   	retq   
   12f95:	0f 1f 00             	nopl   (%rax)
   12f98:	48 83 ec 08          	sub    $0x8,%rsp
   12f9c:	48 8d 3d 05 53 00 00 	lea    0x5305(%rip),%rdi        # 182a8 <__PRETTY_FUNCTION__.6556+0x24e8>
   12fa3:	e8 98 e7 fe ff       	callq  1740 <puts@plt>
   12fa8:	cc                   	int3   
   12fa9:	48 83 c4 08          	add    $0x8,%rsp
   12fad:	c3                   	retq   
   12fae:	66 90                	xchg   %ax,%ax

0000000000012fb0 <check_current_msg_is_in_future>:
   12fb0:	48 8b 05 d1 a0 20 00 	mov    0x20a0d1(%rip),%rax        # 21d088 <LPS>
   12fb7:	89 ff                	mov    %edi,%edi
   12fb9:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
   12fbd:	48 8b 40 30          	mov    0x30(%rax),%rax
   12fc1:	48 85 c0             	test   %rax,%rax
   12fc4:	74 4a                	je     13010 <check_current_msg_is_in_future+0x60>
   12fc6:	48 c7 c2 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rdx
   12fcd:	64 48 8b 12          	mov    %fs:(%rdx),%rdx
   12fd1:	48 85 d2             	test   %rdx,%rdx
   12fd4:	74 3a                	je     13010 <check_current_msg_is_in_future+0x60>
   12fd6:	f2 0f 10 4a 08       	movsd  0x8(%rdx),%xmm1
   12fdb:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
   12fe0:	66 0f 2f c1          	comisd %xmm1,%xmm0
   12fe4:	77 12                	ja     12ff8 <check_current_msg_is_in_future+0x48>
   12fe6:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   12fea:	7a 24                	jp     13010 <check_current_msg_is_in_future+0x60>
   12fec:	75 22                	jne    13010 <check_current_msg_is_in_future+0x60>
   12fee:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   12ff2:	66 39 42 10          	cmp    %ax,0x10(%rdx)
   12ff6:	77 18                	ja     13010 <check_current_msg_is_in_future+0x60>
   12ff8:	48 83 ec 08          	sub    $0x8,%rsp
   12ffc:	48 8d 3d cd 52 00 00 	lea    0x52cd(%rip),%rdi        # 182d0 <__PRETTY_FUNCTION__.6556+0x2510>
   13003:	e8 38 e7 fe ff       	callq  1740 <puts@plt>
   13008:	cc                   	int3   
   13009:	48 83 c4 08          	add    $0x8,%rsp
   1300d:	c3                   	retq   
   1300e:	66 90                	xchg   %ax,%ax
   13010:	c3                   	retq   
   13011:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1301d:	00 00 00 

0000000000013020 <check_silent_execution>:
   13020:	66 81 ff 00 01       	cmp    $0x100,%di
   13025:	74 06                	je     1302d <check_silent_execution+0xd>
   13027:	66 83 ff 08          	cmp    $0x8,%di
   1302b:	75 03                	jne    13030 <check_silent_execution+0x10>
   1302d:	c3                   	retq   
   1302e:	66 90                	xchg   %ax,%ax
   13030:	48 83 ec 08          	sub    $0x8,%rsp
   13034:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
   1303b:	0f b7 d7             	movzwl %di,%edx
   1303e:	48 8d 35 cb 52 00 00 	lea    0x52cb(%rip),%rsi        # 18310 <__PRETTY_FUNCTION__.6556+0x2550>
   13045:	bf 01 00 00 00       	mov    $0x1,%edi
   1304a:	64 8b 08             	mov    %fs:(%rax),%ecx
   1304d:	31 c0                	xor    %eax,%eax
   1304f:	e8 1c e9 fe ff       	callq  1970 <__printf_chk@plt>
   13054:	cc                   	int3   
   13055:	48 83 c4 08          	add    $0x8,%rsp
   13059:	c3                   	retq   
   1305a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000013060 <check_stop_rollback>:
   13060:	53                   	push   %rbx
   13061:	89 f3                	mov    %esi,%ebx
   13063:	66 81 ff 00 01       	cmp    $0x100,%di
   13068:	74 1e                	je     13088 <check_stop_rollback+0x28>
   1306a:	48 8b 05 17 a0 20 00 	mov    0x20a017(%rip),%rax        # 21d088 <LPS>
   13071:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
   13075:	48 83 b8 80 00 00 00 	cmpq   $0x0,0x80(%rax)
   1307c:	00 
   1307d:	74 21                	je     130a0 <check_stop_rollback+0x40>
   1307f:	5b                   	pop    %rbx
   13080:	c3                   	retq   
   13081:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13088:	48 8d 3d d9 52 00 00 	lea    0x52d9(%rip),%rdi        # 18368 <__PRETTY_FUNCTION__.6556+0x25a8>
   1308f:	e8 ac e6 fe ff       	callq  1740 <puts@plt>
   13094:	cc                   	int3   
   13095:	eb d3                	jmp    1306a <check_stop_rollback+0xa>
   13097:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1309e:	00 00 
   130a0:	48 8d 3d 11 53 00 00 	lea    0x5311(%rip),%rdi        # 183b8 <__PRETTY_FUNCTION__.6556+0x25f8>
   130a7:	e8 94 e6 fe ff       	callq  1740 <puts@plt>
   130ac:	cc                   	int3   
   130ad:	5b                   	pop    %rbx
   130ae:	c3                   	retq   
   130af:	90                   	nop

00000000000130b0 <check_epoch_and_frame>:
   130b0:	41 55                	push   %r13
   130b2:	8d 46 ff             	lea    -0x1(%rsi),%eax
   130b5:	41 89 cd             	mov    %ecx,%r13d
   130b8:	41 54                	push   %r12
   130ba:	41 89 d4             	mov    %edx,%r12d
   130bd:	48 83 ec 08          	sub    $0x8,%rsp
   130c1:	39 f8                	cmp    %edi,%eax
   130c3:	74 18                	je     130dd <check_epoch_and_frame+0x2d>
   130c5:	89 f1                	mov    %esi,%ecx
   130c7:	89 fa                	mov    %edi,%edx
   130c9:	48 8d 35 18 53 00 00 	lea    0x5318(%rip),%rsi        # 183e8 <__PRETTY_FUNCTION__.6556+0x2628>
   130d0:	bf 01 00 00 00       	mov    $0x1,%edi
   130d5:	31 c0                	xor    %eax,%eax
   130d7:	e8 94 e8 fe ff       	callq  1970 <__printf_chk@plt>
   130dc:	cc                   	int3   
   130dd:	45 39 ec             	cmp    %r13d,%r12d
   130e0:	77 0e                	ja     130f0 <check_epoch_and_frame+0x40>
   130e2:	48 83 c4 08          	add    $0x8,%rsp
   130e6:	41 5c                	pop    %r12
   130e8:	41 5d                	pop    %r13
   130ea:	c3                   	retq   
   130eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   130f0:	44 89 e9             	mov    %r13d,%ecx
   130f3:	44 89 e2             	mov    %r12d,%edx
   130f6:	48 8d 35 43 53 00 00 	lea    0x5343(%rip),%rsi        # 18440 <__PRETTY_FUNCTION__.6556+0x2680>
   130fd:	31 c0                	xor    %eax,%eax
   130ff:	bf 01 00 00 00       	mov    $0x1,%edi
   13104:	e8 67 e8 fe ff       	callq  1970 <__printf_chk@plt>
   13109:	cc                   	int3   
   1310a:	48 83 c4 08          	add    $0x8,%rsp
   1310e:	41 5c                	pop    %r12
   13110:	41 5d                	pop    %r13
   13112:	c3                   	retq   
   13113:	0f 1f 00             	nopl   (%rax)
   13116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1311d:	00 00 00 

0000000000013120 <check_events_state>:
   13120:	41 56                	push   %r14
   13122:	41 55                	push   %r13
   13124:	41 54                	push   %r12
   13126:	41 89 fc             	mov    %edi,%r12d
   13129:	55                   	push   %rbp
   1312a:	48 89 f5             	mov    %rsi,%rbp
   1312d:	53                   	push   %rbx
   1312e:	48 89 d3             	mov    %rdx,%rbx
   13131:	f6 42 40 01          	testb  $0x1,0x40(%rdx)
   13135:	74 21                	je     13158 <check_events_state+0x38>
   13137:	f6 46 40 01          	testb  $0x1,0x40(%rsi)
   1313b:	74 1b                	je     13158 <check_events_state+0x38>
   1313d:	66 41 81 fc 00 01    	cmp    $0x100,%r12w
   13143:	0f 84 33 01 00 00    	je     1327c <check_events_state+0x15c>
   13149:	5b                   	pop    %rbx
   1314a:	5d                   	pop    %rbp
   1314b:	41 5c                	pop    %r12
   1314d:	41 5d                	pop    %r13
   1314f:	41 5e                	pop    %r14
   13151:	c3                   	retq   
   13152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13158:	48 8d 3d 41 53 00 00 	lea    0x5341(%rip),%rdi        # 184a0 <__PRETTY_FUNCTION__.6556+0x26e0>
   1315f:	e8 dc e5 fe ff       	callq  1740 <puts@plt>
   13164:	48 89 df             	mov    %rbx,%rdi
   13167:	4c 8b 73 20          	mov    0x20(%rbx),%r14
   1316b:	4c 8b ab d0 00 00 00 	mov    0xd0(%rbx),%r13
   13172:	e8 e9 9b ff ff       	callq  cd60 <is_valid>
   13177:	8b 53 40             	mov    0x40(%rbx),%edx
   1317a:	48 8d 0d e9 17 00 00 	lea    0x17e9(%rip),%rcx        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
   13181:	0f b6 c0             	movzbl %al,%eax
   13184:	83 fa 01             	cmp    $0x1,%edx
   13187:	74 21                	je     131aa <check_events_state+0x8a>
   13189:	48 8d 0d c7 17 00 00 	lea    0x17c7(%rip),%rcx        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
   13190:	83 fa 02             	cmp    $0x2,%edx
   13193:	74 15                	je     131aa <check_events_state+0x8a>
   13195:	83 fa 03             	cmp    $0x3,%edx
   13198:	48 8d 0d d4 17 00 00 	lea    0x17d4(%rip),%rcx        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
   1319f:	48 8d 35 bc 17 00 00 	lea    0x17bc(%rip),%rsi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
   131a6:	48 0f 45 ce          	cmovne %rsi,%rcx
   131aa:	44 0f b7 5b 02       	movzwl 0x2(%rbx),%r11d
   131af:	44 0f b7 13          	movzwl (%rbx),%r10d
   131b3:	41 56                	push   %r14
   131b5:	bf 01 00 00 00       	mov    $0x1,%edi
   131ba:	41 55                	push   %r13
   131bc:	44 8b 4b 14          	mov    0x14(%rbx),%r9d
   131c0:	48 8d 35 71 1d 00 00 	lea    0x1d71(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
   131c7:	f2 0f 10 43 08       	movsd  0x8(%rbx),%xmm0
   131cc:	44 0f b7 43 10       	movzwl 0x10(%rbx),%r8d
   131d1:	53                   	push   %rbx
   131d2:	50                   	push   %rax
   131d3:	b8 01 00 00 00       	mov    $0x1,%eax
   131d8:	51                   	push   %rcx
   131d9:	44 89 d9             	mov    %r11d,%ecx
   131dc:	52                   	push   %rdx
   131dd:	44 89 d2             	mov    %r10d,%edx
   131e0:	e8 8b e7 fe ff       	callq  1970 <__printf_chk@plt>
   131e5:	48 83 c4 30          	add    $0x30,%rsp
   131e9:	48 89 ef             	mov    %rbp,%rdi
   131ec:	4c 8b 75 20          	mov    0x20(%rbp),%r14
   131f0:	4c 8b ad d0 00 00 00 	mov    0xd0(%rbp),%r13
   131f7:	e8 64 9b ff ff       	callq  cd60 <is_valid>
   131fc:	8b 55 40             	mov    0x40(%rbp),%edx
   131ff:	48 8d 0d 64 17 00 00 	lea    0x1764(%rip),%rcx        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
   13206:	0f b6 c0             	movzbl %al,%eax
   13209:	83 fa 01             	cmp    $0x1,%edx
   1320c:	74 21                	je     1322f <check_events_state+0x10f>
   1320e:	48 8d 0d 42 17 00 00 	lea    0x1742(%rip),%rcx        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
   13215:	83 fa 02             	cmp    $0x2,%edx
   13218:	74 15                	je     1322f <check_events_state+0x10f>
   1321a:	83 fa 03             	cmp    $0x3,%edx
   1321d:	48 8d 0d 4f 17 00 00 	lea    0x174f(%rip),%rcx        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
   13224:	48 8d 35 37 17 00 00 	lea    0x1737(%rip),%rsi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
   1322b:	48 0f 45 ce          	cmovne %rsi,%rcx
   1322f:	44 0f b7 5d 02       	movzwl 0x2(%rbp),%r11d
   13234:	44 8b 4d 14          	mov    0x14(%rbp),%r9d
   13238:	41 56                	push   %r14
   1323a:	bf 01 00 00 00       	mov    $0x1,%edi
   1323f:	41 55                	push   %r13
   13241:	44 0f b7 55 00       	movzwl 0x0(%rbp),%r10d
   13246:	48 8d 35 eb 1c 00 00 	lea    0x1ceb(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
   1324d:	f2 0f 10 45 08       	movsd  0x8(%rbp),%xmm0
   13252:	44 0f b7 45 10       	movzwl 0x10(%rbp),%r8d
   13257:	55                   	push   %rbp
   13258:	50                   	push   %rax
   13259:	b8 01 00 00 00       	mov    $0x1,%eax
   1325e:	51                   	push   %rcx
   1325f:	44 89 d9             	mov    %r11d,%ecx
   13262:	52                   	push   %rdx
   13263:	44 89 d2             	mov    %r10d,%edx
   13266:	e8 05 e7 fe ff       	callq  1970 <__printf_chk@plt>
   1326b:	cc                   	int3   
   1326c:	48 83 c4 30          	add    $0x30,%rsp
   13270:	66 41 81 fc 00 01    	cmp    $0x100,%r12w
   13276:	0f 85 cd fe ff ff    	jne    13149 <check_events_state+0x29>
   1327c:	48 81 7b 20 fe 5a 00 	cmpq   $0x5afe,0x20(%rbx)
   13283:	00 
   13284:	0f 84 bf fe ff ff    	je     13149 <check_events_state+0x29>
   1328a:	48 8d 3d 47 52 00 00 	lea    0x5247(%rip),%rdi        # 184d8 <__PRETTY_FUNCTION__.6556+0x2718>
   13291:	e8 aa e4 fe ff       	callq  1740 <puts@plt>
   13296:	cc                   	int3   
   13297:	5b                   	pop    %rbx
   13298:	5d                   	pop    %rbp
   13299:	41 5c                	pop    %r12
   1329b:	41 5d                	pop    %r13
   1329d:	41 5e                	pop    %r14
   1329f:	c3                   	retq   

00000000000132a0 <check_queue_deliver_msgs>:
   132a0:	48 83 ec 08          	sub    $0x8,%rsp
   132a4:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
   132ab:	64 8b 10             	mov    %fs:(%rax),%edx
   132ae:	48 8b 05 d3 9d 20 00 	mov    0x209dd3(%rip),%rax        # 21d088 <LPS>
   132b5:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   132b9:	66 83 78 10 01       	cmpw   $0x1,0x10(%rax)
   132be:	74 0d                	je     132cd <check_queue_deliver_msgs+0x2d>
   132c0:	48 8d 3d 69 38 00 00 	lea    0x3869(%rip),%rdi        # 16b30 <__PRETTY_FUNCTION__.6556+0xd70>
   132c7:	e8 74 e4 fe ff       	callq  1740 <puts@plt>
   132cc:	cc                   	int3   
   132cd:	48 c7 c0 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rax
   132d4:	64 48 83 38 00       	cmpq   $0x0,%fs:(%rax)
   132d9:	74 05                	je     132e0 <check_queue_deliver_msgs+0x40>
   132db:	48 83 c4 08          	add    $0x8,%rsp
   132df:	c3                   	retq   
   132e0:	48 8d 3d 79 38 00 00 	lea    0x3879(%rip),%rdi        # 16b60 <__PRETTY_FUNCTION__.6556+0xda0>
   132e7:	e8 54 e4 fe ff       	callq  1740 <puts@plt>
   132ec:	cc                   	int3   
   132ed:	48 83 c4 08          	add    $0x8,%rsp
   132f1:	c3                   	retq   
   132f2:	0f 1f 40 00          	nopl   0x0(%rax)
   132f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   132fd:	00 00 00 

0000000000013300 <check_ScheduleNewEventFuture>:
   13300:	55                   	push   %rbp
   13301:	53                   	push   %rbx
   13302:	48 83 ec 08          	sub    $0x8,%rsp
   13306:	48 c7 c3 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbx
   1330d:	48 8b 05 74 9d 20 00 	mov    0x209d74(%rip),%rax        # 21d088 <LPS>
   13314:	64 8b 13             	mov    %fs:(%rbx),%edx
   13317:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1331b:	66 83 78 10 01       	cmpw   $0x1,0x10(%rax)
   13320:	74 0d                	je     1332f <check_ScheduleNewEventFuture+0x2f>
   13322:	48 8d 3d df 51 00 00 	lea    0x51df(%rip),%rdi        # 18508 <__PRETTY_FUNCTION__.6556+0x2748>
   13329:	e8 12 e4 fe ff       	callq  1740 <puts@plt>
   1332e:	cc                   	int3   
   1332f:	48 c7 c5 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rbp
   13336:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
   1333b:	48 85 c0             	test   %rax,%rax
   1333e:	0f 84 ac 00 00 00    	je     133f0 <check_ScheduleNewEventFuture+0xf0>
   13344:	64 8b 0b             	mov    %fs:(%rbx),%ecx
   13347:	48 8b 15 3a 9d 20 00 	mov    0x209d3a(%rip),%rdx        # 21d088 <LPS>
   1334e:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
   13352:	48 8b 52 30          	mov    0x30(%rdx),%rdx
   13356:	48 85 d2             	test   %rdx,%rdx
   13359:	74 25                	je     13380 <check_ScheduleNewEventFuture+0x80>
   1335b:	f2 0f 10 48 08       	movsd  0x8(%rax),%xmm1
   13360:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
   13365:	66 0f 2f c1          	comisd %xmm1,%xmm0
   13369:	77 35                	ja     133a0 <check_ScheduleNewEventFuture+0xa0>
   1336b:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   1336f:	7a 0f                	jp     13380 <check_ScheduleNewEventFuture+0x80>
   13371:	75 0d                	jne    13380 <check_ScheduleNewEventFuture+0x80>
   13373:	0f b7 72 10          	movzwl 0x10(%rdx),%esi
   13377:	66 39 70 10          	cmp    %si,0x10(%rax)
   1337b:	76 23                	jbe    133a0 <check_ScheduleNewEventFuture+0xa0>
   1337d:	0f 1f 00             	nopl   (%rax)
   13380:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
   13384:	48 85 d2             	test   %rdx,%rdx
   13387:	74 32                	je     133bb <check_ScheduleNewEventFuture+0xbb>
   13389:	48 81 fa dd 0d 00 00 	cmp    $0xddd,%rdx
   13390:	74 45                	je     133d7 <check_ScheduleNewEventFuture+0xd7>
   13392:	48 83 c4 08          	add    $0x8,%rsp
   13396:	5b                   	pop    %rbx
   13397:	5d                   	pop    %rbp
   13398:	c3                   	retq   
   13399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   133a0:	48 8d 3d c1 51 00 00 	lea    0x51c1(%rip),%rdi        # 18568 <__PRETTY_FUNCTION__.6556+0x27a8>
   133a7:	e8 94 e3 fe ff       	callq  1740 <puts@plt>
   133ac:	cc                   	int3   
   133ad:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
   133b2:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
   133b6:	48 85 d2             	test   %rdx,%rdx
   133b9:	75 ce                	jne    13389 <check_ScheduleNewEventFuture+0x89>
   133bb:	64 8b 0b             	mov    %fs:(%rbx),%ecx
   133be:	48 8b 15 c3 9c 20 00 	mov    0x209cc3(%rip),%rdx        # 21d088 <LPS>
   133c5:	48 83 e8 10          	sub    $0x10,%rax
   133c9:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
   133cd:	48 8b 52 28          	mov    0x28(%rdx),%rdx
   133d1:	48 39 42 08          	cmp    %rax,0x8(%rdx)
   133d5:	74 bb                	je     13392 <check_ScheduleNewEventFuture+0x92>
   133d7:	48 8d 3d f2 51 00 00 	lea    0x51f2(%rip),%rdi        # 185d0 <__PRETTY_FUNCTION__.6556+0x2810>
   133de:	e8 5d e3 fe ff       	callq  1740 <puts@plt>
   133e3:	cc                   	int3   
   133e4:	48 83 c4 08          	add    $0x8,%rsp
   133e8:	5b                   	pop    %rbx
   133e9:	5d                   	pop    %rbp
   133ea:	c3                   	retq   
   133eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   133f0:	48 8d 3d 39 51 00 00 	lea    0x5139(%rip),%rdi        # 18530 <__PRETTY_FUNCTION__.6556+0x2770>
   133f7:	e8 44 e3 fe ff       	callq  1740 <puts@plt>
   133fc:	cc                   	int3   
   133fd:	64 48 8b 45 00       	mov    %fs:0x0(%rbp),%rax
   13402:	e9 3d ff ff ff       	jmpq   13344 <check_ScheduleNewEventFuture+0x44>
   13407:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1340e:	00 00 

0000000000013410 <check_ScheduleNewEventPast>:
   13410:	53                   	push   %rbx
   13411:	48 c7 c3 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbx
   13418:	48 8b 05 69 9c 20 00 	mov    0x209c69(%rip),%rax        # 21d088 <LPS>
   1341f:	64 8b 13             	mov    %fs:(%rbx),%edx
   13422:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   13426:	66 83 78 10 10       	cmpw   $0x10,0x10(%rax)
   1342b:	74 1b                	je     13448 <check_ScheduleNewEventPast+0x38>
   1342d:	48 8d 3d cc 51 00 00 	lea    0x51cc(%rip),%rdi        # 18600 <__PRETTY_FUNCTION__.6556+0x2840>
   13434:	e8 07 e3 fe ff       	callq  1740 <puts@plt>
   13439:	cc                   	int3   
   1343a:	48 8b 05 47 9c 20 00 	mov    0x209c47(%rip),%rax        # 21d088 <LPS>
   13441:	64 8b 13             	mov    %fs:(%rbx),%edx
   13444:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   13448:	48 8b 40 30          	mov    0x30(%rax),%rax
   1344c:	48 85 c0             	test   %rax,%rax
   1344f:	74 3f                	je     13490 <check_ScheduleNewEventPast+0x80>
   13451:	48 c7 c2 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rdx
   13458:	64 48 8b 12          	mov    %fs:(%rdx),%rdx
   1345c:	48 85 d2             	test   %rdx,%rdx
   1345f:	74 2f                	je     13490 <check_ScheduleNewEventPast+0x80>
   13461:	f2 0f 10 4a 08       	movsd  0x8(%rdx),%xmm1
   13466:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
   1346b:	66 0f 2f c1          	comisd %xmm1,%xmm0
   1346f:	77 12                	ja     13483 <check_ScheduleNewEventPast+0x73>
   13471:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   13475:	7a 19                	jp     13490 <check_ScheduleNewEventPast+0x80>
   13477:	75 17                	jne    13490 <check_ScheduleNewEventPast+0x80>
   13479:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   1347d:	66 39 42 10          	cmp    %ax,0x10(%rdx)
   13481:	77 0d                	ja     13490 <check_ScheduleNewEventPast+0x80>
   13483:	48 8d 3d ae 51 00 00 	lea    0x51ae(%rip),%rdi        # 18638 <__PRETTY_FUNCTION__.6556+0x2878>
   1348a:	e8 b1 e2 fe ff       	callq  1740 <puts@plt>
   1348f:	cc                   	int3   
   13490:	5b                   	pop    %rbx
   13491:	c3                   	retq   
   13492:	0f 1f 40 00          	nopl   0x0(%rax)
   13496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1349d:	00 00 00 

00000000000134a0 <check_CFV_TO_HANDLE_current_msg_null>:
   134a0:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
   134a7:	64 8b 10             	mov    %fs:(%rax),%edx
   134aa:	48 8b 05 d7 9b 20 00 	mov    0x209bd7(%rip),%rax        # 21d088 <LPS>
   134b1:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   134b5:	66 83 78 10 10       	cmpw   $0x10,0x10(%rax)
   134ba:	75 04                	jne    134c0 <check_CFV_TO_HANDLE_current_msg_null+0x20>
   134bc:	c3                   	retq   
   134bd:	0f 1f 00             	nopl   (%rax)
   134c0:	48 83 ec 08          	sub    $0x8,%rsp
   134c4:	48 8d 3d cd 51 00 00 	lea    0x51cd(%rip),%rdi        # 18698 <__PRETTY_FUNCTION__.6556+0x28d8>
   134cb:	e8 70 e2 fe ff       	callq  1740 <puts@plt>
   134d0:	cc                   	int3   
   134d1:	48 83 c4 08          	add    $0x8,%rsp
   134d5:	c3                   	retq   
   134d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   134dd:	00 00 00 

00000000000134e0 <check_CFV_TO_HANDLE_past>:
   134e0:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
   134e7:	64 8b 10             	mov    %fs:(%rax),%edx
   134ea:	48 8b 05 97 9b 20 00 	mov    0x209b97(%rip),%rax        # 21d088 <LPS>
   134f1:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   134f5:	48 8b 40 30          	mov    0x30(%rax),%rax
   134f9:	48 85 c0             	test   %rax,%rax
   134fc:	74 4a                	je     13548 <check_CFV_TO_HANDLE_past+0x68>
   134fe:	48 c7 c2 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rdx
   13505:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
   1350a:	64 48 8b 12          	mov    %fs:(%rdx),%rdx
   1350e:	f2 0f 10 4a 08       	movsd  0x8(%rdx),%xmm1
   13513:	66 0f 2f c1          	comisd %xmm1,%xmm0
   13517:	77 12                	ja     1352b <check_CFV_TO_HANDLE_past+0x4b>
   13519:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   1351d:	7a 29                	jp     13548 <check_CFV_TO_HANDLE_past+0x68>
   1351f:	75 27                	jne    13548 <check_CFV_TO_HANDLE_past+0x68>
   13521:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   13525:	66 39 42 10          	cmp    %ax,0x10(%rdx)
   13529:	77 1d                	ja     13548 <check_CFV_TO_HANDLE_past+0x68>
   1352b:	48 83 ec 08          	sub    $0x8,%rsp
   1352f:	48 8d 3d 9a 4d 00 00 	lea    0x4d9a(%rip),%rdi        # 182d0 <__PRETTY_FUNCTION__.6556+0x2510>
   13536:	e8 05 e2 fe ff       	callq  1740 <puts@plt>
   1353b:	cc                   	int3   
   1353c:	48 83 c4 08          	add    $0x8,%rsp
   13540:	c3                   	retq   
   13541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13548:	c3                   	retq   
   13549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013550 <check_CFV_TO_HANDLE_future>:
   13550:	55                   	push   %rbp
   13551:	53                   	push   %rbx
   13552:	48 83 ec 08          	sub    $0x8,%rsp
   13556:	48 c7 c5 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbp
   1355d:	48 8b 05 24 9b 20 00 	mov    0x209b24(%rip),%rax        # 21d088 <LPS>
   13564:	48 c7 c3 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rbx
   1356b:	64 8b 4d 00          	mov    %fs:0x0(%rbp),%ecx
   1356f:	64 48 8b 13          	mov    %fs:(%rbx),%rdx
   13573:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
   13577:	f2 0f 10 4a 08       	movsd  0x8(%rdx),%xmm1
   1357c:	48 8b 48 30          	mov    0x30(%rax),%rcx
   13580:	f2 0f 10 41 08       	movsd  0x8(%rcx),%xmm0
   13585:	66 0f 2f c1          	comisd %xmm1,%xmm0
   13589:	0f 87 89 00 00 00    	ja     13618 <check_CFV_TO_HANDLE_future+0xc8>
   1358f:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   13593:	7a 0c                	jp     135a1 <check_CFV_TO_HANDLE_future+0x51>
   13595:	75 0a                	jne    135a1 <check_CFV_TO_HANDLE_future+0x51>
   13597:	0f b7 41 10          	movzwl 0x10(%rcx),%eax
   1359b:	66 39 42 10          	cmp    %ax,0x10(%rdx)
   1359f:	76 77                	jbe    13618 <check_CFV_TO_HANDLE_future+0xc8>
   135a1:	48 81 7a 20 fe 5a 00 	cmpq   $0x5afe,0x20(%rdx)
   135a8:	00 
   135a9:	0f 84 dd 00 00 00    	je     1368c <check_CFV_TO_HANDLE_future+0x13c>
   135af:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
   135b3:	48 85 c0             	test   %rax,%rax
   135b6:	74 18                	je     135d0 <check_CFV_TO_HANDLE_future+0x80>
   135b8:	48 3d dd 0d 00 00    	cmp    $0xddd,%rax
   135be:	74 2d                	je     135ed <check_CFV_TO_HANDLE_future+0x9d>
   135c0:	48 83 c4 08          	add    $0x8,%rsp
   135c4:	5b                   	pop    %rbx
   135c5:	5d                   	pop    %rbp
   135c6:	c3                   	retq   
   135c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   135ce:	00 00 
   135d0:	64 8b 4d 00          	mov    %fs:0x0(%rbp),%ecx
   135d4:	48 8b 05 ad 9a 20 00 	mov    0x209aad(%rip),%rax        # 21d088 <LPS>
   135db:	48 83 ea 10          	sub    $0x10,%rdx
   135df:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
   135e3:	48 8b 40 28          	mov    0x28(%rax),%rax
   135e7:	48 39 50 08          	cmp    %rdx,0x8(%rax)
   135eb:	74 d3                	je     135c0 <check_CFV_TO_HANDLE_future+0x70>
   135ed:	48 8d 3d dc 4f 00 00 	lea    0x4fdc(%rip),%rdi        # 185d0 <__PRETTY_FUNCTION__.6556+0x2810>
   135f4:	e8 47 e1 fe ff       	callq  1740 <puts@plt>
   135f9:	cc                   	int3   
   135fa:	64 48 83 3b 00       	cmpq   $0x0,%fs:(%rbx)
   135ff:	75 bf                	jne    135c0 <check_CFV_TO_HANDLE_future+0x70>
   13601:	48 8d 3d 28 51 00 00 	lea    0x5128(%rip),%rdi        # 18730 <__PRETTY_FUNCTION__.6556+0x2970>
   13608:	e8 33 e1 fe ff       	callq  1740 <puts@plt>
   1360d:	cc                   	int3   
   1360e:	48 83 c4 08          	add    $0x8,%rsp
   13612:	5b                   	pop    %rbx
   13613:	5d                   	pop    %rbp
   13614:	c3                   	retq   
   13615:	0f 1f 00             	nopl   (%rax)
   13618:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
   1361f:	48 8d 35 ba 50 00 00 	lea    0x50ba(%rip),%rsi        # 186e0 <__PRETTY_FUNCTION__.6556+0x2920>
   13626:	bf 01 00 00 00       	mov    $0x1,%edi
   1362b:	64 44 8b 00          	mov    %fs:(%rax),%r8d
   1362f:	31 c0                	xor    %eax,%eax
   13631:	e8 3a e3 fe ff       	callq  1970 <__printf_chk@plt>
   13636:	64 8b 55 00          	mov    %fs:0x0(%rbp),%edx
   1363a:	bf 01 00 00 00       	mov    $0x1,%edi
   1363f:	48 8b 05 42 9a 20 00 	mov    0x209a42(%rip),%rax        # 21d088 <LPS>
   13646:	48 8d 35 49 59 00 00 	lea    0x5949(%rip),%rsi        # 18f96 <__PRETTY_FUNCTION__.6556+0x31d6>
   1364d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   13651:	64 48 8b 13          	mov    %fs:(%rbx),%rdx
   13655:	48 8b 40 30          	mov    0x30(%rax),%rax
   13659:	44 0f b7 42 10       	movzwl 0x10(%rdx),%r8d
   1365e:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
   13663:	0f b7 48 10          	movzwl 0x10(%rax),%ecx
   13667:	f2 0f 10 48 08       	movsd  0x8(%rax),%xmm1
   1366c:	44 89 c2             	mov    %r8d,%edx
   1366f:	b8 02 00 00 00       	mov    $0x2,%eax
   13674:	e8 f7 e2 fe ff       	callq  1970 <__printf_chk@plt>
   13679:	cc                   	int3   
   1367a:	64 48 8b 13          	mov    %fs:(%rbx),%rdx
   1367e:	48 81 7a 20 fe 5a 00 	cmpq   $0x5afe,0x20(%rdx)
   13685:	00 
   13686:	0f 85 23 ff ff ff    	jne    135af <check_CFV_TO_HANDLE_future+0x5f>
   1368c:	48 8d 3d 75 50 00 00 	lea    0x5075(%rip),%rdi        # 18708 <__PRETTY_FUNCTION__.6556+0x2948>
   13693:	e8 a8 e0 fe ff       	callq  1740 <puts@plt>
   13698:	cc                   	int3   
   13699:	64 48 8b 13          	mov    %fs:(%rbx),%rdx
   1369d:	e9 0d ff ff ff       	jmpq   135af <check_CFV_TO_HANDLE_future+0x5f>
   136a2:	0f 1f 40 00          	nopl   0x0(%rax)
   136a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   136ad:	00 00 00 

00000000000136b0 <check_thread_loop_after_executeEvent>:
   136b0:	41 55                	push   %r13
   136b2:	41 54                	push   %r12
   136b4:	55                   	push   %rbp
   136b5:	53                   	push   %rbx
   136b6:	48 83 ec 08          	sub    $0x8,%rsp
   136ba:	48 c7 c0 00 5f ff ff 	mov    $0xffffffffffff5f00,%rax
   136c1:	64 8b 00             	mov    %fs:(%rax),%eax
   136c4:	85 c0                	test   %eax,%eax
   136c6:	0f 85 3c 01 00 00    	jne    13808 <check_thread_loop_after_executeEvent+0x158>
   136cc:	48 c7 c3 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rbx
   136d3:	64 48 8b 03          	mov    %fs:(%rbx),%rax
   136d7:	f6 80 d0 00 00 00 01 	testb  $0x1,0xd0(%rax)
   136de:	0f 85 7c 00 00 00    	jne    13760 <check_thread_loop_after_executeEvent+0xb0>
   136e4:	48 c7 c5 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbp
   136eb:	48 8b 05 96 99 20 00 	mov    0x209996(%rip),%rax        # 21d088 <LPS>
   136f2:	64 8b 55 00          	mov    %fs:0x0(%rbp),%edx
   136f6:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx
   136fa:	48 8b 82 80 00 00 00 	mov    0x80(%rdx),%rax
   13701:	8b 4a 48             	mov    0x48(%rdx),%ecx
   13704:	44 8b 40 18          	mov    0x18(%rax),%r8d
   13708:	8d 51 ff             	lea    -0x1(%rcx),%edx
   1370b:	41 39 d0             	cmp    %edx,%r8d
   1370e:	74 2d                	je     1373d <check_thread_loop_after_executeEvent+0x8d>
   13710:	44 89 c2             	mov    %r8d,%edx
   13713:	48 8d 35 7e 50 00 00 	lea    0x507e(%rip),%rsi        # 18798 <__PRETTY_FUNCTION__.6556+0x29d8>
   1371a:	bf 01 00 00 00       	mov    $0x1,%edi
   1371f:	31 c0                	xor    %eax,%eax
   13721:	e8 4a e2 fe ff       	callq  1970 <__printf_chk@plt>
   13726:	cc                   	int3   
   13727:	48 8b 05 5a 99 20 00 	mov    0x20995a(%rip),%rax        # 21d088 <LPS>
   1372e:	64 8b 55 00          	mov    %fs:0x0(%rbp),%edx
   13732:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   13736:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
   1373d:	8b 50 14             	mov    0x14(%rax),%edx
   13740:	64 48 8b 03          	mov    %fs:(%rbx),%rax
   13744:	8b 48 14             	mov    0x14(%rax),%ecx
   13747:	39 ca                	cmp    %ecx,%edx
   13749:	0f 87 e1 00 00 00    	ja     13830 <check_thread_loop_after_executeEvent+0x180>
   1374f:	48 83 c4 08          	add    $0x8,%rsp
   13753:	5b                   	pop    %rbx
   13754:	5d                   	pop    %rbp
   13755:	41 5c                	pop    %r12
   13757:	41 5d                	pop    %r13
   13759:	c3                   	retq   
   1375a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13760:	48 8d 35 e9 4f 00 00 	lea    0x4fe9(%rip),%rsi        # 18750 <__PRETTY_FUNCTION__.6556+0x2990>
   13767:	bf 01 00 00 00       	mov    $0x1,%edi
   1376c:	31 c0                	xor    %eax,%eax
   1376e:	e8 fd e1 fe ff       	callq  1970 <__printf_chk@plt>
   13773:	64 48 8b 2b          	mov    %fs:(%rbx),%rbp
   13777:	48 89 ef             	mov    %rbp,%rdi
   1377a:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
   1377e:	4c 8b a5 d0 00 00 00 	mov    0xd0(%rbp),%r12
   13785:	e8 d6 95 ff ff       	callq  cd60 <is_valid>
   1378a:	64 48 8b 13          	mov    %fs:(%rbx),%rdx
   1378e:	48 8d 35 d5 11 00 00 	lea    0x11d5(%rip),%rsi        # 1496a <__PRETTY_FUNCTION__.5886+0x18a>
   13795:	0f b6 c0             	movzbl %al,%eax
   13798:	8b 4a 40             	mov    0x40(%rdx),%ecx
   1379b:	83 f9 01             	cmp    $0x1,%ecx
   1379e:	74 21                	je     137c1 <check_thread_loop_after_executeEvent+0x111>
   137a0:	48 8d 35 b0 11 00 00 	lea    0x11b0(%rip),%rsi        # 14957 <__PRETTY_FUNCTION__.5886+0x177>
   137a7:	83 f9 02             	cmp    $0x2,%ecx
   137aa:	74 15                	je     137c1 <check_thread_loop_after_executeEvent+0x111>
   137ac:	83 f9 03             	cmp    $0x3,%ecx
   137af:	48 8d 35 bd 11 00 00 	lea    0x11bd(%rip),%rsi        # 14973 <__PRETTY_FUNCTION__.5886+0x193>
   137b6:	48 8d 3d a5 11 00 00 	lea    0x11a5(%rip),%rdi        # 14962 <__PRETTY_FUNCTION__.5886+0x182>
   137bd:	48 0f 45 f7          	cmovne %rdi,%rsi
   137c1:	44 0f b7 52 02       	movzwl 0x2(%rdx),%r10d
   137c6:	44 8b 4a 14          	mov    0x14(%rdx),%r9d
   137ca:	bf 01 00 00 00       	mov    $0x1,%edi
   137cf:	44 0f b7 42 10       	movzwl 0x10(%rdx),%r8d
   137d4:	f2 0f 10 42 08       	movsd  0x8(%rdx),%xmm0
   137d9:	0f b7 12             	movzwl (%rdx),%edx
   137dc:	41 55                	push   %r13
   137de:	41 54                	push   %r12
   137e0:	55                   	push   %rbp
   137e1:	50                   	push   %rax
   137e2:	b8 01 00 00 00       	mov    $0x1,%eax
   137e7:	56                   	push   %rsi
   137e8:	48 8d 35 49 17 00 00 	lea    0x1749(%rip),%rsi        # 14f38 <__PRETTY_FUNCTION__.5886+0x758>
   137ef:	51                   	push   %rcx
   137f0:	44 89 d1             	mov    %r10d,%ecx
   137f3:	e8 78 e1 fe ff       	callq  1970 <__printf_chk@plt>
   137f8:	cc                   	int3   
   137f9:	48 83 c4 30          	add    $0x30,%rsp
   137fd:	e9 e2 fe ff ff       	jmpq   136e4 <check_thread_loop_after_executeEvent+0x34>
   13802:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13808:	48 c7 c0 90 5e ff ff 	mov    $0xffffffffffff5e90,%rax
   1380f:	48 8d 35 9b 57 00 00 	lea    0x579b(%rip),%rsi        # 18fb1 <__PRETTY_FUNCTION__.6556+0x31f1>
   13816:	bf 01 00 00 00       	mov    $0x1,%edi
   1381b:	64 8b 10             	mov    %fs:(%rax),%edx
   1381e:	31 c0                	xor    %eax,%eax
   13820:	e8 4b e1 fe ff       	callq  1970 <__printf_chk@plt>
   13825:	cc                   	int3   
   13826:	e9 a1 fe ff ff       	jmpq   136cc <check_thread_loop_after_executeEvent+0x1c>
   1382b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13830:	48 8d 35 a1 4f 00 00 	lea    0x4fa1(%rip),%rsi        # 187d8 <__PRETTY_FUNCTION__.6556+0x2a18>
   13837:	bf 01 00 00 00       	mov    $0x1,%edi
   1383c:	31 c0                	xor    %eax,%eax
   1383e:	e8 2d e1 fe ff       	callq  1970 <__printf_chk@plt>
   13843:	cc                   	int3   
   13844:	48 83 c4 08          	add    $0x8,%rsp
   13848:	5b                   	pop    %rbx
   13849:	5d                   	pop    %rbp
   1384a:	41 5c                	pop    %r12
   1384c:	41 5d                	pop    %r13
   1384e:	c3                   	retq   
   1384f:	90                   	nop

0000000000013850 <set_preemption_counter>:
   13850:	64 48 8b 04 25 e8 ff 	mov    %fs:0xffffffffffffffe8,%rax
   13857:	ff ff 
   13859:	48 89 38             	mov    %rdi,(%rax)
   1385c:	c3                   	retq   
   1385d:	0f 1f 00             	nopl   (%rax)

0000000000013860 <initialize_preempt_counter>:
   13860:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   13867:	00 00 
   13869:	64 48 c7 04 25 38 49 	movq   $0x1,%fs:0xffffffffffff4938
   13870:	ff ff 01 00 00 00 
   13876:	48 05 38 49 ff ff    	add    $0xffffffffffff4938,%rax
   1387c:	64 48 89 04 25 e8 ff 	mov    %rax,%fs:0xffffffffffffffe8
   13883:	ff ff 
   13885:	c3                   	retq   
   13886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1388d:	00 00 00 

0000000000013890 <initialize_standing_ipi>:
   13890:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   13897:	00 00 
   13899:	64 48 c7 04 25 30 49 	movq   $0x0,%fs:0xffffffffffff4930
   138a0:	ff ff 00 00 00 00 
   138a6:	48 05 30 49 ff ff    	add    $0xffffffffffff4930,%rax
   138ac:	64 48 89 04 25 e0 ff 	mov    %rax,%fs:0xffffffffffffffe0
   138b3:	ff ff 
   138b5:	c3                   	retq   
   138b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   138bd:	00 00 00 

00000000000138c0 <get_preemption_counter>:
   138c0:	64 48 8b 04 25 e8 ff 	mov    %fs:0xffffffffffffffe8,%rax
   138c7:	ff ff 
   138c9:	48 8b 00             	mov    (%rax),%rax
   138cc:	c3                   	retq   
   138cd:	0f 1f 00             	nopl   (%rax)

00000000000138d0 <reset_preemption_counter>:
   138d0:	64 48 8b 04 25 e8 ff 	mov    %fs:0xffffffffffffffe8,%rax
   138d7:	ff ff 
   138d9:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
   138e0:	c3                   	retq   
   138e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   138e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   138ed:	00 00 00 

00000000000138f0 <decrement_preempt_counter>:
   138f0:	48 83 ec 08          	sub    $0x8,%rsp
   138f4:	64 48 8b 04 25 e8 ff 	mov    %fs:0xffffffffffffffe8,%rax
   138fb:	ff ff 
   138fd:	48 8b 00             	mov    (%rax),%rax
   13900:	48 85 c0             	test   %rax,%rax
   13903:	74 1b                	je     13920 <decrement_preempt_counter+0x30>
   13905:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13909:	74 34                	je     1393f <decrement_preempt_counter+0x4f>
   1390b:	64 48 8b 04 25 e8 ff 	mov    %fs:0xffffffffffffffe8,%rax
   13912:	ff ff 
   13914:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   13919:	48 83 c4 08          	add    $0x8,%rsp
   1391d:	c3                   	retq   
   1391e:	66 90                	xchg   %ax,%ax
   13920:	48 8d 3d f9 4e 00 00 	lea    0x4ef9(%rip),%rdi        # 18820 <__PRETTY_FUNCTION__.6556+0x2a60>
   13927:	e8 14 de fe ff       	callq  1740 <puts@plt>
   1392c:	cc                   	int3   
   1392d:	64 48 8b 04 25 e8 ff 	mov    %fs:0xffffffffffffffe8,%rax
   13934:	ff ff 
   13936:	48 8b 00             	mov    (%rax),%rax
   13939:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1393d:	75 cc                	jne    1390b <decrement_preempt_counter+0x1b>
   1393f:	48 8d 3d 88 56 00 00 	lea    0x5688(%rip),%rdi        # 18fce <__PRETTY_FUNCTION__.6556+0x320e>
   13946:	e8 f5 dd fe ff       	callq  1740 <puts@plt>
   1394b:	cc                   	int3   
   1394c:	eb bd                	jmp    1390b <decrement_preempt_counter+0x1b>
   1394e:	66 90                	xchg   %ax,%ax

0000000000013950 <increment_preempt_counter>:
   13950:	64 48 8b 04 25 e8 ff 	mov    %fs:0xffffffffffffffe8,%rax
   13957:	ff ff 
   13959:	48 83 38 01          	cmpq   $0x1,(%rax)
   1395d:	77 09                	ja     13968 <increment_preempt_counter+0x18>
   1395f:	f0 48 83 00 01       	lock addq $0x1,(%rax)
   13964:	c3                   	retq   
   13965:	0f 1f 00             	nopl   (%rax)
   13968:	48 83 ec 08          	sub    $0x8,%rsp
   1396c:	ba 02 00 00 00       	mov    $0x2,%edx
   13971:	bf 01 00 00 00       	mov    $0x1,%edi
   13976:	31 c0                	xor    %eax,%eax
   13978:	48 8d 35 d9 4e 00 00 	lea    0x4ed9(%rip),%rsi        # 18858 <__PRETTY_FUNCTION__.6556+0x2a98>
   1397f:	e8 ec df fe ff       	callq  1970 <__printf_chk@plt>
   13984:	cc                   	int3   
   13985:	64 48 8b 04 25 e8 ff 	mov    %fs:0xffffffffffffffe8,%rax
   1398c:	ff ff 
   1398e:	48 83 38 ff          	cmpq   $0xffffffffffffffff,(%rax)
   13992:	75 16                	jne    139aa <increment_preempt_counter+0x5a>
   13994:	48 8d 3d 33 56 00 00 	lea    0x5633(%rip),%rdi        # 18fce <__PRETTY_FUNCTION__.6556+0x320e>
   1399b:	e8 a0 dd fe ff       	callq  1740 <puts@plt>
   139a0:	cc                   	int3   
   139a1:	64 48 8b 04 25 e8 ff 	mov    %fs:0xffffffffffffffe8,%rax
   139a8:	ff ff 
   139aa:	f0 48 83 00 01       	lock addq $0x1,(%rax)
   139af:	48 83 c4 08          	add    $0x8,%rsp
   139b3:	c3                   	retq   
   139b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   139bb:	00 00 00 
   139be:	66 90                	xchg   %ax,%ax

00000000000139c0 <end_exposition_of_current_event>:
   139c0:	48 85 ff             	test   %rdi,%rdi
   139c3:	0f 84 0f 01 00 00    	je     13ad8 <end_exposition_of_current_event+0x118>
   139c9:	41 54                	push   %r12
   139cb:	49 89 fc             	mov    %rdi,%r12
   139ce:	55                   	push   %rbp
   139cf:	48 c7 c5 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbp
   139d6:	53                   	push   %rbx
   139d7:	0f b7 47 02          	movzwl 0x2(%rdi),%eax
   139db:	64 3b 45 00          	cmp    %fs:0x0(%rbp),%eax
   139df:	0f 85 8b 00 00 00    	jne    13a70 <end_exposition_of_current_event+0xb0>
   139e5:	0f 31                	rdtsc  
   139e7:	48 89 d3             	mov    %rdx,%rbx
   139ea:	89 c0                	mov    %eax,%eax
   139ec:	49 8b 94 24 38 01 00 	mov    0x138(%r12),%rdx
   139f3:	00 
   139f4:	48 c1 e3 20          	shl    $0x20,%rbx
   139f8:	48 09 c3             	or     %rax,%rbx
   139fb:	48 39 da             	cmp    %rbx,%rdx
   139fe:	0f 87 ac 00 00 00    	ja     13ab0 <end_exposition_of_current_event+0xf0>
   13a04:	48 29 d3             	sub    %rdx,%rbx
   13a07:	64 8b 7d 00          	mov    %fs:0x0(%rbp),%edi
   13a0b:	f2 0f 10 05 ad 15 00 	movsd  0x15ad(%rip),%xmm0        # 14fc0 <__PRETTY_FUNCTION__.5886+0x7e0>
   13a12:	00 
   13a13:	41 83 bc 24 30 01 00 	cmpl   $0x1,0x130(%r12)
   13a1a:	00 01 
   13a1c:	74 6a                	je     13a88 <end_exposition_of_current_event+0xc8>
   13a1e:	be 5d 02 00 00       	mov    $0x25d,%esi
   13a23:	e8 98 c8 ff ff       	callq  102c0 <statistics_post_lp_data>
   13a28:	48 85 db             	test   %rbx,%rbx
   13a2b:	0f 88 cf 00 00 00    	js     13b00 <end_exposition_of_current_event+0x140>
   13a31:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13a35:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
   13a3a:	64 8b 7d 00          	mov    %fs:0x0(%rbp),%edi
   13a3e:	be 5b 02 00 00       	mov    $0x25b,%esi
   13a43:	e8 78 c8 ff ff       	callq  102c0 <statistics_post_lp_data>
   13a48:	64 8b 55 00          	mov    %fs:0x0(%rbp),%edx
   13a4c:	48 8b 05 35 96 20 00 	mov    0x209635(%rip),%rax        # 21d088 <LPS>
   13a53:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   13a57:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
   13a5e:	00 00 00 00 
   13a62:	5b                   	pop    %rbx
   13a63:	5d                   	pop    %rbp
   13a64:	41 5c                	pop    %r12
   13a66:	c3                   	retq   
   13a67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   13a6e:	00 00 
   13a70:	48 8d 3d 6f 55 00 00 	lea    0x556f(%rip),%rdi        # 18fe6 <__PRETTY_FUNCTION__.6556+0x3226>
   13a77:	e8 c4 dc fe ff       	callq  1740 <puts@plt>
   13a7c:	cc                   	int3   
   13a7d:	e9 63 ff ff ff       	jmpq   139e5 <end_exposition_of_current_event+0x25>
   13a82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13a88:	be 5c 02 00 00       	mov    $0x25c,%esi
   13a8d:	e8 2e c8 ff ff       	callq  102c0 <statistics_post_lp_data>
   13a92:	48 85 db             	test   %rbx,%rbx
   13a95:	78 49                	js     13ae0 <end_exposition_of_current_event+0x120>
   13a97:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13a9b:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
   13aa0:	64 8b 7d 00          	mov    %fs:0x0(%rbp),%edi
   13aa4:	be 5a 02 00 00       	mov    $0x25a,%esi
   13aa9:	e8 12 c8 ff ff       	callq  102c0 <statistics_post_lp_data>
   13aae:	eb 98                	jmp    13a48 <end_exposition_of_current_event+0x88>
   13ab0:	48 89 d9             	mov    %rbx,%rcx
   13ab3:	48 8d 35 06 13 00 00 	lea    0x1306(%rip),%rsi        # 14dc0 <__PRETTY_FUNCTION__.5886+0x5e0>
   13aba:	bf 01 00 00 00       	mov    $0x1,%edi
   13abf:	31 c0                	xor    %eax,%eax
   13ac1:	e8 aa de fe ff       	callq  1970 <__printf_chk@plt>
   13ac6:	cc                   	int3   
   13ac7:	49 8b 94 24 38 01 00 	mov    0x138(%r12),%rdx
   13ace:	00 
   13acf:	e9 30 ff ff ff       	jmpq   13a04 <end_exposition_of_current_event+0x44>
   13ad4:	0f 1f 40 00          	nopl   0x0(%rax)
   13ad8:	c3                   	retq   
   13ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13ae0:	48 89 d8             	mov    %rbx,%rax
   13ae3:	83 e3 01             	and    $0x1,%ebx
   13ae6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13aea:	48 d1 e8             	shr    %rax
   13aed:	48 09 d8             	or     %rbx,%rax
   13af0:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   13af5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   13af9:	eb a5                	jmp    13aa0 <end_exposition_of_current_event+0xe0>
   13afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13b00:	48 89 d8             	mov    %rbx,%rax
   13b03:	83 e3 01             	and    $0x1,%ebx
   13b06:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13b0a:	48 d1 e8             	shr    %rax
   13b0d:	48 09 d8             	or     %rbx,%rax
   13b10:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   13b15:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   13b19:	e9 1c ff ff ff       	jmpq   13a3a <end_exposition_of_current_event+0x7a>
   13b1e:	66 90                	xchg   %ax,%ax

0000000000013b20 <start_exposition_of_current_event>:
   13b20:	48 85 ff             	test   %rdi,%rdi
   13b23:	74 73                	je     13b98 <start_exposition_of_current_event+0x78>
   13b25:	55                   	push   %rbp
   13b26:	53                   	push   %rbx
   13b27:	48 89 fb             	mov    %rdi,%rbx
   13b2a:	48 83 ec 08          	sub    $0x8,%rsp
   13b2e:	48 c7 c5 78 5e ff ff 	mov    $0xffffffffffff5e78,%rbp
   13b35:	0f b7 47 02          	movzwl 0x2(%rdi),%eax
   13b39:	64 8b 4d 00          	mov    %fs:0x0(%rbp),%ecx
   13b3d:	39 c8                	cmp    %ecx,%eax
   13b3f:	75 3f                	jne    13b80 <start_exposition_of_current_event+0x60>
   13b41:	0f 31                	rdtsc  
   13b43:	89 c0                	mov    %eax,%eax
   13b45:	48 c1 e2 20          	shl    $0x20,%rdx
   13b49:	48 09 c2             	or     %rax,%rdx
   13b4c:	48 8b 05 35 95 20 00 	mov    0x209535(%rip),%rax        # 21d088 <LPS>
   13b53:	48 89 93 38 01 00 00 	mov    %rdx,0x138(%rbx)
   13b5a:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
   13b5e:	0f b7 50 10          	movzwl 0x10(%rax),%edx
   13b62:	89 93 30 01 00 00    	mov    %edx,0x130(%rbx)
   13b68:	48 89 98 90 00 00 00 	mov    %rbx,0x90(%rax)
   13b6f:	48 83 c4 08          	add    $0x8,%rsp
   13b73:	5b                   	pop    %rbx
   13b74:	5d                   	pop    %rbp
   13b75:	c3                   	retq   
   13b76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13b7d:	00 00 00 
   13b80:	48 8d 3d 72 54 00 00 	lea    0x5472(%rip),%rdi        # 18ff9 <__PRETTY_FUNCTION__.6556+0x3239>
   13b87:	e8 b4 db fe ff       	callq  1740 <puts@plt>
   13b8c:	cc                   	int3   
   13b8d:	64 8b 4d 00          	mov    %fs:0x0(%rbp),%ecx
   13b91:	eb ae                	jmp    13b41 <start_exposition_of_current_event+0x21>
   13b93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13b98:	c3                   	retq   
   13b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013ba0 <allocate_dummy_bound>:
   13ba0:	53                   	push   %rbx
   13ba1:	89 fb                	mov    %edi,%ebx
   13ba3:	e8 c8 43 ff ff       	callq  7f70 <allocate_event>
   13ba8:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13bac:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   13bb1:	b9 01 00 00 00       	mov    $0x1,%ecx
   13bb6:	66 89 10             	mov    %dx,(%rax)
   13bb9:	66 89 58 02          	mov    %bx,0x2(%rax)
   13bbd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13bc4:	00 
   13bc5:	66 89 48 10          	mov    %cx,0x10(%rax)
   13bc9:	c6 40 12 09          	movb   $0x9,0x12(%rax)
   13bcd:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
   13bd4:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
   13bdb:	0f 11 40 20          	movups %xmm0,0x20(%rax)
   13bdf:	0f 11 40 f0          	movups %xmm0,-0x10(%rax)
   13be3:	5b                   	pop    %rbx
   13be4:	c3                   	retq   
   13be5:	90                   	nop
   13be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13bed:	00 00 00 

0000000000013bf0 <dummy_bound_is_corrupted>:
   13bf0:	48 8b 05 91 94 20 00 	mov    0x209491(%rip),%rax        # 21d088 <LPS>
   13bf7:	48 63 d7             	movslq %edi,%rdx
   13bfa:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13c00:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   13c04:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   13c0b:	48 85 c0             	test   %rax,%rax
   13c0e:	74 08                	je     13c18 <dummy_bound_is_corrupted+0x28>
   13c10:	0f b7 50 02          	movzwl 0x2(%rax),%edx
   13c14:	39 fa                	cmp    %edi,%edx
   13c16:	74 08                	je     13c20 <dummy_bound_is_corrupted+0x30>
   13c18:	44 89 c0             	mov    %r8d,%eax
   13c1b:	c3                   	retq   
   13c1c:	0f 1f 40 00          	nopl   0x0(%rax)
   13c20:	80 78 12 09          	cmpb   $0x9,0x12(%rax)
   13c24:	75 f2                	jne    13c18 <dummy_bound_is_corrupted+0x28>
   13c26:	f7 40 40 fb ff ff ff 	testl  $0xfffffffb,0x40(%rax)
   13c2d:	75 e9                	jne    13c18 <dummy_bound_is_corrupted+0x28>
   13c2f:	48 83 78 28 00       	cmpq   $0x0,0x28(%rax)
   13c34:	75 e2                	jne    13c18 <dummy_bound_is_corrupted+0x28>
   13c36:	8b 50 14             	mov    0x14(%rax),%edx
   13c39:	85 d2                	test   %edx,%edx
   13c3b:	75 db                	jne    13c18 <dummy_bound_is_corrupted+0x28>
   13c3d:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
   13c42:	41 0f 95 c0          	setne  %r8b
   13c46:	eb d0                	jmp    13c18 <dummy_bound_is_corrupted+0x28>
   13c48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13c4f:	00 

0000000000013c50 <bound_is_corrupted>:
   13c50:	48 8b 05 31 94 20 00 	mov    0x209431(%rip),%rax        # 21d088 <LPS>
   13c57:	48 63 ff             	movslq %edi,%rdi
   13c5a:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
   13c5e:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   13c65:	48 39 50 30          	cmp    %rdx,0x30(%rax)
   13c69:	0f 94 c0             	sete   %al
   13c6c:	c3                   	retq   
   13c6d:	0f 1f 00             	nopl   (%rax)

0000000000013c70 <make_LP_state_invalid>:
   13c70:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
   13c77:	64 8b 10             	mov    %fs:(%rax),%edx
   13c7a:	48 8b 05 07 94 20 00 	mov    0x209407(%rip),%rax        # 21d088 <LPS>
   13c81:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   13c85:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   13c8c:	c6 80 98 00 00 00 00 	movb   $0x0,0x98(%rax)
   13c93:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
   13c9a:	00 00 00 00 
   13c9e:	c7 42 40 00 00 00 00 	movl   $0x0,0x40(%rdx)
   13ca5:	ba 01 00 00 00       	mov    $0x1,%edx
   13caa:	66 89 50 10          	mov    %dx,0x10(%rax)
   13cae:	48 89 78 30          	mov    %rdi,0x30(%rax)
   13cb2:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
   13cb9:	00 00 00 00 
   13cbd:	c3                   	retq   
   13cbe:	66 90                	xchg   %ax,%ax

0000000000013cc0 <change_dest_ts>:
   13cc0:	48 8b 05 c1 93 20 00 	mov    0x2093c1(%rip),%rax        # 21d088 <LPS>
   13cc7:	89 ff                	mov    %edi,%edi
   13cc9:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
   13ccd:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   13cd4:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
   13cd9:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   13cdd:	f2 0f 11 06          	movsd  %xmm0,(%rsi)
   13ce1:	89 02                	mov    %eax,(%rdx)
   13ce3:	c3                   	retq   
   13ce4:	66 90                	xchg   %ax,%ax
   13ce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13ced:	00 00 00 

0000000000013cf0 <make_LP_state_invalid_and_long_jmp>:
   13cf0:	48 83 ec 08          	sub    $0x8,%rsp
   13cf4:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
   13cfb:	64 8b 10             	mov    %fs:(%rax),%edx
   13cfe:	48 8b 05 83 93 20 00 	mov    0x209383(%rip),%rax        # 21d088 <LPS>
   13d05:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   13d09:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   13d10:	c6 80 98 00 00 00 00 	movb   $0x0,0x98(%rax)
   13d17:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
   13d1e:	00 00 00 00 
   13d22:	c7 42 40 00 00 00 00 	movl   $0x0,0x40(%rdx)
   13d29:	ba 01 00 00 00       	mov    $0x1,%edx
   13d2e:	66 89 50 10          	mov    %dx,0x10(%rax)
   13d32:	48 89 78 30          	mov    %rdi,0x30(%rax)
   13d36:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
   13d3d:	00 00 00 00 
   13d41:	48 c7 c0 e8 ff ff ff 	mov    $0xffffffffffffffe8,%rax
   13d48:	64 48 8b 00          	mov    %fs:(%rax),%rax
   13d4c:	48 83 38 01          	cmpq   $0x1,(%rax)
   13d50:	74 0d                	je     13d5f <make_LP_state_invalid_and_long_jmp+0x6f>
   13d52:	48 8d 3d 4f 4b 00 00 	lea    0x4b4f(%rip),%rdi        # 188a8 <__PRETTY_FUNCTION__.6556+0x2ae8>
   13d59:	e8 e2 d9 fe ff       	callq  1740 <puts@plt>
   13d5e:	cc                   	int3   
   13d5f:	48 c7 c7 90 5b ff ff 	mov    $0xffffffffffff5b90,%rdi
   13d66:	be 02 00 00 00       	mov    $0x2,%esi
   13d6b:	64 48 03 3c 25 00 00 	add    %fs:0x0,%rdi
   13d72:	00 00 
   13d74:	e8 d7 2f ff ff       	callq  6d50 <_long_jmp>
   13d79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013d80 <change_bound_with_current_msg>:
   13d80:	53                   	push   %rbx
   13d81:	48 c7 c3 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rbx
   13d88:	64 48 8b 03          	mov    %fs:(%rbx),%rax
   13d8c:	0f b7 78 10          	movzwl 0x10(%rax),%edi
   13d90:	e8 fb f1 ff ff       	callq  12f90 <check_tie_breaker_not_zero>
   13d95:	48 c7 c0 78 5e ff ff 	mov    $0xffffffffffff5e78,%rax
   13d9c:	64 8b 10             	mov    %fs:(%rax),%edx
   13d9f:	48 8b 05 e2 92 20 00 	mov    0x2092e2(%rip),%rax        # 21d088 <LPS>
   13da6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   13daa:	48 89 d7             	mov    %rdx,%rdi
   13dad:	48 8b 50 30          	mov    0x30(%rax),%rdx
   13db1:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
   13db8:	64 48 8b 0b          	mov    %fs:(%rbx),%rcx
   13dbc:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   13dc3:	f2 0f 10 41 08       	movsd  0x8(%rcx),%xmm0
   13dc8:	0f b7 49 10          	movzwl 0x10(%rcx),%ecx
   13dcc:	83 e9 01             	sub    $0x1,%ecx
   13dcf:	f2 0f 11 42 08       	movsd  %xmm0,0x8(%rdx)
   13dd4:	66 89 4a 10          	mov    %cx,0x10(%rdx)
   13dd8:	48 89 50 30          	mov    %rdx,0x30(%rax)
   13ddc:	5b                   	pop    %rbx
   13ddd:	e9 ce f1 ff ff       	jmpq   12fb0 <check_current_msg_is_in_future>
   13de2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13de9:	00 00 00 
   13dec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000013df0 <set_cores_id_on_numa_topology.constprop.0>:
   13df0:	41 56                	push   %r14
   13df2:	b9 1c 00 00 00       	mov    $0x1c,%ecx
   13df7:	31 d2                	xor    %edx,%edx
   13df9:	45 31 c0             	xor    %r8d,%r8d
   13dfc:	41 55                	push   %r13
   13dfe:	be 01 00 00 00       	mov    $0x1,%esi
   13e03:	41 54                	push   %r12
   13e05:	55                   	push   %rbp
   13e06:	53                   	push   %rbx
   13e07:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   13e0e:	66 0f 6f 05 aa 52 00 	movdqa 0x52aa(%rip),%xmm0        # 190c0 <__PRETTY_FUNCTION__.6556+0x3300>
   13e15:	00 
   13e16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13e1d:	00 00 
   13e1f:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   13e26:	00 
   13e27:	31 c0                	xor    %eax,%eax
   13e29:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   13e2e:	4c 8d 64 24 0d       	lea    0xd(%rsp),%r12
   13e33:	66 89 54 24 0d       	mov    %dx,0xd(%rsp)
   13e38:	48 89 ef             	mov    %rbp,%rdi
   13e3b:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   13e40:	ba 03 00 00 00       	mov    $0x3,%edx
   13e45:	66 0f 6f 05 83 52 00 	movdqa 0x5283(%rip),%xmm0        # 190d0 <__PRETTY_FUNCTION__.6556+0x3310>
   13e4c:	00 
   13e4d:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
   13e52:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   13e57:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13e5a:	48 8d 0d a7 51 00 00 	lea    0x51a7(%rip),%rcx        # 19008 <__PRETTY_FUNCTION__.6556+0x3248>
   13e61:	4c 89 e7             	mov    %r12,%rdi
   13e64:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   13e69:	e8 42 dc fe ff       	callq  1ab0 <__sprintf_chk@plt>
   13e6e:	4c 89 e7             	mov    %r12,%rdi
   13e71:	e8 1a d9 fe ff       	callq  1790 <strlen@plt>
   13e76:	48 89 ef             	mov    %rbp,%rdi
   13e79:	b9 e0 00 00 00       	mov    $0xe0,%ecx
   13e7e:	4c 89 e6             	mov    %r12,%rsi
   13e81:	48 89 c3             	mov    %rax,%rbx
   13e84:	48 89 c2             	mov    %rax,%rdx
   13e87:	e8 44 da fe ff       	callq  18d0 <__memcpy_chk@plt>
   13e8c:	8d 43 20             	lea    0x20(%rbx),%eax
   13e8f:	48 8d 35 4e 51 00 00 	lea    0x514e(%rip),%rsi        # 18fe4 <__PRETTY_FUNCTION__.6556+0x3224>
   13e96:	4c 89 ef             	mov    %r13,%rdi
   13e99:	c6 44 04 10 22       	movb   $0x22,0x10(%rsp,%rax,1)
   13e9e:	e8 2d db fe ff       	callq  19d0 <popen@plt>
   13ea3:	48 89 c5             	mov    %rax,%rbp
   13ea6:	48 85 c0             	test   %rax,%rax
   13ea9:	0f 84 db 00 00 00    	je     13f8a <set_cores_id_on_numa_topology.constprop.0+0x19a>
   13eaf:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   13eb4:	31 c0                	xor    %eax,%eax
   13eb6:	48 8d 5c 24 07       	lea    0x7(%rsp),%rbx
   13ebb:	eb 27                	jmp    13ee4 <set_cores_id_on_numa_topology.constprop.0+0xf4>
   13ebd:	0f 1f 00             	nopl   (%rax)
   13ec0:	48 89 e9             	mov    %rbp,%rcx
   13ec3:	ba 01 00 00 00       	mov    $0x1,%edx
   13ec8:	be 01 00 00 00       	mov    $0x1,%esi
   13ecd:	48 89 df             	mov    %rbx,%rdi
   13ed0:	e8 7b d8 fe ff       	callq  1750 <fread@plt>
   13ed5:	48 83 f8 01          	cmp    $0x1,%rax
   13ed9:	0f 85 99 00 00 00    	jne    13f78 <set_cores_id_on_numa_topology.constprop.0+0x188>
   13edf:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
   13ee4:	3c 3a                	cmp    $0x3a,%al
   13ee6:	75 d8                	jne    13ec0 <set_cores_id_on_numa_topology.constprop.0+0xd0>
   13ee8:	48 8d 1d 51 53 33 00 	lea    0x335351(%rip),%rbx        # 349240 <NUMA_TOPOLOGY>
   13eef:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
   13ef4:	4c 8d 73 20          	lea    0x20(%rbx),%r14
   13ef8:	4c 8d 25 09 51 00 00 	lea    0x5109(%rip),%r12        # 19008 <__PRETTY_FUNCTION__.6556+0x3248>
   13eff:	90                   	nop
   13f00:	31 c0                	xor    %eax,%eax
   13f02:	4c 89 ea             	mov    %r13,%rdx
   13f05:	4c 89 e6             	mov    %r12,%rsi
   13f08:	48 89 ef             	mov    %rbp,%rdi
   13f0b:	e8 10 d8 fe ff       	callq  1720 <__isoc99_fscanf@plt>
   13f10:	83 f8 01             	cmp    $0x1,%eax
   13f13:	74 4b                	je     13f60 <set_cores_id_on_numa_topology.constprop.0+0x170>
   13f15:	48 8d 3d 1c 4a 00 00 	lea    0x4a1c(%rip),%rdi        # 18938 <__PRETTY_FUNCTION__.6556+0x2b78>
   13f1c:	e8 1f d8 fe ff       	callq  1740 <puts@plt>
   13f21:	cc                   	int3   
   13f22:	8b 44 24 08          	mov    0x8(%rsp),%eax
   13f26:	48 83 c3 04          	add    $0x4,%rbx
   13f2a:	89 43 fc             	mov    %eax,-0x4(%rbx)
   13f2d:	49 39 de             	cmp    %rbx,%r14
   13f30:	75 ce                	jne    13f00 <set_cores_id_on_numa_topology.constprop.0+0x110>
   13f32:	48 89 ef             	mov    %rbp,%rdi
   13f35:	e8 b6 d8 fe ff       	callq  17f0 <pclose@plt>
   13f3a:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   13f41:	00 
   13f42:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   13f49:	00 00 
   13f4b:	75 4f                	jne    13f9c <set_cores_id_on_numa_topology.constprop.0+0x1ac>
   13f4d:	48 81 c4 20 01 00 00 	add    $0x120,%rsp
   13f54:	5b                   	pop    %rbx
   13f55:	5d                   	pop    %rbp
   13f56:	41 5c                	pop    %r12
   13f58:	41 5d                	pop    %r13
   13f5a:	41 5e                	pop    %r14
   13f5c:	c3                   	retq   
   13f5d:	0f 1f 00             	nopl   (%rax)
   13f60:	8b 44 24 08          	mov    0x8(%rsp),%eax
   13f64:	48 83 c3 04          	add    $0x4,%rbx
   13f68:	89 43 fc             	mov    %eax,-0x4(%rbx)
   13f6b:	4c 39 f3             	cmp    %r14,%rbx
   13f6e:	75 90                	jne    13f00 <set_cores_id_on_numa_topology.constprop.0+0x110>
   13f70:	eb c0                	jmp    13f32 <set_cores_id_on_numa_topology.constprop.0+0x142>
   13f72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13f78:	48 8d 3d 89 49 00 00 	lea    0x4989(%rip),%rdi        # 18908 <__PRETTY_FUNCTION__.6556+0x2b48>
   13f7f:	e8 bc d7 fe ff       	callq  1740 <puts@plt>
   13f84:	cc                   	int3   
   13f85:	e9 55 ff ff ff       	jmpq   13edf <set_cores_id_on_numa_topology.constprop.0+0xef>
   13f8a:	48 8d 3d 47 49 00 00 	lea    0x4947(%rip),%rdi        # 188d8 <__PRETTY_FUNCTION__.6556+0x2b18>
   13f91:	e8 aa d7 fe ff       	callq  1740 <puts@plt>
   13f96:	cc                   	int3   
   13f97:	e9 13 ff ff ff       	jmpq   13eaf <set_cores_id_on_numa_topology.constprop.0+0xbf>
   13f9c:	e8 ff d7 fe ff       	callq  17a0 <__stack_chk_fail@plt>
   13fa1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13fa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13fad:	00 00 00 

0000000000013fb0 <set_cores_id_on_numa_topology>:
   13fb0:	41 57                	push   %r15
   13fb2:	b9 1c 00 00 00       	mov    $0x1c,%ecx
   13fb7:	31 d2                	xor    %edx,%edx
   13fb9:	41 56                	push   %r14
   13fbb:	41 55                	push   %r13
   13fbd:	41 89 f5             	mov    %esi,%r13d
   13fc0:	be 01 00 00 00       	mov    $0x1,%esi
   13fc5:	41 54                	push   %r12
   13fc7:	55                   	push   %rbp
   13fc8:	53                   	push   %rbx
   13fc9:	89 fb                	mov    %edi,%ebx
   13fcb:	41 89 d8             	mov    %ebx,%r8d
   13fce:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
   13fd5:	66 0f 6f 05 e3 50 00 	movdqa 0x50e3(%rip),%xmm0        # 190c0 <__PRETTY_FUNCTION__.6556+0x3300>
   13fdc:	00 
   13fdd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13fe4:	00 00 
   13fe6:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   13fed:	00 
   13fee:	31 c0                	xor    %eax,%eax
   13ff0:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   13ff5:	4c 8d 74 24 0d       	lea    0xd(%rsp),%r14
   13ffa:	66 89 54 24 0d       	mov    %dx,0xd(%rsp)
   13fff:	4c 89 e7             	mov    %r12,%rdi
   14002:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   14007:	ba 03 00 00 00       	mov    $0x3,%edx
   1400c:	66 0f 6f 05 bc 50 00 	movdqa 0x50bc(%rip),%xmm0        # 190d0 <__PRETTY_FUNCTION__.6556+0x3310>
   14013:	00 
   14014:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
   14019:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   1401e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   14021:	48 8d 0d e0 4f 00 00 	lea    0x4fe0(%rip),%rcx        # 19008 <__PRETTY_FUNCTION__.6556+0x3248>
   14028:	4c 89 f7             	mov    %r14,%rdi
   1402b:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   14030:	e8 7b da fe ff       	callq  1ab0 <__sprintf_chk@plt>
   14035:	4c 89 f7             	mov    %r14,%rdi
   14038:	e8 53 d7 fe ff       	callq  1790 <strlen@plt>
   1403d:	b9 e0 00 00 00       	mov    $0xe0,%ecx
   14042:	4c 89 f6             	mov    %r14,%rsi
   14045:	4c 89 e7             	mov    %r12,%rdi
   14048:	48 89 c5             	mov    %rax,%rbp
   1404b:	48 89 c2             	mov    %rax,%rdx
   1404e:	e8 7d d8 fe ff       	callq  18d0 <__memcpy_chk@plt>
   14053:	8d 45 20             	lea    0x20(%rbp),%eax
   14056:	48 8d 35 87 4f 00 00 	lea    0x4f87(%rip),%rsi        # 18fe4 <__PRETTY_FUNCTION__.6556+0x3224>
   1405d:	4c 89 ff             	mov    %r15,%rdi
   14060:	c6 44 04 10 22       	movb   $0x22,0x10(%rsp,%rax,1)
   14065:	e8 66 d9 fe ff       	callq  19d0 <popen@plt>
   1406a:	48 89 c5             	mov    %rax,%rbp
   1406d:	48 85 c0             	test   %rax,%rax
   14070:	0f 84 d4 00 00 00    	je     1414a <set_cores_id_on_numa_topology+0x19a>
   14076:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   1407b:	31 c0                	xor    %eax,%eax
   1407d:	4c 8d 64 24 07       	lea    0x7(%rsp),%r12
   14082:	eb 28                	jmp    140ac <set_cores_id_on_numa_topology+0xfc>
   14084:	0f 1f 40 00          	nopl   0x0(%rax)
   14088:	48 89 e9             	mov    %rbp,%rcx
   1408b:	ba 01 00 00 00       	mov    $0x1,%edx
   14090:	be 01 00 00 00       	mov    $0x1,%esi
   14095:	4c 89 e7             	mov    %r12,%rdi
   14098:	e8 b3 d6 fe ff       	callq  1750 <fread@plt>
   1409d:	48 83 f8 01          	cmp    $0x1,%rax
   140a1:	0f 85 91 00 00 00    	jne    14138 <set_cores_id_on_numa_topology+0x188>
   140a7:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
   140ac:	3c 3a                	cmp    $0x3a,%al
   140ae:	75 d8                	jne    14088 <set_cores_id_on_numa_topology+0xd8>
   140b0:	45 85 ed             	test   %r13d,%r13d
   140b3:	74 4f                	je     14104 <set_cores_id_on_numa_topology+0x154>
   140b5:	41 0f af dd          	imul   %r13d,%ebx
   140b9:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
   140be:	4c 8d 3d 7b 51 33 00 	lea    0x33517b(%rip),%r15        # 349240 <NUMA_TOPOLOGY>
   140c5:	46 8d 24 2b          	lea    (%rbx,%r13,1),%r12d
   140c9:	4c 8d 2d 38 4f 00 00 	lea    0x4f38(%rip),%r13        # 19008 <__PRETTY_FUNCTION__.6556+0x3248>
   140d0:	31 c0                	xor    %eax,%eax
   140d2:	4c 89 f2             	mov    %r14,%rdx
   140d5:	4c 89 ee             	mov    %r13,%rsi
   140d8:	48 89 ef             	mov    %rbp,%rdi
   140db:	e8 40 d6 fe ff       	callq  1720 <__isoc99_fscanf@plt>
   140e0:	83 f8 01             	cmp    $0x1,%eax
   140e3:	74 0d                	je     140f2 <set_cores_id_on_numa_topology+0x142>
   140e5:	48 8d 3d 4c 48 00 00 	lea    0x484c(%rip),%rdi        # 18938 <__PRETTY_FUNCTION__.6556+0x2b78>
   140ec:	e8 4f d6 fe ff       	callq  1740 <puts@plt>
   140f1:	cc                   	int3   
   140f2:	8b 54 24 08          	mov    0x8(%rsp),%edx
   140f6:	89 d8                	mov    %ebx,%eax
   140f8:	83 c3 01             	add    $0x1,%ebx
   140fb:	41 89 14 87          	mov    %edx,(%r15,%rax,4)
   140ff:	41 39 dc             	cmp    %ebx,%r12d
   14102:	75 cc                	jne    140d0 <set_cores_id_on_numa_topology+0x120>
   14104:	48 89 ef             	mov    %rbp,%rdi
   14107:	e8 e4 d6 fe ff       	callq  17f0 <pclose@plt>
   1410c:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   14113:	00 
   14114:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1411b:	00 00 
   1411d:	75 3d                	jne    1415c <set_cores_id_on_numa_topology+0x1ac>
   1411f:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
   14126:	5b                   	pop    %rbx
   14127:	5d                   	pop    %rbp
   14128:	41 5c                	pop    %r12
   1412a:	41 5d                	pop    %r13
   1412c:	41 5e                	pop    %r14
   1412e:	41 5f                	pop    %r15
   14130:	c3                   	retq   
   14131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14138:	48 8d 3d c9 47 00 00 	lea    0x47c9(%rip),%rdi        # 18908 <__PRETTY_FUNCTION__.6556+0x2b48>
   1413f:	e8 fc d5 fe ff       	callq  1740 <puts@plt>
   14144:	cc                   	int3   
   14145:	e9 5d ff ff ff       	jmpq   140a7 <set_cores_id_on_numa_topology+0xf7>
   1414a:	48 8d 3d 87 47 00 00 	lea    0x4787(%rip),%rdi        # 188d8 <__PRETTY_FUNCTION__.6556+0x2b18>
   14151:	e8 ea d5 fe ff       	callq  1740 <puts@plt>
   14156:	cc                   	int3   
   14157:	e9 1a ff ff ff       	jmpq   14076 <set_cores_id_on_numa_topology+0xc6>
   1415c:	e8 3f d6 fe ff       	callq  17a0 <__stack_chk_fail@plt>
   14161:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1416d:	00 00 00 

0000000000014170 <set_numa_topology>:
   14170:	41 54                	push   %r12
   14172:	55                   	push   %rbp
   14173:	48 8d 2d 91 4e 00 00 	lea    0x4e91(%rip),%rbp        # 1900b <__PRETTY_FUNCTION__.6556+0x324b>
   1417a:	53                   	push   %rbx
   1417b:	48 8d 1d be 50 33 00 	lea    0x3350be(%rip),%rbx        # 349240 <NUMA_TOPOLOGY>
   14182:	4c 8d 63 20          	lea    0x20(%rbx),%r12
   14186:	e8 65 fc ff ff       	callq  13df0 <set_cores_id_on_numa_topology.constprop.0>
   1418b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14190:	8b 13                	mov    (%rbx),%edx
   14192:	48 89 ee             	mov    %rbp,%rsi
   14195:	bf 01 00 00 00       	mov    $0x1,%edi
   1419a:	31 c0                	xor    %eax,%eax
   1419c:	48 83 c3 04          	add    $0x4,%rbx
   141a0:	e8 cb d7 fe ff       	callq  1970 <__printf_chk@plt>
   141a5:	4c 39 e3             	cmp    %r12,%rbx
   141a8:	75 e6                	jne    14190 <set_numa_topology+0x20>
   141aa:	5b                   	pop    %rbx
   141ab:	5d                   	pop    %rbp
   141ac:	41 5c                	pop    %r12
   141ae:	c3                   	retq   
   141af:	90                   	nop

00000000000141b0 <set_max_memory_allocable>:
   141b0:	48 83 ec 28          	sub    $0x28,%rsp
   141b4:	66 48 0f 6e c7       	movq   %rdi,%xmm0
   141b9:	bf 09 00 00 00       	mov    $0x9,%edi
   141be:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   141c5:	00 00 
   141c7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   141cc:	31 c0                	xor    %eax,%eax
   141ce:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
   141d2:	48 89 e6             	mov    %rsp,%rsi
   141d5:	0f 29 04 24          	movaps %xmm0,(%rsp)
   141d9:	e8 62 d7 fe ff       	callq  1940 <setrlimit@plt>
   141de:	85 c0                	test   %eax,%eax
   141e0:	75 1e                	jne    14200 <set_max_memory_allocable+0x50>
   141e2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   141e7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   141ee:	00 00 
   141f0:	75 29                	jne    1421b <set_max_memory_allocable+0x6b>
   141f2:	48 83 c4 28          	add    $0x28,%rsp
   141f6:	c3                   	retq   
   141f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   141fe:	00 00 
   14200:	48 8d 3d 61 47 00 00 	lea    0x4761(%rip),%rdi        # 18968 <__PRETTY_FUNCTION__.6556+0x2ba8>
   14207:	e8 34 d5 fe ff       	callq  1740 <puts@plt>
   1420c:	48 8d 3d 0c 4e 00 00 	lea    0x4e0c(%rip),%rdi        # 1901f <__PRETTY_FUNCTION__.6556+0x325f>
   14213:	e8 d8 d7 fe ff       	callq  19f0 <perror@plt>
   14218:	cc                   	int3   
   14219:	eb c7                	jmp    141e2 <set_max_memory_allocable+0x32>
   1421b:	e8 80 d5 fe ff       	callq  17a0 <__stack_chk_fail@plt>

0000000000014220 <test_memory_limit_mmap>:
   14220:	48 83 ec 08          	sub    $0x8,%rsp
   14224:	48 89 fe             	mov    %rdi,%rsi
   14227:	45 31 c9             	xor    %r9d,%r9d
   1422a:	45 31 c0             	xor    %r8d,%r8d
   1422d:	31 ff                	xor    %edi,%edi
   1422f:	b9 22 00 00 00       	mov    $0x22,%ecx
   14234:	ba 03 00 00 00       	mov    $0x3,%edx
   14239:	e8 72 d5 fe ff       	callq  17b0 <mmap@plt>
   1423e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   14242:	74 0c                	je     14250 <test_memory_limit_mmap+0x30>
   14244:	48 89 c7             	mov    %rax,%rdi
   14247:	48 83 c4 08          	add    $0x8,%rsp
   1424b:	e9 30 d4 fe ff       	jmpq   1680 <free@plt>
   14250:	48 8d 3d 31 47 00 00 	lea    0x4731(%rip),%rdi        # 18988 <__PRETTY_FUNCTION__.6556+0x2bc8>
   14257:	e8 e4 d4 fe ff       	callq  1740 <puts@plt>
   1425c:	48 8d 3d c3 4d 00 00 	lea    0x4dc3(%rip),%rdi        # 19026 <__PRETTY_FUNCTION__.6556+0x3266>
   14263:	48 83 c4 08          	add    $0x8,%rsp
   14267:	e9 84 d7 fe ff       	jmpq   19f0 <perror@plt>
   1426c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014270 <test_memory_limit_malloc>:
   14270:	48 83 ec 08          	sub    $0x8,%rsp
   14274:	e8 97 d6 fe ff       	callq  1910 <malloc@plt>
   14279:	48 85 c0             	test   %rax,%rax
   1427c:	74 0c                	je     1428a <test_memory_limit_malloc+0x1a>
   1427e:	48 89 c7             	mov    %rax,%rdi
   14281:	48 83 c4 08          	add    $0x8,%rsp
   14285:	e9 f6 d3 fe ff       	jmpq   1680 <free@plt>
   1428a:	48 8d 3d 27 47 00 00 	lea    0x4727(%rip),%rdi        # 189b8 <__PRETTY_FUNCTION__.6556+0x2bf8>
   14291:	e8 aa d4 fe ff       	callq  1740 <puts@plt>
   14296:	48 8d 3d 89 4d 00 00 	lea    0x4d89(%rip),%rdi        # 19026 <__PRETTY_FUNCTION__.6556+0x3266>
   1429d:	58                   	pop    %rax
   1429e:	e9 4d d7 fe ff       	jmpq   19f0 <perror@plt>
   142a3:	0f 1f 00             	nopl   (%rax)
   142a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   142ad:	00 00 00 

00000000000142b0 <test_memory_limit>:
   142b0:	48 bf 00 00 00 00 0e 	movabs $0xe00000000,%rdi
   142b7:	00 00 00 
   142ba:	48 83 ec 08          	sub    $0x8,%rsp
   142be:	e8 4d d6 fe ff       	callq  1910 <malloc@plt>
   142c3:	48 85 c0             	test   %rax,%rax
   142c6:	74 5c                	je     14324 <test_memory_limit+0x74>
   142c8:	48 89 c7             	mov    %rax,%rdi
   142cb:	e8 b0 d3 fe ff       	callq  1680 <free@plt>
   142d0:	31 ff                	xor    %edi,%edi
   142d2:	45 31 c9             	xor    %r9d,%r9d
   142d5:	45 31 c0             	xor    %r8d,%r8d
   142d8:	b9 22 00 00 00       	mov    $0x22,%ecx
   142dd:	48 be 00 00 00 00 0e 	movabs $0xe00000000,%rsi
   142e4:	00 00 00 
   142e7:	ba 03 00 00 00       	mov    $0x3,%edx
   142ec:	e8 bf d4 fe ff       	callq  17b0 <mmap@plt>
   142f1:	48 89 c7             	mov    %rax,%rdi
   142f4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   142f8:	74 0e                	je     14308 <test_memory_limit+0x58>
   142fa:	48 83 c4 08          	add    $0x8,%rsp
   142fe:	e9 7d d3 fe ff       	jmpq   1680 <free@plt>
   14303:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14308:	48 8d 3d 79 46 00 00 	lea    0x4679(%rip),%rdi        # 18988 <__PRETTY_FUNCTION__.6556+0x2bc8>
   1430f:	e8 2c d4 fe ff       	callq  1740 <puts@plt>
   14314:	48 8d 3d 0b 4d 00 00 	lea    0x4d0b(%rip),%rdi        # 19026 <__PRETTY_FUNCTION__.6556+0x3266>
   1431b:	48 83 c4 08          	add    $0x8,%rsp
   1431f:	e9 cc d6 fe ff       	jmpq   19f0 <perror@plt>
   14324:	48 8d 3d 8d 46 00 00 	lea    0x468d(%rip),%rdi        # 189b8 <__PRETTY_FUNCTION__.6556+0x2bf8>
   1432b:	e8 10 d4 fe ff       	callq  1740 <puts@plt>
   14330:	48 8d 3d ef 4c 00 00 	lea    0x4cef(%rip),%rdi        # 19026 <__PRETTY_FUNCTION__.6556+0x3266>
   14337:	e8 b4 d6 fe ff       	callq  19f0 <perror@plt>
   1433c:	eb 92                	jmp    142d0 <test_memory_limit+0x20>
   1433e:	66 90                	xchg   %ax,%ax

0000000000014340 <alloc_array_nodes>:
   14340:	53                   	push   %rbx
   14341:	8b 47 18             	mov    0x18(%rdi),%eax
   14344:	89 f3                	mov    %esi,%ebx
   14346:	83 c0 10             	add    $0x10,%eax
   14349:	0f af c6             	imul   %esi,%eax
   1434c:	8d 78 40             	lea    0x40(%rax),%edi
   1434f:	e8 bc d5 fe ff       	callq  1910 <malloc@plt>
   14354:	48 89 c1             	mov    %rax,%rcx
   14357:	48 85 c0             	test   %rax,%rax
   1435a:	74 21                	je     1437d <alloc_array_nodes+0x3d>
   1435c:	a8 3f                	test   $0x3f,%al
   1435e:	74 1f                	je     1437f <alloc_array_nodes+0x3f>
   14360:	48 8d 50 40          	lea    0x40(%rax),%rdx
   14364:	48 83 e2 c0          	and    $0xffffffffffffffc0,%rdx
   14368:	89 d0                	mov    %edx,%eax
   1436a:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   14371:	89 5a 08             	mov    %ebx,0x8(%rdx)
   14374:	29 c8                	sub    %ecx,%eax
   14376:	89 42 0c             	mov    %eax,0xc(%rdx)
   14379:	48 8d 42 10          	lea    0x10(%rdx),%rax
   1437d:	5b                   	pop    %rbx
   1437e:	c3                   	retq   
   1437f:	48 89 c2             	mov    %rax,%rdx
   14382:	eb e4                	jmp    14368 <alloc_array_nodes+0x28>
   14384:	66 90                	xchg   %ax,%ax
   14386:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1438d:	00 00 00 

0000000000014390 <free_array_nodes>:
   14390:	44 8b 4e f8          	mov    -0x8(%rsi),%r9d
   14394:	45 85 c9             	test   %r9d,%r9d
   14397:	74 39                	je     143d2 <free_array_nodes+0x42>
   14399:	8b 47 18             	mov    0x18(%rdi),%eax
   1439c:	48 8b 0f             	mov    (%rdi),%rcx
   1439f:	31 d2                	xor    %edx,%edx
   143a1:	44 8d 50 10          	lea    0x10(%rax),%r10d
   143a5:	48 89 f0             	mov    %rsi,%rax
   143a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   143af:	00 
   143b0:	49 89 c8             	mov    %rcx,%r8
   143b3:	83 c2 01             	add    $0x1,%edx
   143b6:	48 89 c1             	mov    %rax,%rcx
   143b9:	4c 89 00             	mov    %r8,(%rax)
   143bc:	4c 01 d0             	add    %r10,%rax
   143bf:	41 39 d1             	cmp    %edx,%r9d
   143c2:	75 ec                	jne    143b0 <free_array_nodes+0x20>
   143c4:	41 8d 41 ff          	lea    -0x1(%r9),%eax
   143c8:	4c 0f af d0          	imul   %rax,%r10
   143cc:	4c 01 d6             	add    %r10,%rsi
   143cf:	48 89 37             	mov    %rsi,(%rdi)
   143d2:	c3                   	retq   
   143d3:	0f 1f 00             	nopl   (%rax)
   143d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   143dd:	00 00 00 

00000000000143e0 <mm_node_malloc>:
   143e0:	55                   	push   %rbp
   143e1:	48 89 fd             	mov    %rdi,%rbp
   143e4:	53                   	push   %rbx
   143e5:	48 83 ec 08          	sub    $0x8,%rsp
   143e9:	48 8b 3f             	mov    (%rdi),%rdi
   143ec:	48 85 ff             	test   %rdi,%rdi
   143ef:	74 1f                	je     14410 <mm_node_malloc+0x30>
   143f1:	48 8b 07             	mov    (%rdi),%rax
   143f4:	48 83 45 20 01       	addq   $0x1,0x20(%rbp)
   143f9:	48 89 45 00          	mov    %rax,0x0(%rbp)
   143fd:	48 83 c4 08          	add    $0x8,%rsp
   14401:	48 8d 47 10          	lea    0x10(%rdi),%rax
   14405:	5b                   	pop    %rbx
   14406:	5d                   	pop    %rbp
   14407:	c3                   	retq   
   14408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1440f:	00 
   14410:	8b 5d 18             	mov    0x18(%rbp),%ebx
   14413:	8d 7b 10             	lea    0x10(%rbx),%edi
   14416:	69 ff 2c 01 00 00    	imul   $0x12c,%edi,%edi
   1441c:	83 c7 40             	add    $0x40,%edi
   1441f:	e8 ec d4 fe ff       	callq  1910 <malloc@plt>
   14424:	48 85 c0             	test   %rax,%rax
   14427:	74 60                	je     14489 <mm_node_malloc+0xa9>
   14429:	48 89 c7             	mov    %rax,%rdi
   1442c:	a8 3f                	test   $0x3f,%al
   1442e:	74 08                	je     14438 <mm_node_malloc+0x58>
   14430:	48 8d 78 40          	lea    0x40(%rax),%rdi
   14434:	48 83 e7 c0          	and    $0xffffffffffffffc0,%rdi
   14438:	89 de                	mov    %ebx,%esi
   1443a:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1443e:	ba 2a 01 00 00       	mov    $0x12a,%edx
   14443:	48 83 c6 10          	add    $0x10,%rsi
   14447:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1444e:	4c 8d 04 37          	lea    (%rdi,%rsi,1),%r8
   14452:	4c 89 c0             	mov    %r8,%rax
   14455:	0f 1f 00             	nopl   (%rax)
   14458:	48 89 c1             	mov    %rax,%rcx
   1445b:	48 01 f0             	add    %rsi,%rax
   1445e:	48 89 01             	mov    %rax,(%rcx)
   14461:	83 ea 01             	sub    $0x1,%edx
   14464:	75 f2                	jne    14458 <mm_node_malloc+0x78>
   14466:	48 69 f6 2a 01 00 00 	imul   $0x12a,%rsi,%rsi
   1446d:	48 8d 47 10          	lea    0x10(%rdi),%rax
   14471:	49 c7 04 30 00 00 00 	movq   $0x0,(%r8,%rsi,1)
   14478:	00 
   14479:	48 83 45 20 01       	addq   $0x1,0x20(%rbp)
   1447e:	4c 89 45 00          	mov    %r8,0x0(%rbp)
   14482:	48 83 c4 08          	add    $0x8,%rsp
   14486:	5b                   	pop    %rbx
   14487:	5d                   	pop    %rbp
   14488:	c3                   	retq   
   14489:	48 8d 3d 58 45 00 00 	lea    0x4558(%rip),%rdi        # 189e8 <__PRETTY_FUNCTION__.6556+0x2c28>
   14490:	e8 ab d2 fe ff       	callq  1740 <puts@plt>
   14495:	bf 01 00 00 00       	mov    $0x1,%edi
   1449a:	e8 a1 d5 fe ff       	callq  1a40 <exit@plt>
   1449f:	90                   	nop

00000000000144a0 <mm_node_free>:
   144a0:	48 8b 07             	mov    (%rdi),%rax
   144a3:	48 83 ee 10          	sub    $0x10,%rsi
   144a7:	48 89 06             	mov    %rax,(%rsi)
   144aa:	48 89 37             	mov    %rsi,(%rdi)
   144ad:	c3                   	retq   
   144ae:	66 90                	xchg   %ax,%ax

00000000000144b0 <mm_node_connect_to_be_freed>:
   144b0:	48 8b 47 08          	mov    0x8(%rdi),%rax
   144b4:	48 83 ee 10          	sub    $0x10,%rsi
   144b8:	48 89 06             	mov    %rax,(%rsi)
   144bb:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   144bf:	c3                   	retq   

00000000000144c0 <mm_node_trash>:
   144c0:	48 8b 47 08          	mov    0x8(%rdi),%rax
   144c4:	48 83 ee 10          	sub    $0x10,%rsi
   144c8:	89 56 08             	mov    %edx,0x8(%rsi)
   144cb:	48 89 06             	mov    %rax,(%rsi)
   144ce:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   144d2:	c3                   	retq   
   144d3:	0f 1f 00             	nopl   (%rax)
   144d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   144dd:	00 00 00 

00000000000144e0 <mm_node_collect>:
   144e0:	48 8b 47 10          	mov    0x10(%rdi),%rax
   144e4:	48 85 c0             	test   %rax,%rax
   144e7:	74 10                	je     144f9 <mm_node_collect+0x19>
   144e9:	48 8b 10             	mov    (%rax),%rdx
   144ec:	48 83 c0 10          	add    $0x10,%rax
   144f0:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   144f4:	8b 50 f8             	mov    -0x8(%rax),%edx
   144f7:	89 16                	mov    %edx,(%rsi)
   144f9:	c3                   	retq   
   144fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000014500 <mm_new_era>:
   14500:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
   14505:	74 21                	je     14528 <mm_new_era+0x28>
   14507:	85 d2                	test   %edx,%edx
   14509:	74 15                	je     14520 <mm_new_era+0x20>
   1450b:	0f af ca             	imul   %edx,%ecx
   1450e:	01 ca                	add    %ecx,%edx
   14510:	89 c8                	mov    %ecx,%eax
   14512:	83 c1 01             	add    $0x1,%ecx
   14515:	c7 04 86 00 00 00 00 	movl   $0x0,(%rsi,%rax,4)
   1451c:	39 ca                	cmp    %ecx,%edx
   1451e:	75 f0                	jne    14510 <mm_new_era+0x10>
   14520:	c3                   	retq   
   14521:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14528:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1452c:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   14533:	00 
   14534:	48 89 47 10          	mov    %rax,0x10(%rdi)
   14538:	eb cd                	jmp    14507 <mm_new_era+0x7>
   1453a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000014540 <mm_safe>:
   14540:	48 83 ec 08          	sub    $0x8,%rsp
   14544:	48 89 3c 24          	mov    %rdi,(%rsp)
   14548:	64 8b 04 25 f0 ff ff 	mov    %fs:0xfffffffffffffff0,%eax
   1454f:	ff 
   14550:	83 c0 01             	add    $0x1,%eax
   14553:	83 f8 31             	cmp    $0x31,%eax
   14556:	76 40                	jbe    14598 <mm_safe+0x58>
   14558:	64 c7 04 25 f0 ff ff 	movl   $0x0,%fs:0xfffffffffffffff0
   1455f:	ff 00 00 00 00 
   14564:	85 f6                	test   %esi,%esi
   14566:	0f 84 84 00 00 00    	je     145f0 <mm_safe+0xb0>
   1456c:	89 f1                	mov    %esi,%ecx
   1456e:	0f af ca             	imul   %edx,%ecx
   14571:	83 fe 01             	cmp    $0x1,%esi
   14574:	75 3a                	jne    145b0 <mm_safe+0x70>
   14576:	48 8b 04 24          	mov    (%rsp),%rax
   1457a:	89 d2                	mov    %edx,%edx
   1457c:	c7 04 90 01 00 00 00 	movl   $0x1,(%rax,%rdx,4)
   14583:	48 8b 04 24          	mov    (%rsp),%rax
   14587:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   1458a:	83 e0 01             	and    $0x1,%eax
   1458d:	83 e0 01             	and    $0x1,%eax
   14590:	48 83 c4 08          	add    $0x8,%rsp
   14594:	c3                   	retq   
   14595:	0f 1f 00             	nopl   (%rax)
   14598:	64 89 04 25 f0 ff ff 	mov    %eax,%fs:0xfffffffffffffff0
   1459f:	ff 
   145a0:	31 c0                	xor    %eax,%eax
   145a2:	48 83 c4 08          	add    $0x8,%rsp
   145a6:	c3                   	retq   
   145a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   145ae:	00 00 
   145b0:	44 8d 0c 31          	lea    (%rcx,%rsi,1),%r9d
   145b4:	b8 01 00 00 00       	mov    $0x1,%eax
   145b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   145c0:	48 8b 3c 24          	mov    (%rsp),%rdi
   145c4:	41 89 d0             	mov    %edx,%r8d
   145c7:	01 f2                	add    %esi,%edx
   145c9:	42 c7 04 87 01 00 00 	movl   $0x1,(%rdi,%r8,4)
   145d0:	00 
   145d1:	48 8b 3c 24          	mov    (%rsp),%rdi
   145d5:	41 89 c8             	mov    %ecx,%r8d
   145d8:	83 c1 01             	add    $0x1,%ecx
   145db:	42 23 04 87          	and    (%rdi,%r8,4),%eax
   145df:	41 39 c9             	cmp    %ecx,%r9d
   145e2:	75 dc                	jne    145c0 <mm_safe+0x80>
   145e4:	eb a7                	jmp    1458d <mm_safe+0x4d>
   145e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   145ed:	00 00 00 
   145f0:	b8 01 00 00 00       	mov    $0x1,%eax
   145f5:	eb 99                	jmp    14590 <mm_safe+0x50>
   145f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   145fe:	00 00 

0000000000014600 <__libc_csu_init>:
   14600:	41 57                	push   %r15
   14602:	41 56                	push   %r14
   14604:	49 89 d7             	mov    %rdx,%r15
   14607:	41 55                	push   %r13
   14609:	41 54                	push   %r12
   1460b:	4c 8d 25 2e 85 20 00 	lea    0x20852e(%rip),%r12        # 21cb40 <__frame_dummy_init_array_entry>
   14612:	55                   	push   %rbp
   14613:	48 8d 2d 2e 85 20 00 	lea    0x20852e(%rip),%rbp        # 21cb48 <__init_array_end>
   1461a:	53                   	push   %rbx
   1461b:	41 89 fd             	mov    %edi,%r13d
   1461e:	49 89 f6             	mov    %rsi,%r14
   14621:	4c 29 e5             	sub    %r12,%rbp
   14624:	48 83 ec 08          	sub    $0x8,%rsp
   14628:	48 c1 fd 03          	sar    $0x3,%rbp
   1462c:	e8 ff cf fe ff       	callq  1630 <_init>
   14631:	48 85 ed             	test   %rbp,%rbp
   14634:	74 20                	je     14656 <__libc_csu_init+0x56>
   14636:	31 db                	xor    %ebx,%ebx
   14638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1463f:	00 
   14640:	4c 89 fa             	mov    %r15,%rdx
   14643:	4c 89 f6             	mov    %r14,%rsi
   14646:	44 89 ef             	mov    %r13d,%edi
   14649:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
   1464d:	48 83 c3 01          	add    $0x1,%rbx
   14651:	48 39 dd             	cmp    %rbx,%rbp
   14654:	75 ea                	jne    14640 <__libc_csu_init+0x40>
   14656:	48 83 c4 08          	add    $0x8,%rsp
   1465a:	5b                   	pop    %rbx
   1465b:	5d                   	pop    %rbp
   1465c:	41 5c                	pop    %r12
   1465e:	41 5d                	pop    %r13
   14660:	41 5e                	pop    %r14
   14662:	41 5f                	pop    %r15
   14664:	c3                   	retq   
   14665:	90                   	nop
   14666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1466d:	00 00 00 

0000000000014670 <__libc_csu_fini>:
   14670:	f3 c3                	repz retq 

Disassemblamento della sezione .fini:

0000000000014674 <_fini>:
   14674:	48 83 ec 08          	sub    $0x8,%rsp
   14678:	48 83 c4 08          	add    $0x8,%rsp
   1467c:	c3                   	retq   
